{"version":3,"file":"ol.js","sources":["../ol/AssertionError.js","../ol/events/Event.js","../ol/ObjectEventType.js","../ol/Disposable.js","../ol/array.js","../ol/functions.js","../ol/obj.js","../ol/events/Target.js","../ol/events/EventType.js","../ol/events.js","../ol/Observable.js","../ol/util.js","../ol/Object.js","../ol/CollectionEventType.js","../ol/Collection.js","../ol/TileState.js","../ol/easing.js","../ol/Tile.js","../ol/has.js","../ol/dom.js","../ol/DataTile.js","../ol/asserts.js","../ol/Feature.js","../ol/transform.js","../ol/extent/Relationship.js","../ol/extent.js","../ol/proj/Units.js","../ol/proj/Projection.js","../ol/proj/epsg3857.js","../ol/proj/epsg4326.js","../ol/proj/projections.js","../ol/proj/transforms.js","../ol/math.js","../ol/string.js","../ol/coordinate.js","../ol/sphere.js","../ol/console.js","../ol/proj.js","../ol/geom/flat/transform.js","../ol/geom/Geometry.js","../ol/geom/SimpleGeometry.js","../ol/geom/flat/closest.js","../ol/geom/flat/deflate.js","../ol/geom/flat/simplify.js","../ol/geom/flat/inflate.js","../ol/geom/flat/area.js","../ol/geom/LinearRing.js","../ol/geom/Point.js","../ol/geom/flat/contains.js","../ol/geom/flat/interiorpoint.js","../ol/geom/flat/segments.js","../ol/geom/flat/intersectsextent.js","../ol/geom/flat/reverse.js","../ol/geom/flat/orient.js","../ol/geom/Polygon.js","../ol/Geolocation.js","../ol/ImageBase.js","../ol/ImageState.js","../ol/Image.js","../ol/ImageCanvas.js","../ol/ImageTile.js","../ol/Kinetic.js","../ol/color.js","../ol/style/IconImageCache.js","../ol/layer/Property.js","../ol/layer/Base.js","../ol/render/EventType.js","../ol/ViewHint.js","../ol/ViewProperty.js","../ol/tilegrid/common.js","../ol/centerconstraint.js","../ol/resolutionconstraint.js","../ol/rotationconstraint.js","../ol/View.js","../ol/layer/Layer.js","../ol/renderer/Map.js","../ol/render/Event.js","../ol/css.js","../ol/render/canvas.js","../ol/renderer/Composite.js","../ol/layer/Group.js","../ol/MapEvent.js","../ol/MapBrowserEvent.js","../ol/MapBrowserEventType.js","../ol/pointer/EventType.js","../ol/MapBrowserEventHandler.js","../ol/MapEventType.js","../ol/MapProperty.js","../ol/structs/PriorityQueue.js","../ol/TileQueue.js","../ol/control/Control.js","../ol/control/Attribution.js","../ol/control/Rotate.js","../ol/control/Zoom.js","../ol/control/defaults.js","../ol/interaction/Property.js","../ol/interaction/Interaction.js","../ol/interaction/DoubleClickZoom.js","../ol/interaction/Pointer.js","../ol/events/condition.js","../ol/interaction/DragPan.js","../ol/interaction/DragRotate.js","../ol/render/Box.js","../ol/interaction/DragBox.js","../ol/interaction/DragZoom.js","../ol/events/KeyCode.js","../ol/interaction/KeyboardPan.js","../ol/interaction/KeyboardZoom.js","../ol/interaction/MouseWheelZoom.js","../ol/interaction/PinchRotate.js","../ol/interaction/PinchZoom.js","../ol/interaction/defaults.js","../ol/size.js","../ol/Map.js","../ol/Overlay.js","../ol/structs/LRUCache.js","../ol/tilecoord.js","../ol/TileCache.js","../ol/TileRange.js","../ol/VectorRenderTile.js","../ol/colorlike.js","../ol/featureloader.js","../ol/net.js","../ol/loadingstrategy.js","../ol/render/VectorContext.js","../ol/render/canvas/Immediate.js","../ol/renderer/vector.js","../ol/render.js","../ol/reproj.js","../ol/reproj/common.js","../ol/reproj/Triangulation.js","../ol/reproj/Tile.js","../ol/source/TileEventType.js","../ol/source/Source.js","../ol/tilegrid/TileGrid.js","../ol/tilegrid.js","../ol/source/Tile.js","../ol/tileurlfunction.js","../ol/source/UrlTile.js","../ol/source/TileImage.js","../ol/source/BingMaps.js","../ol/source/XYZ.js","../../node_modules/quickselect/index.js","../../node_modules/rbush/index.js","../ol/structs/RBush.js","../ol/source/VectorEventType.js","../ol/source/Vector.js","../ol/source/Cluster.js","../ol/reproj/DataTile.js","../ol/source/DataTile.js","../ol/reproj/Image.js","../ol/source/Image.js","../ol/uri.js","../ol/source/ImageArcGISRest.js","../ol/source/ImageCanvas.js","../ol/source/ImageStatic.js","../ol/source/wms.js","../ol/source/ImageWMS.js","../ol/source/OSM.js","../ol/layer/BaseImage.js","../ol/renderer/Layer.js","../ol/renderer/canvas/Layer.js","../ol/renderer/canvas/ImageLayer.js","../ol/layer/Image.js","../ol/layer/TileProperty.js","../ol/layer/BaseTile.js","../ol/renderer/canvas/TileLayer.js","../ol/layer/Tile.js","../ol/source/Raster.js","../ol/source/Stamen.js","../ol/source/TileArcGISRest.js","../ol/source/TileDebug.js","../ol/source/TileJSON.js","../ol/source/TileWMS.js","../ol/source/UTFGrid.js","../ol/tilegrid/WMTS.js","../ol/source/WMTS.js","../ol/xml.js","../ol/vec/mat4.js","../ol/style/Image.js","../ol/style/RegularShape.js","../ol/style/Circle.js","../ol/style/Fill.js","../ol/style/IconImage.js","../ol/style/Icon.js","../ol/style/Stroke.js","../ol/style/Style.js","../ol/style/Text.js","../ol/webgl/PaletteTexture.js","../ol/webgl.js","../ol/webgl/Buffer.js","../ol/webgl/ContextEventType.js","../ol/webgl/PostProcessingPass.js","../ol/webgl/Helper.js","../ol/renderer/webgl/Layer.js","../ol/renderer/webgl/TileLayer.js","../ol/style/expressions.js","../ol/style/flat.js","../ol/structs/LinkedList.js","../ol/source/ogcTileUtil.js","../ol/source/OGCMapTile.js","../ol/source/common.js","../ol/render/canvas/Instruction.js","../ol/render/canvas/Builder.js","../ol/render/canvas/ImageBuilder.js","../ol/render/canvas/LineStringBuilder.js","../ol/render/canvas/PolygonBuilder.js","../ol/geom/flat/linechunk.js","../ol/geom/flat/straightchunk.js","../ol/render/canvas/TextBuilder.js","../ol/render/canvas/BuilderGroup.js","../ol/geom/flat/textpath.js","../ol/geom/flat/length.js","../ol/render/canvas/Executor.js","../ol/render/canvas/ExecutorGroup.js","../ol/render/canvas/hitdetect.js","../ol/renderer/canvas/VectorLayer.js","../ol/renderer/canvas/VectorImageLayer.js","../ol/geom/Circle.js","../ol/geom/GeometryCollection.js","../ol/geom/flat/interpolate.js","../ol/geom/LineString.js","../ol/geom/MultiLineString.js","../ol/geom/MultiPoint.js","../ol/geom/flat/center.js","../ol/geom/MultiPolygon.js","../ol/render/Feature.js","../ol/proj/proj4.js","../ol/layer/BaseVector.js","../ol/layer/Vector.js","../ol/geom/flat/geodesic.js","../ol/layer/Graticule.js","../ol/webgl/RenderTarget.js","../ol/render/webgl/constants.js","../../node_modules/earcut/src/earcut.js","../ol/render/webgl/utils.js","../ol/renderer/webgl/PointsLayer.js","../ol/worker/webgl.js","../ol/layer/Heatmap.js","../ol/layer/VectorImage.js","../ol/interaction/DragAndDrop.js","../ol/interaction/DragRotateAndZoom.js","../ol/interaction/Draw.js","../ol/interaction/Extent.js","../ol/interaction/Link.js","../ol/interaction/Modify.js","../ol/interaction/Select.js","../ol/interaction/Snap.js","../ol/interaction/Translate.js","../ol/geom/flat/flip.js","../ol/format/Feature.js","../ol/format/JSONFeature.js","../ol/format/EsriJSON.js","../ol/format/XMLFeature.js","../ol/format/xsd.js","../ol/format/GPX.js","../ol/format/GeoJSON.js","../ol/format/TextFeature.js","../ol/format/IGC.js","../ol/format/KML.js","../../node_modules/ieee754/index.js","../../node_modules/pbf/index.js","../ol/format/MVT.js","../ol/format/OSMXML.js","../ol/format/XML.js","../ol/format/xlink.js","../ol/format/OWS.js","../ol/format/Polyline.js","../ol/format/TopoJSON.js","../ol/format/GMLBase.js","../ol/format/GML2.js","../ol/format/GML3.js","../ol/format/GML32.js","../ol/format/filter/Filter.js","../ol/format/filter/LogicalNary.js","../ol/format/filter/And.js","../ol/format/filter/Bbox.js","../ol/format/WFS.js","../ol/format/filter.js","../ol/format/WMSGetFeatureInfo.js","../ol/control/FullScreen.js","../ol/control/MousePosition.js","../ol/control/OverviewMap.js","../ol/control/ScaleLine.js","../ol/control/ZoomSlider.js","../ol/control/ZoomToExtent.js","../index.js","../ol/geom/flat/topology.js","../ol/source.js"],"sourcesContent":["/**\n * @module ol/AssertionError\n */\n\n/** @type {Object<number, string>} */\nconst messages = {\n  1: 'The view center is not defined',\n  2: 'The view resolution is not defined',\n  3: 'The view rotation is not defined',\n  4: '`image` and `src` cannot be provided at the same time',\n  5: '`imgSize` must be set when `image` is provided',\n  7: '`format` must be set when `url` is set',\n  8: 'Unknown `serverType` configured',\n  9: '`url` must be configured or set using `#setUrl()`',\n  10: 'The default `geometryFunction` can only handle `Point` geometries',\n  11: '`options.featureTypes` must be an Array',\n  12: '`options.geometryName` must also be provided when `options.bbox` is set',\n  13: 'Invalid corner',\n  14: 'Invalid color',\n  15: 'Tried to get a value for a key that does not exist in the cache',\n  16: 'Tried to set a value for a key that is used already',\n  17: '`resolutions` must be sorted in descending order',\n  18: 'Either `origin` or `origins` must be configured, never both',\n  19: 'Number of `tileSizes` and `resolutions` must be equal',\n  20: 'Number of `origins` and `resolutions` must be equal',\n  22: 'Either `tileSize` or `tileSizes` must be configured, never both',\n  24: 'Invalid extent or geometry provided as `geometry`',\n  25: 'Cannot fit empty extent provided as `geometry`',\n  26: 'Features must have an id set',\n  27: 'Features must have an id set',\n  28: '`renderMode` must be `\"hybrid\"` or `\"vector\"`',\n  30: 'The passed `feature` was already added to the source',\n  31: 'Tried to enqueue an `element` that was already added to the queue',\n  32: 'Transformation matrix cannot be inverted',\n  33: 'Invalid units',\n  34: 'Invalid geometry layout',\n  36: 'Unknown SRS type',\n  37: 'Unknown geometry type found',\n  38: '`styleMapValue` has an unknown type',\n  39: 'Unknown geometry type',\n  40: 'Expected `feature` to have a geometry',\n  41: 'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n  42: 'Question unknown, the answer is 42',\n  43: 'Expected `layers` to be an array or a `Collection`',\n  47: 'Expected `controls` to be an array or an `ol/Collection`',\n  48: 'Expected `interactions` to be an array or an `ol/Collection`',\n  49: 'Expected `overlays` to be an array or an `ol/Collection`',\n  50: '`options.featureTypes` should be an Array',\n  51: 'Either `url` or `tileJSON` options must be provided',\n  52: 'Unknown `serverType` configured',\n  53: 'Unknown `tierSizeCalculation` configured',\n  55: 'The {-y} placeholder requires a tile grid with extent',\n  56: 'mapBrowserEvent must originate from a pointer event',\n  57: 'At least 2 conditions are required',\n  59: 'Invalid command found in the PBF',\n  60: 'Missing or invalid `size`',\n  61: 'Cannot determine IIIF Image API version from provided image information JSON',\n  62: 'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n  64: 'Layer opacity must be a number',\n  66: '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`',\n  67: 'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both',\n  68: 'A VectorTile source can only be rendered if it has a projection compatible with the view projection',\n  69: '`width` or `height` cannot be provided together with `scale`',\n};\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const message = messages[code];\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @deprecated ol/AssertionError and error codes will be removed in v8.0\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n  let i;\n  if (direction > 0) {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n  } else if (direction < 0) {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n  } else {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] == target) {\n        return i;\n      } else if (arr[i] < target) {\n        if (typeof direction === 'function') {\n          if (direction(target, arr[i - 1], arr[i]) > 0) {\n            return i - 1;\n          }\n          return i;\n        } else if (arr[i - 1] - target < target - arr[i]) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '7.3.0';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true}\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.drawImage(image, width, height);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    } else if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    } else if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, precision) {\n  const numberString =\n    precision !== undefined ? number.toFixed(precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to contruct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/Geolocation\n */\nimport BaseEvent from './events/Event.js';\nimport BaseObject from './Object.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  identityTransform,\n} from './proj.js';\nimport {toRadians} from './math.js';\n\n/**\n * @enum {string}\n */\nconst Property = {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions',\n};\n\n/**\n * @enum string\n */\nconst GeolocationErrorType = {\n  /**\n   * Triggered when a `GeolocationPositionError` occurs.\n   * @event module:ol/Geolocation.GeolocationError#error\n   * @api\n   */\n  ERROR: 'error',\n};\n\n/**\n * @classdesc\n * Events emitted on [GeolocationPositionError](https://developer.mozilla.org/en-US/docs/Web/API/GeolocationPositionError).\n */\nexport class GeolocationError extends BaseEvent {\n  /**\n   * @param {GeolocationPositionError} error error object.\n   */\n  constructor(error) {\n    super(GeolocationErrorType.ERROR);\n\n    /**\n     * Code of the underlying `GeolocationPositionError`.\n     * @type {number}\n     * @api\n     */\n    this.code = error.code;\n\n    /**\n     * Message of the underlying `GeolocationPositionError`.\n     * @type {string}\n     * @api\n     */\n    this.message = error.message;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See https://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {import(\"./proj.js\").ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:accuracy'|'change:accuracyGeometry'|'change:altitude'|\n *    'change:altitudeAccuracy'|'change:heading'|'change:position'|'change:projection'|'change:speed'|'change:tracking'|\n *    'change:trackingOptions'} GeolocationObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<GeolocationObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'error', GeolocationError, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|GeolocationObjectEventTypes, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return>} GeolocationOnSignature\n */\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](https://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes and errors, register listeners for the generic\n * `change` event and the `error` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     const geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       console.log(geolocation.getPosition());\n *     });\n *     // listen to error\n *     geolocation.on('error', function(evt) {\n *       window.console.log(evt.message);\n *     });\n *\n * @fires GeolocationError\n * @api\n */\nclass Geolocation extends BaseObject {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GeolocationOnSignature<void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * The unprojected (EPSG:4326) device position.\n     * @private\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.position_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./proj.js\").TransformFunction}\n     */\n    this.transform_ = identityTransform;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.watchId_ = undefined;\n\n    this.addChangeListener(Property.PROJECTION, this.handleProjectionChanged_);\n    this.addChangeListener(Property.TRACKING, this.handleTrackingChanged_);\n\n    if (options.projection !== undefined) {\n      this.setProjection(options.projection);\n    }\n    if (options.trackingOptions !== undefined) {\n      this.setTrackingOptions(options.trackingOptions);\n    }\n\n    this.setTracking(options.tracking !== undefined ? options.tracking : false);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTracking(false);\n    super.disposeInternal();\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    const projection = this.getProjection();\n    if (projection) {\n      this.transform_ = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        projection\n      );\n      if (this.position_) {\n        this.set(Property.POSITION, this.transform_(this.position_));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleTrackingChanged_() {\n    if ('geolocation' in navigator) {\n      const tracking = this.getTracking();\n      if (tracking && this.watchId_ === undefined) {\n        this.watchId_ = navigator.geolocation.watchPosition(\n          this.positionChange_.bind(this),\n          this.positionError_.bind(this),\n          this.getTrackingOptions()\n        );\n      } else if (!tracking && this.watchId_ !== undefined) {\n        navigator.geolocation.clearWatch(this.watchId_);\n        this.watchId_ = undefined;\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPosition} position position event.\n   */\n  positionChange_(position) {\n    const coords = position.coords;\n    this.set(Property.ACCURACY, coords.accuracy);\n    this.set(\n      Property.ALTITUDE,\n      coords.altitude === null ? undefined : coords.altitude\n    );\n    this.set(\n      Property.ALTITUDE_ACCURACY,\n      coords.altitudeAccuracy === null ? undefined : coords.altitudeAccuracy\n    );\n    this.set(\n      Property.HEADING,\n      coords.heading === null ? undefined : toRadians(coords.heading)\n    );\n    if (!this.position_) {\n      this.position_ = [coords.longitude, coords.latitude];\n    } else {\n      this.position_[0] = coords.longitude;\n      this.position_[1] = coords.latitude;\n    }\n    const projectedPosition = this.transform_(this.position_);\n    this.set(Property.POSITION, projectedPosition.slice());\n    this.set(Property.SPEED, coords.speed === null ? undefined : coords.speed);\n    const geometry = circularPolygon(this.position_, coords.accuracy);\n    geometry.applyTransform(this.transform_);\n    this.set(Property.ACCURACY_GEOMETRY, geometry);\n    this.changed();\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPositionError} error error object.\n   */\n  positionError_(error) {\n    this.dispatchEvent(new GeolocationError(error));\n  }\n\n  /**\n   * Get the accuracy of the position in meters.\n   * @return {number|undefined} The accuracy of the position measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAccuracy() {\n    return /** @type {number|undefined} */ (this.get(Property.ACCURACY));\n  }\n\n  /**\n   * Get a geometry of the position accuracy.\n   * @return {?import(\"./geom/Polygon.js\").default} A geometry of the position accuracy.\n   * @observable\n   * @api\n   */\n  getAccuracyGeometry() {\n    return /** @type {?import(\"./geom/Polygon.js\").default} */ (\n      this.get(Property.ACCURACY_GEOMETRY) || null\n    );\n  }\n\n  /**\n   * Get the altitude associated with the position.\n   * @return {number|undefined} The altitude of the position in meters above mean\n   *     sea level.\n   * @observable\n   * @api\n   */\n  getAltitude() {\n    return /** @type {number|undefined} */ (this.get(Property.ALTITUDE));\n  }\n\n  /**\n   * Get the altitude accuracy of the position.\n   * @return {number|undefined} The accuracy of the altitude measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAltitudeAccuracy() {\n    return /** @type {number|undefined} */ (\n      this.get(Property.ALTITUDE_ACCURACY)\n    );\n  }\n\n  /**\n   * Get the heading as radians clockwise from North.\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n   * is set to `true` in the tracking options.\n   * @return {number|undefined} The heading of the device in radians from north.\n   * @observable\n   * @api\n   */\n  getHeading() {\n    return /** @type {number|undefined} */ (this.get(Property.HEADING));\n  }\n\n  /**\n   * Get the position of the device.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The current position of the device reported\n   *     in the current projection.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the projection associated with the position.\n   * @return {import(\"./proj/Projection.js\").default|undefined} The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"./proj/Projection.js\").default|undefined} */ (\n      this.get(Property.PROJECTION)\n    );\n  }\n\n  /**\n   * Get the speed in meters per second.\n   * @return {number|undefined} The instantaneous speed of the device in meters\n   *     per second.\n   * @observable\n   * @api\n   */\n  getSpeed() {\n    return /** @type {number|undefined} */ (this.get(Property.SPEED));\n  }\n\n  /**\n   * Determine if the device location is being tracked.\n   * @return {boolean} The device location is being tracked.\n   * @observable\n   * @api\n   */\n  getTracking() {\n    return /** @type {boolean} */ (this.get(Property.TRACKING));\n  }\n\n  /**\n   * Get the tracking options.\n   * See https://www.w3.org/TR/geolocation-API/#position-options.\n   * @return {PositionOptions|undefined} PositionOptions as defined by\n   *     the [HTML5 Geolocation spec\n   *     ](https://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  getTrackingOptions() {\n    return /** @type {PositionOptions|undefined} */ (\n      this.get(Property.TRACKING_OPTIONS)\n    );\n  }\n\n  /**\n   * Set the projection to use for transforming the coordinates.\n   * @param {import(\"./proj.js\").ProjectionLike} projection The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(Property.PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * Enable or disable tracking.\n   * @param {boolean} tracking Enable tracking.\n   * @observable\n   * @api\n   */\n  setTracking(tracking) {\n    this.set(Property.TRACKING, tracking);\n  }\n\n  /**\n   * Set the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @param {PositionOptions} options PositionOptions as defined by the\n   *     [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  setTrackingOptions(options) {\n    this.set(Property.TRACKING_OPTIONS, options);\n  }\n}\n\nexport default Geolocation;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   * @param {CanvasRenderingContext2D} [context] Canvas context. When provided, the image will be\n   *    drawn into the context's canvas, and `getImage()` will return the canvas once the image\n   *    has finished loading.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction,\n    context\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    if (\n      this.state == ImageState.LOADED &&\n      this.context_ &&\n      !(this.image_ instanceof HTMLCanvasElement)\n    ) {\n      const canvas = this.context_.canvas;\n      canvas.width = this.image_.width;\n      canvas.height = this.image_.height;\n      this.context_.drawImage(this.image_, 0, 0);\n      this.image_ = this.context_.canvas;\n    }\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nclass ImageCanvas extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, loader) {\n    const state = loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = loader !== undefined ? loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\nexport default ImageCanvas;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateAndExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateAndExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible in the given view, i.e. within its min/max resolution or zoom and\n   * extent, and `getVisible()` is `true`.\n   * @param {View|import(\"../View.js\").ViewStateAndExtent} view View or {@link import(\"../Map.js\").FrameState}.\n   * @return {boolean} The layer is visible in the current view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    const layerExtent = this.getExtent();\n    return (\n      this.getVisible() &&\n      inView(this.getLayerState(), frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateAndExtent} view View or  {@link import(\"../Map.js\").FrameState}.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_();\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Executor groups for decluttering, by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.declutterExecutorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      const context = this.context_[key];\n      releaseCanvas(context);\n      canvasPool.push(context.canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {Function} [errback] Callback on error.\n * @param {string} [callbackParam] Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, errback, callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src =\n    url +\n    (url.includes('?') ? '&' : '?') +\n    (callbackParam || 'callback') +\n    '=' +\n    key;\n  const timer = setTimeout(function () {\n    cleanup();\n    if (errback) {\n      errback();\n    }\n  }, 10000);\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.head.appendChild(script);\n}\n\nexport class ResponseError extends Error {\n  /**\n   * @param {XMLHttpRequest} response The XHR object.\n   */\n  constructor(response) {\n    const message = 'Unexpected response status: ' + response.status;\n    super(message);\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ResponseError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.response = response;\n  }\n}\n\nexport class ClientError extends Error {\n  /**\n   * @param {XMLHttpRequest} client The XHR object.\n   */\n  constructor(client) {\n    super('Failed to issue request');\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ClientError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.client = client;\n  }\n}\n\n/**\n * @param {string} url The URL.\n * @return {Promise<Object>} A promise that resolves to the JSON response.\n */\nexport function getJSON(url) {\n  return new Promise(function (resolve, reject) {\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The load event.\n     */\n    function onLoad(event) {\n      const client = event.target;\n      // status will be 0 for file:// urls\n      if (!client.status || (client.status >= 200 && client.status < 300)) {\n        let data;\n        try {\n          data = JSON.parse(client.responseText);\n        } catch (err) {\n          const message = 'Error parsing response text as JSON: ' + err.message;\n          reject(new Error(message));\n          return;\n        }\n        resolve(data);\n        return;\n      }\n\n      reject(new ResponseError(client));\n    }\n\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The error event.\n     */\n    function onError(event) {\n      reject(new ClientError(event.target));\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener('load', onLoad);\n    client.addEventListener('error', onError);\n    client.open('GET', url);\n    client.setRequestHeader('Accept', 'application/json');\n    client.send();\n  });\n}\n\n/**\n * @param {string} base The base URL.\n * @param {string} url The potentially relative URL.\n * @return {string} The full URL.\n */\nexport function resolveUrl(base, url) {\n  if (url.includes('://')) {\n    return url;\n  }\n  return new URL(url, base).href;\n}\n\nlet originalXHR;\nexport function overrideXHR(xhr) {\n  if (typeof XMLHttpRequest !== 'undefined') {\n    originalXHR = XMLHttpRequest;\n  }\n  global.XMLHttpRequest = xhr;\n}\n\nexport function restoreXHR() {\n  global.XMLHttpRequest = originalXHR;\n}\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/render\n */\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply as multiplyTransform,\n  scale as scaleTransform,\n} from './transform.js';\nimport {getSquaredTolerance} from './renderer/vector.js';\nimport {getTransformFromProjections, getUserProjection} from './proj.js';\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render.js';\n * import Fill from 'ol/style/Fill.js';\n * import Polygon from 'ol/geom/Polygon.js';\n *\n * const canvas = document.createElement('canvas');\n * const render = toContext(\n *     canvas.getContext('2d'),\n *     {size: [100, 100]}\n * );\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]])\n * );\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions} [options] Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, options) {\n  const canvas = context.canvas;\n  options = options ? options : {};\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  const size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  const extent = [0, 0, canvas.width, canvas.height];\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @return {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n  if (!(event.context instanceof CanvasRenderingContext2D)) {\n    throw new Error('Only works for render events from Canvas 2D layers');\n  }\n\n  // canvas may be at a different pixel ratio than frameState.pixelRatio\n  const a = event.inversePixelTransform[0];\n  const b = event.inversePixelTransform[1];\n  const canvasPixelRatio = Math.sqrt(a * a + b * b);\n  const frameState = event.frameState;\n  const transform = multiplyTransform(\n    event.inversePixelTransform.slice(),\n    frameState.coordinateToPixelTransform\n  );\n  const squaredTolerance = getSquaredTolerance(\n    frameState.viewState.resolution,\n    canvasPixelRatio\n  );\n  let userTransform;\n  const userProjection = getUserProjection();\n  if (userProjection) {\n    userTransform = getTransformFromProjections(\n      userProjection,\n      frameState.viewState.projection\n    );\n  }\n\n  return new CanvasImmediateRenderer(\n    event.context,\n    canvasPixelRatio,\n    frameState.extent,\n    transform,\n    frameState.viewState.rotation,\n    squaredTolerance,\n    userTransform\n  );\n}\n\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @return {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n  return applyTransform(event.inversePixelTransform, pixel.slice(0));\n}\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateAndExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateAndExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, tempExtent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.getInterpolate()\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/BingMaps\n */\n\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {createOrUpdate} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\n\n/**\n * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  const z = tileCoord[0];\n  const digits = new Array(z);\n  let mask = 1 << (z - 1);\n  let i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nconst TOS_ATTRIBUTION =\n  '<a class=\"ol-attribution-bing-tos\" ' +\n  'href=\"https://www.microsoft.com/maps/product/terms.html\" target=\"_blank\">' +\n  'Terms of Use</a>';\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at https://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources Resources.\n */\n\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nclass BingMaps extends TileImage {\n  /**\n   * @param {Options} options Bing Maps options.\n   */\n  constructor(options) {\n    const hidpi = options.hidpi !== undefined ? options.hidpi : false;\n\n    super({\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: options.interpolate,\n      opaque: true,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: hidpi ? 2 : 1,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = hidpi;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.apiKey_ = options.key;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.imagerySet_ = options.imagerySet;\n\n    const url =\n      'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n      this.imagerySet_ +\n      '?uriScheme=https&include=ImageryProviders&key=' +\n      this.apiKey_ +\n      '&c=' +\n      this.culture_;\n\n    fetch(url)\n      .then((response) => response.json())\n      .then((json) => this.handleImageryMetadataResponse(json));\n  }\n\n  /**\n   * Get the api key used for this source.\n   *\n   * @return {string} The api key.\n   * @api\n   */\n  getApiKey() {\n    return this.apiKey_;\n  }\n\n  /**\n   * Get the imagery set associated with this source.\n   *\n   * @return {string} The imagery set.\n   * @api\n   */\n  getImagerySet() {\n    return this.imagerySet_;\n  }\n\n  /**\n   * @param {BingMapsImageryMetadataResponse} response Response.\n   */\n  handleImageryMetadataResponse(response) {\n    if (\n      response.statusCode != 200 ||\n      response.statusDescription != 'OK' ||\n      response.authenticationResultCode != 'ValidCredentials' ||\n      response.resourceSets.length != 1 ||\n      response.resourceSets[0].resources.length != 1\n    ) {\n      this.setState('error');\n      return;\n    }\n\n    const resource = response.resourceSets[0].resources[0];\n    const maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n\n    const sourceProjection = this.getProjection();\n    const extent = extentFromProjection(sourceProjection);\n    const scale = this.hidpi_ ? 2 : 1;\n    const tileSize =\n      resource.imageWidth == resource.imageHeight\n        ? resource.imageWidth / scale\n        : [resource.imageWidth / scale, resource.imageHeight / scale];\n\n    const tileGrid = createXYZ({\n      extent: extent,\n      minZoom: resource.zoomMin,\n      maxZoom: maxZoom,\n      tileSize: tileSize,\n    });\n    this.tileGrid = tileGrid;\n\n    const culture = this.culture_;\n    const hidpi = this.hidpi_;\n    this.tileUrlFunction = createFromTileUrlFunctions(\n      resource.imageUrlSubdomains.map(function (subdomain) {\n        /** @type {import('../tilecoord.js').TileCoord} */\n        const quadKeyTileCoord = [0, 0, 0];\n        const imageUrl = resource.imageUrl\n          .replace('{subdomain}', subdomain)\n          .replace('{culture}', culture);\n        return (\n          /**\n           * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n           * @param {number} pixelRatio Pixel ratio.\n           * @param {import(\"../proj/Projection.js\").default} projection Projection.\n           * @return {string|undefined} Tile URL.\n           */\n          function (tileCoord, pixelRatio, projection) {\n            if (!tileCoord) {\n              return undefined;\n            }\n            createOrUpdate(\n              tileCoord[0],\n              tileCoord[1],\n              tileCoord[2],\n              quadKeyTileCoord\n            );\n            let url = imageUrl;\n            if (hidpi) {\n              url += '&dpi=d1&device=mobile';\n            }\n            return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\n          }\n        );\n      })\n    );\n\n    if (resource.imageryProviders) {\n      const transform = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        this.getProjection()\n      );\n\n      this.setAttributions((frameState) => {\n        const attributions = [];\n        const viewState = frameState.viewState;\n        const tileGrid = this.getTileGrid();\n        const z = tileGrid.getZForResolution(\n          viewState.resolution,\n          this.zDirection\n        );\n        const tileCoord = tileGrid.getTileCoordForCoordAndZ(\n          viewState.center,\n          z\n        );\n        const zoom = tileCoord[0];\n        resource.imageryProviders.map(function (imageryProvider) {\n          let intersecting = false;\n          const coverageAreas = imageryProvider.coverageAreas;\n          for (let i = 0, ii = coverageAreas.length; i < ii; ++i) {\n            const coverageArea = coverageAreas[i];\n            if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\n              const bbox = coverageArea.bbox;\n              const epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n              const extent = applyTransform(epsg4326Extent, transform);\n              if (intersects(extent, frameState.extent)) {\n                intersecting = true;\n                break;\n              }\n            }\n          }\n          if (intersecting) {\n            attributions.push(imageryProvider.attribution);\n          }\n        });\n\n        attributions.push(TOS_ATTRIBUTION);\n        return attributions;\n      });\n    }\n\n    this.setState('ready');\n  }\n}\n\nexport default BingMaps;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/source/Cluster\n */\n\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from './Vector.js';\nimport {add as addCoordinate, scale as scaleCoordinate} from '../coordinate.js';\nimport {assert} from '../asserts.js';\nimport {\n  buffer,\n  createEmpty,\n  createOrUpdateFromCoordinate,\n  getCenter,\n} from '../extent.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Distance in pixels within which features will\n * be clustered together.\n * @property {number} [minDistance=0] Minimum distance in pixels between clusters.\n * Will be capped at the configured distance.\n * By default no minimum distance is guaranteed. This config can be used to avoid\n * overlapping icons. As a tradoff, the cluster feature's position will no longer be\n * the center of all its features.\n * @property {function(Feature):Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Point~Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underlying source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {function(Point, Array<Feature>):Feature} [createCluster]\n * Function that takes the cluster's center {@link module:ol/geom/Point~Point} and an array\n * of {@link module:ol/Feature~Feature} included in this cluster. Must return a\n * {@link module:ol/Feature~Feature} that will be used to render. Default implementation is:\n * ```js\n * function(point, features) {\n *   return new Feature({\n *     geometry: point,\n *     features: features\n *   });\n * }\n * ```\n * @property {VectorSource} [source=null] Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n *\n * If the instance is disposed without also disposing the underlying\n * source `setSource(null)` has to be called to remove the listener reference\n * from the wrapped source.\n * @api\n */\nclass Cluster extends VectorSource {\n  /**\n   * @param {Options} options Cluster options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.resolution = undefined;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.distance = options.distance !== undefined ? options.distance : 20;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.minDistance = options.minDistance || 0;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.interpolationRatio = 0;\n\n    /**\n     * @type {Array<Feature>}\n     * @protected\n     */\n    this.features = [];\n\n    /**\n     * @param {Feature} feature Feature.\n     * @return {Point} Cluster calculation point.\n     * @protected\n     */\n    this.geometryFunction =\n      options.geometryFunction ||\n      function (feature) {\n        const geometry = /** @type {Point} */ (feature.getGeometry());\n        assert(geometry.getType() == 'Point', 10); // The default `geometryFunction` can only handle `Point` geometries\n        return geometry;\n      };\n\n    /**\n     * @type {function(Point, Array<Feature>):Feature}\n     * @private\n     */\n    this.createCustomCluster_ = options.createCluster;\n\n    /**\n     * @type {VectorSource|null}\n     * @protected\n     */\n    this.source = null;\n\n    /**\n     * @private\n     */\n    this.boundRefresh_ = this.refresh.bind(this);\n\n    this.updateDistance(this.distance, this.minDistance);\n    this.setSource(options.source || null);\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/VectorEventType~VectorEventType#removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    this.features.length = 0;\n    super.clear(fast);\n  }\n\n  /**\n   * Get the distance in pixels between clusters.\n   * @return {number} Distance.\n   * @api\n   */\n  getDistance() {\n    return this.distance;\n  }\n\n  /**\n   * Get a reference to the wrapped source.\n   * @return {VectorSource|null} Source.\n   * @api\n   */\n  getSource() {\n    return this.source;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    this.source.loadFeatures(extent, resolution, projection);\n    if (resolution !== this.resolution) {\n      this.resolution = resolution;\n      this.refresh();\n    }\n  }\n\n  /**\n   * Set the distance within which features will be clusterd together.\n   * @param {number} distance The distance in pixels.\n   * @api\n   */\n  setDistance(distance) {\n    this.updateDistance(distance, this.minDistance);\n  }\n\n  /**\n   * Set the minimum distance between clusters. Will be capped at the\n   * configured distance.\n   * @param {number} minDistance The minimum distance in pixels.\n   * @api\n   */\n  setMinDistance(minDistance) {\n    this.updateDistance(this.distance, minDistance);\n  }\n\n  /**\n   * The configured minimum distance between clusters.\n   * @return {number} The minimum distance in pixels.\n   * @api\n   */\n  getMinDistance() {\n    return this.minDistance;\n  }\n\n  /**\n   * Replace the wrapped source.\n   * @param {VectorSource|null} source The new source for this instance.\n   * @api\n   */\n  setSource(source) {\n    if (this.source) {\n      this.source.removeEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.source = source;\n    if (source) {\n      source.addEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.refresh();\n  }\n\n  /**\n   * Handle the source changing.\n   */\n  refresh() {\n    this.clear();\n    this.cluster();\n    this.addFeatures(this.features);\n  }\n\n  /**\n   * Update the distances and refresh the source if necessary.\n   * @param {number} distance The new distance.\n   * @param {number} minDistance The new minimum distance.\n   */\n  updateDistance(distance, minDistance) {\n    const ratio =\n      distance === 0 ? 0 : Math.min(minDistance, distance) / distance;\n    const changed =\n      distance !== this.distance || this.interpolationRatio !== ratio;\n    this.distance = distance;\n    this.minDistance = minDistance;\n    this.interpolationRatio = ratio;\n    if (changed) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  cluster() {\n    if (this.resolution === undefined || !this.source) {\n      return;\n    }\n    const extent = createEmpty();\n    const mapDistance = this.distance * this.resolution;\n    const features = this.source.getFeatures();\n\n    /** @type {Object<string, true>} */\n    const clustered = {};\n\n    for (let i = 0, ii = features.length; i < ii; i++) {\n      const feature = features[i];\n      if (!(getUid(feature) in clustered)) {\n        const geometry = this.geometryFunction(feature);\n        if (geometry) {\n          const coordinates = geometry.getCoordinates();\n          createOrUpdateFromCoordinate(coordinates, extent);\n          buffer(extent, mapDistance, extent);\n\n          const neighbors = this.source\n            .getFeaturesInExtent(extent)\n            .filter(function (neighbor) {\n              const uid = getUid(neighbor);\n              if (uid in clustered) {\n                return false;\n              }\n              clustered[uid] = true;\n              return true;\n            });\n          this.features.push(this.createCluster(neighbors, extent));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Feature>} features Features\n   * @param {import(\"../extent.js\").Extent} extent The searched extent for these features.\n   * @return {Feature} The cluster feature.\n   * @protected\n   */\n  createCluster(features, extent) {\n    const centroid = [0, 0];\n    for (let i = features.length - 1; i >= 0; --i) {\n      const geometry = this.geometryFunction(features[i]);\n      if (geometry) {\n        addCoordinate(centroid, geometry.getCoordinates());\n      } else {\n        features.splice(i, 1);\n      }\n    }\n    scaleCoordinate(centroid, 1 / features.length);\n    const searchCenter = getCenter(extent);\n    const ratio = this.interpolationRatio;\n    const geometry = new Point([\n      centroid[0] * (1 - ratio) + searchCenter[0] * ratio,\n      centroid[1] * (1 - ratio) + searchCenter[1] * ratio,\n    ]);\n    if (this.createCustomCluster_) {\n      return this.createCustomCluster_(geometry, features);\n    }\n    return new Feature({\n      geometry,\n      features,\n    });\n  }\n}\n\nexport default Cluster;\n","/**\n * @module ol/reproj/DataTile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport DataTile, {asArrayLike, asImageLike, toArray} from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D, releaseCanvas} from '../dom.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../DataTile.js\").default} TileGetter\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n * @property {import(\"../proj/Projection.js\").default} targetProj Target projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n * @property {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n * @property {import(\"../tilecoord.js\").TileCoord} [wrappedTileCoord] Coordinate of the tile wrapped in X.\n * @property {number} pixelRatio Pixel ratio.\n * @property {number} gutter Gutter of the source tiles.\n * @property {TileGetter} getTileFunction Function returning source tiles (z, x, y, pixelRatio).\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {number} [errorThreshold] Acceptable reprojection error (in px).\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected data tile.\n * See {@link module:ol/source/DataTile~DataTileSource}.\n *\n */\nclass ReprojDataTile extends DataTile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    super({\n      tileCoord: options.tileCoord,\n      loader: () => Promise.resolve(new Uint8Array(4)),\n      interpolate: options.interpolate,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter;\n\n    /**\n     * @type {import(\"../DataTile.js\").Data}\n     * @private\n     */\n    this.reprojData_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.reprojError_ = null;\n\n    /**\n     * @type {import('../size.js').Size}\n     * @private\n     */\n    this.reprojSize_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = options.sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = options.targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = options.wrappedTileCoord || options.tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<DataTile>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProj = options.sourceProj;\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = this.targetTileGrid_.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const targetProj = options.targetProj;\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      options.errorThreshold !== undefined\n        ? options.errorThreshold\n        : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = this.sourceTileGrid_.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = this.sourceTileGrid_.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n      const getTile = options.getTileFunction;\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTile(this.sourceZ_, srcX, srcY, this.pixelRatio_);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('../size.js').Size} Tile size.\n   */\n  getSize() {\n    return this.reprojSize_;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {import(\"../DataTile.js\").Data} Tile data.\n   */\n  getData() {\n    return this.reprojData_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   */\n  getError() {\n    return this.reprojError_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const dataSources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const size = tile.getSize();\n      const gutter = this.gutter_;\n      /**\n       * @type {import(\"../DataTile.js\").ArrayLike}\n       */\n      let tileData;\n      const arrayData = asArrayLike(tile.getData());\n      if (arrayData) {\n        tileData = arrayData;\n      } else {\n        tileData = toArray(asImageLike(tile.getData()));\n      }\n      const pixelSize = [size[0] + 2 * gutter, size[1] + 2 * gutter];\n      const isFloat = tileData instanceof Float32Array;\n      const pixelCount = pixelSize[0] * pixelSize[1];\n      const DataType = isFloat ? Float32Array : Uint8Array;\n      const tileDataR = new DataType(tileData.buffer);\n      const bytesPerElement = DataType.BYTES_PER_ELEMENT;\n      const bytesPerPixel = (bytesPerElement * tileDataR.length) / pixelCount;\n      const bytesPerRow = tileDataR.byteLength / pixelSize[1];\n      const bandCount = Math.floor(\n        bytesPerRow / bytesPerElement / pixelSize[0]\n      );\n      const packedLength = pixelCount * bandCount;\n      let packedData = tileDataR;\n      if (tileDataR.length !== packedLength) {\n        packedData = new DataType(packedLength);\n        let dataIndex = 0;\n        let rowOffset = 0;\n        const colCount = pixelSize[0] * bandCount;\n        for (let rowIndex = 0; rowIndex < pixelSize[1]; ++rowIndex) {\n          for (let colIndex = 0; colIndex < colCount; ++colIndex) {\n            packedData[dataIndex++] = tileDataR[rowOffset + colIndex];\n          }\n          rowOffset += bytesPerRow / bytesPerElement;\n        }\n      }\n      dataSources.push({\n        extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n        data: new Uint8Array(packedData.buffer),\n        dataType: DataType,\n        bytesPerPixel: bytesPerPixel,\n        pixelSize: pixelSize,\n      });\n    });\n    this.sourceTiles_.length = 0;\n\n    if (dataSources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const targetWidth = typeof size === 'number' ? size : size[0];\n      const targetHeight = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      let dataR, dataU;\n\n      const bytesPerPixel = dataSources[0].bytesPerPixel;\n\n      const reprojs = Math.ceil(bytesPerPixel / 3);\n      for (let reproj = reprojs - 1; reproj >= 0; --reproj) {\n        const sources = [];\n        for (let i = 0, len = dataSources.length; i < len; ++i) {\n          const dataSource = dataSources[i];\n          const buffer = dataSource.data;\n          const pixelSize = dataSource.pixelSize;\n          const width = pixelSize[0];\n          const height = pixelSize[1];\n          const context = createCanvasContext2D(width, height, canvasPool);\n          const imageData = context.createImageData(width, height);\n          const data = imageData.data;\n          let offset = reproj * 3;\n          for (let j = 0, len = data.length; j < len; j += 4) {\n            data[j] = buffer[offset];\n            data[j + 1] = buffer[offset + 1];\n            data[j + 2] = buffer[offset + 2];\n            data[j + 3] = 255;\n            offset += bytesPerPixel;\n          }\n          context.putImageData(imageData, 0, 0);\n          sources.push({\n            extent: dataSource.extent,\n            image: context.canvas,\n          });\n        }\n\n        const canvas = renderReprojected(\n          targetWidth,\n          targetHeight,\n          this.pixelRatio_,\n          sourceResolution,\n          this.sourceTileGrid_.getExtent(),\n          targetResolution,\n          targetExtent,\n          this.triangulation_,\n          sources,\n          this.gutter_,\n          false,\n          false\n        );\n\n        for (let i = 0, len = sources.length; i < len; ++i) {\n          const canvas = sources[i].image;\n          const context = canvas.getContext('2d');\n          releaseCanvas(context);\n          canvasPool.push(context.canvas);\n        }\n\n        const context = canvas.getContext('2d');\n        const imageData = context.getImageData(\n          0,\n          0,\n          canvas.width,\n          canvas.height\n        );\n\n        releaseCanvas(context);\n        canvasPool.push(canvas);\n\n        if (!dataR) {\n          dataU = new Uint8Array(\n            bytesPerPixel * imageData.width * imageData.height\n          );\n          dataR = new dataSources[0].dataType(dataU.buffer);\n        }\n\n        const data = imageData.data;\n        let offset = reproj * 3;\n        for (let i = 0, len = data.length; i < len; i += 4) {\n          if (data[i + 3] === 255) {\n            dataU[offset] = data[i];\n            dataU[offset + 1] = data[i + 1];\n            dataU[offset + 2] = data[i + 2];\n          } else {\n            dataU[offset] = 0;\n            dataU[offset + 1] = 0;\n            dataU[offset + 2] = 0;\n          }\n          offset += bytesPerPixel;\n        }\n      }\n\n      this.reprojData_ = dataR;\n      this.reprojSize_ = [\n        Math.round(targetWidth * this.pixelRatio_),\n        Math.round(targetHeight * this.pixelRatio_),\n      ];\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    let leftToLoad = 0;\n\n    this.sourcesListenerKeys_ = [];\n    this.sourceTiles_.forEach((tile) => {\n      const state = tile.getState();\n      if (state !== TileState.IDLE && state !== TileState.LOADING) {\n        return;\n      }\n      leftToLoad++;\n\n      const sourceListenKey = listen(\n        tile,\n        EventType.CHANGE,\n        function () {\n          const state = tile.getState();\n          if (\n            state == TileState.LOADED ||\n            state == TileState.ERROR ||\n            state == TileState.EMPTY\n          ) {\n            unlistenByKey(sourceListenKey);\n            leftToLoad--;\n            if (leftToLoad === 0) {\n              this.unlistenSources_();\n              this.reproject_();\n            }\n          }\n        },\n        this\n      );\n      this.sourcesListenerKeys_.push(sourceListenKey);\n    });\n\n    if (leftToLoad === 0) {\n      setTimeout(this.reproject_.bind(this), 0);\n    } else {\n      this.sourceTiles_.forEach(function (tile) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojDataTile;\n","/**\n * @module ol/source/DataTile\n */\nimport DataTile from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport ReprojDataTile from '../reproj/DataTile.js';\nimport TileCache from '../TileCache.js';\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {\n  createXYZ,\n  extentFromProjection,\n  getForProjection as getTileGridForProjection,\n} from '../tilegrid.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\nimport {toPromise} from '../functions.js';\nimport {toSize} from '../size.js';\n\n/**\n * Data tile loading function.  The function is called with z, x, and y tile coordinates and\n * returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * @typedef {function(number, number, number) : (import(\"../DataTile.js\").Data|Promise<import(\"../DataTile.js\").Data>)} Loader\n */\n\n/**\n * @typedef {Object} Options\n * @property {Loader} [loader] Data loader.  Called with z, x, and y tile coordinates.\n * Returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The pixel width and height of the source tiles.\n * This may be different than the rendered pixel size if a `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around data tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported data should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Tile projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"./Source.js\").State} [state] The source state.\n * @property {boolean} [wrapX=false] Render tiles beyond the antimeridian.\n * @property {number} [transition] Transition time when fading in new tiles (in miliseconds).\n * @property {number} [bandCount=4] Number of bands represented in the data.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * A source for typed array data tiles.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass DataTileSource extends TileSource {\n  /**\n   * @param {Options} options DataTile source options.\n   */\n  constructor(options) {\n    const projection =\n      options.projection === undefined ? 'EPSG:3857' : options.projection;\n\n    let tileGrid = options.tileGrid;\n    if (tileGrid === undefined && projection) {\n      tileGrid = createXYZ({\n        extent: extentFromProjection(projection),\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize,\n      });\n    }\n\n    super({\n      cacheSize: 0.1, // don't cache on the source\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: projection,\n      tileGrid: tileGrid,\n      opaque: options.opaque,\n      state: options.state,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {import('../size.js').Size|null}\n     */\n    this.tileSize_ = options.tileSize ? toSize(options.tileSize) : null;\n\n    /**\n     * @private\n     * @type {Array<import('../size.js').Size>|null}\n     */\n    this.tileSizes_ = null;\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n    /**\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    this.handleTileChange_ = this.handleTileChange_.bind(this);\n\n    /**\n     * @type {number}\n     */\n    this.bandCount = options.bandCount === undefined ? 4 : options.bandCount; // assume RGBA if undefined\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../TileCache.js\").default>}\n     */\n    this.tileCacheForProjection_ = {};\n  }\n\n  /**\n   * Set the source tile sizes.  The length of the array is expected to match the number of\n   * levels in the tile grid.\n   * @protected\n   * @param {Array<import('../size.js').Size>} tileSizes An array of tile sizes.\n   */\n  setTileSizes(tileSizes) {\n    this.tileSizes_ = tileSizes;\n  }\n\n  /**\n   * Get the source tile size at the given zoom level.  This may be different than the rendered tile\n   * size.\n   * @protected\n   * @param {number} z Tile zoom level.\n   * @return {import('../size.js').Size} The source tile size.\n   */\n  getTileSize(z) {\n    if (this.tileSizes_) {\n      return this.tileSizes_[z];\n    }\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    const tileGrid = this.getTileGrid();\n    return tileGrid ? toSize(tileGrid.getTileSize(z)) : [256, 256];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.gutter_;\n    }\n\n    return 0;\n  }\n\n  /**\n   * @param {Loader} loader The data loader.\n   * @protected\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} targetProj The output projection.\n   * @param {import(\"../proj/Projection.js\").default} sourceProj The input projection.\n   * @return {!DataTile} Tile.\n   */\n  getReprojTile_(z, x, y, targetProj, sourceProj) {\n    const cache = this.getTileCacheForProjection(targetProj);\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (cache.containsKey(tileCoordKey)) {\n      const tile = cache.get(tileCoordKey);\n      if (tile && tile.key == this.getKey()) {\n        return tile;\n      }\n    }\n\n    const tileGrid = this.getTileGrid();\n    const reprojTilePixelRatio = Math.max.apply(\n      null,\n      tileGrid.getResolutions().map((r, z) => {\n        const tileSize = toSize(tileGrid.getTileSize(z));\n        const textureSize = this.getTileSize(z);\n        return Math.max(\n          textureSize[0] / tileSize[0],\n          textureSize[1] / tileSize[1]\n        );\n      })\n    );\n\n    const sourceTileGrid = this.getTileGridForProjection(sourceProj);\n    const targetTileGrid = this.getTileGridForProjection(targetProj);\n    const tileCoord = [z, x, y];\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      targetProj\n    );\n\n    const options = Object.assign(\n      {\n        sourceProj,\n        sourceTileGrid,\n        targetProj,\n        targetTileGrid,\n        tileCoord,\n        wrappedTileCoord,\n        pixelRatio: reprojTilePixelRatio,\n        gutter: this.getGutterForProjection(sourceProj),\n        getTileFunction: (z, x, y, pixelRatio) =>\n          this.getTile(z, x, y, pixelRatio, sourceProj),\n      },\n      this.tileOptions\n    );\n    const newTile = new ReprojDataTile(options);\n    newTile.key = this.getKey();\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!DataTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      sourceProjection &&\n      projection &&\n      !equivalent(sourceProjection, projection)\n    ) {\n      return this.getReprojTile_(z, x, y, projection, sourceProjection);\n    }\n\n    const size = this.getTileSize(z);\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return this.tileCache.get(tileCoordKey);\n    }\n\n    const sourceLoader = this.loader_;\n\n    function loader() {\n      return toPromise(function () {\n        return sourceLoader(z, x, y);\n      });\n    }\n\n    const options = Object.assign(\n      {\n        tileCoord: [z, x, y],\n        loader: loader,\n        size: size,\n      },\n      this.tileOptions\n    );\n\n    const tile = new DataTile(options);\n    tile.key = this.getKey();\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange_);\n\n    this.tileCache.set(tileCoordKey, tile);\n    return tile;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   */\n  handleTileChange_(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection_)) {\n      this.tileGridForProjection_[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection_[projKey];\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection_)) {\n        this.tileGridForProjection_[projKey] = tilegrid;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection_)) {\n      this.tileCacheForProjection_[projKey] = new TileCache(0.1); // don't cache\n    }\n    return this.tileCacheForProjection_[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection_) {\n      const tileCache = this.tileCacheForProjection_[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection_) {\n      this.tileCacheForProjection_[id].clear();\n    }\n  }\n}\n\nexport default DataTileSource;\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {getCenter, getHeight, getIntersection, getWidth} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageBase {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    interpolate\n  ) {\n    const maxSourceExtent = sourceProj.getExtent();\n    const maxTargetExtent = targetProj.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = getImageFunction(\n      sourceExtent,\n      sourceResolution,\n      pixelRatio\n    );\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../ImageBase.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        this.sourceImage_.getResolution(),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.interpolate_\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          function (e) {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n          this\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_)\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n","/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport ImageState from '../ImageState.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport {abstract} from '../util.js';\nimport {equals} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport {linearFindNearest} from '../array.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./Source.js\").State} [state] State.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n    });\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {Array<number>|null} resolutions Resolutions.\n   */\n  setResolutions(resolutions) {\n    this.resolutions_ = resolutions;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    const resolutions = this.getResolutions();\n    if (resolutions) {\n      const idx = linearFindNearest(resolutions, resolution, 0);\n      resolution = resolutions[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    }\n    if (this.reprojectedImage_) {\n      if (\n        this.reprojectedRevision_ == this.getRevision() &&\n        equivalent(this.reprojectedImage_.getProjection(), projection) &&\n        this.reprojectedImage_.getResolution() == resolution &&\n        equals(this.reprojectedImage_.getExtent(), extent)\n      ) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new ReprojImage(\n      sourceProjection,\n      projection,\n      extent,\n      resolution,\n      pixelRatio,\n      (extent, resolution, pixelRatio) =>\n        this.getImageInternal(extent, resolution, pixelRatio, sourceProjection),\n      this.getInterpolate()\n    );\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    let type;\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        type = ImageSourceEventType.IMAGELOADSTART;\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADEND;\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADERROR;\n        break;\n      default:\n        return;\n    }\n    if (this.hasListener(type)) {\n      this.dispatchEvent(new ImageSourceEvent(type, image));\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\nexport default ImageSource;\n","/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n","/**\n * @module ol/source/ImageArcGISRest\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageWrapper from '../Image.js';\nimport {appendParams} from '../uri.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, getHeight, getWidth} from '../extent.js';\nimport {createCanvasContext2D} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given\n * a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * The projection code must contain a numeric end portion separated by :\n * or the entire code must form a valid ArcGIS SpatialReference definition.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {Array<number>} [resolutions] Resolutions. If specified, requests will be made for\n * these resolutions only.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n */\n\n/**\n * @classdesc\n * Source for data from ArcGIS Rest services providing single, untiled images.\n * Useful when underlying map service has labels.\n *\n * If underlying map service is not using labels,\n * take advantage of ol image caching and use\n * {@link module:ol/source/TileArcGISRest~TileArcGISRest} data source.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageArcGISRest extends ImageSource {\n  /**\n   * @param {Options} [options] Image ArcGIS Rest Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D(1, 1);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n    pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n    const image = this.image_;\n    if (\n      image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), extent)\n    ) {\n      return image;\n    }\n\n    const params = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true,\n    };\n    Object.assign(params, this.params_);\n\n    extent = extent.slice();\n    const centerX = (extent[0] + extent[2]) / 2;\n    const centerY = (extent[1] + extent[3]) / 2;\n    if (this.ratio_ != 1) {\n      const halfWidth = (this.ratio_ * getWidth(extent)) / 2;\n      const halfHeight = (this.ratio_ * getHeight(extent)) / 2;\n      extent[0] = centerX - halfWidth;\n      extent[1] = centerY - halfHeight;\n      extent[2] = centerX + halfWidth;\n      extent[3] = centerY + halfHeight;\n    }\n\n    const imageResolution = resolution / pixelRatio;\n\n    // Compute an integer width and height.\n    const width = Math.ceil(getWidth(extent) / imageResolution);\n    const height = Math.ceil(getHeight(extent) / imageResolution);\n\n    // Modify the extent to match the integer width and height.\n    extent[0] = centerX - (imageResolution * width) / 2;\n    extent[2] = centerX + (imageResolution * width) / 2;\n    extent[1] = centerY - (imageResolution * height) / 2;\n    extent[3] = centerY + (imageResolution * height) / 2;\n\n    this.imageSize_[0] = width;\n    this.imageSize_[1] = height;\n\n    const url = this.getRequestUrl_(\n      extent,\n      this.imageSize_,\n      pixelRatio,\n      projection,\n      params\n    );\n\n    this.image_ = new ImageWrapper(\n      extent,\n      resolution,\n      pixelRatio,\n      url,\n      this.crossOrigin_,\n      this.imageLoadFunction_,\n      this.context_\n    );\n\n    this.renderedRevision_ = this.getRevision();\n\n    this.image_.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this)\n    );\n\n    return this.image_;\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  getRequestUrl_(extent, size, pixelRatio, projection, params) {\n    // ArcGIS Server only wants the numeric portion of the projection ID.\n    // (if there is no numeric portion the entire projection code must\n    // form a valid ArcGIS SpatialReference definition).\n    const srid = projection\n      .getCode()\n      .split(/:(?=\\d+$)/)\n      .pop();\n\n    params['SIZE'] = size[0] + ',' + size[1];\n    params['BBOX'] = extent.join(',');\n    params['BBOXSR'] = srid;\n    params['IMAGESR'] = srid;\n    params['DPI'] = Math.round(90 * pixelRatio);\n\n    const url = this.url_;\n\n    const modifiedUrl = url\n      .replace(/MapServer\\/?$/, 'MapServer/export')\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n    if (modifiedUrl == url) {\n      assert(false, 50); // `options.featureTypes` should be an Array\n    }\n    return appendParams(modifiedUrl, params);\n  }\n\n  /**\n   * Return the URL used for this ArcGIS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.image_ = null;\n    this.changed();\n  }\n}\n\nexport default ImageArcGISRest;\n","/**\n * @module ol/source/ImageCanvas\n */\n\nimport ImageCanvas from '../ImageCanvas.js';\nimport ImageSource from './Image.js';\nimport {\n  containsExtent,\n  getHeight,\n  getWidth,\n  scaleFromCenter,\n} from '../extent.js';\n\n/**\n * A function returning the canvas element (`{HTMLCanvasElement}`)\n * used by the source as an image. The arguments passed to the function are:\n * {@link module:ol/extent~Extent} the image extent, `{number}` the image resolution,\n * `{number}` the pixel ratio of the map, {@link module:ol/size~Size} the image size,\n * and {@link module:ol/proj/Projection~Projection} the image projection. The canvas returned by\n * this function is cached by the source. The this keyword inside the function\n * references the {@link module:ol/source/ImageCanvas~ImageCanvasSource}.\n *\n * @typedef {function(this:import(\"../ImageCanvas.js\").default, import(\"../extent.js\").Extent, number,\n *     number, import(\"../size.js\").Size, import(\"../proj/Projection.js\").default): HTMLCanvasElement} FunctionType\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {FunctionType} [canvasFunction] Canvas function.\n * The function returning the canvas element used by the source\n * as an image. The arguments passed to the function are: {@link import(\"../extent.js\").Extent} the\n * image extent, `{number}` the image resolution, `{number}` the pixel ratio of the map,\n * {@link import(\"../size.js\").Size} the image size, and {@link import(\"../proj/Projection.js\").default} the image\n * projection. The canvas returned by this function is cached by the source. If\n * the value returned by the function is later changed then\n * `changed` should be called on the source for the source to\n * invalidate the current cached image. See: {@link module:ol/Observable~Observable#changed}\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. 1 means canvases are the size of the map viewport, 2 means twice the\n * width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, new canvases will be created for these resolutions\n * @property {import(\"./Source.js\").State} [state] Source state.\n */\n\n/**\n * @classdesc\n * Base class for image sources where a canvas element is the image.\n * @api\n */\nclass ImageCanvasSource extends ImageSource {\n  /**\n   * @param {Options} [options] ImageCanvas options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n      state: options.state,\n    });\n\n    /**\n     * @private\n     * @type {FunctionType}\n     */\n    this.canvasFunction_ = options.canvasFunction;\n\n    /**\n     * @private\n     * @type {import(\"../ImageCanvas.js\").default}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n\n    let canvas = this.canvas_;\n    if (\n      canvas &&\n      this.renderedRevision_ == this.getRevision() &&\n      canvas.getResolution() == resolution &&\n      canvas.getPixelRatio() == pixelRatio &&\n      containsExtent(canvas.getExtent(), extent)\n    ) {\n      return canvas;\n    }\n\n    extent = extent.slice();\n    scaleFromCenter(extent, this.ratio_);\n    const width = getWidth(extent) / resolution;\n    const height = getHeight(extent) / resolution;\n    const size = [width * pixelRatio, height * pixelRatio];\n\n    const canvasElement = this.canvasFunction_.call(\n      this,\n      extent,\n      resolution,\n      pixelRatio,\n      size,\n      projection\n    );\n    if (canvasElement) {\n      canvas = new ImageCanvas(extent, resolution, pixelRatio, canvasElement);\n    }\n    this.canvas_ = canvas;\n    this.renderedRevision_ = this.getRevision();\n\n    return canvas;\n  }\n}\n\nexport default ImageCanvasSource;\n","/**\n * @module ol/source/ImageStatic\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getHeight, getWidth, intersects} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"../size.js\").Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nclass Static extends ImageSource {\n  /**\n   * @param {Options} options ImageStatic options.\n   */\n  constructor(options) {\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const /** @type {import(\"../Image.js\").LoadFunction} */ imageLoadFunction =\n        options.imageLoadFunction !== undefined\n          ? options.imageLoadFunction\n          : defaultImageLoadFunction;\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: getProjection(options.projection),\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.imageExtent_ = options.imageExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = new ImageWrapper(\n      this.imageExtent_,\n      undefined,\n      1,\n      this.url_,\n      crossOrigin,\n      imageLoadFunction,\n      createCanvasContext2D(1, 1)\n    );\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.imageSize_ = options.imageSize ? options.imageSize : null;\n\n    this.image_.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this)\n    );\n  }\n\n  /**\n   * Returns the image extent\n   * @return {import(\"../extent.js\").Extent} image extent.\n   * @api\n   */\n  getImageExtent() {\n    return this.imageExtent_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (intersects(extent, this.image_.getExtent())) {\n      return this.image_;\n    }\n    return null;\n  }\n\n  /**\n   * Return the URL used for this image source.\n   * @return {string} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   */\n  handleImageChange(evt) {\n    if (this.image_.getState() == ImageState.LOADED) {\n      const imageExtent = this.image_.getExtent();\n      const image = this.image_.getImage();\n      let imageWidth, imageHeight;\n      if (this.imageSize_) {\n        imageWidth = this.imageSize_[0];\n        imageHeight = this.imageSize_[1];\n      } else {\n        imageWidth = image.width;\n        imageHeight = image.height;\n      }\n      const extentWidth = getWidth(imageExtent);\n      const extentHeight = getHeight(imageExtent);\n      const xResolution = extentWidth / imageWidth;\n      const yResolution = extentHeight / imageHeight;\n      let targetWidth = imageWidth;\n      let targetHeight = imageHeight;\n      if (xResolution > yResolution) {\n        targetWidth = Math.round(extentWidth / yResolution);\n      } else {\n        targetHeight = Math.round(extentHeight / xResolution);\n      }\n      if (targetWidth !== imageWidth || targetHeight !== imageHeight) {\n        const context = createCanvasContext2D(targetWidth, targetHeight);\n        if (!this.getInterpolate()) {\n          context.imageSmoothingEnabled = false;\n        }\n        const canvas = context.canvas;\n        context.drawImage(\n          image,\n          0,\n          0,\n          imageWidth,\n          imageHeight,\n          0,\n          0,\n          canvas.width,\n          canvas.height\n        );\n        this.image_.setImage(canvas);\n      }\n    }\n    super.handleImageChange(evt);\n  }\n}\n\nexport default Static;\n","/**\n * @module ol/source/wms\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_VERSION = '1.3.0';\n\n/**\n * @api\n * @typedef {'carmentaserver' | 'geoserver' | 'mapserver' | 'qgis'} ServerType\n * Set the server type to use implementation-specific parameters beyond the WMS specification.\n *  - `'carmentaserver'`: HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n *  - `'geoserver'`: HiDPI support for [GeoServer](https://geoserver.org/)\n *  - `'mapserver'`: HiDPI support for [MapServer](https://mapserver.org/)\n *  - `'qgis'`: HiDPI support for [QGIS](https://qgis.org/)\n */\n","/**\n * @module ol/source/ImageWMS\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageWrapper from '../Image.js';\nimport {DEFAULT_VERSION} from './wms.js';\nimport {appendParams} from '../uri.js';\nimport {assert} from '../asserts.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {ceil, floor, round} from '../math.js';\nimport {compareVersions} from '../string.js';\nimport {\n  containsExtent,\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n} from '../extent.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {get as getProjection, transform} from '../proj.js';\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 4;\n\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nconst GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} [url] WMS service URL.\n */\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageWMS extends ImageSource {\n  /**\n   * @param {Options} [options] ImageWMS options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D(1, 1);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = Object.assign({}, options.params);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n    this.updateV13_();\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      resolution = calculateSourceResolution(\n        sourceProjectionObj,\n        projectionObj,\n        coordinate,\n        resolution\n      );\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const extent = getForViewAndSize(\n      coordinate,\n      resolution,\n      0,\n      GETFEATUREINFO_IMAGE_SIZE\n    );\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    Object.assign(baseParams, this.params_, params);\n\n    const x = floor((coordinate[0] - extent[0]) / resolution, DECIMALS);\n    const y = floor((extent[3] - coordinate[1]) / resolution, DECIMALS);\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      extent,\n      GETFEATUREINFO_IMAGE_SIZE,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    Object.assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.url_), baseParams);\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const imageResolution = resolution / pixelRatio;\n\n    const center = getCenter(extent);\n    const viewWidth = ceil(getWidth(extent) / imageResolution, DECIMALS);\n    const viewHeight = ceil(getHeight(extent) / imageResolution, DECIMALS);\n    const viewExtent = getForViewAndSize(center, imageResolution, 0, [\n      viewWidth,\n      viewHeight,\n    ]);\n    const requestWidth = ceil(\n      (this.ratio_ * getWidth(extent)) / imageResolution,\n      DECIMALS\n    );\n    const requestHeight = ceil(\n      (this.ratio_ * getHeight(extent)) / imageResolution,\n      DECIMALS\n    );\n    const requestExtent = getForViewAndSize(center, imageResolution, 0, [\n      requestWidth,\n      requestHeight,\n    ]);\n\n    const image = this.image_;\n    if (\n      image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)\n    ) {\n      return image;\n    }\n\n    const params = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n    };\n    Object.assign(params, this.params_);\n\n    this.imageSize_[0] = round(\n      getWidth(requestExtent) / imageResolution,\n      DECIMALS\n    );\n    this.imageSize_[1] = round(\n      getHeight(requestExtent) / imageResolution,\n      DECIMALS\n    );\n\n    const url = this.getRequestUrl_(\n      requestExtent,\n      this.imageSize_,\n      pixelRatio,\n      projection,\n      params\n    );\n\n    this.image_ = new ImageWrapper(\n      requestExtent,\n      resolution,\n      pixelRatio,\n      url,\n      this.crossOrigin_,\n      this.imageLoadFunction_,\n      this.context_\n    );\n\n    this.renderedRevision_ = this.getRevision();\n\n    this.image_.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this)\n    );\n\n    return this.image_;\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  getRequestUrl_(extent, size, pixelRatio, projection, params) {\n    assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case 'geoserver':\n          const dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case 'mapserver':\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case 'carmentaserver':\n        case 'qgis':\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default: // Unknown `serverType` configured\n          assert(false, 8);\n          break;\n      }\n    }\n\n    params['WIDTH'] = size[0];\n    params['HEIGHT'] = size[1];\n\n    const axisOrientation = projection.getAxisOrientation();\n    let bbox;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      bbox = [extent[1], extent[0], extent[3], extent[2]];\n    } else {\n      bbox = extent;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    return appendParams(/** @type {string} */ (this.url_), params);\n  }\n\n  /**\n   * Return the URL used for this WMS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.updateV13_();\n    this.image_ = null;\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n}\n\nexport default ImageWMS;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return this.image_ ? this.image_.getImage() : null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection)\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image_ = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image_ = null;\n          }\n        }\n      } else {\n        this.image_ = null;\n      }\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image_.getExtent();\n    const img = this.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth)\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight)\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scale =\n      (pixelRatio * imageResolution) / (viewResolution * imagePixelRatio);\n\n    const extent = frameState.extent;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.context;\n    const canvas = context.canvas;\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = this.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scale,\n      scale,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolution,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolution\n    );\n\n    this.renderedResolution = (imageResolution * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      let previousAlpha;\n      if (opacity !== 1) {\n        previousAlpha = context.globalAlpha;\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.globalAlpha = previousAlpha;\n      }\n    }\n    this.postRender(context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/source/Raster\n */\nimport Disposable from '../Disposable.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport ImageLayer from '../layer/Image.js';\nimport ImageSource from './Image.js';\nimport Source from './Source.js';\nimport TileLayer from '../layer/Tile.js';\nimport TileQueue from '../TileQueue.js';\nimport TileSource from './Tile.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {create as createTransform} from '../transform.js';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport {getUid} from '../util.js';\n\nlet hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet context;\n\n/**\n * @param {Uint8ClampedArray} data Image data.\n * @param {number} width Number of columns.\n * @param {number} height Number of rows.\n * @return {ImageData} Image data.\n */\nexport function newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  }\n\n  if (!context) {\n    context = document.createElement('canvas').getContext('2d');\n  }\n  const imageData = context.createImageData(width, height);\n  imageData.data.set(data);\n  return imageData;\n}\n\n/**\n * @typedef {Object} MinionData\n * @property {Array<ArrayBuffer>} buffers Array of buffers.\n * @property {Object} meta Operation metadata.\n * @property {boolean} imageOps The operation is an image operation.\n * @property {number} width The width of the image.\n * @property {number} height The height of the image.\n */\n\n/* istanbul ignore next */\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(MinionData):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  let workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    }\n    return {data: data, width: width, height: height};\n  }\n\n  return function (data) {\n    // bracket notation for minification support\n    const buffers = data['buffers'];\n    const meta = data['meta'];\n    const imageOps = data['imageOps'];\n    const width = data['width'];\n    const height = data['height'];\n\n    const numBuffers = buffers.length;\n    const numBytes = buffers[0].byteLength;\n\n    if (imageOps) {\n      const images = new Array(numBuffers);\n      for (let b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n          new Uint8ClampedArray(buffers[b]),\n          width,\n          height\n        );\n      }\n      const output = operation(images, meta).data;\n      return output.buffer;\n    }\n\n    const output = new Uint8ClampedArray(numBytes);\n    const arrays = new Array(numBuffers);\n    const pixels = new Array(numBuffers);\n    for (let b = 0; b < numBuffers; ++b) {\n      arrays[b] = new Uint8ClampedArray(buffers[b]);\n      pixels[b] = [0, 0, 0, 0];\n    }\n    for (let i = 0; i < numBytes; i += 4) {\n      for (let j = 0; j < numBuffers; ++j) {\n        const array = arrays[j];\n        pixels[j][0] = array[i];\n        pixels[j][1] = array[i + 1];\n        pixels[j][2] = array[i + 2];\n        pixels[j][3] = array[i + 3];\n      }\n      const pixel = operation(pixels, meta);\n      output[i] = pixel[0];\n      output[i + 1] = pixel[1];\n      output[i + 2] = pixel[2];\n      output[i + 3] = pixel[3];\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {ProcessorOptions} config Processor options.\n * @param {function(MessageEvent): void} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  const lib = Object.keys(config.lib || {}).map(function (name) {\n    return 'const ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  const lines = lib.concat([\n    'const __minion__ = (' + createMinion.toString() + ')(',\n    config.operation.toString(),\n    ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  const buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});',\n  ]);\n\n  const worker = new Worker(\n    typeof Blob === 'undefined'\n      ? 'data:text/javascript;base64,' +\n        Buffer.from(lines.join('\\n'), 'binary').toString('base64')\n      : URL.createObjectURL(new Blob(lines, {type: 'text/javascript'}))\n  );\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * @typedef {Object} FauxMessageEvent\n * @property {Object} data Message data.\n */\n\n/**\n * Create a faux worker for running operations.\n * @param {ProcessorOptions} config Configuration.\n * @param {function(FauxMessageEvent): void} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  const minion = createMinion(config.operation);\n  let terminated = false;\n  return {\n    postMessage: function (data) {\n      setTimeout(function () {\n        if (terminated) {\n          return;\n        }\n        onMessage({data: {buffer: minion(data), meta: data['meta']}});\n      }, 0);\n    },\n    terminate: function () {\n      terminated = true;\n    },\n  };\n}\n\n/**\n * @typedef {function(Error, ImageData, (Object|Array<Object>)): void} JobCallback\n */\n\n/**\n * @typedef {Object} Job\n * @property {Object} meta Job metadata.\n * @property {Array<ImageData>} inputs Array of input data.\n * @property {JobCallback} callback Called when the job is complete.\n */\n\n/**\n * @typedef {Object} ProcessorOptions\n * @property {number} threads Number of workers to spawn.\n * @property {Operation} operation The operation.\n * @property {Object<string, Function>} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} queue The number of queued jobs to allow.\n * @property {boolean} [imageOps=false] Pass all the image data to the operation instead of a single pixel.\n */\n\n/**\n * @classdesc\n * A processor runs pixel or image operations in workers.\n */\nexport class Processor extends Disposable {\n  /**\n   * @param {ProcessorOptions} config Configuration.\n   */\n  constructor(config) {\n    super();\n\n    this._imageOps = !!config.imageOps;\n    let threads;\n    if (config.threads === 0) {\n      threads = 0;\n    } else if (this._imageOps) {\n      threads = 1;\n    } else {\n      threads = config.threads || 1;\n    }\n\n    /**\n     * @type {Array<Worker>}\n     */\n    const workers = new Array(threads);\n    if (threads) {\n      for (let i = 0; i < threads; ++i) {\n        workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n      }\n    } else {\n      workers[0] = createFauxWorker(\n        config,\n        this._onWorkerMessage.bind(this, 0)\n      );\n    }\n    this._workers = workers;\n\n    /**\n     * @type {Array<Job>}\n     * @private\n     */\n    this._queue = [];\n\n    this._maxQueueLength = config.queue || Infinity;\n    this._running = 0;\n\n    /**\n     * @type {Object<number, any>}\n     * @private\n     */\n    this._dataLookup = {};\n\n    /**\n     * @type {Job}\n     * @private\n     */\n    this._job = null;\n  }\n\n  /**\n   * Run operation on input data.\n   * @param {Array<ImageData>} inputs Array of image data.\n   * @param {Object} meta A user data object.  This is passed to all operations\n   *     and must be serializable.\n   * @param {function(Error, ImageData, Object): void} callback Called when work\n   *     completes.  The first argument is any error.  The second is the ImageData\n   *     generated by operations.  The third is the user data object.\n   */\n  process(inputs, meta, callback) {\n    this._enqueue({\n      inputs: inputs,\n      meta: meta,\n      callback: callback,\n    });\n    this._dispatch();\n  }\n\n  /**\n   * Add a job to the queue.\n   * @param {Job} job The job.\n   */\n  _enqueue(job) {\n    this._queue.push(job);\n    while (this._queue.length > this._maxQueueLength) {\n      this._queue.shift().callback(null, null);\n    }\n  }\n\n  /**\n   * Dispatch a job.\n   */\n  _dispatch() {\n    if (this._running || this._queue.length === 0) {\n      return;\n    }\n\n    const job = this._queue.shift();\n    this._job = job;\n    const width = job.inputs[0].width;\n    const height = job.inputs[0].height;\n    const buffers = job.inputs.map(function (input) {\n      return input.data.buffer;\n    });\n    const threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage(\n        {\n          buffers: buffers,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        buffers\n      );\n      return;\n    }\n\n    const length = job.inputs[0].data.length;\n    const segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (let i = 0; i < threads; ++i) {\n      const offset = i * segmentLength;\n      const slices = [];\n      for (let j = 0, jj = buffers.length; j < jj; ++j) {\n        slices.push(buffers[j].slice(offset, offset + segmentLength));\n      }\n      this._workers[i].postMessage(\n        {\n          buffers: slices,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        slices\n      );\n    }\n  }\n\n  /**\n   * Handle messages from the worker.\n   * @param {number} index The worker index.\n   * @param {MessageEvent} event The message event.\n   */\n  _onWorkerMessage(index, event) {\n    if (this.disposed) {\n      return;\n    }\n    this._dataLookup[index] = event.data;\n    --this._running;\n    if (this._running === 0) {\n      this._resolveJob();\n    }\n  }\n\n  /**\n   * Resolve a job.  If there are no more worker threads, the processor callback\n   * will be called.\n   */\n  _resolveJob() {\n    const job = this._job;\n    const threads = this._workers.length;\n    let data, meta;\n    if (threads === 1) {\n      data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n      meta = this._dataLookup[0]['meta'];\n    } else {\n      const length = job.inputs[0].data.length;\n      data = new Uint8ClampedArray(length);\n      meta = new Array(threads);\n      const segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (let i = 0; i < threads; ++i) {\n        const buffer = this._dataLookup[i]['buffer'];\n        const offset = i * segmentLength;\n        data.set(new Uint8ClampedArray(buffer), offset);\n        meta[i] = this._dataLookup[i]['meta'];\n      }\n    }\n    this._job = null;\n    this._dataLookup = {};\n    job.callback(\n      null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height),\n      meta\n    );\n    this._dispatch();\n  }\n\n  /**\n   * Terminate all workers associated with the processor.\n   */\n  disposeInternal() {\n    for (let i = 0; i < this._workers.length; ++i) {\n      this._workers[i].terminate();\n    }\n    this._workers.length = 0;\n  }\n}\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData)\n * and should return a single\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData).\n * The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n\n/**\n * @enum {string}\n */\nconst RasterEventType = {\n  /**\n   * Triggered before operations are run.  Listeners will receive an event object with\n   * a `data` property that can be used to make data available to operations.\n   * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.  Listeners will receive an event object with\n   * a `data` property.  If more than one thread is used, `data` will be an array of\n   * objects.  If a single thread is used, `data` will be a single object.\n   * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations',\n};\n\n/**\n * @typedef {'pixel' | 'image'} RasterOperationType\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n */\n\n/**\n * @typedef {import(\"./Image.js\").ImageSourceEventTypes|'beforeoperations'|'afteroperations'} RasterSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster~RasterSource} instances are instances of this\n * type.\n */\nexport class RasterSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Object|Array<Object>} data An object made available to operations.  For \"afteroperations\" evenets\n   * this will be an array of objects if more than one thread is used.\n   */\n  constructor(type, frameState, data) {\n    super(type);\n\n    /**\n     * The raster extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n * @property {Array<number>|null} [resolutions] Resolutions. If specified, raster operations will only\n * be run at the given resolutions.  By default, the resolutions of the first source with resolutions\n * specified will be used, if any. Set to `null` to use any view resolution instead.\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Image.js\").ImageSourceEventTypes, import(\"./Image.js\").ImageSourceEvent, Return> &\n *   import(\"../Observable\").OnSignature<RasterSourceEventTypes, RasterSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |RasterSourceEventTypes, Return>} RasterSourceOnSignature\n */\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nclass RasterSource extends ImageSource {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      projection: null,\n    });\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {RasterSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Processor}\n     */\n    this.processor_ = null;\n\n    /**\n     * @private\n     * @type {RasterOperationType}\n     */\n    this.operationType_ =\n      options.operationType !== undefined ? options.operationType : 'pixel';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array<import(\"../layer/Layer.js\").default>}\n     */\n    this.layers_ = createLayers(options.sources);\n\n    const changed = this.changed.bind(this);\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      this.layers_[i].addEventListener(EventType.CHANGE, changed);\n    }\n\n    /** @type {boolean} */\n    this.useResolutions_ = options.resolutions !== null;\n\n    /**\n     * @private\n     * @type {import(\"../TileQueue.js\").default}\n     */\n    this.tileQueue_ = new TileQueue(function () {\n      return 1;\n    }, this.changed.bind(this));\n\n    /**\n     * The most recently requested frame state.\n     * @type {import(\"../Map.js\").FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {import(\"../ImageCanvas.js\").default}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      declutterTree: null,\n      extent: null,\n      index: 0,\n      layerIndex: 0,\n      layerStatesArray: getLayerStatesArray(this.layers_),\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {import(\"../View.js\").State} */ ({\n        rotation: 0,\n      }),\n      viewHints: [],\n      wantedTiles: {},\n      mapId: getUid(this),\n      renderTargets: {},\n    };\n\n    this.setAttributions(function (frameState) {\n      const attributions = [];\n      for (\n        let index = 0, iMax = options.sources.length;\n        index < iMax;\n        ++index\n      ) {\n        const sourceOrLayer = options.sources[index];\n        const source =\n          sourceOrLayer instanceof Source\n            ? sourceOrLayer\n            : sourceOrLayer.getSource();\n        if (!source) {\n          continue;\n        }\n        const attributionGetter = source.getAttributions();\n        if (typeof attributionGetter === 'function') {\n          const sourceAttribution = attributionGetter(frameState);\n          attributions.push.apply(attributions, sourceAttribution);\n        }\n      }\n      return attributions.length !== 0 ? attributions : null;\n    });\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n  }\n\n  /**\n   * Set the operation.\n   * @param {Operation} operation New operation.\n   * @param {Object} [lib] Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  setOperation(operation, lib) {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n\n    this.processor_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === 'image',\n      queue: 1,\n      lib: lib,\n      threads: this.threads_,\n    });\n    this.changed();\n  }\n\n  /**\n   * Update the stored frame state.\n   * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n   * @return {import(\"../Map.js\").FrameState} The updated frame state.\n   * @private\n   */\n  updateFrameState_(extent, resolution, projection) {\n    const frameState = /** @type {import(\"../Map.js\").FrameState} */ (\n      Object.assign({}, this.frameState_)\n    );\n\n    frameState.viewState = /** @type {import(\"../View.js\").State} */ (\n      Object.assign({}, frameState.viewState)\n    );\n\n    const center = getCenter(extent);\n\n    frameState.size[0] = Math.ceil(getWidth(extent) / resolution);\n    frameState.size[1] = Math.ceil(getHeight(extent) / resolution);\n    frameState.extent = [\n      center[0] - (frameState.size[0] * resolution) / 2,\n      center[1] - (frameState.size[1] * resolution) / 2,\n      center[0] + (frameState.size[0] * resolution) / 2,\n      center[1] + (frameState.size[1] * resolution) / 2,\n    ];\n    frameState.time = Date.now();\n\n    const viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  }\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  allSourcesReady_() {\n    let ready = true;\n    let source;\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      source = this.layers_[i].getSource();\n      if (!source || source.getState() !== 'ready') {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n    const frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      const renderedResolution = this.renderedImageCanvas_.getResolution();\n      const renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (\n        resolution !== renderedResolution ||\n        !equals(frameState.extent, renderedExtent)\n      ) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (\n      !this.renderedImageCanvas_ ||\n      this.getRevision() !== this.renderedRevision_\n    ) {\n      this.processSources_();\n    }\n\n    frameState.tileQueue.loadMoreTiles(16, 16);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  }\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  processSources_() {\n    const frameState = this.requestedFrameState_;\n    const len = this.layers_.length;\n    const imageDatas = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      frameState.layerIndex = i;\n      frameState.renderTargets = {};\n      const imageData = getImageData(this.layers_[i], frameState);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    const data = {};\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data)\n    );\n    this.processor_.process(\n      imageDatas,\n      data,\n      this.onWorkerComplete_.bind(this, frameState)\n    );\n  }\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object|Array<Object>} data The user data (or an array if more than one thread).\n   * @private\n   */\n  onWorkerComplete_(frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    if (\n      resolution !== this.requestedFrameState_.viewState.resolution ||\n      !equals(extent, this.requestedFrameState_.extent)\n    ) {\n      return;\n    }\n\n    let context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      const width = Math.round(getWidth(extent) / resolution);\n      const height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(\n        extent,\n        resolution,\n        1,\n        context.canvas\n      );\n    }\n    context.putImageData(output, 0, 0);\n\n    this.changed();\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data)\n    );\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    if (!this.useResolutions_) {\n      return null;\n    }\n    let resolutions = super.getResolutions();\n    if (!resolutions) {\n      for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n        const source = this.layers_[i].getSource();\n        resolutions = source.getResolutions(projection);\n        if (resolutions) {\n          break;\n        }\n      }\n    }\n    return resolutions;\n  }\n\n  disposeInternal() {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n    super.disposeInternal();\n  }\n}\n\n/**\n * Clean up and unregister the worker.\n * @function\n * @api\n */\nRasterSource.prototype.dispose;\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nlet sharedContext = null;\n\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState) {\n  const renderer = layer.getRenderer();\n  if (!renderer) {\n    throw new Error('Unsupported layer type: ' + layer);\n  }\n\n  if (!renderer.prepareFrame(frameState)) {\n    return null;\n  }\n  const width = frameState.size[0];\n  const height = frameState.size[1];\n  if (width === 0 || height === 0) {\n    return null;\n  }\n  const container = renderer.renderFrame(frameState, null);\n  let element;\n  if (container instanceof HTMLCanvasElement) {\n    element = container;\n  } else {\n    if (container) {\n      element = container.firstElementChild;\n    }\n    if (!(element instanceof HTMLCanvasElement)) {\n      throw new Error('Unsupported rendered element: ' + element);\n    }\n    if (element.width === width && element.height === height) {\n      const context = element.getContext('2d');\n      return context.getImageData(0, 0, width, height);\n    }\n  }\n\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height, undefined, {\n      willReadFrequently: true,\n    });\n  } else {\n    const canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height, undefined, {\n        willReadFrequently: true,\n      });\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  sharedContext.drawImage(element, 0, 0, width, height);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n  return layers.map(function (layer) {\n    return layer.getLayerState();\n  });\n}\n\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n  const len = sources.length;\n  const layers = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    layers[i] = createLayer(sources[i]);\n  }\n  return layers;\n}\n\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n  // @type {import(\"../layer/Layer.js\").default}\n  let layer;\n  if (layerOrSource instanceof Source) {\n    if (layerOrSource instanceof TileSource) {\n      layer = new TileLayer({source: layerOrSource});\n    } else if (layerOrSource instanceof ImageSource) {\n      layer = new ImageLayer({source: layerOrSource});\n    }\n  } else {\n    layer = layerOrSource;\n  }\n  return layer;\n}\n\nexport default RasterSource;\n","/**\n * @module ol/source/Stamen\n */\n\nimport XYZ from './XYZ.js';\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from './OSM.js';\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst ATTRIBUTIONS = [\n  'Map tiles by <a href=\"https://stamen.com/\" target=\"_blank\">Stamen Design</a>, ' +\n    'under <a href=\"https://creativecommons.org/licenses/by/3.0/\" target=\"_blank\">CC BY' +\n    ' 3.0</a>.',\n  OSM_ATTRIBUTION,\n];\n\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nconst LayerConfig = {\n  'terrain': {\n    extension: 'png',\n    opaque: true,\n  },\n  'terrain-background': {\n    extension: 'png',\n    opaque: true,\n  },\n  'terrain-labels': {\n    extension: 'png',\n    opaque: false,\n  },\n  'terrain-lines': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-background': {\n    extension: 'png',\n    opaque: true,\n  },\n  'toner': {\n    extension: 'png',\n    opaque: true,\n  },\n  'toner-hybrid': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-labels': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-lines': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-lite': {\n    extension: 'png',\n    opaque: true,\n  },\n  'watercolor': {\n    extension: 'jpg',\n    opaque: true,\n  },\n};\n\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number}>}\n */\nconst ProviderConfig = {\n  'terrain': {\n    minZoom: 0,\n    maxZoom: 18,\n  },\n  'toner': {\n    minZoom: 0,\n    maxZoom: 20,\n  },\n  'watercolor': {\n    minZoom: 0,\n    maxZoom: 18,\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {string} layer Layer name.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n * @api\n */\nclass Stamen extends XYZ {\n  /**\n   * @param {Options} options Stamen options.\n   */\n  constructor(options) {\n    const i = options.layer.indexOf('-');\n    const provider = i == -1 ? options.layer : options.layer.slice(0, i);\n    const providerConfig = ProviderConfig[provider];\n\n    const layerConfig = LayerConfig[options.layer];\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' +\n          options.layer +\n          '/{z}/{x}/{y}.' +\n          layerConfig.extension;\n\n    super({\n      attributions: ATTRIBUTIONS,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: options.interpolate,\n      maxZoom:\n        options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n      minZoom:\n        options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n      opaque: layerConfig.opaque,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default Stamen;\n","/**\n * @module ol/source/TileArcGISRest\n */\n\nimport TileImage from './TileImage.js';\nimport {appendParams} from '../uri.js';\nimport {createEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\n * default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`,\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\n * override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * The projection code must contain a numeric end portion separated by :\n * or the entire code must form a valid ArcGIS SpatialReference definition.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\n * The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\n * url should include /MapServer or /ImageServer.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\n * transition, pass `transition: 0`.\n * @property {Array<string>} [urls] ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\n * Service supports multiple urls for export requests.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from ArcGIS Rest services. Map and Image\n * Services are supported.\n *\n * For cached ArcGIS services, better performance is available using the\n * {@link module:ol/source/XYZ~XYZ} data source.\n * @api\n */\nclass TileArcGISRest extends TileImage {\n  /**\n   * @param {Options} [options] Tile ArcGIS Rest options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(\n    tileCoord,\n    tileSize,\n    tileExtent,\n    pixelRatio,\n    projection,\n    params\n  ) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    // ArcGIS Server only wants the numeric portion of the projection ID.\n    // (if there is no numeric portion the entire projection code must\n    // form a valid ArcGIS SpatialReference definition).\n    const srid = projection\n      .getCode()\n      .split(/:(?=\\d+$)/)\n      .pop();\n\n    params['SIZE'] = tileSize[0] + ',' + tileSize[1];\n    params['BBOX'] = tileExtent.join(',');\n    params['BBOXSR'] = srid;\n    params['IMAGESR'] = srid;\n    params['DPI'] = Math.round(\n      params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio\n    );\n\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n\n    const modifiedUrl = url\n      .replace(/MapServer\\/?$/, 'MapServer/export')\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n    return appendParams(modifiedUrl, params);\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.hidpi_ ? pixelRatio : 1;\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && !this.hidpi_) {\n      pixelRatio = 1;\n    }\n\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    // Apply default params and override with user specified values.\n    const baseParams = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true,\n    };\n    Object.assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams\n    );\n  }\n}\n\nexport default TileArcGISRest;\n","/**\n * @module ol/source/TileDebug\n */\n\nimport XYZ from './XYZ.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Optional projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Set to `1` when debugging `VectorTile` sources with a default configuration.\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n * @property {string} [template='z:{z} x:{x} y:{y}'] Template for labeling the tiles.\n * Should include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n */\n\n/**\n * @classdesc\n * A pseudo tile source, which does not fetch tiles from a server, but renders\n * a grid outline for the tile grid/projection along with the coordinates for\n * each tile. See examples/canvas-tiles for an example.\n * @api\n */\nclass TileDebug extends XYZ {\n  /**\n   * @param {Options} [options] Debug tile options.\n   */\n  constructor(options) {\n    /**\n     * @type {Options}\n     */\n    options = options || {};\n\n    super({\n      opaque: false,\n      projection: options.projection,\n      tileGrid: options.tileGrid,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      zDirection: options.zDirection,\n      url: options.template || 'z:{z} x:{x} y:{y}',\n      tileLoadFunction: (tile, text) => {\n        const z = tile.getTileCoord()[0];\n        const tileSize = toSize(this.tileGrid.getTileSize(z));\n        const context = createCanvasContext2D(tileSize[0], tileSize[1]);\n\n        context.strokeStyle = 'grey';\n        context.strokeRect(0.5, 0.5, tileSize[0] + 0.5, tileSize[1] + 0.5);\n\n        context.fillStyle = 'grey';\n        context.strokeStyle = 'white';\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.font = '24px sans-serif';\n        context.lineWidth = 4;\n        context.strokeText(text, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n        context.fillText(text, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n\n        /** @type {import(\"../ImageTile.js\").default} */ (tile).setImage(\n          context.canvas\n        );\n      },\n    });\n  }\n}\n\nexport default TileDebug;\n","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See https://mapbox.com/developers/api/.\n */\n\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {assert} from '../asserts.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Note: `tileSize` and other non-standard TileJSON properties are currently ignored.\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nclass TileJSON extends TileImage {\n  /**\n   * @param {Options} options TileJSON options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @type {Config}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     * @private\n     */\n    this.tileSize_ = options.tileSize;\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this)\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {Config} */ (JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * @return {Config} The tilejson object.\n   * @api\n   */\n  getTileJSON() {\n    return this.tileJSON_;\n  }\n\n  /**\n   * @protected\n   * @param {Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n      tileSize: this.tileSize_,\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n\n    if (tileJSON['attribution'] && !this.getAttributions()) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState('ready');\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n}\n\nexport default TileJSON;\n","/**\n * @module ol/source/TileWMS\n */\n\nimport TileImage from './TileImage.js';\nimport {DEFAULT_VERSION} from './wms.js';\nimport {appendParams} from '../uri.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {buffer as bufferSize, scale as scaleSize, toSize} from '../size.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {compareVersions} from '../string.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport {modulo} from '../math.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See https://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nclass TileWMS extends TileImage {\n  /**\n   * @param {Options} [options] Tile WMS options.\n   */\n  constructor(options) {\n    options = options ? options : /** @type {Options} */ ({});\n\n    const params = Object.assign({}, options.params);\n\n    const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: !transparent,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projectionObj);\n    }\n\n    const z = tileGrid.getZForResolution(resolution, this.zDirection);\n    const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    let tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      tileResolution = calculateSourceResolution(\n        sourceProjectionObj,\n        projectionObj,\n        coordinate,\n        tileResolution\n      );\n      tileExtent = transformExtent(\n        tileExtent,\n        projectionObj,\n        sourceProjectionObj\n      );\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    Object.assign(baseParams, this.params_, params);\n\n    const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n    const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.urls[0] === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    Object.assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.urls[0]), baseParams);\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(\n    tileCoord,\n    tileSize,\n    tileExtent,\n    pixelRatio,\n    projection,\n    params\n  ) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    params['WIDTH'] = tileSize[0];\n    params['HEIGHT'] = tileSize[1];\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case 'geoserver':\n          const dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case 'mapserver':\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case 'carmentaserver':\n        case 'qgis':\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default: // Unknown `serverType` configured\n          assert(false, 52);\n          break;\n      }\n    }\n\n    const axisOrientation = projection.getAxisOrientation();\n    const bbox = tileExtent;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      let tmp;\n      tmp = tileExtent[0];\n      bbox[0] = tileExtent[1];\n      bbox[1] = tmp;\n      tmp = tileExtent[2];\n      bbox[2] = tileExtent[3];\n      bbox[3] = tmp;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n    return appendParams(url, params);\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return !this.hidpi_ || this.serverType_ === undefined ? 1 : pixelRatio;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n    };\n    Object.assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams\n    );\n  }\n}\n\nexport default TileWMS;\n","/**\n * @module ol/source/UTFGrid\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileSource from './Tile.js';\nimport TileState from '../TileState.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {assert} from '../asserts.js';\nimport {createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {listenOnce} from '../events.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @typedef {Object} UTFGridJSON\n * @property {Array<string>} grid The grid.\n * @property {Array<string>} keys The keys.\n * @property {Object<string, Object>} [data] Optional data.\n */\n\nexport class CustomTile extends Tile {\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {import(\"../extent.js\").Extent} extent Extent of the tile.\n   * @param {boolean} preemptive Load the tile when visible (before it's needed).\n   * @param {boolean} jsonp Load the tile as a script.\n   */\n  constructor(tileCoord, state, src, extent, preemptive, jsonp) {\n    super(tileCoord, state);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = preemptive;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.grid_ = null;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.keys_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Object>|undefined}\n     */\n    this.data_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = jsonp;\n  }\n\n  /**\n   * Get the image element for this tile.\n   * @return {HTMLImageElement} Image.\n   */\n  getImage() {\n    return null;\n  }\n\n  /**\n   * Synchronously returns data at given coordinate (if available).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {*} The data.\n   */\n  getData(coordinate) {\n    if (!this.grid_ || !this.keys_) {\n      return null;\n    }\n    const xRelative =\n      (coordinate[0] - this.extent_[0]) / (this.extent_[2] - this.extent_[0]);\n    const yRelative =\n      (coordinate[1] - this.extent_[1]) / (this.extent_[3] - this.extent_[1]);\n\n    const row = this.grid_[Math.floor((1 - yRelative) * this.grid_.length)];\n\n    if (typeof row !== 'string') {\n      return null;\n    }\n\n    let code = row.charCodeAt(Math.floor(xRelative * row.length));\n    if (code >= 93) {\n      code--;\n    }\n    if (code >= 35) {\n      code--;\n    }\n    code -= 32;\n\n    let data = null;\n    if (code in this.keys_) {\n      const id = this.keys_[code];\n      if (this.data_ && id in this.data_) {\n        data = this.data_[id];\n      } else {\n        data = id;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate (or `null` if not yet loaded).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(*): void} callback Callback.\n   * @param {boolean} [request] If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   */\n  forDataAtCoordinate(coordinate, callback, request) {\n    if (this.state == TileState.EMPTY && request === true) {\n      this.state = TileState.IDLE;\n      listenOnce(\n        this,\n        EventType.CHANGE,\n        function (e) {\n          callback(this.getData(coordinate));\n        },\n        this\n      );\n      this.loadInternal_();\n    } else {\n      if (request === true) {\n        setTimeout(() => {\n          callback(this.getData(coordinate));\n        }, 0);\n      } else {\n        callback(this.getData(coordinate));\n      }\n    }\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.src_;\n  }\n\n  /**\n   * @private\n   */\n  handleError_() {\n    this.state = TileState.ERROR;\n    this.changed();\n  }\n\n  /**\n   * @param {!UTFGridJSON} json UTFGrid data.\n   * @private\n   */\n  handleLoad_(json) {\n    this.grid_ = json['grid'];\n    this.keys_ = json['keys'];\n    this.data_ = json['data'];\n\n    this.state = TileState.LOADED;\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  loadInternal_() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      if (this.jsonp_) {\n        requestJSONP(\n          this.src_,\n          this.handleLoad_.bind(this),\n          this.handleError_.bind(this)\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', this.src_);\n        client.send();\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {!UTFGridJSON} */ (\n          JSON.parse(client.responseText)\n        );\n      } catch (err) {\n        this.handleError_();\n        return;\n      }\n      this.handleLoad_(response);\n    } else {\n      this.handleError_();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleError_();\n  }\n\n  /**\n   */\n  load() {\n    if (this.preemptive_) {\n      this.loadInternal_();\n    } else {\n      this.setState(TileState.EMPTY);\n    }\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [preemptive=true]\n * If `true` the UTFGrid source loads the tiles based on their \"visibility\".\n * This improves the speed of response, but increases traffic.\n * Note that if set to `false` (lazy loading), you need to pass `true` as\n * `request` to the `forDataAtCoordinateAndResolution` method otherwise no\n * data will ever be loaded.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {import(\"./TileJSON.js\").Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {string} [url] TileJSON endpoint that provides the configuration for this source.\n * Request will be made through JSONP. If not provided, `tileJSON` must be configured.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for UTFGrid interaction data loaded from TileJSON format.\n * @api\n */\nclass UTFGrid extends TileSource {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super({\n      projection: getProjection('EPSG:3857'),\n      state: 'loading',\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ =\n      options.preemptive !== undefined ? options.preemptive : true;\n\n    /**\n     * @private\n     * @type {!import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction_ = nullTileUrlFunction;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.template_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = options.jsonp || false;\n\n    if (options.url) {\n      if (this.jsonp_) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this)\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {import(\"./TileJSON.js\").Config} */ (\n          JSON.parse(client.responseText)\n        );\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * Return the template from TileJSON.\n   * @return {string|undefined} The template from TileJSON.\n   * @api\n   */\n  getTemplate() {\n    return this.template_;\n  }\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate and resolution (or `null` if not yet loaded or\n   * in case of an error).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {function(*): void} callback Callback.\n   * @param {boolean} [request] If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   * @api\n   */\n  forDataAtCoordinateAndResolution(coordinate, resolution, callback, request) {\n    if (this.tileGrid) {\n      const z = this.tileGrid.getZForResolution(resolution, this.zDirection);\n      const tileCoord = this.tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = /** @type {!CustomTile} */ (\n        this.getTile(\n          tileCoord[0],\n          tileCoord[1],\n          tileCoord[2],\n          1,\n          this.getProjection()\n        )\n      );\n      tile.forDataAtCoordinate(coordinate, callback, request);\n    } else {\n      if (request === true) {\n        setTimeout(function () {\n          callback(null);\n        }, 0);\n      } else {\n        callback(null);\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n\n  /**\n   * TODO: very similar to ol/source/TileJSON#handleTileJSONResponse\n   * @protected\n   * @param {import(\"./TileJSON.js\").Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n    });\n    this.tileGrid = tileGrid;\n\n    this.template_ = tileJSON['template'];\n\n    const grids = tileJSON['grids'];\n    if (!grids) {\n      this.setState('error');\n      return;\n    }\n\n    this.tileUrlFunction_ = createFromTemplates(grids, tileGrid);\n\n    if (tileJSON['attribution'] !== undefined) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n\n    this.setState('ready');\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!CustomTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return this.tileCache.get(tileCoordKey);\n    }\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = this.tileUrlFunction_(urlTileCoord, pixelRatio, projection);\n    const tile = new CustomTile(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.tileGrid.getTileCoordExtent(tileCoord),\n      this.preemptive_,\n      this.jsonp_\n    );\n    this.tileCache.set(tileCoordKey, tile);\n    return tile;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UTFGrid;\n","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport TileGrid from './TileGrid.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile~TileSource} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes,\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent} [extent] An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>} [matrixLimits] An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(\n  matrixSet,\n  extent,\n  matrixLimits\n) {\n  /** @type {!Array<number>} */\n  const resolutions = [];\n  /** @type {!Array<string>} */\n  const matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  const origins = [];\n  /** @type {!Array<number|import(\"../size.js\").Size>} */\n  const tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const sizes = [];\n\n  matrixLimits = matrixLimits !== undefined ? matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function (a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function (elt) {\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = matrixLimits.find(function (elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (!elt[identifierPropName].includes(':')) {\n          return (\n            matrixSet[identifierPropName] + ':' + elt[identifierPropName] ===\n            elt_ml[matrixIdsPropName]\n          );\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution =\n        (elt[scaleDenominatorPropName] * 0.28e-3) / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([\n          elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0],\n        ]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(\n        tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight]\n      );\n      sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes,\n  });\n}\n","/**\n * @module ol/source/WMTS\n */\n\nimport TileImage from './TileImage.js';\nimport {appendParams} from '../uri.js';\nimport {containsExtent} from '../extent.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {createFromTileUrlFunctions, expandUrl} from '../tileurlfunction.js';\nimport {equivalent, get as getProjection, transformExtent} from '../proj.js';\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @typedef {'KVP' | 'REST'} RequestEncoding\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {RequestEncoding} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nclass WMTS extends TileImage {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    // TODO: add support for TileMatrixLimits\n\n    const requestEncoding =\n      options.requestEncoding !== undefined ? options.requestEncoding : 'KVP';\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    const tileGrid = options.tileGrid;\n\n    let urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ =\n      options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {RequestEncoding}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      );\n    }\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @param {Array<string>} urls URLs.\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    this.setTileUrlFunction(\n      createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      ),\n      key\n    );\n  }\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  getDimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  getMatrixSet() {\n    return this.matrixSet_;\n  }\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {RequestEncoding} Request encoding.\n   * @api\n   */\n  getRequestEncoding() {\n    return this.requestEncoding_;\n  }\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  getVersion() {\n    return this.version_;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  getKeyForDimensions_() {\n    const res = this.urls ? this.urls.slice(0) : [];\n    for (const key in this.dimensions_) {\n      res.push(key + '-' + this.dimensions_[key]);\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  updateDimensions(dimensions) {\n    Object.assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  }\n\n  /**\n   * @param {string} template Template.\n   * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n   */\n  createFromWMTSTemplate(template) {\n    const requestEncoding = this.requestEncoding_;\n\n    // context property names are lower case to allow for a case insensitive\n    // replacement as some services use different naming conventions\n    const context = {\n      'layer': this.layer_,\n      'style': this.style_,\n      'tilematrixset': this.matrixSet_,\n    };\n\n    if (requestEncoding == 'KVP') {\n      Object.assign(context, {\n        'Service': 'WMTS',\n        'Request': 'GetTile',\n        'Version': this.version_,\n        'Format': this.format_,\n      });\n    }\n\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n\n    template =\n      requestEncoding == 'KVP'\n        ? appendParams(template, context)\n        : template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return p.toLowerCase() in context ? context[p.toLowerCase()] : m;\n          });\n\n    const tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (\n      this.tileGrid\n    );\n    const dimensions = this.dimensions_;\n\n    return (\n      /**\n       * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {import(\"../proj/Projection.js\").default} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        }\n        const localContext = {\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n          'TileCol': tileCoord[1],\n          'TileRow': tileCoord[2],\n        };\n        Object.assign(localContext, dimensions);\n        let url = template;\n        if (requestEncoding == 'KVP') {\n          url = appendParams(url, localContext);\n        } else {\n          url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return localContext[p];\n          });\n        }\n        return url;\n      }\n    );\n  }\n}\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {Options|null} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = layers.find(function (elt) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (!l) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        const tileMatrixSet = tileMatrixSets.find(function (el) {\n          return el['Identifier'] == elt['TileMatrixSet'];\n        });\n        const supportedCRS = tileMatrixSet['SupportedCRS'];\n        const proj1 = getProjection(supportedCRS);\n        const proj2 = getProjection(config['projection']);\n        if (proj1 && proj2) {\n          return equivalent(proj1, proj2);\n        }\n        return supportedCRS == config['projection'];\n      });\n    } else {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        return elt['TileMatrixSet'] == config['matrixSet'];\n      });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet =\n    /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits =\n    /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = l['Style'].findIndex(function (elt) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    }\n    return elt['isDefault'];\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function (elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = matrixSets.find(function (elt) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  let wrapX = false;\n  const switchXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  let matrix = matrixSetObj.TileMatrix[0];\n\n  // create default matrixLimit\n  let selectedMatrixLimit = {\n    MinTileCol: 0,\n    MinTileRow: 0,\n    // subtract one to end up at tile top left\n    MaxTileCol: matrix.MatrixWidth - 1,\n    MaxTileRow: matrix.MatrixHeight - 1,\n  };\n\n  //in case of matrix limits, use matrix limits to calculate extent\n  if (matrixLimits) {\n    selectedMatrixLimit = matrixLimits[matrixLimits.length - 1];\n    const m = matrixSetObj.TileMatrix.find(\n      (tileMatrixValue) =>\n        tileMatrixValue.Identifier === selectedMatrixLimit.TileMatrix ||\n        matrixSetObj.Identifier + ':' + tileMatrixValue.Identifier ===\n          selectedMatrixLimit.TileMatrix\n    );\n    if (m) {\n      matrix = m;\n    }\n  }\n\n  const resolution =\n    (matrix.ScaleDenominator * 0.00028) / projection.getMetersPerUnit(); // WMTS 1.0.0: standardized rendering pixel size\n  const origin = switchXY\n    ? [matrix.TopLeftCorner[1], matrix.TopLeftCorner[0]]\n    : matrix.TopLeftCorner;\n  const tileSpanX = matrix.TileWidth * resolution;\n  const tileSpanY = matrix.TileHeight * resolution;\n  let matrixSetExtent = matrixSetObj['BoundingBox'];\n  if (matrixSetExtent && switchXY) {\n    matrixSetExtent = [\n      matrixSetExtent[1],\n      matrixSetExtent[0],\n      matrixSetExtent[3],\n      matrixSetExtent[2],\n    ];\n  }\n  let extent = [\n    origin[0] + tileSpanX * selectedMatrixLimit.MinTileCol,\n    // add one to get proper bottom/right coordinate\n    origin[1] - tileSpanY * (1 + selectedMatrixLimit.MaxTileRow),\n    origin[0] + tileSpanX * (1 + selectedMatrixLimit.MaxTileCol),\n    origin[1] - tileSpanY * selectedMatrixLimit.MinTileRow,\n  ];\n\n  if (\n    matrixSetExtent !== undefined &&\n    !containsExtent(matrixSetExtent, extent)\n  ) {\n    const wgs84BoundingBox = l['WGS84BoundingBox'];\n    const wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    extent = matrixSetExtent;\n    if (wgs84BoundingBox) {\n      wrapX =\n        wgs84BoundingBox[0] === wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] === wgs84ProjectionExtent[2];\n    } else {\n      const wgs84MatrixSetExtent = transformExtent(\n        matrixSetExtent,\n        matrixSetObj['SupportedCRS'],\n        'EPSG:4326'\n      );\n      // Ignore slight deviation from the correct x limits\n      wrapX =\n        wgs84MatrixSetExtent[0] - 1e-10 <= wgs84ProjectionExtent[0] &&\n        wgs84MatrixSetExtent[2] + 1e-10 >= wgs84ProjectionExtent[2];\n    }\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(\n    matrixSetObj,\n    extent,\n    matrixLimits\n  );\n\n  /** @type {!Array<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if (\n    'OperationsMetadata' in wmtsCap &&\n    'GetTile' in wmtsCap['OperationsMetadata']\n  ) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = gets[i]['Constraint'].find(function (element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === 'KVP') {\n          if (encodings.includes('KVP')) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = 'KVP';\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = 'REST';\n    l['ResourceURL'].forEach(function (element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin'],\n  };\n}\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml.makeChildAppender} or\n * {@link module:ol/xml.makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Element} node Node.\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        let array;\n        if (name in object) {\n          array = object[name];\n        } else {\n          array = [];\n          object[name] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        object[name] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, thisArg) {\n  return function (node, value, objectStack) {\n    nodeWriter.call(\n      thisArg !== undefined ? thisArg : this,\n      node,\n      value,\n      objectStack\n    );\n    const parent = /** @type {NodeStackItem} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml.serialize}. This can be used by the parent writer to have the\n * `nodeWriter` called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, thisArg) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `keys` passed to\n * {@link module:ol/xml.serialize} or {@link module:ol/xml.pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [fixedNodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [fixedNamespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(fixedNodeName, fixedNamespaceURI) {\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [newNodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, newNodeName) {\n      const context = /** @type {NodeStackItem} */ (\n        objectStack[objectStack.length - 1]\n      );\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = newNodeName;\n      }\n\n      const namespaceURI =\n        fixedNamespaceURI !== undefined ? fixedNamespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, structureNS) {\n  structureNS = structureNS !== undefined ? structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, thisArg) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(thisArg, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, thisArg) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, thisArg);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg\n) {\n  const length = (keys !== undefined ? keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        thisArg !== undefined ? thisArg : this,\n        value,\n        objectStack,\n        keys !== undefined ? keys[i] : undefined\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          thisArg,\n          node,\n          value,\n          objectStack\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg\n) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, keys, thisArg);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n","/**\n * @module ol/vec/mat4\n */\n\n/**\n * @return {Array<number>} \"4x4 matrix representing a 3D identity transform.\"\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} \"2D transformation matrix as flattened 4x4 matrix.\"\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not.\n * The provided `imgSize` needs to match the actual size of the image.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    // `width` or `height` cannot be provided together with `scale`\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      69\n    );\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n\n    /**\n     * @type {number|undefined}\n     */\n    this.height_ = options.height;\n\n    /**\n     * Recalculate the scale if width or height were given.\n     */\n    if (this.width_ !== undefined || this.height_ !== undefined) {\n      const image = this.getImage(1);\n      const setScale = () => {\n        this.updateScaleFromWidthAndHeight(this.width_, this.height_);\n      };\n      if (image.width > 0) {\n        this.updateScaleFromWidthAndHeight(this.width_, this.height_);\n      } else {\n        image.addEventListener('load', setScale);\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale = this.getScale();\n    scale = Array.isArray(scale) ? scale.slice() : scale;\n    // if either width or height are defined, do not pass scale.\n    if (this.width_ !== undefined || this.height_ !== undefined) {\n      scale = undefined;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale: scale,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n      width: this.width_,\n      height: this.height_,\n    });\n  }\n\n  /**\n   * Set the scale of the Icon by calculating it from given width and height and the\n   * width and height of the image.\n   *\n   * @private\n   * @param {number} width The width.\n   * @param {number} height The height.\n   */\n  updateScaleFromWidthAndHeight(width, height) {\n    const image = this.getImage(1);\n    if (width !== undefined && height !== undefined) {\n      super.setScale([width / image.width, height / image.height]);\n    } else if (width !== undefined) {\n      super.setScale([width / image.width, width / image.width]);\n    } else if (height !== undefined) {\n      super.setScale([height / image.height, height / image.height]);\n    } else {\n      super.setScale([1, 1]);\n    }\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels).\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Get the height of the icon (in pixels).\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    return this.height_;\n  }\n\n  /**\n   * Set the width of the icon in pixels.\n   *\n   * @param {number} width The width to set.\n   */\n  setWidth(width) {\n    this.width_ = width;\n    this.updateScaleFromWidthAndHeight(width, this.height_);\n  }\n\n  /**\n   * Set the height of the icon in pixels.\n   *\n   * @param {number} height The height to set.\n   */\n  setHeight(height) {\n    this.height_ = height;\n    this.updateScaleFromWidthAndHeight(this.width_, height);\n  }\n\n  /**\n   * Set the scale and updates the width and height correspondingly.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @override\n   * @api\n   */\n  setScale(scale) {\n    super.setScale(scale);\n    const image = this.getImage(1);\n    if (image) {\n      const widthScale = Array.isArray(scale) ? scale[0] : scale;\n      if (widthScale !== undefined) {\n        this.width_ = widthScale * image.width;\n      }\n      const heightScale = Array.isArray(scale) ? scale[1] : scale;\n      if (heightScale !== undefined) {\n        this.height_ = heightScale * image.height;\n      }\n    }\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval in pixels. When set, the text will be repeated at this interval. Only available\n * when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/webgl/PaletteTexture\n */\n\nclass PaletteTexture {\n  /**\n   * @param {string} name The name of the texture.\n   * @param {Uint8Array} data The texture data.\n   */\n  constructor(name, data) {\n    this.name = name;\n    this.data = data;\n\n    /**\n     * @type {WebGLTexture}\n     * @private\n     */\n    this.texture_ = null;\n  }\n\n  /**\n   * @param {WebGLRenderingContext} gl Rendering context.\n   * @return {WebGLTexture} The texture.\n   */\n  getTexture(gl) {\n    if (!this.texture_) {\n      const texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,\n        gl.RGBA,\n        this.data.length / 4,\n        1,\n        0,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data\n      );\n      this.texture_ = texture;\n    }\n    return this.texture_;\n  }\n}\n\nexport default PaletteTexture;\n","/**\n * @module ol/webgl\n */\n\nimport {SAFARI_BUG_237906} from './has.js';\n\n/**\n * Constants taken from goog.webgl\n */\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STREAM_DRAW = 0x88e0;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STATIC_DRAW = 0x88e4;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const DYNAMIC_DRAW = 0x88e8;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n/** end of goog.webgl constants\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object} [attributes] Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, attributes) {\n  attributes = Object.assign(\n    {\n      preserveDrawingBuffer: true,\n      antialias: SAFARI_BUG_237906 ? false : true, // https://bugs.webkit.org/show_bug.cgi?id=237906\n    },\n    attributes\n  );\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n/**\n * @type {Array<string>}\n */\nlet supportedExtensions;\n\n/**\n * @return {Array<string>} List of supported WebGL extensions.\n */\nexport function getSupportedExtensions() {\n  if (!supportedExtensions) {\n    const canvas = document.createElement('canvas');\n    const gl = getContext(canvas);\n    if (gl) {\n      supportedExtensions = gl.getSupportedExtensions();\n    }\n  }\n  return supportedExtensions;\n}\n","/**\n * @module ol/webgl/Buffer\n */\nimport {\n  ARRAY_BUFFER,\n  DYNAMIC_DRAW,\n  ELEMENT_ARRAY_BUFFER,\n  STATIC_DRAW,\n  STREAM_DRAW,\n} from '../webgl.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Used to describe the intended usage for the data: `STATIC_DRAW`, `STREAM_DRAW`\n * or `DYNAMIC_DRAW`.\n * @enum {number}\n */\nexport const BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW,\n};\n\n/**\n * @classdesc\n * Object used to store an array of data as well as usage information for that data.\n * Stores typed arrays internally, either Float32Array or Uint16/32Array depending on\n * the buffer type (ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER) and available extensions.\n *\n * To populate the array, you can either use:\n * * A size using `#ofSize(buffer)`\n * * An `ArrayBuffer` object using `#fromArrayBuffer(buffer)`\n * * A plain array using `#fromArray(array)`\n *\n * Note:\n * See the documentation of [WebGLRenderingContext.bufferData](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData)\n * for more info on buffer usage.\n * @api\n */\nclass WebGLArrayBuffer {\n  /**\n   * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n   * @param {number} [usage] Intended usage, either `STATIC_DRAW`, `STREAM_DRAW` or `DYNAMIC_DRAW`.\n   * Default is `DYNAMIC_DRAW`.\n   */\n  constructor(type, usage) {\n    /**\n     * @private\n     * @type {Float32Array|Uint32Array}\n     */\n    this.array = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.type = type;\n\n    assert(type === ARRAY_BUFFER || type === ELEMENT_ARRAY_BUFFER, 62);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.usage = usage !== undefined ? usage : BufferUsage.STATIC_DRAW;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size (all values will be zeroes).\n   * @param {number} size Array size\n   */\n  ofSize(size) {\n    this.array = new (getArrayClassForType(this.type))(size);\n  }\n\n  /**\n   * Populates the buffer with an array of the given size.\n   * @param {Array<number>} array Numerical array\n   */\n  fromArray(array) {\n    this.array = getArrayClassForType(this.type).from(array);\n  }\n\n  /**\n   * Populates the buffer with a raw binary array buffer.\n   * @param {ArrayBuffer} buffer Raw binary buffer to populate the array with. Note that this buffer must have been\n   * initialized for the same typed array class.\n   */\n  fromArrayBuffer(buffer) {\n    this.array = new (getArrayClassForType(this.type))(buffer);\n  }\n\n  /**\n   * @return {number} Buffer type.\n   */\n  getType() {\n    return this.type;\n  }\n\n  /**\n   * Will return null if the buffer was not initialized\n   * @return {Float32Array|Uint32Array} Array.\n   */\n  getArray() {\n    return this.array;\n  }\n\n  /**\n   * @return {number} Usage.\n   */\n  getUsage() {\n    return this.usage;\n  }\n\n  /**\n   * Will return 0 if the buffer is not initialized\n   * @return {number} Array size\n   */\n  getSize() {\n    return this.array ? this.array.length : 0;\n  }\n}\n\n/**\n * Returns a typed array constructor based on the given buffer type\n * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n * @return {Float32ArrayConstructor|Uint32ArrayConstructor} The typed array class to use for this buffer.\n */\nexport function getArrayClassForType(type) {\n  switch (type) {\n    case ARRAY_BUFFER:\n      return Float32Array;\n    case ELEMENT_ARRAY_BUFFER:\n      return Uint32Array;\n    default:\n      return Float32Array;\n  }\n}\n\nexport default WebGLArrayBuffer;\n","/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored',\n};\n","/**\n * @module ol/webgl/PostProcessingPass\n */\n\nimport {getUid} from '../util.js';\n\nconst DEFAULT_VERTEX_SHADER = `\n  precision mediump float;\n  \n  attribute vec2 a_position;\n  varying vec2 v_texCoord;\n  varying vec2 v_screenCoord;\n  \n  uniform vec2 u_screenSize;\n   \n  void main() {\n    v_texCoord = a_position * 0.5 + 0.5;\n    v_screenCoord = v_texCoord * u_screenSize;\n    gl_Position = vec4(a_position, 0.0, 1.0);\n  }\n`;\n\nconst DEFAULT_FRAGMENT_SHADER = `\n  precision mediump float;\n   \n  uniform sampler2D u_image;\n  uniform float u_opacity;\n   \n  varying vec2 v_texCoord;\n   \n  void main() {\n    gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n  }\n`;\n\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {WebGLUniformLocation} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\n * premultiplied.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *   uniform float u_opacity;\n *\n *   varying vec2 v_texCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n *   }\n *   ```\n *\n * @api\n */\nclass WebGLPostProcessingPass {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    this.gl_ = options.webGlContext;\n    const gl = this.gl_;\n\n    this.scaleRatio_ = options.scaleRatio || 1;\n\n    this.renderTargetTexture_ = gl.createTexture();\n    this.renderTargetTextureSize_ = null;\n\n    this.frameBuffer_ = gl.createFramebuffer();\n\n    // compile the program for the frame buffer\n    // TODO: make compilation errors show up\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(\n      vertexShader,\n      options.vertexShader || DEFAULT_VERTEX_SHADER\n    );\n    gl.compileShader(vertexShader);\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(\n      fragmentShader,\n      options.fragmentShader || DEFAULT_FRAGMENT_SHADER\n    );\n    gl.compileShader(fragmentShader);\n    this.renderTargetProgram_ = gl.createProgram();\n    gl.attachShader(this.renderTargetProgram_, vertexShader);\n    gl.attachShader(this.renderTargetProgram_, fragmentShader);\n    gl.linkProgram(this.renderTargetProgram_);\n\n    // bind the vertices buffer for the frame buffer\n    this.renderTargetVerticesBuffer_ = gl.createBuffer();\n    const verticesArray = [-1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1];\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(verticesArray),\n      gl.STATIC_DRAW\n    );\n\n    this.renderTargetAttribLocation_ = gl.getAttribLocation(\n      this.renderTargetProgram_,\n      'a_position'\n    );\n    this.renderTargetUniformLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_screenSize'\n    );\n    this.renderTargetOpacityLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_opacity'\n    );\n    this.renderTargetTextureLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_image'\n    );\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    options.uniforms &&\n      Object.keys(options.uniforms).forEach((name) => {\n        this.uniforms_.push({\n          value: options.uniforms[name],\n          location: gl.getUniformLocation(this.renderTargetProgram_, name),\n        });\n      });\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   * @api\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Initialize the render target texture of the post process, make sure it is at the\n   * right size and bind it as a render target for the next draw calls.\n   * The last step to be initialized will be the one where the primitives are rendered.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @api\n   */\n  init(frameState) {\n    const gl = this.getGL();\n    const textureSize = [\n      gl.drawingBufferWidth * this.scaleRatio_,\n      gl.drawingBufferHeight * this.scaleRatio_,\n    ];\n\n    // rendering goes to my buffer\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n    gl.viewport(0, 0, textureSize[0], textureSize[1]);\n\n    // if size has changed: adjust canvas & render target texture\n    if (\n      !this.renderTargetTextureSize_ ||\n      this.renderTargetTextureSize_[0] !== textureSize[0] ||\n      this.renderTargetTextureSize_[1] !== textureSize[1]\n    ) {\n      this.renderTargetTextureSize_ = textureSize;\n\n      // create a new texture\n      const level = 0;\n      const internalFormat = gl.RGBA;\n      const border = 0;\n      const format = gl.RGBA;\n      const type = gl.UNSIGNED_BYTE;\n      const data = null;\n      gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        textureSize[0],\n        textureSize[1],\n        border,\n        format,\n        type,\n        data\n      );\n\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n      // bind the texture to the framebuffer\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        this.renderTargetTexture_,\n        0\n      );\n    }\n  }\n\n  /**\n   * Render to the next postprocessing pass (or to the canvas if final pass).\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   * @api\n   */\n  apply(frameState, nextPass, preCompose, postCompose) {\n    const gl = this.getGL();\n    const size = frameState.size;\n\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER,\n      nextPass ? nextPass.getFrameBuffer() : null\n    );\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n\n    if (!nextPass) {\n      // clear the canvas if we are the first to render to it\n      // and preserveDrawingBuffer is true\n      const canvasId = getUid(gl.canvas);\n      if (!frameState.renderTargets[canvasId]) {\n        const attributes = gl.getContextAttributes();\n        if (attributes && attributes.preserveDrawingBuffer) {\n          gl.clearColor(0.0, 0.0, 0.0, 0.0);\n          gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n\n        frameState.renderTargets[canvasId] = true;\n      }\n    }\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n\n    gl.useProgram(this.renderTargetProgram_);\n    gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n    gl.vertexAttribPointer(\n      this.renderTargetAttribLocation_,\n      2,\n      gl.FLOAT,\n      false,\n      0,\n      0\n    );\n    gl.uniform2f(this.renderTargetUniformLocation_, size[0], size[1]);\n    gl.uniform1i(this.renderTargetTextureLocation_, 0);\n\n    const opacity = frameState.layerStatesArray[frameState.layerIndex].opacity;\n    gl.uniform1f(this.renderTargetOpacityLocation_, opacity);\n\n    this.applyUniforms(frameState);\n\n    if (preCompose) {\n      preCompose(gl, frameState);\n    }\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n    if (postCompose) {\n      postCompose(gl, frameState);\n    }\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer\n   * @api\n   */\n  getFrameBuffer() {\n    return this.frameBuffer_;\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 1;\n    this.uniforms_.forEach(function (uniform) {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.texture = gl.createTexture();\n        }\n        gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        if (value instanceof ImageData) {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            value.width,\n            value.height,\n            0,\n            gl.UNSIGNED_BYTE,\n            new Uint8Array(value.data)\n          );\n        } else {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value\n          );\n        }\n\n        // fill texture slots\n        gl.uniform1i(uniform.location, textureSlot++);\n      } else if (Array.isArray(value)) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(uniform.location, value[0], value[1]);\n            return;\n          case 3:\n            gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n            return;\n          case 4:\n            gl.uniform4f(\n              uniform.location,\n              value[0],\n              value[1],\n              value[2],\n              value[3]\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(uniform.location, value);\n      }\n    });\n  }\n}\n\nexport default WebGLPostProcessingPass;\n","/**\n * @module ol/webgl/Helper\n */\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport Disposable from '../Disposable.js';\nimport WebGLPostProcessingPass from './PostProcessingPass.js';\nimport {\n  FLOAT,\n  UNSIGNED_BYTE,\n  UNSIGNED_INT,\n  UNSIGNED_SHORT,\n  getContext,\n} from '../webgl.js';\nimport {clear} from '../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n} from '../transform.js';\nimport {create, fromTransform} from '../vec/mat4.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer Buffer.\n * @property {WebGLBuffer} webGlBuffer WebGlBuffer.\n */\n\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport const ShaderType = {\n  FRAGMENT_SHADER: 0x8b30,\n  VERTEX_SHADER: 0x8b31,\n};\n\n/**\n * Names of uniforms made available to all shaders.\n * Please note: changing these *will* break custom shaders!\n * @enum {string}\n */\nexport const DefaultUniform = {\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  OFFSET_SCALE_MATRIX: 'u_offsetScaleMatrix',\n  OFFSET_ROTATION_MATRIX: 'u_offsetRotateMatrix',\n  TIME: 'u_time',\n  ZOOM: 'u_zoom',\n  RESOLUTION: 'u_resolution',\n  SIZE_PX: 'u_sizePx',\n  PIXEL_RATIO: 'u_pixelRatio',\n};\n\n/**\n * Attribute types, either `UNSIGNED_BYTE`, `UNSIGNED_SHORT`, `UNSIGNED_INT` or `FLOAT`\n * Note: an attribute stored in a `Float32Array` should be of type `FLOAT`.\n * @enum {number}\n */\nexport const AttributeType = {\n  UNSIGNED_BYTE: UNSIGNED_BYTE,\n  UNSIGNED_SHORT: UNSIGNED_SHORT,\n  UNSIGNED_INT: UNSIGNED_INT,\n  FLOAT: FLOAT,\n};\n\n/**\n * Description of an attribute in a buffer\n * @typedef {Object} AttributeDescription\n * @property {string} name Attribute name to use in shaders\n * @property {number} size Number of components per attributes\n * @property {AttributeType} [type] Attribute type, i.e. number of bytes used to store the value. This is\n * determined by the class of typed array which the buffer uses (eg. `Float32Array` for a `FLOAT` attribute).\n * Default is `FLOAT`.\n */\n\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|import(\"../transform\").Transform} UniformLiteralValue\n */\n\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../Map.js\").FrameState):UniformLiteralValue} UniformValue\n */\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n * @property {string} [canvasCacheKey] The cache key for the canvas.\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue} [value] Value\n * @property {UniformValue} [prevValue] The previous value.\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @typedef {Object} CanvasCacheItem\n * @property {HTMLCanvasElement} canvas Canvas element.\n * @property {number} users The count of users of this canvas.\n */\n\n/**\n * @type {Object<string,CanvasCacheItem>}\n */\nconst canvasCache = {};\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {string} The shared cache key.\n */\nfunction getSharedCanvasCacheKey(key) {\n  return 'shared/' + key;\n}\n\nlet uniqueCanvasCacheKeyCount = 0;\n\n/**\n * @return {string} The unique cache key.\n */\nfunction getUniqueCanvasCacheKey() {\n  const key = 'unique/' + uniqueCanvasCacheKeyCount;\n  uniqueCanvasCacheKeyCount += 1;\n  return key;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {HTMLCanvasElement} The canvas.\n */\nfunction getCanvas(key) {\n  let cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    const canvas = document.createElement('canvas');\n    canvas.style.position = 'absolute';\n    canvas.style.left = '0';\n    cacheItem = {users: 0, canvas};\n    canvasCache[key] = cacheItem;\n  }\n\n  cacheItem.users += 1;\n  return cacheItem.canvas;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n */\nfunction releaseCanvas(key) {\n  const cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    return;\n  }\n\n  cacheItem.users -= 1;\n  if (cacheItem.users > 0) {\n    return;\n  }\n\n  const canvas = cacheItem.canvas;\n  const gl = getContext(canvas);\n  const extension = gl.getExtension('WEBGL_lose_context');\n  if (extension) {\n    extension.loseContext();\n  }\n\n  delete canvasCache[key];\n}\n\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls; note how a frameState is required to set up a program,\n *   // as several default uniforms are computed from it (projection matrix, zoom level, etc.)\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   const program = this.context.getProgram(fragmentShader, vertexShader);\n *   helper.useProgram(this.program, frameState);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   helper.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   const verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   const indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   helper.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   helper.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Specify the attribute names with\n *   {@link module:ol/webgl/Helper~WebGLHelper#enableAttributes} (see code snippet below).\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   helper.enableAttributes([\n *     {\n *        name: 'a_position',\n *        size: 2\n *     },\n *     {\n *       name: 'a_offset',\n *       size: 2\n *     },\n *     {\n *       name: 'a_texCoord',\n *       size: 2\n *     }\n *   ])\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   helper.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   helper.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   helper.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n */\nclass WebGLHelper extends Disposable {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n    options = options || {};\n\n    /** @private */\n    this.boundHandleWebGLContextLost_ = this.handleWebGLContextLost.bind(this);\n\n    /** @private */\n    this.boundHandleWebGLContextRestored_ =\n      this.handleWebGLContextRestored.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.canvasCacheKey_ = options.canvasCacheKey\n      ? getSharedCanvasCacheKey(options.canvasCacheKey)\n      : getUniqueCanvasCacheKey();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = getCanvas(this.canvasCacheKey_);\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = getContext(this.canvas_);\n\n    /**\n     * @private\n     * @type {!Object<string, BufferCacheEntry>}\n     */\n    this.bufferCache_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object>}\n     */\n    this.extensionCache_ = {};\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.currentProgram_ = null;\n\n    this.canvas_.addEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    this.canvas_.addEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetRotateMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetScaleMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @private\n     * @type {Object<string, WebGLUniformLocation>}\n     */\n    this.uniformLocations_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.attribLocations_ = {};\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass.\n     * If the uniform is a texture, the WebGL Texture object will be stored here.\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    if (options.uniforms) {\n      this.setUniforms(options.uniforms);\n    }\n\n    const gl = this.getGL();\n\n    /**\n     * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n     * options. If no post process was given, a default one is used (so as not to have to make an exception to\n     * the frame buffer logic).\n     * @type {Array<WebGLPostProcessingPass>}\n     * @private\n     */\n    this.postProcessPasses_ = options.postProcesses\n      ? options.postProcesses.map(function (options) {\n          return new WebGLPostProcessingPass({\n            webGlContext: gl,\n            scaleRatio: options.scaleRatio,\n            vertexShader: options.vertexShader,\n            fragmentShader: options.fragmentShader,\n            uniforms: options.uniforms,\n          });\n        })\n      : [new WebGLPostProcessingPass({webGlContext: gl})];\n\n    /**\n     * @type {string|null}\n     * @private\n     */\n    this.shaderCompileErrors_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.startTime_ = Date.now();\n  }\n\n  /**\n   * @param {Object<string, UniformValue>} uniforms Uniform definitions.\n   */\n  setUniforms(uniforms) {\n    this.uniforms_ = [];\n    for (const name in uniforms) {\n      this.uniforms_.push({\n        name: name,\n        value: uniforms[name],\n      });\n    }\n    this.uniformLocations_ = {};\n  }\n\n  /**\n   * @param {string} canvasCacheKey The canvas cache key.\n   * @return {boolean} The provided key matches the one this helper was constructed with.\n   */\n  canvasCacheKeyMatches(canvasCacheKey) {\n    return this.canvasCacheKey_ === getSharedCanvasCacheKey(canvasCacheKey);\n  }\n\n  /**\n   * Get a WebGL extension.  If the extension is not supported, null is returned.\n   * Extensions are cached after they are enabled for the first time.\n   * @param {string} name The extension name.\n   * @return {Object|null} The extension or null if not supported.\n   */\n  getExtension(name) {\n    if (name in this.extensionCache_) {\n      return this.extensionCache_[name];\n    }\n    const extension = this.gl_.getExtension(name);\n    this.extensionCache_[name] = extension;\n    return extension;\n  }\n\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  bindBuffer(buffer) {\n    const gl = this.getGL();\n    const bufferKey = getUid(buffer);\n    let bufferCache = this.bufferCache_[bufferKey];\n    if (!bufferCache) {\n      const webGlBuffer = gl.createBuffer();\n      bufferCache = {\n        buffer: buffer,\n        webGlBuffer: webGlBuffer,\n      };\n      this.bufferCache_[bufferKey] = bufferCache;\n    }\n    gl.bindBuffer(buffer.getType(), bufferCache.webGlBuffer);\n  }\n\n  /**\n   * Update the data contained in the buffer array; this is required for the\n   * new data to be rendered\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  flushBufferData(buffer) {\n    const gl = this.getGL();\n    this.bindBuffer(buffer);\n    gl.bufferData(buffer.getType(), buffer.getArray(), buffer.getUsage());\n  }\n\n  /**\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\n   */\n  deleteBuffer(buf) {\n    const gl = this.getGL();\n    const bufferKey = getUid(buf);\n    const bufferCacheEntry = this.bufferCache_[bufferKey];\n    if (bufferCacheEntry && !gl.isContextLost()) {\n      gl.deleteBuffer(bufferCacheEntry.webGlBuffer);\n    }\n    delete this.bufferCache_[bufferKey];\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.canvas_.removeEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    this.canvas_.removeEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n\n    releaseCanvas(this.canvasCacheKey_);\n\n    delete this.gl_;\n    delete this.canvas_;\n  }\n\n  /**\n   * Clear the buffer & set the viewport to draw.\n   * Post process passes will be initialized here, the first one being bound as a render target for\n   * subsequent draw calls.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   */\n  prepareDraw(frameState, disableAlphaBlend) {\n    const gl = this.getGL();\n    const canvas = this.getCanvas();\n    const size = frameState.size;\n    const pixelRatio = frameState.pixelRatio;\n\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n\n    // loop backwards in post processes list\n    for (let i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n      this.postProcessPasses_[i].init(frameState);\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n  }\n\n  /**\n   * Clear the render target & bind it for future draw operations.\n   * This is similar to `prepareDraw`, only post processes will not be applied.\n   * Note: the whole viewport will be drawn to the render target, regardless of its size.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {import(\"./RenderTarget.js\").default} renderTarget Render target to draw to\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   */\n  prepareDrawToRenderTarget(frameState, renderTarget, disableAlphaBlend) {\n    const gl = this.getGL();\n    const size = renderTarget.getSize();\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget.getFramebuffer());\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.bindTexture(gl.TEXTURE_2D, renderTarget.getTexture());\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n  }\n\n  /**\n   * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   */\n  drawElements(start, end) {\n    const gl = this.getGL();\n    this.getExtension('OES_element_index_uint');\n\n    const elementType = gl.UNSIGNED_INT;\n    const elementSize = 4;\n\n    const numItems = end - start;\n    const offsetInBytes = start * elementSize;\n    gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n  }\n\n  /**\n   * Apply the successive post process passes which will eventually render to the actual canvas.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   */\n  finalizeDraw(frameState, preCompose, postCompose) {\n    // apply post processes using the next one as target\n    for (let i = 0, ii = this.postProcessPasses_.length; i < ii; i++) {\n      if (i === ii - 1) {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          null,\n          preCompose,\n          postCompose\n        );\n      } else {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          this.postProcessPasses_[i + 1]\n        );\n      }\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getCanvas() {\n    return this.canvas_;\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyFrameState(frameState) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n    scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n\n    const offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n    if (rotation !== 0) {\n      rotateTransform(offsetRotateMatrix, -rotation);\n    }\n\n    this.setUniformMatrixValue(\n      DefaultUniform.OFFSET_SCALE_MATRIX,\n      fromTransform(this.tmpMat4_, offsetScaleMatrix)\n    );\n    this.setUniformMatrixValue(\n      DefaultUniform.OFFSET_ROTATION_MATRIX,\n      fromTransform(this.tmpMat4_, offsetRotateMatrix)\n    );\n\n    this.setUniformFloatValue(\n      DefaultUniform.TIME,\n      (Date.now() - this.startTime_) * 0.001\n    );\n    this.setUniformFloatValue(DefaultUniform.ZOOM, frameState.viewState.zoom);\n    this.setUniformFloatValue(\n      DefaultUniform.RESOLUTION,\n      frameState.viewState.resolution\n    );\n    this.setUniformFloatValue(DefaultUniform.PIXEL_RATIO, pixelRatio);\n    this.setUniformFloatVec2(DefaultUniform.SIZE_PX, [size[0], size[1]]);\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 0;\n    this.uniforms_.forEach((uniform) => {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (\n        value instanceof HTMLCanvasElement ||\n        value instanceof HTMLImageElement ||\n        value instanceof ImageData\n      ) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.prevValue = undefined;\n          uniform.texture = gl.createTexture();\n        }\n        gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        const imageReady =\n          !(value instanceof HTMLImageElement) ||\n          /** @type {HTMLImageElement} */ (value).complete;\n        if (imageReady && uniform.prevValue !== value) {\n          uniform.prevValue = value;\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value\n          );\n        }\n\n        // fill texture slots by increasing index\n        gl.uniform1i(this.getUniformLocation(uniform.name), textureSlot++);\n      } else if (Array.isArray(value) && value.length === 6) {\n        this.setUniformMatrixValue(\n          uniform.name,\n          fromTransform(this.tmpMat4_, value)\n        );\n      } else if (Array.isArray(value) && value.length <= 4) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1]\n            );\n            return;\n          case 3:\n            gl.uniform3f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n              value[2]\n            );\n            return;\n          case 4:\n            gl.uniform4f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n              value[2],\n              value[3]\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(this.getUniformLocation(uniform.name), value);\n      }\n    });\n  }\n\n  /**\n   * Set up a program for use. The program will be set as the current one. Then, the uniforms used\n   * in the program will be set based on the current frame state and the helper configuration.\n   * @param {WebGLProgram} program Program.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  useProgram(program, frameState) {\n    const gl = this.getGL();\n    gl.useProgram(program);\n    this.currentProgram_ = program;\n    this.uniformLocations_ = {};\n    this.attribLocations_ = {};\n    this.applyFrameState(frameState);\n    this.applyUniforms(frameState);\n  }\n\n  /**\n   * Will attempt to compile a vertex or fragment shader based on source\n   * On error, the shader will be returned but\n   * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n   * Use `gl.getShaderInfoLog(shader)` to have details\n   * @param {string} source Shader source\n   * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n   * @return {WebGLShader} Shader object\n   */\n  compileShader(source, type) {\n    const gl = this.getGL();\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    return shader;\n  }\n\n  /**\n   * Create a program for a vertex and fragment shader.  Throws if shader compilation fails.\n   * @param {string} fragmentShaderSource Fragment shader source.\n   * @param {string} vertexShaderSource Vertex shader source.\n   * @return {WebGLProgram} Program\n   */\n  getProgram(fragmentShaderSource, vertexShaderSource) {\n    const gl = this.getGL();\n\n    const fragmentShader = this.compileShader(\n      fragmentShaderSource,\n      gl.FRAGMENT_SHADER\n    );\n\n    const vertexShader = this.compileShader(\n      vertexShaderSource,\n      gl.VERTEX_SHADER\n    );\n\n    const program = gl.createProgram();\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      const message = `Fragment shader compilation failed: ${gl.getShaderInfoLog(\n        fragmentShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(fragmentShader);\n\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      const message = `Vertex shader compilation failed: ${gl.getShaderInfoLog(\n        vertexShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(vertexShader);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      const message = `GL program linking failed: ${gl.getShaderInfoLog(\n        vertexShader\n      )}`;\n      throw new Error(message);\n    }\n\n    return program;\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Uniform name\n   * @return {WebGLUniformLocation} uniformLocation\n   */\n  getUniformLocation(name) {\n    if (this.uniformLocations_[name] === undefined) {\n      this.uniformLocations_[name] = this.getGL().getUniformLocation(\n        this.currentProgram_,\n        name\n      );\n    }\n    return this.uniformLocations_[name];\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Attribute name\n   * @return {number} attribLocation\n   */\n  getAttributeLocation(name) {\n    if (this.attribLocations_[name] === undefined) {\n      this.attribLocations_[name] = this.getGL().getAttribLocation(\n        this.currentProgram_,\n        name\n      );\n    }\n    return this.attribLocations_[name];\n  }\n\n  /**\n   * Modifies the given transform to apply the rotation/translation/scaling of the given frame state.\n   * The resulting transform can be used to convert world space coordinates to view coordinates.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../transform\").Transform} transform Transform to update.\n   * @return {import(\"../transform\").Transform} The updated transform object.\n   */\n  makeProjectionTransform(frameState, transform) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const resolution = frameState.viewState.resolution;\n    const center = frameState.viewState.center;\n\n    resetTransform(transform);\n    composeTransform(\n      transform,\n      0,\n      0,\n      2 / (resolution * size[0]),\n      2 / (resolution * size[1]),\n      -rotation,\n      -center[0],\n      -center[1]\n    );\n    return transform;\n  }\n\n  /**\n   * Give a value for a standard float uniform\n   * @param {string} uniform Uniform name\n   * @param {number} value Value\n   */\n  setUniformFloatValue(uniform, value) {\n    this.getGL().uniform1f(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec2 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec2(uniform, value) {\n    this.getGL().uniform2fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec4(uniform, value) {\n    this.getGL().uniform4fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a standard matrix4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Matrix value\n   */\n  setUniformMatrixValue(uniform, value) {\n    this.getGL().uniformMatrix4fv(\n      this.getUniformLocation(uniform),\n      false,\n      value\n    );\n  }\n\n  /**\n   * Will set the currently bound buffer to an attribute of the shader program. Used by `#enableAttributes`\n   * internally.\n   * @param {string} attribName Attribute name\n   * @param {number} size Number of components per attributes\n   * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n   * @param {number} stride Stride in bytes (0 means attribs are packed)\n   * @param {number} offset Offset in bytes\n   * @private\n   */\n  enableAttributeArray_(attribName, size, type, stride, offset) {\n    const location = this.getAttributeLocation(attribName);\n    // the attribute has not been found in the shaders; do not enable it\n    if (location < 0) {\n      return;\n    }\n    this.getGL().enableVertexAttribArray(location);\n    this.getGL().vertexAttribPointer(\n      location,\n      size,\n      type,\n      false,\n      stride,\n      offset\n    );\n  }\n\n  /**\n   * Will enable the following attributes to be read from the currently bound buffer,\n   * i.e. tell the GPU where to read the different attributes in the buffer. An error in the\n   * size/type/order of attributes will most likely break the rendering and throw a WebGL exception.\n   * @param {Array<AttributeDescription>} attributes Ordered list of attributes to read from the buffer\n   */\n  enableAttributes(attributes) {\n    const stride = computeAttributesStride(attributes);\n    let offset = 0;\n    for (let i = 0; i < attributes.length; i++) {\n      const attr = attributes[i];\n      this.enableAttributeArray_(\n        attr.name,\n        attr.size,\n        attr.type || FLOAT,\n        stride,\n        offset\n      );\n      offset += attr.size * getByteSizeFromType(attr.type);\n    }\n  }\n\n  /**\n   * WebGL context was lost\n   * @private\n   */\n  handleWebGLContextLost() {\n    clear(this.bufferCache_);\n    this.currentProgram_ = null;\n  }\n\n  /**\n   * WebGL context was restored\n   * @private\n   */\n  handleWebGLContextRestored() {}\n\n  /**\n   * Will create or reuse a given webgl texture and apply the given size. If no image data\n   * specified, the texture will be empty, otherwise image data will be used and the `size`\n   * parameter will be ignored.\n   * Note: wrap parameters are set to clamp to edge, min filter is set to linear.\n   * @param {Array<number>} size Expected size of the texture\n   * @param {ImageData|HTMLImageElement|HTMLCanvasElement} [data] Image data/object to bind to the texture\n   * @param {WebGLTexture} [texture] Existing texture to reuse\n   * @return {WebGLTexture} The generated texture\n   */\n  createTexture(size, data, texture) {\n    const gl = this.getGL();\n    texture = texture || gl.createTexture();\n\n    // set params & size\n    const level = 0;\n    const internalFormat = gl.RGBA;\n    const border = 0;\n    const format = gl.RGBA;\n    const type = gl.UNSIGNED_BYTE;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    if (data) {\n      gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, format, type, data);\n    } else {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        size[0],\n        size[1],\n        border,\n        format,\n        type,\n        null\n      );\n    }\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    return texture;\n  }\n}\n\n/**\n * Compute a stride in bytes based on a list of attributes\n * @param {Array<AttributeDescription>} attributes Ordered list of attributes\n * @return {number} Stride, ie amount of values for each vertex in the vertex buffer\n */\nexport function computeAttributesStride(attributes) {\n  let stride = 0;\n  for (let i = 0; i < attributes.length; i++) {\n    const attr = attributes[i];\n    stride += attr.size * getByteSizeFromType(attr.type);\n  }\n  return stride;\n}\n\n/**\n * Computes the size in byte of an attribute type.\n * @param {AttributeType} type Attribute type\n * @return {number} The size in bytes\n */\nfunction getByteSizeFromType(type) {\n  switch (type) {\n    case AttributeType.UNSIGNED_BYTE:\n      return Uint8Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_SHORT:\n      return Uint16Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_INT:\n      return Uint32Array.BYTES_PER_ELEMENT;\n    case AttributeType.FLOAT:\n    default:\n      return Float32Array.BYTES_PER_ELEMENT;\n  }\n}\n\nexport default WebGLHelper;\n","/**\n * @module ol/renderer/webgl/Layer\n */\nimport LayerProperty from '../../layer/Property.js';\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLHelper from '../../webgl/Helper.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * Base WebGL renderer class.\n * Holds all logic related to data manipulation & some common rendering logic\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass WebGLLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(layer, options) {\n    super(layer);\n\n    options = options || {};\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform is only\n     * set before dispatching rendering events.\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @private\n     */\n    this.postProcesses_ = options.postProcesses;\n\n    /**\n     * @private\n     */\n    this.uniforms_ = options.uniforms;\n\n    /**\n     * @type {WebGLHelper}\n     * @protected\n     */\n    this.helper;\n\n    layer.addChangeListener(LayerProperty.MAP, this.removeHelper.bind(this));\n\n    this.dispatchPreComposeEvent = this.dispatchPreComposeEvent.bind(this);\n    this.dispatchPostComposeEvent = this.dispatchPostComposeEvent.bind(this);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPreComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.PRECOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.PRECOMPOSE,\n        undefined,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPostComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.POSTCOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.POSTCOMPOSE,\n        undefined,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * Reset options (only handles uniforms).\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    this.uniforms_ = options.uniforms;\n    if (this.helper) {\n      this.helper.setUniforms(this.uniforms_);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  removeHelper() {\n    if (this.helper) {\n      this.helper.dispose();\n      delete this.helper;\n    }\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    if (this.getLayer().getRenderSource()) {\n      let incrementGroup = true;\n      let groupNumber = -1;\n      let className;\n      for (let i = 0, ii = frameState.layerStatesArray.length; i < ii; i++) {\n        const layer = frameState.layerStatesArray[i].layer;\n        const renderer = layer.getRenderer();\n        if (!(renderer instanceof WebGLLayerRenderer)) {\n          incrementGroup = true;\n          continue;\n        }\n        const layerClassName = layer.getClassName();\n        if (incrementGroup || layerClassName !== className) {\n          groupNumber += 1;\n          incrementGroup = false;\n        }\n        className = layerClassName;\n        if (renderer === this) {\n          break;\n        }\n      }\n\n      const canvasCacheKey =\n        'map/' + frameState.mapId + '/group/' + groupNumber;\n\n      if (!this.helper || !this.helper.canvasCacheKeyMatches(canvasCacheKey)) {\n        this.removeHelper();\n\n        this.helper = new WebGLHelper({\n          postProcesses: this.postProcesses_,\n          uniforms: this.uniforms_,\n          canvasCacheKey: canvasCacheKey,\n        });\n\n        if (className) {\n          this.helper.getCanvas().className = className;\n        }\n\n        this.afterHelperCreated();\n      }\n    }\n\n    return this.prepareFrameInternal(frameState);\n  }\n\n  /**\n   * @protected\n   */\n  afterHelperCreated() {}\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @protected\n   */\n  prepareFrameInternal(frameState) {\n    return true;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.removeHelper();\n    super.disposeInternal();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      composeTransform(\n        this.inversePixelTransform_,\n        0,\n        0,\n        frameState.pixelRatio,\n        -frameState.pixelRatio,\n        0,\n        0,\n        -frameState.size[1]\n      );\n\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform_,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n}\n\nexport default WebGLLayerRenderer;\n","/**\n * @module ol/renderer/webgl/TileLayer\n */\nimport LRUCache from '../../structs/LRUCache.js';\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport TileTexture from '../../webgl/TileTexture.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport {AttributeType} from '../../webgl/Helper.js';\nimport {ELEMENT_ARRAY_BUFFER, STATIC_DRAW} from '../../webgl.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  boundingExtent,\n  containsCoordinate,\n  getIntersection,\n  isEmpty,\n} from '../../extent.js';\nimport {\n  create as createMat4,\n  fromTransform as mat4FromTransform,\n} from '../../vec/mat4.js';\nimport {\n  createOrUpdate as createTileCoord,\n  getKey as getTileCoordKey,\n} from '../../tilecoord.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\nexport const Uniforms = {\n  TILE_TEXTURE_ARRAY: 'u_tileTextures',\n  TILE_TRANSFORM: 'u_tileTransform',\n  TRANSITION_ALPHA: 'u_transitionAlpha',\n  DEPTH: 'u_depth',\n  TEXTURE_PIXEL_WIDTH: 'u_texturePixelWidth',\n  TEXTURE_PIXEL_HEIGHT: 'u_texturePixelHeight',\n  TEXTURE_RESOLUTION: 'u_textureResolution', // map units per texture pixel\n  TEXTURE_ORIGIN_X: 'u_textureOriginX', // map x coordinate of left edge of texture\n  TEXTURE_ORIGIN_Y: 'u_textureOriginY', // map y coordinate of top edge of texture\n  RENDER_EXTENT: 'u_renderExtent', // intersection of layer, source, and view extent\n  RESOLUTION: 'u_resolution',\n  ZOOM: 'u_zoom',\n};\n\nexport const Attributes = {\n  TEXTURE_COORD: 'a_textureCoord',\n};\n\n/**\n * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n */\nconst attributeDescriptions = [\n  {\n    name: Attributes.TEXTURE_COORD,\n    size: 2,\n    type: AttributeType.FLOAT,\n  },\n];\n\n/**\n * @type {Object<string, boolean>}\n */\nconst empty = {};\n\n/**\n * Transform a zoom level into a depth value ranging from -1 to 1.\n * @param {number} z A zoom level.\n * @return {number} A depth value.\n */\nfunction depthForZ(z) {\n  return 2 * (1 - 1 / (z + 1)) - 1;\n}\n\n/**\n * Add a tile texture to the lookup.\n * @param {Object<number, Array<import(\"../../webgl/TileTexture.js\").default>>} tileTexturesByZ Lookup of\n * tile textures by zoom level.\n * @param {import(\"../../webgl/TileTexture.js\").default} tileTexture A tile texture.\n * @param {number} z The zoom level.\n */\nfunction addTileTextureToLookup(tileTexturesByZ, tileTexture, z) {\n  if (!(z in tileTexturesByZ)) {\n    tileTexturesByZ[z] = [];\n  }\n  tileTexturesByZ[z].push(tileTexture);\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection)\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\nfunction getCacheKey(source, tileCoord) {\n  return `${source.getKey()},${getTileCoordKey(tileCoord)}`;\n}\n\n/**\n * @typedef {Object} Options\n * @property {string} vertexShader Vertex shader source.\n * @property {string} fragmentShader Fragment shader source.\n * @property {Object<string, import(\"../../webgl/Helper\").UniformValue>} [uniforms] Additional uniforms\n * made available to shaders.\n * @property {Array<import(\"../../webgl/PaletteTexture.js\").default>} [paletteTextures] Palette textures.\n * @property {number} [cacheSize=512] The texture cache size.\n */\n\n/**\n * @typedef {import(\"../../layer/WebGLTile.js\").default} LayerType\n */\n\n/**\n * @classdesc\n * WebGL renderer for tile layers.\n * @extends {WebGLLayerRenderer<LayerType>}\n * @api\n */\nclass WebGLTileLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} options Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer, {\n      uniforms: options.uniforms,\n    });\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * This transform converts texture coordinates to screen coordinates.\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.tileTransform_ = createTransform();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.tempMat4_ = createMat4();\n\n    /**\n     * @type {import(\"../../TileRange.js\").default}\n     * @private\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    /**\n     * @type {import(\"../../size.js\").Size}\n     * @private\n     */\n    this.tempSize_ = [0, 0];\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.program_;\n\n    /**\n     * @private\n     */\n    this.vertexShader_ = options.vertexShader;\n\n    /**\n     * @private\n     */\n    this.fragmentShader_ = options.fragmentShader;\n\n    /**\n     * Tiles are rendered as a quad with the following structure:\n     *\n     *  [P3]---------[P2]\n     *   |`           |\n     *   |  `     B   |\n     *   |    `       |\n     *   |      `     |\n     *   |   A    `   |\n     *   |          ` |\n     *  [P0]---------[P1]\n     *\n     * Triangle A: P0, P1, P3\n     * Triangle B: P1, P2, P3\n     *\n     * @private\n     */\n    this.indices_ = new WebGLArrayBuffer(ELEMENT_ARRAY_BUFFER, STATIC_DRAW);\n    this.indices_.fromArray([0, 1, 3, 1, 2, 3]);\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<import(\"../../webgl/TileTexture.js\").default>}\n     * @private\n     */\n    this.tileTextureCache_ = new LRUCache(cacheSize);\n\n    /**\n     * @type {Array<import(\"../../webgl/PaletteTexture.js\").default>}\n     * @private\n     */\n    this.paletteTextures_ = options.paletteTextures || [];\n\n    /**\n     * @private\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.projection_ = undefined;\n  }\n\n  /**\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    super.reset({\n      uniforms: options.uniforms,\n    });\n    this.vertexShader_ = options.vertexShader;\n    this.fragmentShader_ = options.fragmentShader;\n    this.paletteTextures_ = options.paletteTextures || [];\n\n    if (this.helper) {\n      this.program_ = this.helper.getProgram(\n        this.fragmentShader_,\n        this.vertexShader_\n      );\n    }\n  }\n\n  afterHelperCreated() {\n    this.program_ = this.helper.getProgram(\n      this.fragmentShader_,\n      this.vertexShader_\n    );\n\n    this.helper.flushBufferData(this.indices_);\n  }\n\n  /**\n   * @param {import(\"../../webgl/TileTexture\").TileType} tile Tile.\n   * @return {boolean} Tile is drawable.\n   * @private\n   */\n  isDrawableTile_(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrameInternal(frameState) {\n    if (!this.projection_) {\n      this.projection_ = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.projection_) {\n      this.clearCache();\n      this.projection_ = frameState.viewState.projection;\n    }\n\n    const layer = this.getLayer();\n    const source = layer.getRenderSource();\n    if (!source) {\n      return false;\n    }\n\n    if (isEmpty(getRenderExtent(frameState, frameState.extent))) {\n      return false;\n    }\n    return source.getState() === 'ready';\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {Object<number, Array<TileTexture>>} tileTexturesByZ The zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(frameState, extent, initialZ, tileTexturesByZ, preload) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const gutter = tileSource.getGutterForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileTextureCache = this.tileTextureCache_;\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0)\n        ),\n        tileSource.zDirection\n      )\n    );\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n          const cacheKey = getCacheKey(tileSource, tileCoord);\n\n          /** @type {TileTexture} */\n          let tileTexture;\n\n          /** @type {import(\"../../webgl/TileTexture\").TileType} */\n          let tile;\n\n          if (tileTextureCache.containsKey(cacheKey)) {\n            tileTexture = tileTextureCache.get(cacheKey);\n            tile = tileTexture.tile;\n          }\n          if (!tileTexture || tileTexture.tile.key !== tileSource.getKey()) {\n            tile = tileSource.getTile(\n              z,\n              x,\n              y,\n              frameState.pixelRatio,\n              viewState.projection\n            );\n            if (!tileTexture) {\n              tileTexture = new TileTexture({\n                tile: tile,\n                grid: tileGrid,\n                helper: this.helper,\n                gutter: gutter,\n              });\n              tileTextureCache.set(cacheKey, tileTexture);\n            } else {\n              if (this.isDrawableTile_(tile)) {\n                tileTexture.setTile(tile);\n              } else {\n                const interimTile =\n                  /** @type {import(\"../../webgl/TileTexture\").TileType} */ (\n                    tile.getInterimTile()\n                  );\n                tileTexture.setTile(interimTile);\n              }\n            }\n          }\n\n          addTileTextureToLookup(tileTexturesByZ, tileTexture, z);\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    this.frameState_ = frameState;\n    this.renderComplete = true;\n    const gl = this.helper.getGL();\n    this.preRender(gl, frameState);\n\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const gutter = tileSource.getGutterForProjection(viewState.projection);\n    const extent = getRenderExtent(frameState, frameState.extent);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection\n    );\n\n    /**\n     * @type {Object<number, Array<import(\"../../webgl/TileTexture.js\").default>>}\n     */\n    const tileTexturesByZ = {};\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(\n        frameState,\n        nextExtent,\n        targetZ,\n        tileTexturesByZ,\n        preload\n      );\n    }\n\n    this.enqueueTiles(frameState, extent, z, tileTexturesByZ, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          extent,\n          z - 1,\n          tileTexturesByZ,\n          preload - 1\n        );\n      }, 0);\n    }\n\n    /**\n     * A lookup of alpha values for tiles at the target rendering resolution\n     * for tiles that are in transition.  If a tile coord key is absent from\n     * this lookup, the tile should be rendered at alpha 1.\n     * @type {Object<string, number>}\n     */\n    const alphaLookup = {};\n\n    const uid = getUid(this);\n    const time = frameState.time;\n    let blend = false;\n\n    // look for cached tiles to use if a target tile is not ready\n    const tileTextures = tileTexturesByZ[z];\n    for (let i = 0, ii = tileTextures.length; i < ii; ++i) {\n      const tileTexture = tileTextures[i];\n      const tile = tileTexture.tile;\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tile.getState() === TileState.EMPTY\n      ) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileTexture.loaded) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n        blend = true;\n        const tileCoordKey = getTileCoordKey(tileCoord);\n        alphaLookup[tileCoordKey] = alpha;\n      }\n      this.renderComplete = false;\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tileTexturesByZ\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tileTexturesByZ\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    this.helper.useProgram(this.program_, frameState);\n    this.helper.prepareDraw(frameState, !blend);\n\n    const zs = Object.keys(tileTexturesByZ).map(Number).sort(ascending);\n\n    const centerX = viewState.center[0];\n    const centerY = viewState.center[1];\n\n    for (let j = 0, jj = zs.length; j < jj; ++j) {\n      const tileZ = zs[j];\n      const tileResolution = tileGrid.getResolution(tileZ);\n      const tileSize = toSize(tileGrid.getTileSize(tileZ), this.tempSize_);\n      const tileOrigin = tileGrid.getOrigin(tileZ);\n\n      const tileWidthWithGutter = tileSize[0] + 2 * gutter;\n      const tileHeightWithGutter = tileSize[1] + 2 * gutter;\n      const aspectRatio = tileWidthWithGutter / tileHeightWithGutter;\n\n      const centerI =\n        (centerX - tileOrigin[0]) / (tileSize[0] * tileResolution);\n      const centerJ =\n        (tileOrigin[1] - centerY) / (tileSize[1] * tileResolution);\n\n      const tileScale = viewState.resolution / tileResolution;\n\n      const depth = depthForZ(tileZ);\n      const tileTextures = tileTexturesByZ[tileZ];\n      for (let i = 0, ii = tileTextures.length; i < ii; ++i) {\n        const tileTexture = tileTextures[i];\n        if (!tileTexture.loaded) {\n          continue;\n        }\n        const tile = tileTexture.tile;\n        const tileCoord = tile.tileCoord;\n        const tileCoordKey = getTileCoordKey(tileCoord);\n\n        const tileCenterI = tileCoord[1];\n        const tileCenterJ = tileCoord[2];\n\n        resetTransform(this.tileTransform_);\n        scaleTransform(\n          this.tileTransform_,\n          2 / ((frameState.size[0] * tileScale) / tileWidthWithGutter),\n          -2 / ((frameState.size[1] * tileScale) / tileWidthWithGutter)\n        );\n        rotateTransform(this.tileTransform_, viewState.rotation);\n        scaleTransform(this.tileTransform_, 1, 1 / aspectRatio);\n        translateTransform(\n          this.tileTransform_,\n          (tileSize[0] * (tileCenterI - centerI) - gutter) /\n            tileWidthWithGutter,\n          (tileSize[1] * (tileCenterJ - centerJ) - gutter) /\n            tileHeightWithGutter\n        );\n\n        this.helper.setUniformMatrixValue(\n          Uniforms.TILE_TRANSFORM,\n          mat4FromTransform(this.tempMat4_, this.tileTransform_)\n        );\n\n        this.helper.bindBuffer(tileTexture.coords);\n        this.helper.bindBuffer(this.indices_);\n        this.helper.enableAttributes(attributeDescriptions);\n\n        let textureSlot = 0;\n        while (textureSlot < tileTexture.textures.length) {\n          const textureProperty = 'TEXTURE' + textureSlot;\n          const uniformName = `${Uniforms.TILE_TEXTURE_ARRAY}[${textureSlot}]`;\n          gl.activeTexture(gl[textureProperty]);\n          gl.bindTexture(gl.TEXTURE_2D, tileTexture.textures[textureSlot]);\n          gl.uniform1i(\n            this.helper.getUniformLocation(uniformName),\n            textureSlot\n          );\n          ++textureSlot;\n        }\n\n        for (\n          let paletteIndex = 0;\n          paletteIndex < this.paletteTextures_.length;\n          ++paletteIndex\n        ) {\n          const paletteTexture = this.paletteTextures_[paletteIndex];\n          gl.activeTexture(gl['TEXTURE' + textureSlot]);\n          const texture = paletteTexture.getTexture(gl);\n          gl.bindTexture(gl.TEXTURE_2D, texture);\n          gl.uniform1i(\n            this.helper.getUniformLocation(paletteTexture.name),\n            textureSlot\n          );\n          ++textureSlot;\n        }\n\n        const alpha =\n          tileCoordKey in alphaLookup ? alphaLookup[tileCoordKey] : 1;\n\n        if (alpha < 1) {\n          frameState.animate = true;\n        }\n\n        this.helper.setUniformFloatValue(Uniforms.TRANSITION_ALPHA, alpha);\n        this.helper.setUniformFloatValue(Uniforms.DEPTH, depth);\n        this.helper.setUniformFloatValue(\n          Uniforms.TEXTURE_PIXEL_WIDTH,\n          tileWidthWithGutter\n        );\n        this.helper.setUniformFloatValue(\n          Uniforms.TEXTURE_PIXEL_HEIGHT,\n          tileHeightWithGutter\n        );\n        this.helper.setUniformFloatValue(\n          Uniforms.TEXTURE_RESOLUTION,\n          tileResolution\n        );\n        this.helper.setUniformFloatValue(\n          Uniforms.TEXTURE_ORIGIN_X,\n          tileOrigin[0] +\n            tileCenterI * tileSize[0] * tileResolution -\n            gutter * tileResolution\n        );\n        this.helper.setUniformFloatValue(\n          Uniforms.TEXTURE_ORIGIN_Y,\n          tileOrigin[1] -\n            tileCenterJ * tileSize[1] * tileResolution +\n            gutter * tileResolution\n        );\n        let gutterExtent = extent;\n        if (gutter > 0) {\n          gutterExtent = tileGrid.getTileCoordExtent(tileCoord);\n          getIntersection(gutterExtent, extent, gutterExtent);\n        }\n        this.helper.setUniformFloatVec4(Uniforms.RENDER_EXTENT, gutterExtent);\n        this.helper.setUniformFloatValue(\n          Uniforms.RESOLUTION,\n          viewState.resolution\n        );\n        this.helper.setUniformFloatValue(Uniforms.ZOOM, viewState.zoom);\n\n        this.helper.drawElements(0, this.indices_.getSize());\n      }\n    }\n\n    this.helper.finalizeDraw(\n      frameState,\n      this.dispatchPreComposeEvent,\n      this.dispatchPostComposeEvent\n    );\n\n    const canvas = this.helper.getCanvas();\n\n    const tileTextureCache = this.tileTextureCache_;\n    while (tileTextureCache.canExpireCache()) {\n      const tileTexture = tileTextureCache.pop();\n      tileTexture.dispose();\n    }\n\n    // TODO: let the renderers manage their own cache instead of managing the source cache\n    /**\n     * Here we unconditionally expire the source cache since the renderer maintains\n     * its own cache.\n     * @param {import(\"../../Map.js\").default} map Map.\n     * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n     */\n    const postRenderFunction = function (map, frameState) {\n      tileSource.updateCacheSize(0.1, frameState.viewState.projection);\n      tileSource.expireCache(frameState.viewState.projection, empty);\n    };\n\n    frameState.postRenderFunctions.push(postRenderFunction);\n\n    this.postRender(gl, frameState);\n    return canvas;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView} Data at the pixel location.\n   */\n  getData(pixel) {\n    const gl = this.helper.getGL();\n    if (!gl) {\n      return null;\n    }\n\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const viewState = frameState.viewState;\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (\n        !containsCoordinate(\n          fromUserExtent(layerExtent, viewState.projection),\n          coordinate\n        )\n      ) {\n        return null;\n      }\n    }\n\n    // determine last source suitable for rendering at coordinate\n    const sources = layer.getSources(\n      boundingExtent([coordinate]),\n      viewState.resolution\n    );\n    let i, source, tileGrid;\n    for (i = sources.length - 1; i >= 0; --i) {\n      source = sources[i];\n      if (source.getState() === 'ready') {\n        tileGrid = source.getTileGridForProjection(viewState.projection);\n        if (source.getWrapX()) {\n          break;\n        }\n        const gridExtent = tileGrid.getExtent();\n        if (!gridExtent || containsCoordinate(gridExtent, coordinate)) {\n          break;\n        }\n      }\n    }\n    if (i < 0) {\n      return null;\n    }\n\n    const tileTextureCache = this.tileTextureCache_;\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const cacheKey = getCacheKey(source, tileCoord);\n      if (!tileTextureCache.containsKey(cacheKey)) {\n        continue;\n      }\n      const tileTexture = tileTextureCache.get(cacheKey);\n      const tile = tileTexture.tile;\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tile.getState() === TileState.EMPTY\n      ) {\n        return null;\n      }\n      if (!tileTexture.loaded) {\n        continue;\n      }\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col =\n        (coordinate[0] - tileOrigin[0]) / tileResolution -\n        tileCoord[1] * tileSize[0];\n\n      const row =\n        (tileOrigin[1] - coordinate[1]) / tileResolution -\n        tileCoord[2] * tileSize[1];\n\n      return tileTexture.getPixelData(col, row);\n    }\n    return null;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {Object<number, Array<import(\"../../webgl/TileTexture.js\").default>>} tileTexturesByZ Lookup of\n   * tile textures by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tileTexturesByZ) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileTextureCache = this.tileTextureCache_;\n    const source = this.getLayer().getRenderSource();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(source, [altZ, x, y]);\n        let loaded = false;\n        if (tileTextureCache.containsKey(cacheKey)) {\n          const tileTexture = tileTextureCache.get(cacheKey);\n          if (tileTexture.loaded) {\n            addTileTextureToLookup(tileTexturesByZ, tileTexture, altZ);\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  clearCache() {\n    const tileTextureCache = this.tileTextureCache_;\n    tileTextureCache.forEach((tileTexture) => tileTexture.dispose());\n    tileTextureCache.clear();\n  }\n\n  removeHelper() {\n    if (this.helper) {\n      this.clearCache();\n    }\n\n    super.removeHelper();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    const helper = this.helper;\n    if (helper) {\n      const gl = helper.getGL();\n      gl.deleteProgram(this.program_);\n      delete this.program_;\n\n      helper.deleteBuffer(this.indices_);\n    }\n\n    super.disposeInternal();\n\n    delete this.indices_;\n    delete this.tileTextureCache_;\n    delete this.frameState_;\n  }\n}\n\nexport default WebGLTileLayerRenderer;\n","/**\n * Operators and utilities used for style expressions\n * @module ol/style/expressions\n */\n\nimport PaletteTexture from '../webgl/PaletteTexture.js';\nimport {Uniforms} from '../renderer/webgl/TileLayer.js';\nimport {asArray, fromString, isStringColor} from '../color.js';\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expressions.js\").ExpressionValue} arguments.\n *\n * The following operators can be used:\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels.\n *   * `['get', 'attributeName']` fetches a feature attribute (it will be prefixed by `a_` in the shader)\n *     Note: those will be taken from the attributes provided to the renderer\n *   * `['resolution']` returns the current resolution\n *   * `['time']` returns the time in seconds since the creation of the layer\n *   * `['var', 'varName']` fetches a value from the style variables, or 0 if undefined\n *   * `['zoom']` returns the current zoom level\n *\n * * Math operators:\n *   * `['*', value1, value2]` multiplies `value1` by `value2`\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2]` adds `value1` and `value2`\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4.\n *   * `['color', red, green, blue, alpha]` creates a `color` value from `number` values; the `alpha` parameter is\n *     optional; if not specified, it will be set to 1.\n *     Note: `red`, `green` and `blue` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range).\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\n/**\n * Possible inferred types from a given value or expression.\n * Note: these are binary flags.\n * @enum {number}\n */\nexport const ValueTypes = {\n  NUMBER: 0b00001,\n  STRING: 0b00010,\n  COLOR: 0b00100,\n  BOOLEAN: 0b01000,\n  NUMBER_ARRAY: 0b10000,\n  ANY: 0b11111,\n  NONE: 0,\n};\n\n/**\n * An operator declaration must contain two methods: `getReturnType` which returns a type based on\n * the operator arguments, and `toGlsl` which returns a GLSL-compatible string.\n * Note: both methods can process arguments recursively.\n * @typedef {Object} Operator\n * @property {function(Array<ExpressionValue>): ValueTypes|number} getReturnType Returns one or several types\n * @property {function(ParsingContext, Array<ExpressionValue>, ValueTypes=): string} toGlsl Returns a GLSL-compatible string\n * Note: takes in an optional type hint as 3rd parameter\n */\n\n/**\n * Operator declarations\n * @type {Object<string, Operator>}\n */\nexport const Operators = {};\n\n/**\n * Returns the possible types for a given value (each type being a binary flag)\n * To test a value use e.g. `getValueType(v) & ValueTypes.BOOLEAN`\n * @param {ExpressionValue} value Value\n * @return {ValueTypes|number} Type or types inferred from the value\n */\nexport function getValueType(value) {\n  if (typeof value === 'number') {\n    return ValueTypes.NUMBER;\n  }\n  if (typeof value === 'boolean') {\n    return ValueTypes.BOOLEAN;\n  }\n  if (typeof value === 'string') {\n    if (isStringColor(value)) {\n      return ValueTypes.COLOR | ValueTypes.STRING;\n    }\n    return ValueTypes.STRING;\n  }\n  if (!Array.isArray(value)) {\n    throw new Error(`Unhandled value type: ${JSON.stringify(value)}`);\n  }\n  const valueArr = /** @type {Array<*>} */ (value);\n  const onlyNumbers = valueArr.every(function (v) {\n    return typeof v === 'number';\n  });\n  if (onlyNumbers) {\n    if (valueArr.length === 3 || valueArr.length === 4) {\n      return ValueTypes.COLOR | ValueTypes.NUMBER_ARRAY;\n    }\n    return ValueTypes.NUMBER_ARRAY;\n  }\n  if (typeof valueArr[0] !== 'string') {\n    throw new Error(\n      `Expected an expression operator but received: ${JSON.stringify(\n        valueArr\n      )}`\n    );\n  }\n  const operator = Operators[valueArr[0]];\n  if (operator === undefined) {\n    throw new Error(\n      `Unrecognized expression operator: ${JSON.stringify(valueArr)}`\n    );\n  }\n  return operator.getReturnType(valueArr.slice(1));\n}\n\n/**\n * Checks if only one value type is enabled in the input number.\n * @param {ValueTypes|number} valueType Number containing value type binary flags\n * @return {boolean} True if only one type flag is enabled, false if zero or multiple\n */\nexport function isTypeUnique(valueType) {\n  return Math.log2(valueType) % 1 === 0;\n}\n\n/**\n * Context available during the parsing of an expression.\n * @typedef {Object} ParsingContext\n * @property {boolean} [inFragmentShader] If false, means the expression output should be made for a vertex shader\n * @property {Array<string>} variables List of variables used in the expression; contains **unprefixed names**\n * @property {Array<string>} attributes List of attributes used in the expression; contains **unprefixed names**\n * @property {Object<string, number>} stringLiteralsMap This object maps all encountered string values to a number\n * @property {Object<string, string>} functions Lookup of functions used by the style.\n * @property {number} [bandCount] Number of bands per pixel.\n * @property {Array<PaletteTexture>} [paletteTextures] List of palettes used by the style.\n */\n\n/**\n * Will return the number as a float with a dot separator, which is required by GLSL.\n * @param {number} v Numerical value.\n * @return {string} The value as string.\n */\nexport function numberToGlsl(v) {\n  const s = v.toString();\n  return s.includes('.') ? s : s + '.0';\n}\n\n/**\n * Will return the number array as a float with a dot separator, concatenated with ', '.\n * @param {Array<number>} array Numerical values array.\n * @return {string} The array as a vector, e. g.: `vec3(1.0, 2.0, 3.0)`.\n */\nexport function arrayToGlsl(array) {\n  if (array.length < 2 || array.length > 4) {\n    throw new Error(\n      '`formatArray` can only output `vec2`, `vec3` or `vec4` arrays.'\n    );\n  }\n  return `vec${array.length}(${array.map(numberToGlsl).join(', ')})`;\n}\n\n/**\n * Will normalize and converts to string a `vec4` color array compatible with GLSL.\n * @param {string|import(\"../color.js\").Color} color Color either in string format or [r, g, b, a] array format,\n * with RGB components in the 0..255 range and the alpha component in the 0..1 range.\n * Note that the final array will always have 4 components.\n * @return {string} The color expressed in the `vec4(1.0, 1.0, 1.0, 1.0)` form.\n */\nexport function colorToGlsl(color) {\n  const array = asArray(color).slice();\n  if (array.length < 4) {\n    array.push(1);\n  }\n  return arrayToGlsl(\n    array.map(function (c, i) {\n      return i < 3 ? c / 255 : c;\n    })\n  );\n}\n\n/**\n * Returns a stable equivalent number for the string literal.\n * @param {ParsingContext} context Parsing context\n * @param {string} string String literal value\n * @return {number} Number equivalent\n */\nexport function getStringNumberEquivalent(context, string) {\n  if (context.stringLiteralsMap[string] === undefined) {\n    context.stringLiteralsMap[string] = Object.keys(\n      context.stringLiteralsMap\n    ).length;\n  }\n  return context.stringLiteralsMap[string];\n}\n\n/**\n * Returns a stable equivalent number for the string literal, for use in shaders. This number is then\n * converted to be a GLSL-compatible string.\n * @param {ParsingContext} context Parsing context\n * @param {string} string String literal value\n * @return {string} GLSL-compatible string containing a number\n */\nexport function stringToGlsl(context, string) {\n  return numberToGlsl(getStringNumberEquivalent(context, string));\n}\n\n/**\n * Recursively parses a style expression and outputs a GLSL-compatible string. Takes in a parsing context that\n * will be read and modified during the parsing operation.\n * @param {ParsingContext} context Parsing context\n * @param {ExpressionValue} value Value\n * @param {ValueTypes|number} [typeHint] Hint for the expected final type (can be several types combined)\n * @return {string} GLSL-compatible output\n */\nexport function expressionToGlsl(context, value, typeHint) {\n  // operator\n  if (Array.isArray(value) && typeof value[0] === 'string') {\n    const operator = Operators[value[0]];\n    if (operator === undefined) {\n      throw new Error(\n        `Unrecognized expression operator: ${JSON.stringify(value)}`\n      );\n    }\n    return operator.toGlsl(context, value.slice(1), typeHint);\n  }\n\n  const valueType = getValueType(value);\n  if ((valueType & ValueTypes.NUMBER) > 0) {\n    return numberToGlsl(/** @type {number} */ (value));\n  }\n\n  if ((valueType & ValueTypes.BOOLEAN) > 0) {\n    return value.toString();\n  }\n\n  if (\n    (valueType & ValueTypes.STRING) > 0 &&\n    (typeHint === undefined || typeHint == ValueTypes.STRING)\n  ) {\n    return stringToGlsl(context, value.toString());\n  }\n\n  if (\n    (valueType & ValueTypes.COLOR) > 0 &&\n    (typeHint === undefined || typeHint == ValueTypes.COLOR)\n  ) {\n    return colorToGlsl(/** @type {Array<number> | string} */ (value));\n  }\n\n  if ((valueType & ValueTypes.NUMBER_ARRAY) > 0) {\n    return arrayToGlsl(/** @type {Array<number>} */ (value));\n  }\n\n  throw new Error(`Unexpected expression ${value} (expected type ${typeHint})`);\n}\n\nfunction assertNumber(value) {\n  if (!(getValueType(value) & ValueTypes.NUMBER)) {\n    throw new Error(\n      `A numeric value was expected, got ${JSON.stringify(value)} instead`\n    );\n  }\n}\nfunction assertNumbers(values) {\n  for (let i = 0; i < values.length; i++) {\n    assertNumber(values[i]);\n  }\n}\nfunction assertString(value) {\n  if (!(getValueType(value) & ValueTypes.STRING)) {\n    throw new Error(\n      `A string value was expected, got ${JSON.stringify(value)} instead`\n    );\n  }\n}\nfunction assertBoolean(value) {\n  if (!(getValueType(value) & ValueTypes.BOOLEAN)) {\n    throw new Error(\n      `A boolean value was expected, got ${JSON.stringify(value)} instead`\n    );\n  }\n}\nfunction assertArgsCount(args, count) {\n  if (args.length !== count) {\n    throw new Error(\n      `Exactly ${count} arguments were expected, got ${args.length} instead`\n    );\n  }\n}\nfunction assertArgsMinCount(args, count) {\n  if (args.length < count) {\n    throw new Error(\n      `At least ${count} arguments were expected, got ${args.length} instead`\n    );\n  }\n}\nfunction assertArgsMaxCount(args, count) {\n  if (args.length > count) {\n    throw new Error(\n      `At most ${count} arguments were expected, got ${args.length} instead`\n    );\n  }\n}\nfunction assertArgsEven(args) {\n  if (args.length % 2 !== 0) {\n    throw new Error(\n      `An even amount of arguments was expected, got ${args} instead`\n    );\n  }\n}\nfunction assertArgsOdd(args) {\n  if (args.length % 2 === 0) {\n    throw new Error(\n      `An odd amount of arguments was expected, got ${args} instead`\n    );\n  }\n}\nfunction assertUniqueInferredType(args, types) {\n  if (!isTypeUnique(types)) {\n    throw new Error(\n      `Could not infer only one type from the following expression: ${JSON.stringify(\n        args\n      )}`\n    );\n  }\n}\n\nOperators['get'] = {\n  getReturnType: function (args) {\n    return ValueTypes.ANY;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertString(args[0]);\n    const value = args[0].toString();\n    if (!context.attributes.includes(value)) {\n      context.attributes.push(value);\n    }\n    const prefix = context.inFragmentShader ? 'v_' : 'a_';\n    return prefix + value;\n  },\n};\n\n/**\n * Get the uniform name given a variable name.\n * @param {string} variableName The variable name.\n * @return {string} The uniform name.\n */\nexport function uniformNameForVariable(variableName) {\n  return 'u_var_' + variableName;\n}\n\nOperators['var'] = {\n  getReturnType: function (args) {\n    return ValueTypes.ANY;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertString(args[0]);\n    const value = args[0].toString();\n    if (!context.variables.includes(value)) {\n      context.variables.push(value);\n    }\n    return uniformNameForVariable(value);\n  },\n};\n\nexport const PALETTE_TEXTURE_ARRAY = 'u_paletteTextures';\n\n// ['palette', index, colors]\nOperators['palette'] = {\n  getReturnType: function (args) {\n    return ValueTypes.COLOR;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumber(args[0]);\n    const index = expressionToGlsl(context, args[0]);\n    const colors = args[1];\n    if (!Array.isArray(colors)) {\n      throw new Error('The second argument of palette must be an array');\n    }\n    const numColors = colors.length;\n    const palette = new Uint8Array(numColors * 4);\n    for (let i = 0; i < numColors; i++) {\n      const candidate = colors[i];\n      /**\n       * @type {import('../color.js').Color}\n       */\n      let color;\n      if (typeof candidate === 'string') {\n        color = fromString(candidate);\n      } else {\n        if (!Array.isArray(candidate)) {\n          throw new Error(\n            'The second argument of palette must be an array of strings or colors'\n          );\n        }\n        const length = candidate.length;\n        if (length === 4) {\n          color = candidate;\n        } else {\n          if (length !== 3) {\n            throw new Error(\n              `Expected palette color to have 3 or 4 values, got ${length}`\n            );\n          }\n          color = [candidate[0], candidate[1], candidate[2], 1];\n        }\n      }\n      const offset = i * 4;\n      palette[offset] = color[0];\n      palette[offset + 1] = color[1];\n      palette[offset + 2] = color[2];\n      palette[offset + 3] = color[3] * 255;\n    }\n    if (!context.paletteTextures) {\n      context.paletteTextures = [];\n    }\n    const paletteName = `${PALETTE_TEXTURE_ARRAY}[${context.paletteTextures.length}]`;\n    const paletteTexture = new PaletteTexture(paletteName, palette);\n    context.paletteTextures.push(paletteTexture);\n    return `texture2D(${paletteName}, vec2((${index} + 0.5) / ${numColors}.0, 0.5))`;\n  },\n};\n\nconst GET_BAND_VALUE_FUNC = 'getBandValue';\n\nOperators['band'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 1);\n    assertArgsMaxCount(args, 3);\n    const band = args[0];\n\n    if (!(GET_BAND_VALUE_FUNC in context.functions)) {\n      let ifBlocks = '';\n      const bandCount = context.bandCount || 1;\n      for (let i = 0; i < bandCount; i++) {\n        const colorIndex = Math.floor(i / 4);\n        let bandIndex = i % 4;\n        if (i === bandCount - 1 && bandIndex === 1) {\n          // LUMINANCE_ALPHA - band 1 assigned to rgb and band 2 assigned to alpha\n          bandIndex = 3;\n        }\n        const textureName = `${Uniforms.TILE_TEXTURE_ARRAY}[${colorIndex}]`;\n        ifBlocks += `\n          if (band == ${i + 1}.0) {\n            return texture2D(${textureName}, v_textureCoord + vec2(dx, dy))[${bandIndex}];\n          }\n        `;\n      }\n\n      context.functions[GET_BAND_VALUE_FUNC] = `\n        float getBandValue(float band, float xOffset, float yOffset) {\n          float dx = xOffset / ${Uniforms.TEXTURE_PIXEL_WIDTH};\n          float dy = yOffset / ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n          ${ifBlocks}\n        }\n      `;\n    }\n\n    const bandExpression = expressionToGlsl(context, band);\n    const xOffsetExpression = expressionToGlsl(context, args[1] || 0);\n    const yOffsetExpression = expressionToGlsl(context, args[2] || 0);\n    return `${GET_BAND_VALUE_FUNC}(${bandExpression}, ${xOffsetExpression}, ${yOffsetExpression})`;\n  },\n};\n\nOperators['time'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 0);\n    return 'u_time';\n  },\n};\n\nOperators['zoom'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 0);\n    return 'u_zoom';\n  },\n};\n\nOperators['resolution'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 0);\n    return 'u_resolution';\n  },\n};\n\nOperators['*'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 2);\n    assertNumbers(args);\n    return `(${args.map((arg) => expressionToGlsl(context, arg)).join(' * ')})`;\n  },\n};\n\nOperators['/'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} / ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['+'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 2);\n    assertNumbers(args);\n\n    return `(${args.map((arg) => expressionToGlsl(context, arg)).join(' + ')})`;\n  },\n};\n\nOperators['-'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} - ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['clamp'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 3);\n    assertNumbers(args);\n    const min = expressionToGlsl(context, args[1]);\n    const max = expressionToGlsl(context, args[2]);\n    return `clamp(${expressionToGlsl(context, args[0])}, ${min}, ${max})`;\n  },\n};\n\nOperators['%'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `mod(${expressionToGlsl(context, args[0])}, ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['^'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `pow(${expressionToGlsl(context, args[0])}, ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['abs'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `abs(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['floor'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `floor(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['round'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `floor(${expressionToGlsl(context, args[0])} + 0.5)`;\n  },\n};\n\nOperators['ceil'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `ceil(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['sin'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `sin(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['cos'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `cos(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['atan'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 1);\n    assertArgsMaxCount(args, 2);\n    assertNumbers(args);\n    return args.length === 2\n      ? `atan(${expressionToGlsl(context, args[0])}, ${expressionToGlsl(\n          context,\n          args[1]\n        )})`\n      : `atan(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['>'] = {\n  getReturnType: function (args) {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} > ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['>='] = {\n  getReturnType: function (args) {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} >= ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['<'] = {\n  getReturnType: function (args) {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} < ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['<='] = {\n  getReturnType: function (args) {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} <= ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nfunction getEqualOperator(operator) {\n  return {\n    getReturnType: function (args) {\n      return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n      assertArgsCount(args, 2);\n\n      // find common type\n      let type = ValueTypes.ANY;\n      for (let i = 0; i < args.length; i++) {\n        type &= getValueType(args[i]);\n      }\n      if (type === ValueTypes.NONE) {\n        throw new Error(\n          `All arguments should be of compatible type, got ${JSON.stringify(\n            args\n          )} instead`\n        );\n      }\n\n      // Since it's not possible to have color types here, we can leave it out\n      // This fixes issues in case the value type is ambiguously detected as a color (e.g. the string 'red')\n      type &= ~ValueTypes.COLOR;\n\n      return `(${expressionToGlsl(\n        context,\n        args[0],\n        type\n      )} ${operator} ${expressionToGlsl(context, args[1], type)})`;\n    },\n  };\n}\n\nOperators['=='] = getEqualOperator('==');\n\nOperators['!='] = getEqualOperator('!=');\n\nOperators['!'] = {\n  getReturnType: function (args) {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertBoolean(args[0]);\n    return `(!${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nfunction getDecisionOperator(operator) {\n  return {\n    getReturnType: function (args) {\n      return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n      assertArgsMinCount(args, 2);\n      for (let i = 0; i < args.length; i++) {\n        assertBoolean(args[i]);\n      }\n      let result = '';\n      result = args\n        .map((arg) => expressionToGlsl(context, arg))\n        .join(` ${operator} `);\n      result = `(${result})`;\n      return result;\n    },\n  };\n}\n\nOperators['all'] = getDecisionOperator('&&');\n\nOperators['any'] = getDecisionOperator('||');\n\nOperators['between'] = {\n  getReturnType: function (args) {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 3);\n    assertNumbers(args);\n    const min = expressionToGlsl(context, args[1]);\n    const max = expressionToGlsl(context, args[2]);\n    const value = expressionToGlsl(context, args[0]);\n    return `(${value} >= ${min} && ${value} <= ${max})`;\n  },\n};\n\nOperators['array'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER_ARRAY;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 2);\n    assertArgsMaxCount(args, 4);\n    assertNumbers(args);\n    const parsedArgs = args.map(function (val) {\n      return expressionToGlsl(context, val, ValueTypes.NUMBER);\n    });\n    return `vec${args.length}(${parsedArgs.join(', ')})`;\n  },\n};\n\nOperators['color'] = {\n  getReturnType: function (args) {\n    return ValueTypes.COLOR;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 3);\n    assertArgsMaxCount(args, 4);\n    assertNumbers(args);\n    const array = /** @type {Array<number>} */ (args);\n    if (args.length === 3) {\n      array.push(1);\n    }\n    const parsedArgs = args.map(function (val, i) {\n      return (\n        expressionToGlsl(context, val, ValueTypes.NUMBER) +\n        (i < 3 ? ' / 255.0' : '')\n      );\n    });\n    return `vec${args.length}(${parsedArgs.join(', ')})`;\n  },\n};\n\nOperators['interpolate'] = {\n  getReturnType: function (args) {\n    let type = ValueTypes.COLOR | ValueTypes.NUMBER;\n    for (let i = 3; i < args.length; i += 2) {\n      type = type & getValueType(args[i]);\n    }\n    return type;\n  },\n  toGlsl: function (context, args, typeHint) {\n    assertArgsEven(args);\n    assertArgsMinCount(args, 6);\n\n    // validate interpolation type\n    const type = args[0];\n    let interpolation;\n    switch (type[0]) {\n      case 'linear':\n        interpolation = 1;\n        break;\n      case 'exponential':\n        interpolation = type[1];\n        break;\n      default:\n        interpolation = null;\n    }\n    if (!interpolation) {\n      throw new Error(\n        `Invalid interpolation type for \"interpolate\" operator, received: ${JSON.stringify(\n          type\n        )}`\n      );\n    }\n\n    // compute input/output types\n    typeHint = typeHint !== undefined ? typeHint : ValueTypes.ANY;\n    const outputType = Operators['interpolate'].getReturnType(args) & typeHint;\n    assertUniqueInferredType(args, outputType);\n\n    const input = expressionToGlsl(context, args[1]);\n    const exponent = numberToGlsl(interpolation);\n\n    let result = '';\n    for (let i = 2; i < args.length - 2; i += 2) {\n      const stop1 = expressionToGlsl(context, args[i]);\n      const output1 =\n        result || expressionToGlsl(context, args[i + 1], outputType);\n      const stop2 = expressionToGlsl(context, args[i + 2]);\n      const output2 = expressionToGlsl(context, args[i + 3], outputType);\n      result = `mix(${output1}, ${output2}, pow(clamp((${input} - ${stop1}) / (${stop2} - ${stop1}), 0.0, 1.0), ${exponent}))`;\n    }\n    return result;\n  },\n};\n\nOperators['match'] = {\n  getReturnType: function (args) {\n    let type = ValueTypes.ANY;\n    for (let i = 2; i < args.length; i += 2) {\n      type = type & getValueType(args[i]);\n    }\n    type = type & getValueType(args[args.length - 1]);\n    return type;\n  },\n  toGlsl: function (context, args, typeHint) {\n    assertArgsEven(args);\n    assertArgsMinCount(args, 4);\n\n    typeHint = typeHint !== undefined ? typeHint : ValueTypes.ANY;\n    const outputType = Operators['match'].getReturnType(args) & typeHint;\n    assertUniqueInferredType(args, outputType);\n\n    const input = expressionToGlsl(context, args[0]);\n    const fallback = expressionToGlsl(\n      context,\n      args[args.length - 1],\n      outputType\n    );\n    let result = null;\n    for (let i = args.length - 3; i >= 1; i -= 2) {\n      const match = expressionToGlsl(context, args[i]);\n      const output = expressionToGlsl(context, args[i + 1], outputType);\n      result = `(${input} == ${match} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  },\n};\n\nOperators['case'] = {\n  getReturnType: function (args) {\n    let type = ValueTypes.ANY;\n    for (let i = 1; i < args.length; i += 2) {\n      type = type & getValueType(args[i]);\n    }\n    type = type & getValueType(args[args.length - 1]);\n    return type;\n  },\n  toGlsl: function (context, args, typeHint) {\n    assertArgsOdd(args);\n    assertArgsMinCount(args, 3);\n\n    typeHint = typeHint !== undefined ? typeHint : ValueTypes.ANY;\n    const outputType = Operators['case'].getReturnType(args) & typeHint;\n    assertUniqueInferredType(args, outputType);\n    for (let i = 0; i < args.length - 1; i += 2) {\n      assertBoolean(args[i]);\n    }\n\n    const fallback = expressionToGlsl(\n      context,\n      args[args.length - 1],\n      outputType\n    );\n    let result = null;\n    for (let i = args.length - 3; i >= 0; i -= 2) {\n      const condition = expressionToGlsl(context, args[i]);\n      const output = expressionToGlsl(context, args[i + 1], outputType);\n      result = `(${condition} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  },\n};\n","/**\n * @module ol/style/flat\n */\n\nimport Circle from '../style/Circle.js';\nimport Fill from './Fill.js';\nimport Icon from './Icon.js';\nimport RegularShape from './RegularShape.js';\nimport Stroke from './Stroke.js';\nimport Style from './Style.js';\nimport Text from './Text.js';\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [stroke-color] The stroke color.\n * @property {number} [stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [stroke-line-dash] Line dash pattern.\n * @property {number} [stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [stroke-miter-limit=10] Miter limit.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {string|Array<string>} [text-value] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [text-font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./Text.js\").TextPlacement} [text-placement='point'] Text placement.\n * @property {number} [text-repeat] Repeat interval in pixels. When set, the text will be repeated at this interval. Only available when\n * `text-placement` is set to `'line'`. Overrides `text-align`.\n * @property {number|import(\"../size.js\").Size} [text-scale] Scale.\n * @property {boolean} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {number} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {CanvasTextAlign} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `text-placement: 'point'`. For `text-placement: 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {import('./Text.js').TextJustify} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `text-placement: 'line'`.\n * @property {CanvasTextBaseline} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {Array<number>} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-stroke-line-dash] Line dash pattern.\n * @property {number} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-stroke-width] Stroke pixel width.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-background-stroke-line-dash] Line dash pattern.\n * @property {number} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-background-stroke-width] Stroke pixel width.\n */\n\n/**\n * Icon style properties applied to point features.  One of `icon-src` or `icon-img` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {HTMLImageElement|HTMLCanvasElement} [icon-img] Image object for the icon. If the `icon-src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `icon-img-size` option.\n * @property {import(\"../size.js\").Size} [icon-img-size] Image size in pixels. Only required if `icon-img` is set and `icon-src` is not.\n * The provided size needs to match the actual size of the image.\n * @property {Array<number>} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [icon-opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [icon-scale=1] Scale.\n * @property {number} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-stroke-color] The stroke color.\n * @property {number} [shape-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [shape-stroke-line-dash] Line dash pattern.\n * @property {number} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [shape-displacement=[0,0]] Displacement of the shape\n * @property {number} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-stroke-color] The stroke color.\n * @property {number} [circle-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [circle-stroke-line-dash] Line dash pattern.\n * @property {number} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [circle-stroke-miter-limit=10] Miter limit.\n * @property {Array<number>} [circle-displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {number} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @return {import(\"./Style.js\").default} A style instance.\n */\nexport function toStyle(flatStyle) {\n  const style = new Style({\n    fill: getFill(flatStyle, ''),\n    stroke: getStroke(flatStyle, ''),\n    text: getText(flatStyle),\n    image: getImage(flatStyle),\n  });\n\n  return style;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Fill|undefined} The fill (if any).\n */\nfunction getFill(flatStyle, prefix) {\n  const color = flatStyle[prefix + 'fill-color'];\n  if (!color) {\n    return;\n  }\n\n  return new Fill({color: color});\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Stroke|undefined} The stroke (if any).\n */\nfunction getStroke(flatStyle, prefix) {\n  const width = flatStyle[prefix + 'stroke-width'];\n  const color = flatStyle[prefix + 'stroke-color'];\n  if (!width && !color) {\n    return;\n  }\n\n  return new Stroke({\n    width: width,\n    color: color,\n    lineCap: flatStyle[prefix + 'stroke-line-cap'],\n    lineJoin: flatStyle[prefix + 'stroke-line-join'],\n    lineDash: flatStyle[prefix + 'stroke-line-dash'],\n    lineDashOffset: flatStyle[prefix + 'stroke-line-dash-offset'],\n    miterLimit: flatStyle[prefix + 'stroke-miter-limit'],\n  });\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {Text|undefined} The text (if any).\n */\nfunction getText(flatStyle) {\n  const value = flatStyle['text-value'];\n  if (!value) {\n    return;\n  }\n\n  const text = new Text({\n    text: value,\n    font: flatStyle['text-font'],\n    maxAngle: flatStyle['text-max-angle'],\n    offsetX: flatStyle['text-offset-x'],\n    offsetY: flatStyle['text-offset-y'],\n    overflow: flatStyle['text-overflow'],\n    placement: flatStyle['text-placement'],\n    repeat: flatStyle['text-repeat'],\n    scale: flatStyle['text-scale'],\n    rotateWithView: flatStyle['text-rotate-with-view'],\n    rotation: flatStyle['text-rotation'],\n    textAlign: flatStyle['text-align'],\n    justify: flatStyle['text-justify'],\n    textBaseline: flatStyle['text-baseline'],\n    padding: flatStyle['text-padding'],\n    fill: getFill(flatStyle, 'text-'),\n    backgroundFill: getFill(flatStyle, 'text-background-'),\n    stroke: getStroke(flatStyle, 'text-'),\n    backgroundStroke: getStroke(flatStyle, 'text-background-'),\n  });\n\n  return text;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {import(\"./Image.js\").default|undefined} The image (if any).\n */\nfunction getImage(flatStyle) {\n  const iconSrc = flatStyle['icon-src'];\n  const iconImg = flatStyle['icon-img'];\n  if (iconSrc || iconImg) {\n    const icon = new Icon({\n      src: iconSrc,\n      img: iconImg,\n      imgSize: flatStyle['icon-img-size'],\n      anchor: flatStyle['icon-anchor'],\n      anchorOrigin: flatStyle['icon-anchor-origin'],\n      anchorXUnits: flatStyle['icon-anchor-x-units'],\n      anchorYUnits: flatStyle['icon-anchor-y-units'],\n      color: flatStyle['icon-color'],\n      crossOrigin: flatStyle['icon-cross-origin'],\n      offset: flatStyle['icon-offset'],\n      displacement: flatStyle['icon-displacement'],\n      opacity: flatStyle['icon-opacity'],\n      scale: flatStyle['icon-scale'],\n      rotation: flatStyle['icon-rotation'],\n      rotateWithView: flatStyle['icon-rotate-with-view'],\n      size: flatStyle['icon-size'],\n      declutterMode: flatStyle['icon-declutter-mode'],\n    });\n    return icon;\n  }\n\n  const shapePoints = flatStyle['shape-points'];\n  if (shapePoints) {\n    const prefix = 'shape-';\n    const shape = new RegularShape({\n      points: shapePoints,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      radius: flatStyle['shape-radius'],\n      radius1: flatStyle['shape-radius1'],\n      radius2: flatStyle['shape-radius2'],\n      angle: flatStyle['shape-angle'],\n      displacement: flatStyle['shape-displacement'],\n      rotation: flatStyle['shape-rotation'],\n      rotateWithView: flatStyle['shape-rotate-with-view'],\n      scale: flatStyle['shape-scale'],\n      declutterMode: flatStyle['shape-declutter-mode'],\n    });\n\n    return shape;\n  }\n\n  const circleRadius = flatStyle['circle-radius'];\n  if (circleRadius) {\n    const prefix = 'circle-';\n    const circle = new Circle({\n      radius: circleRadius,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      displacement: flatStyle['circle-displacement'],\n      scale: flatStyle['circle-scale'],\n      rotation: flatStyle['circle-rotation'],\n      rotateWithView: flatStyle['circle-rotate-with-view'],\n      declutterMode: flatStyle['circle-declutter-mode'],\n    });\n\n    return circle;\n  }\n\n  return;\n}\n","/**\n * @module ol/structs/LinkedList\n */\n\n/**\n * @typedef {Object} Item\n * @property {Item} [prev] Previous.\n * @property {Item} [next] Next.\n * @property {?} data Data.\n */\n\n/**\n * @classdesc\n * Creates an empty linked list structure.\n */\nclass LinkedList {\n  /**\n   * @param {boolean} [circular] The last item is connected to the first one,\n   * and the first item to the last one. Default is true.\n   */\n  constructor(circular) {\n    /**\n     * @private\n     * @type {Item|undefined}\n     */\n    this.first_;\n\n    /**\n     * @private\n     * @type {Item|undefined}\n     */\n    this.last_;\n\n    /**\n     * @private\n     * @type {Item|undefined}\n     */\n    this.head_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.circular_ = circular === undefined ? true : circular;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.length_ = 0;\n  }\n\n  /**\n   * Inserts an item into the linked list right after the current one.\n   *\n   * @param {?} data Item data.\n   */\n  insertItem(data) {\n    /** @type {Item} */\n    const item = {\n      prev: undefined,\n      next: undefined,\n      data: data,\n    };\n\n    const head = this.head_;\n\n    //Initialize the list.\n    if (!head) {\n      this.first_ = item;\n      this.last_ = item;\n      if (this.circular_) {\n        item.next = item;\n        item.prev = item;\n      }\n    } else {\n      //Link the new item to the adjacent ones.\n      const next = head.next;\n      item.prev = head;\n      item.next = next;\n      head.next = item;\n      if (next) {\n        next.prev = item;\n      }\n\n      if (head === this.last_) {\n        this.last_ = item;\n      }\n    }\n    this.head_ = item;\n    this.length_++;\n  }\n\n  /**\n   * Removes the current item from the list. Sets the cursor to the next item,\n   * if possible.\n   */\n  removeItem() {\n    const head = this.head_;\n    if (head) {\n      const next = head.next;\n      const prev = head.prev;\n      if (next) {\n        next.prev = prev;\n      }\n      if (prev) {\n        prev.next = next;\n      }\n      this.head_ = next || prev;\n\n      if (this.first_ === this.last_) {\n        this.head_ = undefined;\n        this.first_ = undefined;\n        this.last_ = undefined;\n      } else if (this.first_ === head) {\n        this.first_ = this.head_;\n      } else if (this.last_ === head) {\n        this.last_ = prev ? this.head_.prev : this.head_;\n      }\n      this.length_--;\n    }\n  }\n\n  /**\n   * Sets the cursor to the first item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  firstItem() {\n    this.head_ = this.first_;\n    if (this.head_) {\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the cursor to the last item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  lastItem() {\n    this.head_ = this.last_;\n    if (this.head_) {\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the cursor to the next item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  nextItem() {\n    if (this.head_ && this.head_.next) {\n      this.head_ = this.head_.next;\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the next item's data without moving the cursor.\n   *\n   * @return {?} Item data.\n   */\n  getNextItem() {\n    if (this.head_ && this.head_.next) {\n      return this.head_.next.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the cursor to the previous item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  prevItem() {\n    if (this.head_ && this.head_.prev) {\n      this.head_ = this.head_.prev;\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the previous item's data without moving the cursor.\n   *\n   * @return {?} Item data.\n   */\n  getPrevItem() {\n    if (this.head_ && this.head_.prev) {\n      return this.head_.prev.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the current item's data.\n   *\n   * @return {?} Item data.\n   */\n  getCurrItem() {\n    if (this.head_) {\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the first item of the list. This only works for circular lists, and sets\n   * the last item accordingly.\n   */\n  setFirstItem() {\n    if (this.circular_ && this.head_) {\n      this.first_ = this.head_;\n      this.last_ = this.head_.prev;\n    }\n  }\n\n  /**\n   * Concatenates two lists.\n   * @param {LinkedList} list List to merge into the current list.\n   */\n  concat(list) {\n    if (list.head_) {\n      if (this.head_) {\n        const end = this.head_.next;\n        this.head_.next = list.first_;\n        list.first_.prev = this.head_;\n        end.prev = list.last_;\n        list.last_.next = end;\n        this.length_ += list.length_;\n      } else {\n        this.head_ = list.head_;\n        this.first_ = list.first_;\n        this.last_ = list.last_;\n        this.length_ = list.length_;\n      }\n      list.head_ = undefined;\n      list.first_ = undefined;\n      list.last_ = undefined;\n      list.length_ = 0;\n    }\n  }\n\n  /**\n   * Returns the current length of the list.\n   *\n   * @return {number} Length.\n   */\n  getLength() {\n    return this.length_;\n  }\n}\n\nexport default LinkedList;\n","/**\n * @module ol/source/ogcTileUtil\n */\n\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport {getJSON, resolveUrl} from '../net.js';\nimport {get as getProjection} from '../proj.js';\nimport {getIntersection as intersectExtents} from '../extent.js';\n\n/**\n * See https://ogcapi.ogc.org/tiles/.\n */\n\n/**\n * @typedef {'map' | 'vector'} TileType\n */\n\n/**\n * @typedef {'topLeft' | 'bottomLeft'} CornerOfOrigin\n */\n\n/**\n * @typedef {Object} TileSet\n * @property {TileType} dataType Type of data represented in the tileset.\n * @property {string} [tileMatrixSetDefinition] Reference to a tile matrix set definition.\n * @property {TileMatrixSet} [tileMatrixSet] Tile matrix set definition.\n * @property {Array<TileMatrixSetLimit>} [tileMatrixSetLimits] Tile matrix set limits.\n * @property {Array<Link>} links Tileset links.\n */\n\n/**\n * @typedef {Object} Link\n * @property {string} rel The link rel attribute.\n * @property {string} href The link URL.\n * @property {string} type The link type.\n */\n\n/**\n * @typedef {Object} TileMatrixSetLimit\n * @property {string} tileMatrix The tile matrix id.\n * @property {number} minTileRow The minimum tile row.\n * @property {number} maxTileRow The maximum tile row.\n * @property {number} minTileCol The minimum tile column.\n * @property {number} maxTileCol The maximum tile column.\n */\n\n/**\n * @typedef {Object} TileMatrixSet\n * @property {string} id The tile matrix set identifier.\n * @property {string} crs The coordinate reference system.\n * @property {Array<TileMatrix>} tileMatrices Array of tile matrices.\n */\n\n/**\n * @typedef {Object} TileMatrix\n * @property {string} id The tile matrix identifier.\n * @property {number} cellSize The pixel resolution (map units per pixel).\n * @property {Array<number>} pointOfOrigin The map location of the matrix origin.\n * @property {CornerOfOrigin} [cornerOfOrigin='topLeft'] The corner of the matrix that represents the origin ('topLeft' or 'bottomLeft').\n * @property {number} matrixWidth The number of columns.\n * @property {number} matrixHeight The number of rows.\n * @property {number} tileWidth The pixel width of a tile.\n * @property {number} tileHeight The pixel height of a tile.\n */\n\n/**\n * @type {Object<string, boolean>}\n */\nconst knownMapMediaTypes = {\n  'image/png': true,\n  'image/jpeg': true,\n  'image/gif': true,\n  'image/webp': true,\n};\n\n/**\n * @type {Object<string, boolean>}\n */\nconst knownVectorMediaTypes = {\n  'application/vnd.mapbox-vector-tile': true,\n  'application/geo+json': true,\n};\n\n/**\n * @typedef {Object} TileSetInfo\n * @property {string} urlTemplate The tile URL template.\n * @property {import(\"../tilegrid/TileGrid.js\").default} grid The tile grid.\n * @property {import(\"../Tile.js\").UrlFunction} urlFunction The tile URL function.\n */\n\n/**\n * @typedef {Object} SourceInfo\n * @property {string} url The tile set URL.\n * @property {string} mediaType The preferred tile media type.\n * @property {Array<string>} [supportedMediaTypes] The supported media types.\n * @property {import(\"../proj/Projection.js\").default} projection The source projection.\n * @property {Object} [context] Optional context for constructing the URL.\n */\n\n/**\n * @param {Array<Link>} links Tileset links.\n * @param {string} [mediaType] The preferred media type.\n * @return {string} The tile URL template.\n */\nexport function getMapTileUrlTemplate(links, mediaType) {\n  let tileUrlTemplate;\n  let fallbackUrlTemplate;\n  for (let i = 0; i < links.length; ++i) {\n    const link = links[i];\n    if (link.rel === 'item') {\n      if (link.type === mediaType) {\n        tileUrlTemplate = link.href;\n        break;\n      }\n      if (knownMapMediaTypes[link.type]) {\n        fallbackUrlTemplate = link.href;\n      } else if (!fallbackUrlTemplate && link.type.startsWith('image/')) {\n        fallbackUrlTemplate = link.href;\n      }\n    }\n  }\n\n  if (!tileUrlTemplate) {\n    if (fallbackUrlTemplate) {\n      tileUrlTemplate = fallbackUrlTemplate;\n    } else {\n      throw new Error('Could not find \"item\" link');\n    }\n  }\n\n  return tileUrlTemplate;\n}\n\n/**\n * @param {Array<Link>} links Tileset links.\n * @param {string} [mediaType] The preferred media type.\n * @param {Array<string>} [supportedMediaTypes] The media types supported by the parser.\n * @return {string} The tile URL template.\n */\nexport function getVectorTileUrlTemplate(\n  links,\n  mediaType,\n  supportedMediaTypes\n) {\n  let tileUrlTemplate;\n  let fallbackUrlTemplate;\n\n  /**\n   * Lookup of URL by media type.\n   * @type {Object<string, string>}\n   */\n  const hrefLookup = {};\n\n  for (let i = 0; i < links.length; ++i) {\n    const link = links[i];\n    hrefLookup[link.type] = link.href;\n    if (link.rel === 'item') {\n      if (link.type === mediaType) {\n        tileUrlTemplate = link.href;\n        break;\n      }\n      if (knownVectorMediaTypes[link.type]) {\n        fallbackUrlTemplate = link.href;\n      }\n    }\n  }\n\n  if (!tileUrlTemplate && supportedMediaTypes) {\n    for (let i = 0; i < supportedMediaTypes.length; ++i) {\n      const supportedMediaType = supportedMediaTypes[i];\n      if (hrefLookup[supportedMediaType]) {\n        tileUrlTemplate = hrefLookup[supportedMediaType];\n        break;\n      }\n    }\n  }\n\n  if (!tileUrlTemplate) {\n    if (fallbackUrlTemplate) {\n      tileUrlTemplate = fallbackUrlTemplate;\n    } else {\n      throw new Error('Could not find \"item\" link');\n    }\n  }\n\n  return tileUrlTemplate;\n}\n\n/**\n * @param {SourceInfo} sourceInfo The source info.\n * @param {TileMatrixSet} tileMatrixSet Tile matrix set.\n * @param {string} tileUrlTemplate Tile URL template.\n * @param {Array<TileMatrixSetLimit>} [tileMatrixSetLimits] Tile matrix set limits.\n * @return {TileSetInfo} Tile set info.\n */\nfunction parseTileMatrixSet(\n  sourceInfo,\n  tileMatrixSet,\n  tileUrlTemplate,\n  tileMatrixSetLimits\n) {\n  let projection = sourceInfo.projection;\n  if (!projection) {\n    projection = getProjection(tileMatrixSet.crs);\n    if (!projection) {\n      throw new Error(`Unsupported CRS: ${tileMatrixSet.crs}`);\n    }\n  }\n  const backwards = projection.getAxisOrientation().substr(0, 2) !== 'en';\n\n  const matrices = tileMatrixSet.tileMatrices;\n\n  /**\n   * @type {Object<string, TileMatrix>}\n   */\n  const matrixLookup = {};\n  for (let i = 0; i < matrices.length; ++i) {\n    const matrix = matrices[i];\n    matrixLookup[matrix.id] = matrix;\n  }\n\n  /**\n   * @type {Object<string, TileMatrixSetLimit>}\n   */\n  const limitLookup = {};\n\n  /**\n   * @type {Array<string>}\n   */\n  const matrixIds = [];\n\n  if (tileMatrixSetLimits) {\n    for (let i = 0; i < tileMatrixSetLimits.length; ++i) {\n      const limit = tileMatrixSetLimits[i];\n      const id = limit.tileMatrix;\n      matrixIds.push(id);\n      limitLookup[id] = limit;\n    }\n  } else {\n    for (let i = 0; i < matrices.length; ++i) {\n      const id = matrices[i].id;\n      matrixIds.push(id);\n    }\n  }\n\n  const length = matrixIds.length;\n  const origins = new Array(length);\n  const resolutions = new Array(length);\n  const sizes = new Array(length);\n  const tileSizes = new Array(length);\n  const extent = [-Infinity, -Infinity, Infinity, Infinity];\n\n  for (let i = 0; i < length; ++i) {\n    const id = matrixIds[i];\n    const matrix = matrixLookup[id];\n    const origin = matrix.pointOfOrigin;\n    if (backwards) {\n      origins[i] = [origin[1], origin[0]];\n    } else {\n      origins[i] = origin;\n    }\n    resolutions[i] = matrix.cellSize;\n    sizes[i] = [matrix.matrixWidth, matrix.matrixHeight];\n    tileSizes[i] = [matrix.tileWidth, matrix.tileHeight];\n    const limit = limitLookup[id];\n    if (limit) {\n      const tileMapWidth = matrix.cellSize * matrix.tileWidth;\n      const minX = origins[i][0] + limit.minTileCol * tileMapWidth;\n      const maxX = origins[i][0] + (limit.maxTileCol + 1) * tileMapWidth;\n\n      const tileMapHeight = matrix.cellSize * matrix.tileHeight;\n      const upsideDown = matrix.cornerOfOrigin === 'bottomLeft';\n\n      let minY;\n      let maxY;\n      if (upsideDown) {\n        minY = origins[i][1] + limit.minTileRow * tileMapHeight;\n        maxY = origins[i][1] + (limit.maxTileRow + 1) * tileMapHeight;\n      } else {\n        minY = origins[i][1] - (limit.maxTileRow + 1) * tileMapHeight;\n        maxY = origins[i][1] - limit.minTileRow * tileMapHeight;\n      }\n\n      intersectExtents(extent, [minX, minY, maxX, maxY], extent);\n    }\n  }\n\n  const tileGrid = new TileGrid({\n    origins: origins,\n    resolutions: resolutions,\n    sizes: sizes,\n    tileSizes: tileSizes,\n    extent: tileMatrixSetLimits ? extent : undefined,\n  });\n\n  const context = sourceInfo.context;\n  const base = sourceInfo.url;\n\n  function tileUrlFunction(tileCoord, pixelRatio, projection) {\n    if (!tileCoord) {\n      return undefined;\n    }\n\n    const id = matrixIds[tileCoord[0]];\n    const matrix = matrixLookup[id];\n    const upsideDown = matrix.cornerOfOrigin === 'bottomLeft';\n\n    const localContext = {\n      tileMatrix: id,\n      tileCol: tileCoord[1],\n      tileRow: upsideDown ? -tileCoord[2] - 1 : tileCoord[2],\n    };\n\n    if (tileMatrixSetLimits) {\n      const limit = limitLookup[matrix.id];\n      if (\n        localContext.tileCol < limit.minTileCol ||\n        localContext.tileCol > limit.maxTileCol ||\n        localContext.tileRow < limit.minTileRow ||\n        localContext.tileRow > limit.maxTileRow\n      ) {\n        return undefined;\n      }\n    }\n\n    Object.assign(localContext, context);\n\n    const url = tileUrlTemplate.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n      return localContext[p];\n    });\n\n    return resolveUrl(base, url);\n  }\n\n  return {\n    grid: tileGrid,\n    urlTemplate: tileUrlTemplate,\n    urlFunction: tileUrlFunction,\n  };\n}\n\n/**\n * @param {SourceInfo} sourceInfo The source info.\n * @param {TileSet} tileSet Tile set.\n * @return {TileSetInfo|Promise<TileSetInfo>} Tile set info.\n */\nfunction parseTileSetMetadata(sourceInfo, tileSet) {\n  const tileMatrixSetLimits = tileSet.tileMatrixSetLimits;\n  let tileUrlTemplate;\n\n  if (tileSet.dataType === 'map') {\n    tileUrlTemplate = getMapTileUrlTemplate(\n      tileSet.links,\n      sourceInfo.mediaType\n    );\n  } else if (tileSet.dataType === 'vector') {\n    tileUrlTemplate = getVectorTileUrlTemplate(\n      tileSet.links,\n      sourceInfo.mediaType,\n      sourceInfo.supportedMediaTypes\n    );\n  } else {\n    throw new Error('Expected tileset data type to be \"map\" or \"vector\"');\n  }\n\n  if (tileSet.tileMatrixSet) {\n    return parseTileMatrixSet(\n      sourceInfo,\n      tileSet.tileMatrixSet,\n      tileUrlTemplate,\n      tileMatrixSetLimits\n    );\n  }\n\n  const tileMatrixSetLink = tileSet.links.find(\n    (link) =>\n      link.rel === 'http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme'\n  );\n  if (!tileMatrixSetLink) {\n    throw new Error(\n      'Expected http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme link or tileMatrixSet'\n    );\n  }\n  const tileMatrixSetDefinition = tileMatrixSetLink.href;\n\n  const url = resolveUrl(sourceInfo.url, tileMatrixSetDefinition);\n  return getJSON(url).then(function (tileMatrixSet) {\n    return parseTileMatrixSet(\n      sourceInfo,\n      tileMatrixSet,\n      tileUrlTemplate,\n      tileMatrixSetLimits\n    );\n  });\n}\n\n/**\n * @param {SourceInfo} sourceInfo Source info.\n * @return {Promise<TileSetInfo>} Tile set info.\n */\nexport function getTileSetInfo(sourceInfo) {\n  return getJSON(sourceInfo.url).then(function (tileSet) {\n    return parseTileSetMetadata(sourceInfo, tileSet);\n  });\n}\n","/**\n * @module ol/source/OGCMapTile\n */\nimport TileImage from './TileImage.js';\nimport {getTileSetInfo} from './ogcTileUtil.js';\nimport {error as logError} from '../console.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} url URL to the OGC Map Tileset endpoint.\n * @property {Object} [context] A lookup of values to use in the tile URL template.  The `{tileMatrix}`\n * (zoom level), `{tileRow}`, and `{tileCol}` variables in the URL will always be provided by the source.\n * @property {string} [mediaType] The content type for the tiles (e.g. \"image/png\").  If not provided,\n * the source will try to find a link with rel=\"item\" that uses a supported image type.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. By default, the projection\n * will be derived from the `crs` of the `tileMatrixSet`.  You can override this by supplying\n * a projection to the constructor.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will be ignored if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(tile, src) {\n *   tile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n/**\n * @classdesc\n * Layer source for map tiles from an [OGC API - Tiles](https://ogcapi.ogc.org/tiles/) service that provides \"map\" type tiles.\n * The service must conform to at least the core (http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/core)\n * and tileset (http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/tileset) conformance classes.\n * @api\n */\nclass OGCMapTile extends TileImage {\n  /**\n   * @param {Options} options OGC map tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n    });\n\n    const sourceInfo = {\n      url: options.url,\n      projection: this.getProjection(),\n      mediaType: options.mediaType,\n      context: options.context || null,\n    };\n\n    getTileSetInfo(sourceInfo)\n      .then(this.handleTileSetInfo_.bind(this))\n      .catch(this.handleError_.bind(this));\n  }\n\n  /**\n   * @param {import(\"./ogcTileUtil.js\").TileSetInfo} tileSetInfo Tile set info.\n   * @private\n   */\n  handleTileSetInfo_(tileSetInfo) {\n    this.tileGrid = tileSetInfo.grid;\n    this.setTileUrlFunction(tileSetInfo.urlFunction, tileSetInfo.urlTemplate);\n    this.setState('ready');\n  }\n\n  /**\n   * @private\n   * @param {Error} error The error.\n   */\n  handleError_(error) {\n    logError(error);\n    this.setState('error');\n  }\n}\n\nexport default OGCMapTile;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/renderer/canvas/VectorImageLayer\n */\nimport CanvasImageLayerRenderer from './ImageLayer.js';\nimport CanvasVectorLayerRenderer from './VectorLayer.js';\nimport EventType from '../../events/EventType.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport ImageState from '../../ImageState.js';\nimport RBush from 'rbush';\nimport ViewHint from '../../ViewHint.js';\nimport {apply, compose, create} from '../../transform.js';\nimport {getHeight, getWidth, isEmpty, scaleFromCenter} from '../../extent.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasVectorImageLayerRenderer extends CanvasImageLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorImage.js\").default} layer Vector image layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = new CanvasVectorLayerRenderer(layer);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.layerImageRatio_ = layer.getImageRatio();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToVectorPixelTransform_ = create();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.vectorRenderer_.dispose();\n    super.disposeInternal();\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.vectorRenderer_) {\n      return Promise.resolve([]);\n    }\n    const vectorPixel = apply(\n      this.coordinateToVectorPixelTransform_,\n      apply(this.renderedPixelToCoordinateTransform_, pixel.slice())\n    );\n    return this.vectorRenderer_.getFeatures(vectorPixel);\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    this.vectorRenderer_.handleFontsChanged();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const hints = frameState.viewHints;\n    const vectorRenderer = this.vectorRenderer_;\n    let renderedExtent = frameState.extent;\n    if (this.layerImageRatio_ !== 1) {\n      renderedExtent = renderedExtent.slice(0);\n      scaleFromCenter(renderedExtent, this.layerImageRatio_);\n    }\n    const width = getWidth(renderedExtent) / viewResolution;\n    const height = getHeight(renderedExtent) / viewResolution;\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      vectorRenderer.useContainer(null, null);\n      const context = vectorRenderer.context;\n      const layerState = frameState.layerStatesArray[frameState.layerIndex];\n      context.globalAlpha = layerState.opacity;\n      const imageLayerState = Object.assign({}, layerState, {opacity: 1});\n      const imageFrameState = /** @type {import(\"../../Map.js\").FrameState} */ (\n        Object.assign({}, frameState, {\n          declutterTree: new RBush(9),\n          extent: renderedExtent,\n          size: [width, height],\n          viewState: /** @type {import(\"../../View.js\").State} */ (\n            Object.assign({}, frameState.viewState, {\n              rotation: 0,\n            })\n          ),\n          layerStatesArray: [imageLayerState],\n          layerIndex: 0,\n        })\n      );\n      let emptyImage = true;\n      const image = new ImageCanvas(\n        renderedExtent,\n        viewResolution,\n        pixelRatio,\n        context.canvas,\n        function (callback) {\n          if (\n            vectorRenderer.prepareFrame(imageFrameState) &&\n            vectorRenderer.replayGroupChanged\n          ) {\n            vectorRenderer.clipping = false;\n            if (vectorRenderer.renderFrame(imageFrameState, null)) {\n              vectorRenderer.renderDeclutter(imageFrameState);\n              emptyImage = false;\n            }\n            callback();\n          }\n        }\n      );\n\n      image.addEventListener(EventType.CHANGE, () => {\n        if (image.getState() !== ImageState.LOADED) {\n          return;\n        }\n        this.image_ = emptyImage ? null : image;\n        const imageResolution = image.getResolution();\n        const imagePixelRatio = image.getPixelRatio();\n        const renderedResolution =\n          (imageResolution * pixelRatio) / imagePixelRatio;\n        this.renderedResolution = renderedResolution;\n        this.coordinateToVectorPixelTransform_ = compose(\n          this.coordinateToVectorPixelTransform_,\n          width / 2,\n          height / 2,\n          1 / renderedResolution,\n          -1 / renderedResolution,\n          0,\n          -viewState.center[0],\n          -viewState.center[1]\n        );\n      });\n      image.load();\n    }\n\n    if (this.image_) {\n      this.renderedPixelToCoordinateTransform_ =\n        frameState.pixelToCoordinateTransform.slice();\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   */\n  preRender() {}\n\n  /**\n   */\n  postRender() {}\n\n  /**\n   */\n  renderDeclutter() {}\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(\n        coordinate,\n        frameState,\n        hitTolerance,\n        callback,\n        matches\n      );\n    }\n    return super.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      callback,\n      matches\n    );\n  }\n}\n\nexport default CanvasVectorImageLayerRenderer;\n","/**\n * @module ol/geom/Circle\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `layout` and no\n   *     `radius` are also accepted.\n   * @param {number} [radius] Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(center, radius, layout) {\n    super();\n    if (layout !== undefined && radius === undefined) {\n      this.setFlatCoordinates(layout, center);\n    } else {\n      radius = radius ? radius : 0;\n      this.setCenterAndRadius(center, radius, layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Circle';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, layout) {\n    this.setLayout(layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  getCoordinates() {\n    return null;\n  }\n\n  setCoordinates(coordinates, layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center)\n    );\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      translate(center, 0, center.length, stride, deltaX, deltaY, center)\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [geometries] Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries ? geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      let thisLayout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          thisLayout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout = thisLayout;\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|Array<Array<number>>}\n     */\n    this.ends_ = ends;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<number>} */ (this.ends_),\n        2,\n        flatCenter,\n        0\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2,\n        flatCenters\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return 2;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {import(\"../geom/Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_\n      );\n    }\n  }\n  /**\n   * @return {Array<number>|Array<Array<number>>} Ends or endss.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n}\n\nRenderFeature.prototype.getEndss = RenderFeature.prototype.getEnds;\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds())\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = /** @type {Array<number>} */ (renderFeature.getEnds());\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/proj/proj4\n */\nimport Projection from './Projection.js';\nimport {\n  addCoordinateTransforms,\n  addEquivalentProjections,\n  addProjection,\n  createSafeCoordinateTransform,\n  get,\n} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\n\n/**\n * @type {import(\"proj4\")|null}\n */\nlet registered = null;\n\n/**\n * @return {boolean} Proj4 has been registered.\n */\nexport function isRegistered() {\n  return !!registered;\n}\n\n/**\n * Unsets the shared proj4 previsouly set with register.\n */\nexport function unregister() {\n  registered = null;\n}\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers. Requires proj4 >= 2.8.0.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {import(\"proj4\")} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  registered = proj4;\n\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      let units = /** @type {import(\"./Units.js\").Units} */ (def.units);\n      if (!units && def.projName === 'longlat') {\n        units = 'degrees';\n      }\n      addProjection(\n        new Projection({\n          code: code,\n          axisOrientation: def.axis,\n          metersPerUnit: def.to_meter,\n          units,\n        })\n      );\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(\n            proj1,\n            proj2,\n            createSafeCoordinateTransform(proj1, proj2, transform.forward),\n            createSafeCoordinateTransform(proj2, proj1, transform.inverse)\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {number} code The EPSG code.\n * @return {Promise<string>} The proj4 definition.\n */\nlet epsgLookup = async function (code) {\n  const response = await fetch(`https://epsg.io/${code}.proj4`);\n  if (!response.ok) {\n    throw new Error(`Unexpected response from epsg.io: ${response.status}`);\n  }\n  return response.text();\n};\n\n/**\n * Set the lookup function for getting proj4 definitions given an EPSG code.\n * By default, the {@link module:ol/proj/proj4.fromEPSGCode} function uses the\n * epsg.io website for proj4 definitions.  This can be changed by providing a\n * different lookup function.\n *\n * @param {function(number):Promise<string>} func The lookup function.\n * @api\n */\nexport function setEPSGLookup(func) {\n  epsgLookup = func;\n}\n\n/**\n * Get the current EPSG lookup function.\n *\n * @return {function(number):Promise<string>} The EPSG lookup function.\n */\nexport function getEPSGLookup() {\n  return epsgLookup;\n}\n\n/**\n * Get a projection from an EPSG code.  This function fetches the projection\n * definition from the epsg.io website, registers this definition for use with\n * proj4, and returns a configured projection.  You must call import proj4 and\n * call {@link module:ol/proj/proj4.register} before using this function.\n *\n * If the projection definition is already registered with proj4, it will not\n * be fetched again (so it is ok to call this function multiple times with the\n * same code).\n *\n * @param {number|string} code The EPSG code (e.g. 4326 or 'EPSG:4326').\n * @return {Promise<Projection>} The projection.\n * @api\n */\nexport async function fromEPSGCode(code) {\n  if (typeof code === 'string') {\n    code = parseInt(code.split(':').pop(), 10);\n  }\n\n  const proj4 = registered;\n  if (!proj4) {\n    throw new Error('Proj4 must be registered first with register(proj4)');\n  }\n\n  const epsgCode = 'EPSG:' + code;\n  if (proj4.defs(epsgCode)) {\n    return get(epsgCode);\n  }\n\n  proj4.defs(epsgCode, await epsgLookup(code));\n  register(proj4);\n\n  return get(epsgCode);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {toStyle} from '../style/flat.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use \"flat\" style object literals instead of\n   * using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.).  See the documentation\n   * for the [flat style types]{@link module:ol/style/flat~FlatStyle} to see what properties are supported.\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleLike|null}\n     */\n    let styleLike;\n\n    if (style === undefined) {\n      styleLike = createDefaultStyle;\n    } else if (style === null) {\n      styleLike = null;\n    } else if (typeof style === 'function') {\n      styleLike = style;\n    } else if (style instanceof Style) {\n      styleLike = style;\n    } else if (Array.isArray(style)) {\n      const len = style.length;\n\n      /**\n       * @type {Array<Style>}\n       */\n      const styles = new Array(len);\n\n      for (let i = 0; i < len; ++i) {\n        const s = style[i];\n        if (s instanceof Style) {\n          styles[i] = s;\n        } else {\n          styles[i] = toStyle(s);\n        }\n      }\n      styleLike = styles;\n    } else {\n      styleLike = toStyle(style);\n    }\n\n    this.style_ = styleLike;\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/geom/flat/geodesic\n */\nimport {get as getProjection, getTransform} from '../../proj.js';\nimport {squaredSegmentDistance, toDegrees, toRadians} from '../../math.js';\n\n/**\n * @param {function(number): import(\"../../coordinate.js\").Coordinate} interpolate Interpolate function.\n * @param {import(\"../../proj.js\").TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n  // FIXME reduce garbage generation\n  // FIXME optimize stack operations\n\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n\n  let geoA = interpolate(0);\n  let geoB = interpolate(1);\n\n  let a = transform(geoA);\n  let b = transform(geoB);\n\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const geoStack = [geoB, geoA];\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const stack = [b, a];\n  /** @type {Array<number>} */\n  const fractionStack = [1, 0];\n\n  /** @type {!Object<string, boolean>} */\n  const fractions = {};\n\n  let maxIterations = 1e5;\n  let geoM, m, fracA, fracB, fracM, key;\n\n  while (--maxIterations > 0 && fractionStack.length > 0) {\n    // Pop the a coordinate off the stack\n    fracA = fractionStack.pop();\n    geoA = geoStack.pop();\n    a = stack.pop();\n    // Add the a coordinate if it has not been added yet\n    key = fracA.toString();\n    if (!(key in fractions)) {\n      flatCoordinates.push(a[0], a[1]);\n      fractions[key] = true;\n    }\n    // Pop the b coordinate off the stack\n    fracB = fractionStack.pop();\n    geoB = geoStack.pop();\n    b = stack.pop();\n    // Find the m point between the a and b coordinates\n    fracM = (fracA + fracB) / 2;\n    geoM = interpolate(fracM);\n    m = transform(geoM);\n    if (\n      squaredSegmentDistance(m[0], m[1], a[0], a[1], b[0], b[1]) <\n      squaredTolerance\n    ) {\n      // If the m point is sufficiently close to the straight line, then we\n      // discard it.  Just use the b coordinate and move on to the next line\n      // segment.\n      flatCoordinates.push(b[0], b[1]);\n      key = fracB.toString();\n      fractions[key] = true;\n    } else {\n      // Otherwise, we need to subdivide the current line segment.  Split it\n      // into two and push the two line segments onto the stack.\n      fractionStack.push(fracB, fracM, fracM, fracA);\n      stack.push(b, m, m, a);\n      geoStack.push(geoB, geoM, geoM, geoA);\n    }\n  }\n\n  return flatCoordinates;\n}\n\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function greatCircleArc(\n  lon1,\n  lat1,\n  lon2,\n  lat2,\n  projection,\n  squaredTolerance\n) {\n  const geoProjection = getProjection('EPSG:4326');\n\n  const cosLat1 = Math.cos(toRadians(lat1));\n  const sinLat1 = Math.sin(toRadians(lat1));\n  const cosLat2 = Math.cos(toRadians(lat2));\n  const sinLat2 = Math.sin(toRadians(lat2));\n  const cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n  const sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n  const d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      if (1 <= d) {\n        return [lon2, lat2];\n      }\n      const D = frac * Math.acos(d);\n      const cosD = Math.cos(D);\n      const sinD = Math.sin(D);\n      const y = sinDeltaLon * cosLat2;\n      const x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n      const theta = Math.atan2(y, x);\n      const lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n      const lon =\n        toRadians(lon1) +\n        Math.atan2(\n          Math.sin(theta) * sinD * cosLat1,\n          cosD - sinLat1 * Math.sin(lat)\n        );\n      return [toDegrees(lon), toDegrees(lat)];\n    },\n    getTransform(geoProjection, projection),\n    squaredTolerance\n  );\n}\n\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon, lat1 + (lat2 - lat1) * frac];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance\n  );\n}\n\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon1 + (lon2 - lon1) * frac, lat];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance\n  );\n}\n","/**\n * @module ol/layer/Graticule\n */\nimport Collection from '../Collection.js';\nimport EventType from '../render/EventType.js';\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport VectorLayer from './Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  applyTransform,\n  approximatelyEquals,\n  containsCoordinate,\n  containsExtent,\n  equals,\n  getCenter,\n  getIntersection,\n  getWidth,\n  intersects,\n  isEmpty,\n  wrapX as wrapExtentX,\n} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {degreesToStringHDMS} from '../coordinate.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n} from '../proj.js';\nimport {getVectorContext} from '../render.js';\nimport {meridian, parallel} from '../geom/flat/geodesic.js';\n\n/**\n * @type {Stroke}\n * @private\n * @const\n */\nconst DEFAULT_STROKE_STYLE = new Stroke({\n  color: 'rgba(0,0,0,0.2)',\n});\n\n/**\n * @type {Array<number>}\n * @private\n */\nconst INTERVALS = [\n  90,\n  45,\n  30,\n  20,\n  10,\n  5,\n  2,\n  1,\n  30 / 60,\n  20 / 60,\n  10 / 60,\n  5 / 60,\n  2 / 60,\n  1 / 60,\n  30 / 3600,\n  20 / 3600,\n  10 / 3600,\n  5 / 3600,\n  2 / 3600,\n  1 / 3600,\n];\n\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {Point} geom Geometry.\n * @property {string} text Text.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {Stroke} [strokeStyle] The\n * stroke style to use for drawing the graticule. If not provided, the following stroke will be used:\n * ```js\n * new Stroke({\n *   color: 'rgba(0, 0, 0, 0.2)' // a not fully opaque black\n * });\n * ```\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n * @property {Array<number>} [intervals=[90, 45, 30, 20, 10, 5, 2, 1, 30/60, 20/60, 10/60, 5/60, 2/60, 1/60, 30/3600, 20/3600, 10/3600, 5/3600, 2/3600, 1/3600]]\n * Intervals (in degrees) for the graticule. Example to limit graticules to 30 and 10 degrees intervals:\n * ```js\n * [30, 10]\n * ```\n * @property {boolean} [wrapX=true] Whether to repeat the graticule horizontally.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer that renders a grid for a coordinate system (currently only EPSG:4326 is supported).\n * Note that the view projection must define both extent and worldExtent.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {VectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nclass Graticule extends VectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign(\n      {\n        updateWhileAnimating: true,\n        updateWhileInteracting: true,\n        renderBuffer: 0,\n      },\n      options\n    );\n\n    delete baseOptions.maxLines;\n    delete baseOptions.strokeStyle;\n    delete baseOptions.targetSize;\n    delete baseOptions.showLabels;\n    delete baseOptions.lonLabelFormatter;\n    delete baseOptions.latLabelFormatter;\n    delete baseOptions.lonLabelPosition;\n    delete baseOptions.latLabelPosition;\n    delete baseOptions.lonLabelStyle;\n    delete baseOptions.latLabelStyle;\n    delete baseOptions.intervals;\n    super(baseOptions);\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLat_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLon_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLat_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLon_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxX_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxY_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minX_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minY_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.targetSize_ =\n      options.targetSize !== undefined ? options.targetSize : 100;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.meridians_ = [];\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.parallels_ = [];\n\n    /**\n     * @type {Stroke}\n     * @private\n     */\n    this.strokeStyle_ =\n      options.strokeStyle !== undefined\n        ? options.strokeStyle\n        : DEFAULT_STROKE_STYLE;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.fromLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.toLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.projectionCenterLonLat_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomRight_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topRight_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.meridiansLabels_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.parallelsLabels_ = null;\n\n    if (options.showLabels) {\n      /**\n       * @type {null|function(number):string}\n       * @private\n       */\n      this.lonLabelFormatter_ =\n        options.lonLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'EW')\n          : options.lonLabelFormatter;\n\n      /**\n       * @type {function(number):string}\n       * @private\n       */\n      this.latLabelFormatter_ =\n        options.latLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'NS')\n          : options.latLabelFormatter;\n\n      /**\n       * Longitude label position in fractions (0..1) of view extent. 0 means\n       * bottom, 1 means top.\n       * @type {number}\n       * @private\n       */\n      this.lonLabelPosition_ =\n        options.lonLabelPosition == undefined ? 0 : options.lonLabelPosition;\n\n      /**\n       * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n       * means right.\n       * @type {number}\n       * @private\n       */\n      this.latLabelPosition_ =\n        options.latLabelPosition == undefined ? 1 : options.latLabelPosition;\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.lonLabelStyleBase_ = new Style({\n        text:\n          options.lonLabelStyle !== undefined\n            ? options.lonLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textBaseline: 'bottom',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.lonLabelStyle_ = (feature) => {\n        const label = feature.get('graticule_label');\n        this.lonLabelStyleBase_.getText().setText(label);\n        return this.lonLabelStyleBase_;\n      };\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.latLabelStyleBase_ = new Style({\n        text:\n          options.latLabelStyle !== undefined\n            ? options.latLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textAlign: 'right',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.latLabelStyle_ = (feature) => {\n        const label = feature.get('graticule_label');\n        this.latLabelStyleBase_.getText().setText(label);\n        return this.latLabelStyleBase_;\n      };\n\n      this.meridiansLabels_ = [];\n      this.parallelsLabels_ = [];\n\n      this.addEventListener(EventType.POSTRENDER, this.drawLabels_.bind(this));\n    }\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.intervals_ =\n      options.intervals !== undefined ? options.intervals : INTERVALS;\n\n    // use a source with a custom loader for lines & text\n    this.setSource(\n      new VectorSource({\n        loader: this.loaderFunction.bind(this),\n        strategy: this.strategyFunction.bind(this),\n        features: new Collection(),\n        overlaps: false,\n        useSpatialIndex: false,\n        wrapX: options.wrapX,\n      })\n    );\n\n    /**\n     * feature pool to use when updating graticule\n     * @type {Array<Feature>}\n     * @private\n     */\n    this.featurePool_ = [];\n\n    /**\n     * @type {Style}\n     * @private\n     */\n    this.lineStyle_ = new Style({\n      stroke: this.strokeStyle_,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.loadedExtent_ = null;\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.renderedResolution_ = null;\n\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Strategy function for loading features based on the view's extent and\n   * resolution.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @return {Array<import(\"../extent.js\").Extent>} Extents.\n   */\n  strategyFunction(extent, resolution) {\n    // extents may be passed in different worlds, to avoid endless loop we use only one\n    let realWorldExtent = extent.slice();\n    if (this.projection_ && this.getSource().getWrapX()) {\n      wrapExtentX(realWorldExtent, this.projection_);\n    }\n    if (this.loadedExtent_) {\n      if (\n        approximatelyEquals(this.loadedExtent_, realWorldExtent, resolution)\n      ) {\n        // make sure result is exactly equal to previous extent\n        realWorldExtent = this.loadedExtent_.slice();\n      } else {\n        // we should not keep track of loaded extents\n        this.getSource().removeLoadedExtent(this.loadedExtent_);\n      }\n    }\n    return [realWorldExtent];\n  }\n\n  /**\n   * Update geometries in the source based on current view\n   * @param {import(\"../extent\").Extent} extent Extent\n   * @param {number} resolution Resolution\n   * @param {import(\"../proj/Projection.js\").default} projection Projection\n   */\n  loaderFunction(extent, resolution, projection) {\n    this.loadedExtent_ = extent;\n    const source = this.getSource();\n\n    // only consider the intersection between our own extent & the requested one\n    const layerExtent = this.getExtent() || [\n      -Infinity,\n      -Infinity,\n      Infinity,\n      Infinity,\n    ];\n    const renderExtent = getIntersection(layerExtent, extent);\n\n    if (\n      this.renderedExtent_ &&\n      equals(this.renderedExtent_, renderExtent) &&\n      this.renderedResolution_ === resolution\n    ) {\n      return;\n    }\n    this.renderedExtent_ = renderExtent;\n    this.renderedResolution_ = resolution;\n\n    // bail out if nothing to render\n    if (isEmpty(renderExtent)) {\n      return;\n    }\n\n    // update projection info\n    const center = getCenter(renderExtent);\n    const squaredTolerance = (resolution * resolution) / 4;\n\n    const updateProjectionInfo =\n      !this.projection_ || !equivalentProjection(this.projection_, projection);\n\n    if (updateProjectionInfo) {\n      this.updateProjectionInfo_(projection);\n    }\n\n    this.createGraticule_(renderExtent, center, resolution, squaredTolerance);\n\n    // first make sure we have enough features in the pool\n    let featureCount = this.meridians_.length + this.parallels_.length;\n    if (this.meridiansLabels_) {\n      featureCount += this.meridians_.length;\n    }\n    if (this.parallelsLabels_) {\n      featureCount += this.parallels_.length;\n    }\n\n    let feature;\n    while (featureCount > this.featurePool_.length) {\n      feature = new Feature();\n      this.featurePool_.push(feature);\n    }\n\n    const featuresColl = source.getFeaturesCollection();\n    featuresColl.clear();\n    let poolIndex = 0;\n\n    // add features for the lines & labels\n    let i, l;\n    for (i = 0, l = this.meridians_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.meridians_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n    for (i = 0, l = this.parallels_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.parallels_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, index) {\n    const lineString = this.getMeridian_(\n      lon,\n      minLat,\n      maxLat,\n      squaredTolerance,\n      index\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.meridiansLabels_) {\n        const text = this.lonLabelFormatter_(lon);\n        if (index in this.meridiansLabels_) {\n          this.meridiansLabels_[index].text = text;\n        } else {\n          this.meridiansLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.meridians_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addParallel_(lat, minLon, maxLon, squaredTolerance, extent, index) {\n    const lineString = this.getParallel_(\n      lat,\n      minLon,\n      maxLon,\n      squaredTolerance,\n      index\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.parallelsLabels_) {\n        const text = this.latLabelFormatter_(lat);\n        if (index in this.parallelsLabels_) {\n          this.parallelsLabels_[index].text = text;\n        } else {\n          this.parallelsLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.parallels_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {import(\"../render/Event.js\").default} event Render event.\n   * @private\n   */\n  drawLabels_(event) {\n    const rotation = event.frameState.viewState.rotation;\n    const resolution = event.frameState.viewState.resolution;\n    const size = event.frameState.size;\n    const extent = event.frameState.extent;\n    const rotationCenter = getCenter(extent);\n    let rotationExtent = extent;\n    if (rotation) {\n      const unrotatedWidth = size[0] * resolution;\n      const unrotatedHeight = size[1] * resolution;\n      rotationExtent = [\n        rotationCenter[0] - unrotatedWidth / 2,\n        rotationCenter[1] - unrotatedHeight / 2,\n        rotationCenter[0] + unrotatedWidth / 2,\n        rotationCenter[1] + unrotatedHeight / 2,\n      ];\n    }\n\n    let startWorld = 0;\n    let endWorld = 0;\n    let labelsAtStart = this.latLabelPosition_ < 0.5;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      startWorld = Math.floor((extent[0] - projectionExtent[0]) / worldWidth);\n      endWorld = Math.ceil((extent[2] - projectionExtent[2]) / worldWidth);\n      const inverted = Math.abs(rotation) > Math.PI / 2;\n      labelsAtStart = labelsAtStart !== inverted;\n    }\n    const vectorContext = getVectorContext(event);\n\n    for (let world = startWorld; world <= endWorld; ++world) {\n      let poolIndex = this.meridians_.length + this.parallels_.length;\n      let feature, index, l, textPoint;\n\n      if (this.meridiansLabels_) {\n        for (index = 0, l = this.meridiansLabels_.length; index < l; ++index) {\n          const lineString = this.meridians_[index];\n          if (!rotation && world === 0) {\n            textPoint = this.getMeridianPoint_(lineString, extent, index);\n          } else {\n            const clone = lineString.clone();\n            clone.translate(world * worldWidth, 0);\n            clone.rotate(-rotation, rotationCenter);\n            textPoint = this.getMeridianPoint_(clone, rotationExtent, index);\n            textPoint.rotate(rotation, rotationCenter);\n          }\n          feature = this.featurePool_[poolIndex++];\n          feature.setGeometry(textPoint);\n          feature.set('graticule_label', this.meridiansLabels_[index].text);\n          vectorContext.drawFeature(feature, this.lonLabelStyle_(feature));\n        }\n      }\n      if (this.parallelsLabels_) {\n        if (\n          (world === startWorld && labelsAtStart) ||\n          (world === endWorld && !labelsAtStart)\n        ) {\n          for (index = 0, l = this.parallels_.length; index < l; ++index) {\n            const lineString = this.parallels_[index];\n            if (!rotation && world === 0) {\n              textPoint = this.getParallelPoint_(lineString, extent, index);\n            } else {\n              const clone = lineString.clone();\n              clone.translate(world * worldWidth, 0);\n              clone.rotate(-rotation, rotationCenter);\n              textPoint = this.getParallelPoint_(clone, rotationExtent, index);\n              textPoint.rotate(rotation, rotationCenter);\n            }\n            feature = this.featurePool_[poolIndex++];\n            feature.setGeometry(textPoint);\n            feature.set('graticule_label', this.parallelsLabels_[index].text);\n            vectorContext.drawFeature(feature, this.latLabelStyle_(feature));\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @private\n   */\n  createGraticule_(extent, center, resolution, squaredTolerance) {\n    const interval = this.getInterval_(resolution);\n    if (interval == -1) {\n      this.meridians_.length = 0;\n      this.parallels_.length = 0;\n      if (this.meridiansLabels_) {\n        this.meridiansLabels_.length = 0;\n      }\n      if (this.parallelsLabels_) {\n        this.parallelsLabels_.length = 0;\n      }\n      return;\n    }\n\n    let wrapX = false;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      if (getWidth(extent) >= worldWidth) {\n        extent[0] = projectionExtent[0];\n        extent[2] = projectionExtent[2];\n      } else {\n        wrapX = true;\n      }\n    }\n\n    // Constrain the center to fit into the extent available to the graticule\n\n    const validCenterP = [\n      clamp(center[0], this.minX_, this.maxX_),\n      clamp(center[1], this.minY_, this.maxY_),\n    ];\n\n    // Transform the center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    const centerLonLat = this.toLonLatTransform_(validCenterP);\n    if (isNaN(centerLonLat[1])) {\n      centerLonLat[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n    let centerLon = clamp(centerLonLat[0], this.minLon_, this.maxLon_);\n    let centerLat = clamp(centerLonLat[1], this.minLat_, this.maxLat_);\n    const maxLines = this.maxLines_;\n    let cnt, idx, lat, lon;\n\n    // Limit the extent to fit into the extent available to the graticule\n\n    let validExtentP = extent;\n    if (!wrapX) {\n      validExtentP = [\n        clamp(extent[0], this.minX_, this.maxX_),\n        clamp(extent[1], this.minY_, this.maxY_),\n        clamp(extent[2], this.minX_, this.maxX_),\n        clamp(extent[3], this.minY_, this.maxY_),\n      ];\n    }\n\n    // Transform the extent to get the lon lat ranges for the edges of the extent\n\n    const validExtent = applyTransform(\n      validExtentP,\n      this.toLonLatTransform_,\n      undefined,\n      8\n    );\n\n    let maxLat = validExtent[3];\n    let maxLon = validExtent[2];\n    let minLat = validExtent[1];\n    let minLon = validExtent[0];\n\n    if (!wrapX) {\n      // Check if extremities of the world extent lie inside the extent\n      // (for example the pole in a polar projection)\n      // and extend the extent as appropriate\n\n      if (containsCoordinate(validExtentP, this.bottomLeft_)) {\n        minLon = this.minLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.bottomRight_)) {\n        maxLon = this.maxLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topLeft_)) {\n        minLon = this.minLon_;\n        maxLat = this.maxLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topRight_)) {\n        maxLon = this.maxLon_;\n        maxLat = this.maxLat_;\n      }\n\n      // The transformed center may also extend the lon lat ranges used for rendering\n\n      maxLat = clamp(maxLat, centerLat, this.maxLat_);\n      maxLon = clamp(maxLon, centerLon, this.maxLon_);\n      minLat = clamp(minLat, this.minLat_, centerLat);\n      minLon = clamp(minLon, this.minLon_, centerLon);\n    }\n\n    // Create meridians\n\n    centerLon = Math.floor(centerLon / interval) * interval;\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon -= interval) >= minLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    } else {\n      while (lon != this.minLon_ && cnt++ < maxLines) {\n        lon = Math.max(lon - interval, this.minLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    }\n\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon += interval) <= maxLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    } else {\n      while (lon != this.maxLon_ && cnt++ < maxLines) {\n        lon = Math.min(lon + interval, this.maxLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    }\n\n    this.meridians_.length = idx;\n    if (this.meridiansLabels_) {\n      this.meridiansLabels_.length = idx;\n    }\n\n    // Create parallels\n\n    centerLat = Math.floor(centerLat / interval) * interval;\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    while (lat != this.minLat_ && cnt++ < maxLines) {\n      lat = Math.max(lat - interval, this.minLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx\n      );\n    }\n\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    cnt = 0;\n    while (lat != this.maxLat_ && cnt++ < maxLines) {\n      lat = Math.min(lat + interval, this.maxLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx\n      );\n    }\n\n    this.parallels_.length = idx;\n    if (this.parallelsLabels_) {\n      this.parallelsLabels_.length = idx;\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @return {number} The interval in degrees.\n   * @private\n   */\n  getInterval_(resolution) {\n    const centerLon = this.projectionCenterLonLat_[0];\n    const centerLat = this.projectionCenterLonLat_[1];\n    let interval = -1;\n    const target = Math.pow(this.targetSize_ * resolution, 2);\n    /** @type {Array<number>} **/\n    const p1 = [];\n    /** @type {Array<number>} **/\n    const p2 = [];\n    for (let i = 0, ii = this.intervals_.length; i < ii; ++i) {\n      const delta = clamp(this.intervals_[i] / 2, 0, 90);\n      // Don't attempt to transform latitudes beyond the poles!\n      const clampedLat = clamp(centerLat, -90 + delta, 90 - delta);\n      p1[0] = centerLon - delta;\n      p1[1] = clampedLat - delta;\n      p2[0] = centerLon + delta;\n      p2[1] = clampedLat + delta;\n      this.fromLonLatTransform_(p1, p1);\n      this.fromLonLatTransform_(p2, p2);\n      const dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n      if (dist <= target) {\n        break;\n      }\n      interval = this.intervals_[i];\n    }\n    return interval;\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The meridian line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getMeridian_(lon, minLat, maxLat, squaredTolerance, index) {\n    const flatCoordinates = meridian(\n      lon,\n      minLat,\n      maxLat,\n      this.projection_,\n      squaredTolerance\n    );\n    let lineString = this.meridians_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n      this.meridians_[index] = lineString;\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Meridian\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Meridian point.\n   * @private\n   */\n  getMeridianPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let bottom = 1;\n    let top = flatCoordinates.length - 1;\n    if (flatCoordinates[bottom] > flatCoordinates[top]) {\n      bottom = top;\n      top = 1;\n    }\n    const clampedBottom = Math.max(extent[1], flatCoordinates[bottom]);\n    const clampedTop = Math.min(extent[3], flatCoordinates[top]);\n    const lat = clamp(\n      extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\n      clampedBottom,\n      clampedTop\n    );\n    const coordinate0 =\n      flatCoordinates[bottom - 1] +\n      ((flatCoordinates[top - 1] - flatCoordinates[bottom - 1]) *\n        (lat - flatCoordinates[bottom])) /\n        (flatCoordinates[top] - flatCoordinates[bottom]);\n    const coordinate = [coordinate0, lat];\n    const point = this.meridiansLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of meridians.  Meridians are lines of equal longitude.\n   * @return {Array<LineString>} The meridians.\n   * @api\n   */\n  getMeridians() {\n    return this.meridians_;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The parallel line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getParallel_(lat, minLon, maxLon, squaredTolerance, index) {\n    const flatCoordinates = parallel(\n      lat,\n      minLon,\n      maxLon,\n      this.projection_,\n      squaredTolerance\n    );\n    let lineString = this.parallels_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Parallels.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Parallel point.\n   * @private\n   */\n  getParallelPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let left = 0;\n    let right = flatCoordinates.length - 2;\n    if (flatCoordinates[left] > flatCoordinates[right]) {\n      left = right;\n      right = 0;\n    }\n    const clampedLeft = Math.max(extent[0], flatCoordinates[left]);\n    const clampedRight = Math.min(extent[2], flatCoordinates[right]);\n    const lon = clamp(\n      extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\n      clampedLeft,\n      clampedRight\n    );\n    const coordinate1 =\n      flatCoordinates[left + 1] +\n      ((flatCoordinates[right + 1] - flatCoordinates[left + 1]) *\n        (lon - flatCoordinates[left])) /\n        (flatCoordinates[right] - flatCoordinates[left]);\n    const coordinate = [lon, coordinate1];\n    const point = this.parallelsLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of parallels.  Parallels are lines of equal latitude.\n   * @return {Array<LineString>} The parallels.\n   * @api\n   */\n  getParallels() {\n    return this.parallels_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateProjectionInfo_(projection) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const worldExtent = projection.getWorldExtent();\n\n    this.maxLat_ = worldExtent[3];\n    this.maxLon_ = worldExtent[2];\n    this.minLat_ = worldExtent[1];\n    this.minLon_ = worldExtent[0];\n\n    // If the world extent crosses the dateline define a custom transform to\n    // return longitudes which wrap the dateline\n\n    const toLonLatTransform = getTransform(projection, epsg4326Projection);\n    if (this.minLon_ < this.maxLon_) {\n      this.toLonLatTransform_ = toLonLatTransform;\n    } else {\n      const split = this.minLon_ + this.maxLon_ / 2;\n      this.maxLon_ += 360;\n      this.toLonLatTransform_ = function (coordinates, output, dimension) {\n        dimension = dimension || 2;\n        const lonLatCoordinates = toLonLatTransform(\n          coordinates,\n          output,\n          dimension\n        );\n        for (let i = 0, l = lonLatCoordinates.length; i < l; i += dimension) {\n          if (lonLatCoordinates[i] < split) {\n            lonLatCoordinates[i] += 360;\n          }\n        }\n        return lonLatCoordinates;\n      };\n    }\n\n    // Transform the extent to get the limits of the view projection extent\n    // which should be available to the graticule\n\n    this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n    const worldExtentP = applyTransform(\n      [this.minLon_, this.minLat_, this.maxLon_, this.maxLat_],\n      this.fromLonLatTransform_,\n      undefined,\n      8\n    );\n\n    this.minX_ = worldExtentP[0];\n    this.maxX_ = worldExtentP[2];\n    this.minY_ = worldExtentP[1];\n    this.maxY_ = worldExtentP[3];\n\n    // Determine the view projection coordinates of the extremities of the world extent\n    // as these may lie inside a view extent (for example the pole in a polar projection)\n\n    this.bottomLeft_ = this.fromLonLatTransform_([this.minLon_, this.minLat_]);\n    this.bottomRight_ = this.fromLonLatTransform_([this.maxLon_, this.minLat_]);\n    this.topLeft_ = this.fromLonLatTransform_([this.minLon_, this.maxLat_]);\n    this.topRight_ = this.fromLonLatTransform_([this.maxLon_, this.maxLat_]);\n\n    // Transform the projection center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    this.projectionCenterLonLat_ = this.toLonLatTransform_(\n      getCenter(projection.getExtent())\n    );\n    if (isNaN(this.projectionCenterLonLat_[1])) {\n      this.projectionCenterLonLat_[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n\n    this.projection_ = projection;\n  }\n}\n\nexport default Graticule;\n","/**\n * A wrapper class to simplify rendering to a texture instead of the final canvas\n * @module ol/webgl/RenderTarget\n */\nimport {equals} from '../array.js';\n\n// for pixel color reading\nconst tmpArray4 = new Uint8Array(4);\n\n/**\n * @classdesc\n * This class is a wrapper around the association of both a `WebGLTexture` and a `WebGLFramebuffer` instances,\n * simplifying initialization and binding for rendering.\n * @api\n */\nclass WebGLRenderTarget {\n  /**\n   * @param {import(\"./Helper.js\").default} helper WebGL helper; mandatory.\n   * @param {Array<number>} [size] Expected size of the render target texture; note: this can be changed later on.\n   */\n  constructor(helper, size) {\n    /**\n     * @private\n     * @type {import(\"./Helper.js\").default}\n     */\n    this.helper_ = helper;\n    const gl = helper.getGL();\n\n    /**\n     * @private\n     * @type {WebGLTexture}\n     */\n    this.texture_ = gl.createTexture();\n\n    /**\n     * @private\n     * @type {WebGLFramebuffer}\n     */\n    this.framebuffer_ = gl.createFramebuffer();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.size_ = size || [1, 1];\n\n    /**\n     * @type {Uint8Array}\n     * @private\n     */\n    this.data_ = new Uint8Array(0);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dataCacheDirty_ = true;\n\n    this.updateSize_();\n  }\n\n  /**\n   * Changes the size of the render target texture. Note: will do nothing if the size\n   * is already the same.\n   * @param {Array<number>} size Expected size of the render target texture\n   * @api\n   */\n  setSize(size) {\n    if (equals(size, this.size_)) {\n      return;\n    }\n    this.size_[0] = size[0];\n    this.size_[1] = size[1];\n    this.updateSize_();\n  }\n\n  /**\n   * Returns the size of the render target texture\n   * @return {Array<number>} Size of the render target texture\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * This will cause following calls to `#readAll` or `#readPixel` to download the content of the\n   * render target into memory, which is an expensive operation.\n   * This content will be kept in cache but should be cleared after each new render.\n   * @api\n   */\n  clearCachedData() {\n    this.dataCacheDirty_ = true;\n  }\n\n  /**\n   * Returns the full content of the frame buffer as a series of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * @return {Uint8Array} Integer array of color values\n   * @api\n   */\n  readAll() {\n    if (this.dataCacheDirty_) {\n      const size = this.size_;\n      const gl = this.helper_.getGL();\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n      gl.readPixels(\n        0,\n        0,\n        size[0],\n        size[1],\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data_\n      );\n      this.dataCacheDirty_ = false;\n    }\n    return this.data_;\n  }\n\n  /**\n   * Reads one pixel of the frame buffer as an array of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * If x and/or y are outside of existing data, an array filled with 0 is returned.\n   * @param {number} x Pixel coordinate\n   * @param {number} y Pixel coordinate\n   * @return {Uint8Array} Integer array with one color value (4 components)\n   * @api\n   */\n  readPixel(x, y) {\n    if (x < 0 || y < 0 || x > this.size_[0] || y >= this.size_[1]) {\n      tmpArray4[0] = 0;\n      tmpArray4[1] = 0;\n      tmpArray4[2] = 0;\n      tmpArray4[3] = 0;\n      return tmpArray4;\n    }\n\n    this.readAll();\n    const index =\n      Math.floor(x) + (this.size_[1] - Math.floor(y) - 1) * this.size_[0];\n    tmpArray4[0] = this.data_[index * 4];\n    tmpArray4[1] = this.data_[index * 4 + 1];\n    tmpArray4[2] = this.data_[index * 4 + 2];\n    tmpArray4[3] = this.data_[index * 4 + 3];\n    return tmpArray4;\n  }\n\n  /**\n   * @return {WebGLTexture} Texture to render to\n   */\n  getTexture() {\n    return this.texture_;\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer of the render target\n   */\n  getFramebuffer() {\n    return this.framebuffer_;\n  }\n\n  /**\n   * @private\n   */\n  updateSize_() {\n    const size = this.size_;\n    const gl = this.helper_.getGL();\n\n    this.texture_ = this.helper_.createTexture(size, null, this.texture_);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture_,\n      0\n    );\n\n    this.data_ = new Uint8Array(size[0] * size[1] * 4);\n  }\n}\n\nexport default WebGLRenderTarget;\n","/**\n * @module ol/render/webgl/constants\n */\n\n/**\n * @enum {string}\n */\nexport const WebGLWorkerMessageType = {\n  GENERATE_POLYGON_BUFFERS: 'GENERATE_POLYGON_BUFFERS',\n  GENERATE_POINT_BUFFERS: 'GENERATE_POINT_BUFFERS',\n  GENERATE_LINE_STRING_BUFFERS: 'GENERATE_LINE_STRING_BUFFERS',\n};\n\n/**\n * @typedef {Object} WebGLWorkerGenerateBuffersMessage\n * This message will trigger the generation of a vertex and an index buffer based on the given render instructions.\n * When the buffers are generated, the worked will send a message of the same type to the main thread, with\n * the generated buffers in it.\n * Note that any addition properties present in the message *will* be sent back to the main thread.\n * @property {number} id Message id; will be used both in request and response as a means of identification\n * @property {WebGLWorkerMessageType} type Message type\n * @property {ArrayBuffer} renderInstructions Polygon render instructions raw binary buffer.\n * @property {number} [customAttributesCount] Amount of custom attributes count in the polygon render instructions.\n * @property {ArrayBuffer} [vertexBuffer] Vertices array raw binary buffer (sent by the worker).\n * @property {ArrayBuffer} [indexBuffer] Indices array raw binary buffer (sent by the worker).\n * @property {import(\"../../transform\").Transform} [renderInstructionsTransform] Transformation matrix used to project the instructions coordinates\n */\n","'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 32767 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim | 0);\n            triangles.push(ear.i / dim | 0);\n            triangles.push(next.i / dim | 0);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    var p = c.next;\n    while (p !== a) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(x0, y0, minX, minY, invSize),\n        maxZ = zOrder(x1, y1, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim | 0);\n            triangles.push(p.i / dim | 0);\n            triangles.push(b.i / dim | 0);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\n                earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    var bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n\n    var bridgeReverse = splitPolygon(bridge, hole);\n\n    // filter collinear points around the cuts\n    filterPoints(bridgeReverse, bridgeReverse.next);\n    return filterPoints(bridge, bridge.next);\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                m = p.x < p.next.x ? p : p.next;\n                if (x === hx) return m; // hole touches outer segment; pick leftmost endpoint\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === 0) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = (x - minX) * invSize | 0;\n    y = (y - minY) * invSize | 0;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) >= (ax - px) * (cy - py) &&\n           (ax - px) * (by - py) >= (bx - px) * (ay - py) &&\n           (bx - px) * (cy - py) >= (cx - px) * (by - py);\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = 0;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","/**\n * @module ol/render/webgl/utils\n */\nimport earcut from 'earcut';\nimport {apply as applyTransform} from '../../transform.js';\nimport {clamp} from '../../math.js';\n\nconst tmpArray_ = [];\n\n/**\n * An object holding positions both in an index and a vertex buffer.\n * @typedef {Object} BufferPositions\n * @property {number} vertexPosition Position in the vertex buffer\n * @property {number} indexPosition Position in the index buffer\n */\nconst bufferPositions_ = {vertexPosition: 0, indexPosition: 0};\n\nfunction writePointVertex(buffer, pos, x, y, index) {\n  buffer[pos + 0] = x;\n  buffer[pos + 1] = y;\n  buffer[pos + 2] = index;\n}\n\n/**\n * Pushes a quad (two triangles) based on a point geometry\n * @param {Float32Array} instructions Array of render instructions for points.\n * @param {number} elementIndex Index from which render instructions will be read.\n * @param {Float32Array} vertexBuffer Buffer in the form of a typed array.\n * @param {Uint32Array} indexBuffer Buffer in the form of a typed array.\n * @param {number} customAttributesCount Amount of custom attributes for each element.\n * @param {BufferPositions} [bufferPositions] Buffer write positions; if not specified, positions will be set at 0.\n * @return {BufferPositions} New buffer positions where to write next\n * @property {number} vertexPosition New position in the vertex buffer where future writes should start.\n * @property {number} indexPosition New position in the index buffer where future writes should start.\n * @private\n */\nexport function writePointFeatureToBuffers(\n  instructions,\n  elementIndex,\n  vertexBuffer,\n  indexBuffer,\n  customAttributesCount,\n  bufferPositions\n) {\n  // This is for x, y and index\n  const baseVertexAttrsCount = 3;\n  const baseInstructionsCount = 2;\n  const stride = baseVertexAttrsCount + customAttributesCount;\n\n  const x = instructions[elementIndex + 0];\n  const y = instructions[elementIndex + 1];\n\n  // read custom numerical attributes on the feature\n  const customAttrs = tmpArray_;\n  customAttrs.length = customAttributesCount;\n  for (let i = 0; i < customAttrs.length; i++) {\n    customAttrs[i] = instructions[elementIndex + baseInstructionsCount + i];\n  }\n\n  let vPos = bufferPositions ? bufferPositions.vertexPosition : 0;\n  let iPos = bufferPositions ? bufferPositions.indexPosition : 0;\n  const baseIndex = vPos / stride;\n\n  // push vertices for each of the four quad corners (first standard then custom attributes)\n  writePointVertex(vertexBuffer, vPos, x, y, 0);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 1);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 2);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 3);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  indexBuffer[iPos++] = baseIndex;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 3;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 2;\n  indexBuffer[iPos++] = baseIndex + 3;\n\n  bufferPositions_.vertexPosition = vPos;\n  bufferPositions_.indexPosition = iPos;\n\n  return bufferPositions_;\n}\n\n/**\n * Pushes a single quad to form a line segment; also includes a computation for the join angles with previous and next\n * segment, in order to be able to offset the vertices correctly in the shader\n * @param {Float32Array} instructions Array of render instructions for lines.\n * @param {number} segmentStartIndex Index of the segment start point from which render instructions will be read.\n * @param {number} segmentEndIndex Index of the segment start point from which render instructions will be read.\n * @param {number|null} beforeSegmentIndex Index of the point right before the segment (null if none, e.g this is a line start)\n * @param {number|null} afterSegmentIndex Index of the point right after the segment (null if none, e.g this is a line end)\n * @param {Array<number>} vertexArray Array containing vertices.\n * @param {Array<number>} indexArray Array containing indices.\n * @param {Array<number>} customAttributes Array of custom attributes value\n * @param {import('../../transform.js').Transform} instructionsTransform Transform matrix used to project coordinates in instructions\n * @param {import('../../transform.js').Transform} invertInstructionsTransform Transform matrix used to project coordinates in instructions\n * @private\n */\nexport function writeLineSegmentToBuffers(\n  instructions,\n  segmentStartIndex,\n  segmentEndIndex,\n  beforeSegmentIndex,\n  afterSegmentIndex,\n  vertexArray,\n  indexArray,\n  customAttributes,\n  instructionsTransform,\n  invertInstructionsTransform\n) {\n  // compute the stride to determine how many vertices were already pushed\n  const baseVertexAttrsCount = 5; // base attributes: x0, y0, x1, y1, params (vertex number [0-3], join angle 1, join angle 2)\n  const stride = baseVertexAttrsCount + customAttributes.length;\n  const baseIndex = vertexArray.length / stride;\n\n  // The segment is composed of two positions called P0[x0, y0] and P1[x1, y1]\n  // Depending on whether there are points before and after the segment, its final shape\n  // will be different\n  const p0 = [\n    instructions[segmentStartIndex + 0],\n    instructions[segmentStartIndex + 1],\n  ];\n  const p1 = [instructions[segmentEndIndex], instructions[segmentEndIndex + 1]];\n\n  // to compute offsets from the line center we need to reproject\n  // coordinates back in world units and compute the length of the segment\n  const p0world = applyTransform(invertInstructionsTransform, [...p0]);\n  const p1world = applyTransform(invertInstructionsTransform, [...p1]);\n\n  function computeVertexParameters(vertexNumber, joinAngle1, joinAngle2) {\n    const shift = 10000;\n    const anglePrecision = 1500;\n    return (\n      Math.round(joinAngle1 * anglePrecision) +\n      Math.round(joinAngle2 * anglePrecision) * shift +\n      vertexNumber * shift * shift\n    );\n  }\n\n  // compute the angle between p0pA and p0pB\n  // returns a value in [0, 2PI]\n  function angleBetween(p0, pA, pB) {\n    const lenA = Math.sqrt(\n      (pA[0] - p0[0]) * (pA[0] - p0[0]) + (pA[1] - p0[1]) * (pA[1] - p0[1])\n    );\n    const tangentA = [(pA[0] - p0[0]) / lenA, (pA[1] - p0[1]) / lenA];\n    const orthoA = [-tangentA[1], tangentA[0]];\n    const lenB = Math.sqrt(\n      (pB[0] - p0[0]) * (pB[0] - p0[0]) + (pB[1] - p0[1]) * (pB[1] - p0[1])\n    );\n    const tangentB = [(pB[0] - p0[0]) / lenB, (pB[1] - p0[1]) / lenB];\n\n    // this angle can be clockwise or anticlockwise; hence the computation afterwards\n    const angle =\n      lenA === 0 || lenB === 0\n        ? 0\n        : Math.acos(\n            clamp(tangentB[0] * tangentA[0] + tangentB[1] * tangentA[1], -1, 1)\n          );\n    const isClockwise = tangentB[0] * orthoA[0] + tangentB[1] * orthoA[1] > 0;\n    return !isClockwise ? Math.PI * 2 - angle : angle;\n  }\n\n  const joinBefore = beforeSegmentIndex !== null;\n  const joinAfter = afterSegmentIndex !== null;\n\n  let angle0 = 0;\n  let angle1 = 0;\n\n  // add vertices and adapt offsets for P0 in case of join\n  if (joinBefore) {\n    // B for before\n    const pB = [\n      instructions[beforeSegmentIndex],\n      instructions[beforeSegmentIndex + 1],\n    ];\n    const pBworld = applyTransform(invertInstructionsTransform, [...pB]);\n    angle0 = angleBetween(p0world, p1world, pBworld);\n  }\n  // adapt offsets for P1 in case of join\n  if (joinAfter) {\n    // A for after\n    const pA = [\n      instructions[afterSegmentIndex],\n      instructions[afterSegmentIndex + 1],\n    ];\n    const pAworld = applyTransform(invertInstructionsTransform, [...pA]);\n    angle1 = angleBetween(p1world, p0world, pAworld);\n  }\n\n  // add main segment triangles\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    computeVertexParameters(0, angle0, angle1)\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    computeVertexParameters(1, angle0, angle1)\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    computeVertexParameters(2, angle0, angle1)\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    computeVertexParameters(3, angle0, angle1)\n  );\n  vertexArray.push(...customAttributes);\n\n  indexArray.push(\n    baseIndex,\n    baseIndex + 1,\n    baseIndex + 2,\n    baseIndex + 1,\n    baseIndex + 3,\n    baseIndex + 2\n  );\n}\n\n/**\n * Pushes several triangles to form a polygon, including holes\n * @param {Float32Array} instructions Array of render instructions for lines.\n * @param {number} polygonStartIndex Index of the polygon start point from which render instructions will be read.\n * @param {Array<number>} vertexArray Array containing vertices.\n * @param {Array<number>} indexArray Array containing indices.\n * @param {number} customAttributesCount Amount of custom attributes for each element.\n * @return {number} Next polygon instructions index\n * @private\n */\nexport function writePolygonTrianglesToBuffers(\n  instructions,\n  polygonStartIndex,\n  vertexArray,\n  indexArray,\n  customAttributesCount\n) {\n  const instructionsPerVertex = 2; // x, y\n  const attributesPerVertex = 2 + customAttributesCount;\n  let instructionsIndex = polygonStartIndex;\n  const customAttributes = instructions.slice(\n    instructionsIndex,\n    instructionsIndex + customAttributesCount\n  );\n  instructionsIndex += customAttributesCount;\n  const ringsCount = instructions[instructionsIndex++];\n  let verticesCount = 0;\n  const holes = new Array(ringsCount - 1);\n  for (let i = 0; i < ringsCount; i++) {\n    verticesCount += instructions[instructionsIndex++];\n    if (i < ringsCount - 1) {\n      holes[i] = verticesCount;\n    }\n  }\n  const flatCoords = instructions.slice(\n    instructionsIndex,\n    instructionsIndex + verticesCount * instructionsPerVertex\n  );\n\n  // pushing to vertices and indices!! this is where the magic happens\n  const result = earcut(flatCoords, holes, instructionsPerVertex);\n  for (let i = 0; i < result.length; i++) {\n    indexArray.push(result[i] + vertexArray.length / attributesPerVertex);\n  }\n  for (let i = 0; i < flatCoords.length; i += 2) {\n    vertexArray.push(flatCoords[i], flatCoords[i + 1], ...customAttributes);\n  }\n\n  return instructionsIndex + verticesCount * instructionsPerVertex;\n}\n\n/**\n * Returns a texture of 1x1 pixel, white\n * @private\n * @return {ImageData} Image data.\n */\nexport function getBlankImageData() {\n  const canvas = document.createElement('canvas');\n  const image = canvas.getContext('2d').createImageData(1, 1);\n  image.data[0] = 255;\n  image.data[1] = 255;\n  image.data[2] = 255;\n  image.data[3] = 255;\n  return image;\n}\n\n/**\n * Generates a color array based on a numerical id\n * Note: the range for each component is 0 to 1 with 256 steps\n * @param {number} id Id\n * @param {Array<number>} [array] Reusable array\n * @return {Array<number>} Color array containing the encoded id\n */\nexport function colorEncodeId(id, array) {\n  array = array || [];\n  const radix = 256;\n  const divide = radix - 1;\n  array[0] = Math.floor(id / radix / radix / radix) / divide;\n  array[1] = (Math.floor(id / radix / radix) % radix) / divide;\n  array[2] = (Math.floor(id / radix) % radix) / divide;\n  array[3] = (id % radix) / divide;\n  return array;\n}\n\n/**\n * Reads an id from a color-encoded array\n * Note: the expected range for each component is 0 to 1 with 256 steps.\n * @param {Array<number>} color Color array containing the encoded id\n * @return {number} Decoded id\n */\nexport function colorDecodeId(color) {\n  let id = 0;\n  const radix = 256;\n  const mult = radix - 1;\n  id += Math.round(color[0] * radix * radix * radix * mult);\n  id += Math.round(color[1] * radix * radix * mult);\n  id += Math.round(color[2] * radix * mult);\n  id += Math.round(color[3] * mult);\n  return id;\n}\n","/**\n * @module ol/renderer/webgl/PointsLayer\n */\nimport BaseVector from '../../layer/BaseVector.js';\nimport VectorEventType from '../../source/VectorEventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport WebGLRenderTarget from '../../webgl/RenderTarget.js';\nimport {ARRAY_BUFFER, DYNAMIC_DRAW, ELEMENT_ARRAY_BUFFER} from '../../webgl.js';\nimport {AttributeType, DefaultUniform} from '../../webgl/Helper.js';\nimport {WebGLWorkerMessageType} from '../../render/webgl/constants.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  makeInverse as makeInverseTransform,\n  multiply as multiplyTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {assert} from '../../asserts.js';\nimport {buffer, createEmpty, equals, getWidth} from '../../extent.js';\nimport {colorDecodeId, colorEncodeId} from '../../render/webgl/utils.js';\nimport {create as createWebGLWorker} from '../../worker/webgl.js';\nimport {getUid} from '../../util.js';\nimport {listen, unlistenByKey} from '../../events.js';\n\n/**\n * @typedef {Object} CustomAttribute A description of a custom attribute to be passed on to the GPU, with a value different\n * for each feature.\n * @property {string} name Attribute name.\n * @property {function(import(\"../../Feature\").default, Object<string, *>):number} callback This callback computes the numerical value of the\n * attribute for a given feature (properties are available as 2nd arg for quicker access).\n */\n\n/**\n * @typedef {Object} FeatureCacheItem Object that holds a reference to a feature, its geometry and properties. Used to optimize\n * rebuildBuffers by accessing these objects quicker.\n * @property {import(\"../../Feature\").default} feature Feature\n * @property {Object<string, *>} properties Feature properties\n * @property {import(\"../../geom\").Geometry} geometry Feature geometry\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the canvas element.\n * @property {Array<CustomAttribute>} [attributes] These attributes will be read from the features in the source and then\n * passed to the GPU. The `name` property of each attribute will serve as its identifier:\n *  * In the vertex shader as an `attribute` by prefixing it with `a_`\n *  * In the fragment shader as a `varying` by prefixing it with `v_`\n * Please note that these can only be numerical values.\n * @property {string} vertexShader Vertex shader source, mandatory.\n * @property {string} fragmentShader Fragment shader source, mandatory.\n * @property {string} [hitVertexShader] Vertex shader source for hit detection rendering.\n * @property {string} [hitFragmentShader] Fragment shader source for hit detection rendering.\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * Please note that `u_texture` is reserved for the main texture slot and `u_opacity` is reserved for the layer opacity.\n * @property {Array<import(\"./Layer\").PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * WebGL vector renderer optimized for points.\n * All features will be rendered as quads (two triangles forming a square). New data will be flushed to the GPU\n * every time the vector source changes.\n *\n * You need to provide vertex and fragment shaders for rendering. This can be done using\n * {@link module:ol/webgl/ShaderBuilder~ShaderBuilder} utilities. These shaders shall expect a `a_position` attribute\n * containing the screen-space projected center of the quad, as well as a `a_index` attribute\n * whose value (0, 1, 2 or 3) indicates which quad vertex is currently getting processed (see structure below).\n *\n * To include variable attributes in the shaders, you need to declare them using the `attributes` property of\n * the options object like so:\n * ```js\n * new WebGLPointsLayerRenderer(layer, {\n *   attributes: [\n *     {\n *       name: 'size',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *     {\n *       name: 'weight',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *   ],\n *   vertexShader:\n *     // shader using attribute a_weight and a_size\n *   fragmentShader:\n *     // shader using varying v_weight and v_size\n * ```\n *\n * To enable hit detection, you must as well provide dedicated shaders using the `hitVertexShader`\n * and `hitFragmentShader` properties. These shall expect the `a_hitColor` attribute to contain\n * the final color that will have to be output for hit detection to work.\n *\n * The following uniform is used for the main texture: `u_texture`.\n * The following uniform is used for the layer opacity: `u_opacity`.\n *\n * Please note that the main shader output should have premultiplied alpha, otherwise visual anomalies may occur.\n *\n * Points are rendered as quads with the following structure:\n *\n * ```\n *   (u0, v1)      (u1, v1)\n *  [3]----------[2]\n *   |`           |\n *   |  `         |\n *   |    `       |\n *   |      `     |\n *   |        `   |\n *   |          ` |\n *  [0]----------[1]\n *   (u0, v0)      (u1, v0)\n *  ```\n *\n * This uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\n *\n * @api\n */\nclass WebGLPointsLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n   * @param {Options} options Options.\n   */\n  constructor(layer, options) {\n    const uniforms = options.uniforms || {};\n    const projectionMatrixTransform = createTransform();\n    uniforms[DefaultUniform.PROJECTION_MATRIX] = projectionMatrixTransform;\n\n    super(layer, {\n      uniforms: uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    this.ready = false;\n\n    this.sourceRevision_ = -1;\n\n    this.verticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n    this.hitVerticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n    this.indicesBuffer_ = new WebGLArrayBuffer(\n      ELEMENT_ARRAY_BUFFER,\n      DYNAMIC_DRAW\n    );\n\n    /**\n     * @private\n     */\n    this.vertexShader_ = options.vertexShader;\n\n    /**\n     * @private\n     */\n    this.fragmentShader_ = options.fragmentShader;\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.program_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hitDetectionEnabled_ =\n      options.hitFragmentShader && options.hitVertexShader ? true : false;\n\n    /**\n     * @private\n     */\n    this.hitVertexShader_ = options.hitVertexShader;\n\n    /**\n     * @private\n     */\n    this.hitFragmentShader_ = options.hitFragmentShader;\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.hitProgram_;\n\n    const customAttributes = options.attributes\n      ? options.attributes.map(function (attribute) {\n          return {\n            name: 'a_' + attribute.name,\n            size: 1,\n            type: AttributeType.FLOAT,\n          };\n        })\n      : [];\n\n    /**\n     * A list of attributes used by the renderer. By default only the position and\n     * index of the vertex (0 to 3) are required.\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     */\n    this.attributes = [\n      {\n        name: 'a_position',\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_index',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ].concat(customAttributes);\n\n    /**\n     * A list of attributes used for hit detection.\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     */\n    this.hitDetectionAttributes = [\n      {\n        name: 'a_position',\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_index',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_hitColor',\n        size: 4,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_featureUid',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ].concat(customAttributes);\n\n    this.customAttributes = options.attributes ? options.attributes : [];\n\n    this.previousExtent_ = createEmpty();\n\n    /**\n     * This transform is updated on every frame and is the composition of:\n     * - invert of the world->screen transform that was used when rebuilding buffers (see `this.renderTransform_`)\n     * - current world->screen transform\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.currentTransform_ = projectionMatrixTransform;\n\n    /**\n     * This transform is updated when buffers are rebuilt and converts world space coordinates to screen space\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.renderTransform_ = createTransform();\n\n    /**\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.invertRenderTransform_ = createTransform();\n\n    /**\n     * @type {Float32Array}\n     * @private\n     */\n    this.renderInstructions_ = new Float32Array(0);\n\n    /**\n     * These instructions are used for hit detection\n     * @type {Float32Array}\n     * @private\n     */\n    this.hitRenderInstructions_ = new Float32Array(0);\n\n    /**\n     * @type {WebGLRenderTarget}\n     * @private\n     */\n    this.hitRenderTarget_;\n\n    /**\n     * Keep track of latest message sent to worker\n     * @type {number}\n     * @private\n     */\n    this.generateBuffersRun_ = 0;\n\n    /**\n     * @private\n     */\n    this.worker_ = createWebGLWorker();\n\n    this.worker_.addEventListener(\n      'message',\n      /**\n       * @param {*} event Event.\n       */\n      (event) => {\n        const received = event.data;\n        if (received.type === WebGLWorkerMessageType.GENERATE_POINT_BUFFERS) {\n          const projectionTransform = received.projectionTransform;\n          if (received.hitDetection) {\n            this.hitVerticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n            this.helper.flushBufferData(this.hitVerticesBuffer_);\n          } else {\n            this.verticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n            this.helper.flushBufferData(this.verticesBuffer_);\n          }\n          this.indicesBuffer_.fromArrayBuffer(received.indexBuffer);\n          this.helper.flushBufferData(this.indicesBuffer_);\n\n          this.renderTransform_ = projectionTransform;\n          makeInverseTransform(\n            this.invertRenderTransform_,\n            this.renderTransform_\n          );\n          if (received.hitDetection) {\n            this.hitRenderInstructions_ = new Float32Array(\n              event.data.renderInstructions\n            );\n          } else {\n            this.renderInstructions_ = new Float32Array(\n              event.data.renderInstructions\n            );\n            if (received.generateBuffersRun === this.generateBuffersRun_) {\n              this.ready = true;\n            }\n          }\n\n          this.getLayer().changed();\n        }\n      }\n    );\n\n    /**\n     * This object will be updated when the source changes. Key is uid.\n     * @type {Object<string, FeatureCacheItem>}\n     * @private\n     */\n    this.featureCache_ = {};\n\n    /**\n     * Amount of features in the cache.\n     * @type {number}\n     * @private\n     */\n    this.featureCount_ = 0;\n\n    const source = this.getLayer().getSource();\n    this.sourceListenKeys_ = [\n      listen(\n        source,\n        VectorEventType.ADDFEATURE,\n        this.handleSourceFeatureAdded_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.CHANGEFEATURE,\n        this.handleSourceFeatureChanged_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceFeatureDelete_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.CLEAR,\n        this.handleSourceFeatureClear_,\n        this\n      ),\n    ];\n    source.forEachFeature((feature) => {\n      this.featureCache_[getUid(feature)] = {\n        feature: feature,\n        properties: feature.getProperties(),\n        geometry: feature.getGeometry(),\n      };\n      this.featureCount_++;\n    });\n  }\n\n  afterHelperCreated() {\n    this.program_ = this.helper.getProgram(\n      this.fragmentShader_,\n      this.vertexShader_\n    );\n\n    if (this.hitDetectionEnabled_) {\n      this.hitProgram_ = this.helper.getProgram(\n        this.hitFragmentShader_,\n        this.hitVertexShader_\n      );\n\n      this.hitRenderTarget_ = new WebGLRenderTarget(this.helper);\n    }\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureAdded_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n    this.featureCount_++;\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureChanged_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureDelete_(event) {\n    const feature = event.feature;\n    delete this.featureCache_[getUid(feature)];\n    this.featureCount_--;\n  }\n\n  /**\n   * @private\n   */\n  handleSourceFeatureClear_() {\n    this.featureCache_ = {};\n    this.featureCount_ = 0;\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    const gl = this.helper.getGL();\n    this.preRender(gl, frameState);\n\n    const projection = frameState.viewState.projection;\n    const layer = this.getLayer();\n    const vectorSource = layer.getSource();\n    // FIXME fix hit detection isn't reliable when rendering multiple worlds\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const projectionExtent = projection.getExtent();\n\n    const extent = frameState.extent;\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n\n    const startWorld = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n\n    let world = startWorld;\n    const renderCount = this.indicesBuffer_.getSize();\n\n    do {\n      // apply the current projection transform with the invert of the one used to fill buffers\n      this.helper.makeProjectionTransform(frameState, this.currentTransform_);\n      translateTransform(this.currentTransform_, world * worldWidth, 0);\n      multiplyTransform(this.currentTransform_, this.invertRenderTransform_);\n      this.helper.applyUniforms(frameState);\n\n      this.helper.drawElements(0, renderCount);\n    } while (++world < endWorld);\n\n    this.helper.finalizeDraw(\n      frameState,\n      this.dispatchPreComposeEvent,\n      this.dispatchPostComposeEvent\n    );\n    const canvas = this.helper.getCanvas();\n\n    if (this.hitDetectionEnabled_) {\n      this.renderHitDetection(frameState, startWorld, endWorld, worldWidth);\n      this.hitRenderTarget_.clearCachedData();\n    }\n\n    this.postRender(gl, frameState);\n\n    return canvas;\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrameInternal(frameState) {\n    const layer = this.getLayer();\n    const vectorSource = layer.getSource();\n    const viewState = frameState.viewState;\n    const viewNotMoving =\n      !frameState.viewHints[ViewHint.ANIMATING] &&\n      !frameState.viewHints[ViewHint.INTERACTING];\n    const extentChanged = !equals(this.previousExtent_, frameState.extent);\n    const sourceChanged = this.sourceRevision_ < vectorSource.getRevision();\n\n    if (sourceChanged) {\n      this.sourceRevision_ = vectorSource.getRevision();\n    }\n\n    if (viewNotMoving && (extentChanged || sourceChanged)) {\n      const projection = viewState.projection;\n      const resolution = viewState.resolution;\n\n      const renderBuffer =\n        layer instanceof BaseVector ? layer.getRenderBuffer() : 0;\n      const extent = buffer(frameState.extent, renderBuffer * resolution);\n      vectorSource.loadFeatures(extent, resolution, projection);\n\n      this.rebuildBuffers_(frameState);\n      this.previousExtent_ = frameState.extent.slice();\n    }\n\n    this.helper.useProgram(this.program_, frameState);\n    this.helper.prepareDraw(frameState);\n\n    // write new data\n    this.helper.bindBuffer(this.verticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n    this.helper.enableAttributes(this.attributes);\n\n    return true;\n  }\n\n  /**\n   * Rebuild internal webgl buffers based on current view extent; costly, should not be called too much\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  rebuildBuffers_(frameState) {\n    // saves the projection transform for the current frame state\n    const projectionTransform = createTransform();\n    this.helper.makeProjectionTransform(frameState, projectionTransform);\n\n    // here we anticipate the amount of render instructions that we well generate\n    // this can be done since we know that for normal render we only have x, y as base instructions,\n    // and x, y, r, g, b, a and featureUid for hit render instructions\n    // and we also know the amount of custom attributes to append to these\n    const totalInstructionsCount =\n      (2 + this.customAttributes.length) * this.featureCount_;\n    if (\n      !this.renderInstructions_ ||\n      this.renderInstructions_.length !== totalInstructionsCount\n    ) {\n      this.renderInstructions_ = new Float32Array(totalInstructionsCount);\n    }\n    if (this.hitDetectionEnabled_) {\n      const totalHitInstructionsCount =\n        (7 + this.customAttributes.length) * this.featureCount_;\n      if (\n        !this.hitRenderInstructions_ ||\n        this.hitRenderInstructions_.length !== totalHitInstructionsCount\n      ) {\n        this.hitRenderInstructions_ = new Float32Array(\n          totalHitInstructionsCount\n        );\n      }\n    }\n\n    // loop on features to fill the buffer\n    let featureCache, geometry;\n    const tmpCoords = [];\n    const tmpColor = [];\n    let renderIndex = 0;\n    let hitIndex = 0;\n    let hitColor;\n    for (const featureUid in this.featureCache_) {\n      featureCache = this.featureCache_[featureUid];\n      geometry = /** @type {import(\"../../geom\").Point} */ (\n        featureCache.geometry\n      );\n      if (!geometry || geometry.getType() !== 'Point') {\n        continue;\n      }\n\n      tmpCoords[0] = geometry.getFlatCoordinates()[0];\n      tmpCoords[1] = geometry.getFlatCoordinates()[1];\n      applyTransform(projectionTransform, tmpCoords);\n\n      hitColor = colorEncodeId(hitIndex + 6, tmpColor);\n\n      this.renderInstructions_[renderIndex++] = tmpCoords[0];\n      this.renderInstructions_[renderIndex++] = tmpCoords[1];\n\n      // for hit detection, the feature uid is saved in the opacity value\n      // and the index of the opacity value is encoded in the color values\n      if (this.hitDetectionEnabled_) {\n        this.hitRenderInstructions_[hitIndex++] = tmpCoords[0];\n        this.hitRenderInstructions_[hitIndex++] = tmpCoords[1];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[0];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[1];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[2];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[3];\n        this.hitRenderInstructions_[hitIndex++] = Number(featureUid);\n      }\n\n      // pushing custom attributes\n      let value;\n      for (let j = 0; j < this.customAttributes.length; j++) {\n        value = this.customAttributes[j].callback(\n          featureCache.feature,\n          featureCache.properties\n        );\n        this.renderInstructions_[renderIndex++] = value;\n        if (this.hitDetectionEnabled_) {\n          this.hitRenderInstructions_[hitIndex++] = value;\n        }\n      }\n    }\n\n    /** @type {import('../../render/webgl/constants.js').WebGLWorkerGenerateBuffersMessage} */\n    const message = {\n      id: 0,\n      type: WebGLWorkerMessageType.GENERATE_POINT_BUFFERS,\n      renderInstructions: this.renderInstructions_.buffer,\n      customAttributesCount: this.customAttributes.length,\n    };\n    // additional properties will be sent back as-is by the worker\n    message['projectionTransform'] = projectionTransform;\n    message['generateBuffersRun'] = ++this.generateBuffersRun_;\n    this.ready = false;\n    this.worker_.postMessage(message, [this.renderInstructions_.buffer]);\n    this.renderInstructions_ = null;\n\n    /** @type {import('../../render/webgl/constants.js').WebGLWorkerGenerateBuffersMessage} */\n    if (this.hitDetectionEnabled_) {\n      const hitMessage = {\n        id: 0,\n        type: WebGLWorkerMessageType.GENERATE_POINT_BUFFERS,\n        renderInstructions: this.hitRenderInstructions_.buffer,\n        customAttributesCount: 5 + this.customAttributes.length,\n      };\n      hitMessage['projectionTransform'] = projectionTransform;\n      hitMessage['hitDetection'] = true;\n      this.worker_.postMessage(hitMessage, [\n        this.hitRenderInstructions_.buffer,\n      ]);\n      this.hitRenderInstructions_ = null;\n    }\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    assert(this.hitDetectionEnabled_, 66);\n    if (!this.hitRenderInstructions_) {\n      return undefined;\n    }\n\n    const pixel = applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice()\n    );\n\n    const data = this.hitRenderTarget_.readPixel(pixel[0] / 2, pixel[1] / 2);\n    const color = [data[0] / 255, data[1] / 255, data[2] / 255, data[3] / 255];\n    const index = colorDecodeId(color);\n    const opacity = this.hitRenderInstructions_[index];\n    const uid = Math.floor(opacity).toString();\n\n    const source = this.getLayer().getSource();\n    const feature = source.getFeatureByUid(uid);\n    if (feature) {\n      return callback(feature, this.getLayer(), null);\n    }\n    return undefined;\n  }\n\n  /**\n   * Render the hit detection data to the corresponding render target\n   * @param {import(\"../../Map.js\").FrameState} frameState current frame state\n   * @param {number} startWorld the world to render in the first iteration\n   * @param {number} endWorld the last world to render\n   * @param {number} worldWidth the width of the worlds being rendered\n   */\n  renderHitDetection(frameState, startWorld, endWorld, worldWidth) {\n    // skip render entirely if vertex buffers not ready/generated yet\n    if (!this.hitVerticesBuffer_.getSize()) {\n      return;\n    }\n\n    let world = startWorld;\n\n    this.hitRenderTarget_.setSize([\n      Math.floor(frameState.size[0] / 2),\n      Math.floor(frameState.size[1] / 2),\n    ]);\n\n    this.helper.useProgram(this.hitProgram_, frameState);\n    this.helper.prepareDrawToRenderTarget(\n      frameState,\n      this.hitRenderTarget_,\n      true\n    );\n\n    this.helper.bindBuffer(this.hitVerticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n    this.helper.enableAttributes(this.hitDetectionAttributes);\n\n    do {\n      this.helper.makeProjectionTransform(frameState, this.currentTransform_);\n      translateTransform(this.currentTransform_, world * worldWidth, 0);\n      multiplyTransform(this.currentTransform_, this.invertRenderTransform_);\n      this.helper.applyUniforms(frameState);\n\n      const renderCount = this.indicesBuffer_.getSize();\n      this.helper.drawElements(0, renderCount);\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.worker_.terminate();\n    this.layer_ = null;\n    this.sourceListenKeys_.forEach(function (key) {\n      unlistenByKey(key);\n    });\n    this.sourceListenKeys_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default WebGLPointsLayerRenderer;\n","\n        export function create() {\n          const source = \"const e=\\\"GENERATE_POLYGON_BUFFERS\\\",t=\\\"GENERATE_POINT_BUFFERS\\\",n=\\\"GENERATE_LINE_STRING_BUFFERS\\\",r={1:\\\"The view center is not defined\\\",2:\\\"The view resolution is not defined\\\",3:\\\"The view rotation is not defined\\\",4:\\\"`image` and `src` cannot be provided at the same time\\\",5:\\\"`imgSize` must be set when `image` is provided\\\",7:\\\"`format` must be set when `url` is set\\\",8:\\\"Unknown `serverType` configured\\\",9:\\\"`url` must be configured or set using `#setUrl()`\\\",10:\\\"The default `geometryFunction` can only handle `Point` geometries\\\",11:\\\"`options.featureTypes` must be an Array\\\",12:\\\"`options.geometryName` must also be provided when `options.bbox` is set\\\",13:\\\"Invalid corner\\\",14:\\\"Invalid color\\\",15:\\\"Tried to get a value for a key that does not exist in the cache\\\",16:\\\"Tried to set a value for a key that is used already\\\",17:\\\"`resolutions` must be sorted in descending order\\\",18:\\\"Either `origin` or `origins` must be configured, never both\\\",19:\\\"Number of `tileSizes` and `resolutions` must be equal\\\",20:\\\"Number of `origins` and `resolutions` must be equal\\\",22:\\\"Either `tileSize` or `tileSizes` must be configured, never both\\\",24:\\\"Invalid extent or geometry provided as `geometry`\\\",25:\\\"Cannot fit empty extent provided as `geometry`\\\",26:\\\"Features must have an id set\\\",27:\\\"Features must have an id set\\\",28:'`renderMode` must be `\\\"hybrid\\\"` or `\\\"vector\\\"`',30:\\\"The passed `feature` was already added to the source\\\",31:\\\"Tried to enqueue an `element` that was already added to the queue\\\",32:\\\"Transformation matrix cannot be inverted\\\",33:\\\"Invalid units\\\",34:\\\"Invalid geometry layout\\\",36:\\\"Unknown SRS type\\\",37:\\\"Unknown geometry type found\\\",38:\\\"`styleMapValue` has an unknown type\\\",39:\\\"Unknown geometry type\\\",40:\\\"Expected `feature` to have a geometry\\\",41:\\\"Expected an `ol/style/Style` or an array of `ol/style/Style.js`\\\",42:\\\"Question unknown, the answer is 42\\\",43:\\\"Expected `layers` to be an array or a `Collection`\\\",47:\\\"Expected `controls` to be an array or an `ol/Collection`\\\",48:\\\"Expected `interactions` to be an array or an `ol/Collection`\\\",49:\\\"Expected `overlays` to be an array or an `ol/Collection`\\\",50:\\\"`options.featureTypes` should be an Array\\\",51:\\\"Either `url` or `tileJSON` options must be provided\\\",52:\\\"Unknown `serverType` configured\\\",53:\\\"Unknown `tierSizeCalculation` configured\\\",55:\\\"The {-y} placeholder requires a tile grid with extent\\\",56:\\\"mapBrowserEvent must originate from a pointer event\\\",57:\\\"At least 2 conditions are required\\\",59:\\\"Invalid command found in the PBF\\\",60:\\\"Missing or invalid `size`\\\",61:\\\"Cannot determine IIIF Image API version from provided image information JSON\\\",62:\\\"A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`\\\",64:\\\"Layer opacity must be a number\\\",66:\\\"`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`\\\",67:\\\"A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both\\\",68:\\\"A VectorTile source can only be rendered if it has a projection compatible with the view projection\\\",69:\\\"`width` or `height` cannot be provided together with `scale`\\\"};class o extends Error{constructor(e){const t=r[e];super(t),this.code=e,this.name=\\\"AssertionError\\\",this.message=t}}var i=o;function a(e,t){const n=t[0],r=t[1];return t[0]=e[0]*n+e[2]*r+e[4],t[1]=e[1]*n+e[3]*r+e[5],t}function s(e,t){const n=(r=t)[0]*r[3]-r[1]*r[2];var r;!function(e,t){if(!e)throw new i(t)}(0!==n,32);const o=t[0],a=t[1],s=t[2],u=t[3],f=t[4],x=t[5];return e[0]=u/n,e[1]=-a/n,e[2]=-s/n,e[3]=o/n,e[4]=(s*x-u*f)/n,e[5]=-(o*x-a*f)/n,e}new Array(6);var u={};function f(e,t,n){n=n||2;var r,o,i,a,s,u,f,l=t&&t.length,c=l?t[0]*n:e.length,v=x(e,0,c,n,!0),d=[];if(!v||v.next===v.prev)return d;if(l&&(v=function(e,t,n,r){var o,i,a,s=[];for(o=0,i=t.length;o<i;o++)(a=x(e,t[o]*r,o<i-1?t[o+1]*r:e.length,r,!1))===a.next&&(a.steiner=!0),s.push(w(a));for(s.sort(p),o=0;o<s.length;o++)n=b(s[o],n);return n}(e,t,v,n)),e.length>80*n){r=i=e[0],o=a=e[1];for(var y=n;y<c;y+=n)(s=e[y])<r&&(r=s),(u=e[y+1])<o&&(o=u),s>i&&(i=s),u>a&&(a=u);f=0!==(f=Math.max(i-r,a-o))?32767/f:0}return h(v,d,n,r,o,f,0),d}function x(e,t,n,r,o){var i,a;if(o===B(e,t,n,r)>0)for(i=t;i<n;i+=r)a=k(i,e[i],e[i+1],a);else for(i=n-r;i>=t;i-=r)a=k(i,e[i],e[i+1],a);return a&&M(a,a.next)&&(z(a),a=a.next),a}function l(e,t){if(!e)return e;t||(t=e);var n,r=e;do{if(n=!1,r.steiner||!M(r,r.next)&&0!==Z(r.prev,r,r.next))r=r.next;else{if(z(r),(r=t=r.prev)===r.next)break;n=!0}}while(n||r!==t);return t}function h(e,t,n,r,o,i,a){if(e){!a&&i&&function(e,t,n,r){var o=e;do{0===o.z&&(o.z=m(o.x,o.y,t,n,r)),o.prevZ=o.prev,o.nextZ=o.next,o=o.next}while(o!==e);o.prevZ.nextZ=null,o.prevZ=null,function(e){var t,n,r,o,i,a,s,u,f=1;do{for(n=e,e=null,i=null,a=0;n;){for(a++,r=n,s=0,t=0;t<f&&(s++,r=r.nextZ);t++);for(u=f;s>0||u>0&&r;)0!==s&&(0===u||!r||n.z<=r.z)?(o=n,n=n.nextZ,s--):(o=r,r=r.nextZ,u--),i?i.nextZ=o:e=o,o.prevZ=i,i=o;n=r}i.nextZ=null,f*=2}while(a>1)}(o)}(e,r,o,i);for(var s,u,f=e;e.prev!==e.next;)if(s=e.prev,u=e.next,i?v(e,r,o,i):c(e))t.push(s.i/n|0),t.push(e.i/n|0),t.push(u.i/n|0),z(e),e=u.next,f=u.next;else if((e=u)===f){a?1===a?h(e=d(l(e),t,n),t,n,r,o,i,2):2===a&&y(e,t,n,r,o,i):h(l(e),t,n,r,o,i,1);break}}}function c(e){var t=e.prev,n=e,r=e.next;if(Z(t,n,r)>=0)return!1;for(var o=t.x,i=n.x,a=r.x,s=t.y,u=n.y,f=r.y,x=o<i?o<a?o:a:i<a?i:a,l=s<u?s<f?s:f:u<f?u:f,h=o>i?o>a?o:a:i>a?i:a,c=s>u?s>f?s:f:u>f?u:f,v=r.next;v!==t;){if(v.x>=x&&v.x<=h&&v.y>=l&&v.y<=c&&A(o,s,i,u,a,f,v.x,v.y)&&Z(v.prev,v,v.next)>=0)return!1;v=v.next}return!0}function v(e,t,n,r){var o=e.prev,i=e,a=e.next;if(Z(o,i,a)>=0)return!1;for(var s=o.x,u=i.x,f=a.x,x=o.y,l=i.y,h=a.y,c=s<u?s<f?s:f:u<f?u:f,v=x<l?x<h?x:h:l<h?l:h,d=s>u?s>f?s:f:u>f?u:f,y=x>l?x>h?x:h:l>h?l:h,p=m(c,v,t,n,r),b=m(d,y,t,n,r),g=e.prevZ,w=e.nextZ;g&&g.z>=p&&w&&w.z<=b;){if(g.x>=c&&g.x<=d&&g.y>=v&&g.y<=y&&g!==o&&g!==a&&A(s,x,u,l,f,h,g.x,g.y)&&Z(g.prev,g,g.next)>=0)return!1;if(g=g.prevZ,w.x>=c&&w.x<=d&&w.y>=v&&w.y<=y&&w!==o&&w!==a&&A(s,x,u,l,f,h,w.x,w.y)&&Z(w.prev,w,w.next)>=0)return!1;w=w.nextZ}for(;g&&g.z>=p;){if(g.x>=c&&g.x<=d&&g.y>=v&&g.y<=y&&g!==o&&g!==a&&A(s,x,u,l,f,h,g.x,g.y)&&Z(g.prev,g,g.next)>=0)return!1;g=g.prevZ}for(;w&&w.z<=b;){if(w.x>=c&&w.x<=d&&w.y>=v&&w.y<=y&&w!==o&&w!==a&&A(s,x,u,l,f,h,w.x,w.y)&&Z(w.prev,w,w.next)>=0)return!1;w=w.nextZ}return!0}function d(e,t,n){var r=e;do{var o=r.prev,i=r.next.next;!M(o,i)&&F(o,r,r.next,i)&&S(o,i)&&S(i,o)&&(t.push(o.i/n|0),t.push(r.i/n|0),t.push(i.i/n|0),z(r),z(r.next),r=e=i),r=r.next}while(r!==e);return l(r)}function y(e,t,n,r,o,i){var a=e;do{for(var s=a.next.next;s!==a.prev;){if(a.i!==s.i&&E(a,s)){var u=U(a,s);return a=l(a,a.next),u=l(u,u.next),h(a,t,n,r,o,i,0),void h(u,t,n,r,o,i,0)}s=s.next}a=a.next}while(a!==e)}function p(e,t){return e.x-t.x}function b(e,t){var n=function(e,t){var n,r=t,o=e.x,i=e.y,a=-1/0;do{if(i<=r.y&&i>=r.next.y&&r.next.y!==r.y){var s=r.x+(i-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(s<=o&&s>a&&(a=s,n=r.x<r.next.x?r:r.next,s===o))return n}r=r.next}while(r!==t);if(!n)return null;var u,f=n,x=n.x,l=n.y,h=1/0;r=n;do{o>=r.x&&r.x>=x&&o!==r.x&&A(i<l?o:a,i,x,l,i<l?a:o,i,r.x,r.y)&&(u=Math.abs(i-r.y)/(o-r.x),S(r,e)&&(u<h||u===h&&(r.x>n.x||r.x===n.x&&g(n,r)))&&(n=r,h=u)),r=r.next}while(r!==f);return n}(e,t);if(!n)return t;var r=U(n,e);return l(r,r.next),l(n,n.next)}function g(e,t){return Z(e.prev,e,t.prev)<0&&Z(t.next,e,e.next)<0}function m(e,t,n,r,o){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=(e-n)*o|0)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=(t-r)*o|0)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function w(e){var t=e,n=e;do{(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next}while(t!==e);return n}function A(e,t,n,r,o,i,a,s){return(o-a)*(t-s)>=(e-a)*(i-s)&&(e-a)*(r-s)>=(n-a)*(t-s)&&(n-a)*(i-s)>=(o-a)*(r-s)}function E(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){var n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&F(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}(e,t)&&(S(e,t)&&S(t,e)&&function(e,t){var n=e,r=!1,o=(e.x+t.x)/2,i=(e.y+t.y)/2;do{n.y>i!=n.next.y>i&&n.next.y!==n.y&&o<(n.next.x-n.x)*(i-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==e);return r}(e,t)&&(Z(e.prev,e,t.prev)||Z(e,t.prev,t))||M(e,t)&&Z(e.prev,e,e.next)>0&&Z(t.prev,t,t.next)>0)}function Z(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function M(e,t){return e.x===t.x&&e.y===t.y}function F(e,t,n,r){var o=I(Z(e,t,n)),i=I(Z(e,t,r)),a=I(Z(n,r,e)),s=I(Z(n,r,t));return o!==i&&a!==s||(!(0!==o||!T(e,n,t))||(!(0!==i||!T(e,r,t))||(!(0!==a||!T(n,e,r))||!(0!==s||!T(n,t,r)))))}function T(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function I(e){return e>0?1:e<0?-1:0}function S(e,t){return Z(e.prev,e,e.next)<0?Z(e,t,e.next)>=0&&Z(e,e.prev,t)>=0:Z(e,t,e.prev)<0||Z(e,e.next,t)<0}function U(e,t){var n=new R(e.i,e.x,e.y),r=new R(t.i,t.x,t.y),o=e.next,i=t.prev;return e.next=t,t.prev=e,n.next=o,o.prev=n,r.next=n,n.prev=r,i.next=r,r.prev=i,r}function k(e,t,n,r){var o=new R(e,t,n);return r?(o.next=r.next,o.prev=r,r.next.prev=o,r.next=o):(o.prev=o,o.next=o),o}function z(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function R(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function B(e,t,n,r){for(var o=0,i=t,a=n-r;i<n;i+=r)o+=(e[a]-e[i])*(e[i+1]+e[a+1]),a=i;return o}({get exports(){return u},set exports(e){u=e}}).exports=f,u.default=f,f.deviation=function(e,t,n,r){var o=t&&t.length,i=o?t[0]*n:e.length,a=Math.abs(B(e,0,i,n));if(o)for(var s=0,u=t.length;s<u;s++){var f=t[s]*n,x=s<u-1?t[s+1]*n:e.length;a-=Math.abs(B(e,f,x,n))}var l=0;for(s=0;s<r.length;s+=3){var h=r[s]*n,c=r[s+1]*n,v=r[s+2]*n;l+=Math.abs((e[h]-e[v])*(e[c+1]-e[h+1])-(e[h]-e[c])*(e[v+1]-e[h+1]))}return 0===a&&0===l?0:Math.abs((l-a)/a)},f.flatten=function(e){for(var t=e[0][0].length,n={vertices:[],holes:[],dimensions:t},r=0,o=0;o<e.length;o++){for(var i=0;i<e[o].length;i++)for(var a=0;a<t;a++)n.vertices.push(e[o][i][a]);o>0&&(r+=e[o-1].length,n.holes.push(r))}return n};const N=[],P={vertexPosition:0,indexPosition:0};function C(e,t,n,r,o){e[t+0]=n,e[t+1]=r,e[t+2]=o}function _(e,t,n,r,o,i){const a=3+o,s=e[t+0],u=e[t+1],f=N;f.length=o;for(let n=0;n<f.length;n++)f[n]=e[t+2+n];let x=i?i.vertexPosition:0,l=i?i.indexPosition:0;const h=x/a;return C(n,x,s,u,0),f.length&&n.set(f,x+3),x+=a,C(n,x,s,u,1),f.length&&n.set(f,x+3),x+=a,C(n,x,s,u,2),f.length&&n.set(f,x+3),x+=a,C(n,x,s,u,3),f.length&&n.set(f,x+3),x+=a,r[l++]=h,r[l++]=h+1,r[l++]=h+3,r[l++]=h+1,r[l++]=h+2,r[l++]=h+3,P.vertexPosition=x,P.indexPosition=l,P}function q(e,t,n,r,o,i,s,u,f,x){const l=5+u.length,h=i.length/l,c=[e[t+0],e[t+1]],v=[e[n],e[n+1]],d=a(x,[...c]),y=a(x,[...v]);function p(e,t,n){const r=1e4;return Math.round(1500*t)+Math.round(1500*n)*r+e*r*r}function b(e,t,n){const r=Math.sqrt((t[0]-e[0])*(t[0]-e[0])+(t[1]-e[1])*(t[1]-e[1])),o=[(t[0]-e[0])/r,(t[1]-e[1])/r],i=[-o[1],o[0]],a=Math.sqrt((n[0]-e[0])*(n[0]-e[0])+(n[1]-e[1])*(n[1]-e[1])),s=[(n[0]-e[0])/a,(n[1]-e[1])/a],u=0===r||0===a?0:Math.acos((f=s[0]*o[0]+s[1]*o[1],x=-1,l=1,Math.min(Math.max(f,x),l)));var f,x,l;return s[0]*i[0]+s[1]*i[1]>0?u:2*Math.PI-u}const g=null!==o;let m=0,w=0;if(null!==r){m=b(d,y,a(x,[...[e[r],e[r+1]]]))}if(g){w=b(y,d,a(x,[...[e[o],e[o+1]]]))}i.push(c[0],c[1],v[0],v[1],p(0,m,w)),i.push(...u),i.push(c[0],c[1],v[0],v[1],p(1,m,w)),i.push(...u),i.push(c[0],c[1],v[0],v[1],p(2,m,w)),i.push(...u),i.push(c[0],c[1],v[0],v[1],p(3,m,w)),i.push(...u),s.push(h,h+1,h+2,h+1,h+3,h+2)}function L(e,t,n,r,o){const i=2+o;let a=t;const s=e.slice(a,a+o);a+=o;const f=e[a++];let x=0;const l=new Array(f-1);for(let t=0;t<f;t++)x+=e[a++],t<f-1&&(l[t]=x);const h=e.slice(a,a+2*x),c=u(h,l,2);for(let e=0;e<c.length;e++)r.push(c[e]+n.length/i);for(let e=0;e<h.length;e+=2)n.push(h[e],h[e+1],...s);return a+2*x}const G=self;G.onmessage=r=>{const o=r.data;switch(o.type){case t:{const e=3,t=2,n=o.customAttributesCount,r=t+n,i=new Float32Array(o.renderInstructions),a=i.length/r,s=4*a*(n+e),u=new Uint32Array(6*a),f=new Float32Array(s);let x;for(let e=0;e<i.length;e+=r)x=_(i,e,f,u,n,x);const l=Object.assign({vertexBuffer:f.buffer,indexBuffer:u.buffer,renderInstructions:i.buffer},o);G.postMessage(l,[f.buffer,u.buffer,i.buffer]);break}case n:{const e=[],t=[],n=o.customAttributesCount,r=2,i=new Float32Array(o.renderInstructions);let a=0;const u=o.renderInstructionsTransform,f=[1,0,0,1,0,0];let x,l;for(s(f,u);a<i.length;){l=Array.from(i.slice(a,a+n)),a+=n,x=i[a++];for(let n=0;n<x-1;n++)q(i,a+n*r,a+(n+1)*r,n>0?a+(n-1)*r:null,n<x-2?a+(n+2)*r:null,e,t,l,0,f);a+=x*r}const h=Uint32Array.from(t),c=Float32Array.from(e),v=Object.assign({vertexBuffer:c.buffer,indexBuffer:h.buffer,renderInstructions:i.buffer},o);G.postMessage(v,[c.buffer,h.buffer,i.buffer]);break}case e:{const e=[],t=[],n=o.customAttributesCount,r=new Float32Array(o.renderInstructions);let i=0;for(;i<r.length;)i=L(r,i,e,t,n);const a=Uint32Array.from(t),s=Float32Array.from(e),u=Object.assign({vertexBuffer:s.buffer,indexBuffer:a.buffer,renderInstructions:r.buffer},o);G.postMessage(u,[s.buffer,a.buffer,r.buffer]);break}}};\";\n          return new Worker(typeof Blob === 'undefined'\n            ? 'data:application/javascript;base64,' + Buffer.from(source, 'binary').toString('base64')\n            : URL.createObjectURL(new Blob([source], {type: 'application/javascript'})));\n        }\n      \n","/**\n * @module ol/layer/Heatmap\n */\nimport BaseVector from './BaseVector.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"../source/Vector.js\").default<import(\"../geom/Point.js\").default>} [source] Point source.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius',\n};\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {BaseVector<import(\"../source/Vector.js\").default, WebGLPointsLayerRenderer>}\n * @api\n */\nclass Heatmap extends BaseVector {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.weight;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.gradient_ = null;\n\n    this.addChangeListener(Property.GRADIENT, this.handleGradientChanged_);\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    const weight = options.weight ? options.weight : 'weight';\n    if (typeof weight === 'string') {\n      this.weightFunction_ = function (feature) {\n        return feature.get(weight);\n      };\n    } else {\n      this.weightFunction_ = weight;\n    }\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  getBlur() {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  }\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array<string>} Colors.\n   * @api\n   * @observable\n   */\n  getGradient() {\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n  }\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  getRadius() {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  }\n\n  /**\n   * @private\n   */\n  handleGradientChanged_() {\n    this.gradient_ = createGradient(this.getGradient());\n  }\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  setBlur(blur) {\n    this.set(Property.BLUR, blur);\n  }\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  setGradient(colors) {\n    this.set(Property.GRADIENT, colors);\n  }\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  setRadius(radius) {\n    this.set(Property.RADIUS, radius);\n  }\n\n  createRenderer() {\n    return new WebGLPointsLayerRenderer(this, {\n      className: this.getClassName(),\n      attributes: [\n        {\n          name: 'weight',\n          callback: (feature) => {\n            const weight = this.weightFunction_(feature);\n            return weight !== undefined ? clamp(weight, 0, 1) : 1;\n          },\n        },\n      ],\n      vertexShader: `\n        precision mediump float;\n        uniform mat4 u_projectionMatrix;\n        uniform mat4 u_offsetScaleMatrix;\n        uniform float u_size;\n        attribute vec2 a_position;\n        attribute float a_index;\n        attribute float a_weight;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n\n        void main(void) {\n          mat4 offsetMatrix = u_offsetScaleMatrix;\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\n          v_texCoord = vec2(u, v);\n          v_weight = a_weight;\n        }`,\n      fragmentShader: `\n        precision mediump float;\n        uniform float u_blurSlope;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n\n        void main(void) {\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\n          gl_FragColor = vec4(alpha, alpha, alpha, alpha);\n        }`,\n      hitVertexShader: `\n        precision mediump float;\n        uniform mat4 u_projectionMatrix;\n        uniform mat4 u_offsetScaleMatrix;\n        uniform float u_size;\n        attribute vec2 a_position;\n        attribute float a_index;\n        attribute float a_weight;\n        attribute vec4 a_hitColor;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n        varying vec4 v_hitColor;\n\n        void main(void) {\n          mat4 offsetMatrix = u_offsetScaleMatrix;\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\n          v_texCoord = vec2(u, v);\n          v_hitColor = a_hitColor;\n          v_weight = a_weight;\n        }`,\n      hitFragmentShader: `\n        precision mediump float;\n        uniform float u_blurSlope;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n        varying vec4 v_hitColor;\n\n        void main(void) {\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\n          if (alpha < 0.05) {\n            discard;\n          }\n\n          gl_FragColor = v_hitColor;\n        }`,\n      uniforms: {\n        u_size: () => {\n          return (this.get(Property.RADIUS) + this.get(Property.BLUR)) * 2;\n        },\n        u_blurSlope: () => {\n          return (\n            this.get(Property.RADIUS) / Math.max(1, this.get(Property.BLUR))\n          );\n        },\n      },\n      postProcesses: [\n        {\n          fragmentShader: `\n            precision mediump float;\n\n            uniform sampler2D u_image;\n            uniform sampler2D u_gradientTexture;\n            uniform float u_opacity;\n\n            varying vec2 v_texCoord;\n\n            void main() {\n              vec4 color = texture2D(u_image, v_texCoord);\n              gl_FragColor.a = color.a * u_opacity;\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\n              gl_FragColor.rgb *= gl_FragColor.a;\n            }`,\n          uniforms: {\n            u_gradientTexture: () => {\n              return this.gradient_;\n            },\n            u_opacity: () => {\n              return this.getOpacity();\n            },\n          },\n        },\n      ],\n    });\n  }\n\n  renderDeclutter() {}\n}\n\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {HTMLCanvasElement} canvas with gradient texture.\n */\nfunction createGradient(colors) {\n  const width = 1;\n  const height = 256;\n  const context = createCanvasContext2D(width, height);\n\n  const gradient = context.createLinearGradient(0, 0, width, height);\n  const step = 1 / (colors.length - 1);\n  for (let i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.canvas;\n}\n\nexport default Heatmap;\n","/**\n * @module ol/layer/VectorImage\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorImageLayerRenderer from '../renderer/canvas/VectorImageLayer.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text on this layer. The priority is defined\n * by the `zIndex` of the style and the render order of features. Higher z-index means higher priority.\n * Within the same z-index, a feature rendered before another has higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {number} [imageRatio=1] Ratio by which the rendered extent should be larger than the\n * viewport extent. A larger ratio avoids cut images during panning, but will cause a decrease in performance.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, to an image. This layer type provides great performance\n * during panning and zooming, but point symbols and texts are always rotated with the view and\n * pixels are scaled during zoom animations. For more accurate rendering of vector data, use\n * {@link module:ol/layer/Vector~VectorLayer} instead.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorImageLayerRenderer>}\n * @api\n */\nclass VectorImageLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.imageRatio;\n    super(baseOptions);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.imageRatio_ =\n      options.imageRatio !== undefined ? options.imageRatio : 1;\n  }\n\n  /**\n   * @return {number} Ratio between rendered extent size and viewport extent size.\n   */\n  getImageRatio() {\n    return this.imageRatio_;\n  }\n\n  createRenderer() {\n    return new CanvasVectorImageLayerRenderer(this);\n  }\n}\n\nexport default VectorImageLayer;\n","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport {TRUE} from '../functions.js';\nimport {get as getProjection, getUserProjection} from '../proj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default|import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors\n * (and/or formats pre-constructed with options).\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n/**\n * @enum {string}\n */\nconst DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nexport class DragAndDropEvent extends Event {\n  /**\n   * @param {DragAndDropEventType} type Type.\n   * @param {File} file File.\n   * @param {Array<import(\"../Feature.js\").default>} [features] Features.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   */\n  constructor(type, file, features, projection) {\n    super(type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     * @api\n     */\n    this.projection = projection;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'addfeatures', DragAndDropEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'addfeatures', Return>} DragAndDropOnSignature\n */\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * @api\n *\n * @fires DragAndDropEvent\n */\nclass DragAndDrop extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      handleEvent: TRUE,\n    });\n\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragAndDropOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.readAsBuffer_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../format/Feature.js\").default>}\n     */\n    this.formats_ = [];\n    const formatConstructors = options.formatConstructors\n      ? options.formatConstructors\n      : [];\n    for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      let format = formatConstructors[i];\n      if (typeof format === 'function') {\n        format = new format();\n      }\n      this.formats_.push(format);\n      this.readAsBuffer_ =\n        this.readAsBuffer_ || format.getType() === 'arraybuffer';\n    }\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = options.projection\n      ? getProjection(options.projection)\n      : null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../source/Vector.js\").default}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.target = options.target ? options.target : null;\n  }\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  handleResult_(file, event) {\n    const result = event.target.result;\n    const map = this.getMap();\n    let projection = this.projection_;\n    if (!projection) {\n      projection = getUserProjection();\n      if (!projection) {\n        const view = map.getView();\n        projection = view.getProjection();\n      }\n    }\n\n    let text;\n    const formats = this.formats_;\n    for (let i = 0, ii = formats.length; i < ii; ++i) {\n      const format = formats[i];\n      let input = result;\n      if (this.readAsBuffer_ && format.getType() !== 'arraybuffer') {\n        if (text === undefined) {\n          text = new TextDecoder().decode(result);\n        }\n        input = text;\n      }\n      const features = this.tryReadFeatures_(format, input, {\n        featureProjection: projection,\n      });\n      if (features && features.length > 0) {\n        if (this.source_) {\n          this.source_.clear();\n          this.source_.addFeatures(features);\n        }\n        this.dispatchEvent(\n          new DragAndDropEvent(\n            DragAndDropEventType.ADD_FEATURES,\n            file,\n            features,\n            projection\n          )\n        );\n        break;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  registerListeners_() {\n    const map = this.getMap();\n    if (map) {\n      const dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [\n        listen(dropArea, EventType.DROP, this.handleDrop, this),\n        listen(dropArea, EventType.DRAGENTER, this.handleStop, this),\n        listen(dropArea, EventType.DRAGOVER, this.handleStop, this),\n        listen(dropArea, EventType.DROP, this.handleStop, this),\n      ];\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (!this.getActive() && active) {\n      this.registerListeners_();\n    }\n    if (this.getActive() && !active) {\n      this.unregisterListeners_();\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.unregisterListeners_();\n    super.setMap(map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  }\n\n  /**\n   * @param {import(\"../format/Feature.js\").default} format Format.\n   * @param {string} text Text.\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n   * @private\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  tryReadFeatures_(format, text, options) {\n    try {\n      return (\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        (format.readFeatures(text, options))\n      );\n    } catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * @private\n   */\n  unregisterListeners_() {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleDrop(event) {\n    const files = event.dataTransfer.files;\n    for (let i = 0, ii = files.length; i < ii; ++i) {\n      const file = files.item(i);\n      const reader = new FileReader();\n      reader.addEventListener(\n        EventType.LOAD,\n        this.handleResult_.bind(this, file)\n      );\n      if (this.readAsBuffer_) {\n        reader.readAsArrayBuffer(file);\n      } else {\n        reader.readAsText(file);\n      }\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleStop(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n  }\n}\n\nexport default DragAndDrop;\n","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport PointerInteraction from './Pointer.js';\nimport {mouseOnly, shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nclass DragRotateAndZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastMagnitude_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const deltaX = offset[0] - size[0] / 2;\n    const deltaY = size[1] / 2 - offset[1];\n    const theta = Math.atan2(deltaY, deltaX);\n    const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    const view = map.getView();\n    if (this.lastAngle_ !== undefined) {\n      const angleDelta = this.lastAngle_ - theta;\n      view.adjustRotationInternal(angleDelta);\n    }\n    this.lastAngle_ = theta;\n    if (this.lastMagnitude_ !== undefined) {\n      view.adjustResolutionInternal(this.lastMagnitude_ / magnitude);\n    }\n    if (this.lastMagnitude_ !== undefined) {\n      this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n    }\n    this.lastMagnitude_ = magnitude;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n    view.endInteraction(this.duration_, direction);\n    this.lastScaleDelta_ = 0;\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (this.condition_(mapBrowserEvent)) {\n      mapBrowserEvent.map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      this.lastMagnitude_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotateAndZoom;\n","/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {\n  always,\n  never,\n  noModifierKeys,\n  shiftKeyOnly,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../extent.js';\nimport {clamp, squaredDistance, toFixed} from '../math.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {\n  distance,\n  squaredDistance as squaredCoordinateDistance,\n} from '../coordinate.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/Geometry.js\").Type} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition.noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition.shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean|import(\"../events/condition.js\").Condition} [trace=false] Trace a portion of another geometry.\n * Ignored when in freehand mode.\n * @property {VectorSource} [traceSource] Source for features to trace.  If tracing is active and a `traceSource` is\n * not provided, the interaction's `source` will be used.  Tracing requires that the interaction is configured with\n * either a `traceSource` or a `source`.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the draw interaction.\n */\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n/**\n * @typedef {Object} TraceState\n * @property {boolean} active Tracing active.\n * @property {import(\"../pixel.js\").Pixel} [startPx] The initially clicked pixel location.\n * @property {Array<TraceTarget>} [targets] Targets available for tracing.\n * @property {number} [targetIndex] The index of the currently traced target.  A value of -1 indicates\n * that no trace target is active.\n */\n\n/**\n * @typedef {Object} TraceTarget\n * @property {Array<import(\"../coordinate.js\").Coordinate>} coordinates Target coordinates.\n * @property {boolean} ring The target coordinates are a linear ring.\n * @property {number} startIndex The index of first traced coordinate.  A fractional index represents an\n * edge intersection.  Index values for rings will wrap (may be negative or larger than coordinates length).\n * @property {number} endIndex The index of last traced coordinate.  Details from startIndex also apply here.\n */\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'Polygon' | 'Circle'} Mode\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n */\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend',\n  /**\n   * Triggered upon feature draw abortion\n   * @event DrawEvent#drawabort\n   * @api\n   */\n  DRAWABORT: 'drawabort',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nexport class DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n  }\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {Array<Feature>} features The candidate features.\n * @return {Array<TraceTarget>} The trace targets.\n */\nfunction getTraceTargets(coordinate, features) {\n  /**\n   * @type {Array<TraceTarget>}\n   */\n  const targets = [];\n\n  for (let i = 0; i < features.length; ++i) {\n    const feature = features[i];\n    const geometry = feature.getGeometry();\n    appendGeometryTraceTargets(coordinate, geometry, targets);\n  }\n\n  return targets;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} a One coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b Another coordinate.\n * @return {number} The squared distance between the two coordinates.\n */\nfunction getSquaredDistance(a, b) {\n  return squaredDistance(a[0], a[1], b[0], b[1]);\n}\n\n/**\n * @param {LineCoordType} coordinates The ring coordinates.\n * @param {number} index The index.  May be wrapped.\n * @return {import(\"../coordinate.js\").Coordinate} The coordinate.\n */\nfunction getCoordinate(coordinates, index) {\n  const count = coordinates.length;\n  if (index < 0) {\n    return coordinates[index + count];\n  }\n  if (index >= count) {\n    return coordinates[index - count];\n  }\n  return coordinates[index];\n}\n\n/**\n * Get the cumulative squared distance along a ring path.  The end index index may be \"wrapped\" and it may\n * be less than the start index to indicate the direction of travel.  The start and end index may have\n * a fractional part to indicate a point between two coordinates.\n * @param {LineCoordType} coordinates Ring coordinates.\n * @param {number} startIndex The start index.\n * @param {number} endIndex The end index.\n * @return {number} The cumulative squared distance along the ring path.\n */\nfunction getCumulativeSquaredDistance(coordinates, startIndex, endIndex) {\n  let lowIndex, highIndex;\n  if (startIndex < endIndex) {\n    lowIndex = startIndex;\n    highIndex = endIndex;\n  } else {\n    lowIndex = endIndex;\n    highIndex = startIndex;\n  }\n  const lowWholeIndex = Math.ceil(lowIndex);\n  const highWholeIndex = Math.floor(highIndex);\n\n  if (lowWholeIndex > highWholeIndex) {\n    // both start and end are on the same segment\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    return getSquaredDistance(start, end);\n  }\n\n  let sd = 0;\n\n  if (lowIndex < lowWholeIndex) {\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = getCoordinate(coordinates, lowWholeIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  if (highWholeIndex < highIndex) {\n    const start = getCoordinate(coordinates, highWholeIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  for (let i = lowWholeIndex; i < highWholeIndex - 1; ++i) {\n    const start = getCoordinate(coordinates, i);\n    const end = getCoordinate(coordinates, i + 1);\n    sd += getSquaredDistance(start, end);\n  }\n\n  return sd;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {import(\"../geom/Geometry.js\").default} geometry The candidate geometry.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendGeometryTraceTargets(coordinate, geometry, targets) {\n  if (geometry instanceof LineString) {\n    appendTraceTarget(coordinate, geometry.getCoordinates(), false, targets);\n    return;\n  }\n  if (geometry instanceof MultiLineString) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], false, targets);\n    }\n    return;\n  }\n  if (geometry instanceof Polygon) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], true, targets);\n    }\n    return;\n  }\n  if (geometry instanceof MultiPolygon) {\n    const polys = geometry.getCoordinates();\n    for (let i = 0, ii = polys.length; i < ii; ++i) {\n      const coordinates = polys[i];\n      for (let j = 0, jj = coordinates.length; j < jj; ++j) {\n        appendTraceTarget(coordinate, coordinates[j], true, targets);\n      }\n    }\n    return;\n  }\n  if (geometry instanceof GeometryCollection) {\n    const geometries = geometry.getGeometries();\n    for (let i = 0; i < geometries.length; ++i) {\n      appendGeometryTraceTargets(coordinate, geometries[i], targets);\n    }\n    return;\n  }\n  // other types cannot be traced\n}\n\n/**\n * @typedef {Object} TraceTargetUpdateInfo\n * @property {number} index The new target index.\n * @property {number} endIndex The new segment end index.\n */\n\n/**\n * @type {TraceTargetUpdateInfo}\n */\nconst sharedUpdateInfo = {index: -1, endIndex: NaN};\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {TraceState} traceState The trace state.\n * @param {import(\"../Map.js\").default} map The map.\n * @param {number} snapTolerance The snap tolerance.\n * @return {TraceTargetUpdateInfo} Information about the new trace target.  The returned\n * object is reused between calls and must not be modified by the caller.\n */\nfunction getTraceTargetUpdate(coordinate, traceState, map, snapTolerance) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n\n  let closestTargetDistance = Infinity;\n\n  let newTargetIndex = -1;\n  let newEndIndex = NaN;\n\n  for (\n    let targetIndex = 0;\n    targetIndex < traceState.targets.length;\n    ++targetIndex\n  ) {\n    const target = traceState.targets[targetIndex];\n    const coordinates = target.coordinates;\n\n    let minSegmentDistance = Infinity;\n    let endIndex;\n    for (\n      let coordinateIndex = 0;\n      coordinateIndex < coordinates.length - 1;\n      ++coordinateIndex\n    ) {\n      const start = coordinates[coordinateIndex];\n      const end = coordinates[coordinateIndex + 1];\n      const rel = getPointSegmentRelationship(x, y, start, end);\n      if (rel.squaredDistance < minSegmentDistance) {\n        minSegmentDistance = rel.squaredDistance;\n        endIndex = coordinateIndex + rel.along;\n      }\n    }\n\n    if (minSegmentDistance < closestTargetDistance) {\n      closestTargetDistance = minSegmentDistance;\n      if (target.ring && traceState.targetIndex === targetIndex) {\n        // same target, maintain the same trace direction\n        if (target.endIndex > target.startIndex) {\n          // forward trace\n          if (endIndex < target.startIndex) {\n            endIndex += coordinates.length;\n          }\n        } else if (target.endIndex < target.startIndex) {\n          // reverse trace\n          if (endIndex > target.startIndex) {\n            endIndex -= coordinates.length;\n          }\n        }\n      }\n      newEndIndex = endIndex;\n      newTargetIndex = targetIndex;\n    }\n  }\n\n  const newTarget = traceState.targets[newTargetIndex];\n  let considerBothDirections = newTarget.ring;\n  if (traceState.targetIndex === newTargetIndex && considerBothDirections) {\n    // only consider switching trace direction if close to the start\n    const newCoordinate = interpolateCoordinate(\n      newTarget.coordinates,\n      newEndIndex\n    );\n    const pixel = map.getPixelFromCoordinate(newCoordinate);\n    if (distance(pixel, traceState.startPx) > snapTolerance) {\n      considerBothDirections = false;\n    }\n  }\n\n  if (considerBothDirections) {\n    const coordinates = newTarget.coordinates;\n    const count = coordinates.length;\n    const startIndex = newTarget.startIndex;\n    const endIndex = newEndIndex;\n    if (startIndex < endIndex) {\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex\n      );\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex - count\n      );\n      if (reverseDistance < forwardDistance) {\n        newEndIndex -= count;\n      }\n    } else {\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex\n      );\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex + count\n      );\n      if (forwardDistance < reverseDistance) {\n        newEndIndex += count;\n      }\n    }\n  }\n\n  sharedUpdateInfo.index = newTargetIndex;\n  sharedUpdateInfo.endIndex = newEndIndex;\n  return sharedUpdateInfo;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The clicked coordinate.\n * @param {Array<import(\"../coordinate.js\").Coordinate>} coordinates The geometry component coordinates.\n * @param {boolean} ring The coordinates represent a linear ring.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendTraceTarget(coordinate, coordinates, ring, targets) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const start = coordinates[i];\n    const end = coordinates[i + 1];\n    const rel = getPointSegmentRelationship(x, y, start, end);\n    if (rel.squaredDistance === 0) {\n      const index = i + rel.along;\n      targets.push({\n        coordinates: coordinates,\n        ring: ring,\n        startIndex: index,\n        endIndex: index,\n      });\n      return;\n    }\n  }\n}\n\n/**\n * @typedef {Object} PointSegmentRelationship\n * @property {number} along The closest point expressed as a fraction along the segment length.\n * @property {number} squaredDistance The squared distance of the point to the segment.\n */\n\n/**\n * @type {PointSegmentRelationship}\n */\nconst sharedRel = {along: 0, squaredDistance: 0};\n\n/**\n * @param {number} x The point x.\n * @param {number} y The point y.\n * @param {import(\"../coordinate.js\").Coordinate} start The segment start.\n * @param {import(\"../coordinate.js\").Coordinate} end The segment end.\n * @return {PointSegmentRelationship} The point segment relationship.  The returned object is\n * shared between calls and must not be modified by the caller.\n */\nfunction getPointSegmentRelationship(x, y, start, end) {\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  let along = 0;\n  let px = x1;\n  let py = y1;\n  if (dx !== 0 || dy !== 0) {\n    along = clamp(((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy), 0, 1);\n    px += dx * along;\n    py += dy * along;\n  }\n\n  sharedRel.along = along;\n  sharedRel.squaredDistance = toFixed(squaredDistance(x, y, px, py), 10);\n  return sharedRel;\n}\n\n/**\n * @param {LineCoordType} coordinates The coordinates.\n * @param {number} index The index.  May be fractional and may wrap.\n * @return {import(\"../coordinate.js\").Coordinate} The interpolated coordinate.\n */\nfunction interpolateCoordinate(coordinates, index) {\n  const count = coordinates.length;\n\n  let startIndex = Math.floor(index);\n  const along = index - startIndex;\n  if (startIndex >= count) {\n    startIndex -= count;\n  } else if (startIndex < 0) {\n    startIndex += count;\n  }\n\n  let endIndex = startIndex + 1;\n  if (endIndex >= count) {\n    endIndex -= count;\n  }\n\n  const start = coordinates[startIndex];\n  const x0 = start[0];\n  const y0 = start[1];\n  const end = coordinates[endIndex];\n  const dx = end[0] - x0;\n  const dy = end[1] - y0;\n\n  return [x0 + dx * along, y0 + dy * along];\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'drawabort'|'drawend'|'drawstart', DrawEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'drawabort'|'drawend'|'drawstart', Return>} DrawOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DrawOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {?}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * Pointer type of the last pointermove event\n     * @type {string}\n     * @private\n     */\n    this.pointerType_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {import(\"../geom/Geometry.js\").Type}\n     * @private\n     */\n    this.type_ = /** @type {import(\"../geom/Geometry.js\").Type} */ (\n      options.type\n    );\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints\n      ? options.minPoints\n      : this.mode_ === 'Polygon'\n      ? 3\n      : 2;\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ =\n      this.mode_ === 'Circle'\n        ? 2\n        : options.maxPoints\n        ? options.maxPoints\n        : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition\n      ? options.finishCondition\n      : TRUE;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      const mode = this.mode_;\n      if (mode === 'Circle') {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          const circle = geometry\n            ? /** @type {Circle} */ (geometry)\n            : new Circle([NaN, NaN]);\n          const center = fromUserCoordinate(coordinates[0], projection);\n          const squaredLength = squaredCoordinateDistance(\n            center,\n            fromUserCoordinate(coordinates[coordinates.length - 1], projection)\n          );\n          circle.setCenterAndRadius(\n            center,\n            Math.sqrt(squaredLength),\n            this.geometryLayout_\n          );\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        let Constructor;\n        if (mode === 'Point') {\n          Constructor = Point;\n        } else if (mode === 'LineString') {\n          Constructor = LineString;\n        } else if (mode === 'Polygon') {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          if (geometry) {\n            if (mode === 'Polygon') {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates(\n                  [coordinates[0].concat([coordinates[0][0]])],\n                  this.geometryLayout_\n                );\n              } else {\n                geometry.setCoordinates([], this.geometryLayout_);\n              }\n            } else {\n              geometry.setCoordinates(coordinates, this.geometryLayout_);\n            }\n          } else {\n            geometry = new Constructor(coordinates, this.geometryLayout_);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ =\n      options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature<import('../geom/SimpleGeometry.js').default>}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance\n      ? options.clickTolerance * options.clickTolerance\n      : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition\n        ? options.freehandCondition\n        : shiftKeyOnly;\n    }\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.traceCondition_;\n    this.setTrace(options.trace || false);\n\n    /**\n     * @type {TraceState}\n     * @private\n     */\n    this.traceState_ = {active: false};\n\n    /**\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.traceSource_ = options.traceSource || options.source || null;\n\n    this.addChangeListener(InteractionProperty.ACTIVE, this.updateState_);\n  }\n\n  /**\n   * Toggle tracing mode or set a tracing condition.\n   *\n   * @param {boolean|import(\"../events/condition.js\").Condition} trace A boolean to toggle tracing mode or an event\n   *     condition that will be checked when a feature is clicked to determine if tracing should be active.\n   */\n  setTrace(trace) {\n    let condition;\n    if (!trace) {\n      condition = never;\n    } else if (trace === true) {\n      condition = always;\n    } else {\n      condition = trace;\n    }\n    this.traceCondition_ = condition;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.originalEvent.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== 'Point' && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (\n      !this.freehand_ &&\n      this.lastDragTime_ &&\n      event.type === MapBrowserEventType.POINTERDRAG\n    ) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null\n    ) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN\n    ) {\n      pass = false;\n    } else if (move && this.getPointerCount() < 2) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        this.handlePointerMove_(event);\n        if (this.shouldHandle_) {\n          // Avoid page scrolling when freehand drawing on mobile\n          event.originalEvent.preventDefault();\n        }\n      } else if (\n        event.originalEvent.pointerType === 'mouse' ||\n        (event.type === MapBrowserEventType.POINTERDRAG &&\n          this.downTimeout_ === undefined)\n      ) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event.coordinate);\n      }\n      return true;\n    }\n\n    if (!this.condition_(event)) {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(() => {\n      this.handlePointerMove_(\n        new MapBrowserEvent(\n          MapBrowserEventType.POINTERMOVE,\n          event.map,\n          event.originalEvent,\n          false,\n          event.frameState\n        )\n      );\n    }, this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  deactivateTrace_() {\n    this.traceState_ = {active: false};\n  }\n\n  /**\n   * Activate or deactivate trace state based on a browser event.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  toggleTraceState_(event) {\n    if (!this.traceSource_ || !this.traceCondition_(event)) {\n      return;\n    }\n\n    if (this.traceState_.active) {\n      this.deactivateTrace_();\n      return;\n    }\n\n    const map = this.getMap();\n    const lowerLeft = map.getCoordinateFromPixel([\n      event.pixel[0] - this.snapTolerance_,\n      event.pixel[1] + this.snapTolerance_,\n    ]);\n    const upperRight = map.getCoordinateFromPixel([\n      event.pixel[0] + this.snapTolerance_,\n      event.pixel[1] - this.snapTolerance_,\n    ]);\n    const extent = boundingExtent([lowerLeft, upperRight]);\n    const features = this.traceSource_.getFeaturesInExtent(extent);\n    if (features.length === 0) {\n      return;\n    }\n\n    const targets = getTraceTargets(event.coordinate, features);\n    if (targets.length) {\n      this.traceState_ = {\n        active: true,\n        startPx: event.pixel.slice(),\n        targets: targets,\n        targetIndex: -1,\n      };\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} endIndex The new end index of the trace.\n   * @private\n   */\n  addOrRemoveTracedCoordinates_(target, endIndex) {\n    // three cases to handle:\n    //  1. traced in the same direction and points need adding\n    //  2. traced in the same direction and points need removing\n    //  3. traced in a new direction\n    const previouslyForward = target.startIndex <= target.endIndex;\n    const currentlyForward = target.startIndex <= endIndex;\n    if (previouslyForward === currentlyForward) {\n      // same direction\n      if (\n        (previouslyForward && endIndex > target.endIndex) ||\n        (!previouslyForward && endIndex < target.endIndex)\n      ) {\n        // case 1 - add new points\n        this.addTracedCoordinates_(target, target.endIndex, endIndex);\n      } else if (\n        (previouslyForward && endIndex < target.endIndex) ||\n        (!previouslyForward && endIndex > target.endIndex)\n      ) {\n        // case 2 - remove old points\n        this.removeTracedCoordinates_(endIndex, target.endIndex);\n      }\n    } else {\n      // case 3 - remove old points, add new points\n      this.removeTracedCoordinates_(target.startIndex, target.endIndex);\n      this.addTracedCoordinates_(target, target.startIndex, endIndex);\n    }\n  }\n\n  /**\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  removeTracedCoordinates_(fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    let remove = 0;\n    if (fromIndex < toIndex) {\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        end -= 1;\n      }\n      remove = end - start + 1;\n    } else {\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      remove = start - end + 1;\n    }\n\n    if (remove > 0) {\n      this.removeLastPoints_(remove);\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  addTracedCoordinates_(target, fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    const coordinates = [];\n    if (fromIndex < toIndex) {\n      // forward trace\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        // if end is snapped to a vertex, it will be added later\n        end -= 1;\n      }\n      for (let i = start; i <= end; ++i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    } else {\n      // reverse trace\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      for (let i = start; i >= end; --i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    }\n    if (coordinates.length) {\n      this.appendCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * Update the trace.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  updateTrace_(event) {\n    const traceState = this.traceState_;\n    if (!traceState.active) {\n      return;\n    }\n\n    if (traceState.targetIndex === -1) {\n      // check if we are ready to pick a target\n      if (distance(traceState.startPx, event.pixel) < this.snapTolerance_) {\n        return;\n      }\n    }\n\n    const updatedTraceTarget = getTraceTargetUpdate(\n      event.coordinate,\n      traceState,\n      this.getMap(),\n      this.snapTolerance_\n    );\n\n    if (traceState.targetIndex !== updatedTraceTarget.index) {\n      // target changed\n      if (traceState.targetIndex !== -1) {\n        // remove points added during previous trace\n        const oldTarget = traceState.targets[traceState.targetIndex];\n        this.removeTracedCoordinates_(oldTarget.startIndex, oldTarget.endIndex);\n      }\n      // add points for the new target\n      const newTarget = traceState.targets[updatedTraceTarget.index];\n      this.addTracedCoordinates_(\n        newTarget,\n        newTarget.startIndex,\n        updatedTraceTarget.endIndex\n      );\n    } else {\n      // target stayed the same\n      const target = traceState.targets[traceState.targetIndex];\n      this.addOrRemoveTracedCoordinates_(target, updatedTraceTarget.endIndex);\n    }\n\n    // modify the state with updated info\n    traceState.targetIndex = updatedTraceTarget.index;\n    const target = traceState.targets[traceState.targetIndex];\n    target.endIndex = updatedTraceTarget.endIndex;\n\n    // update event coordinate and pixel to match end point of final segment\n    const coordinate = interpolateCoordinate(\n      target.coordinates,\n      target.endIndex\n    );\n    const pixel = this.getMap().getPixelFromCoordinate(coordinate);\n    event.coordinate = coordinate;\n    event.pixel = [Math.round(pixel[0]), Math.round(pixel[1])];\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.getPointerCount() === 0) {\n      if (this.downTimeout_) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n\n      this.handlePointerMove_(event);\n      const tracing = this.traceState_.active;\n      this.toggleTraceState_(event);\n\n      if (this.shouldHandle_) {\n        const startingToDraw = !this.finishCoordinate_;\n        if (startingToDraw) {\n          this.startDrawing_(event.coordinate);\n        }\n        if (!startingToDraw && this.freehand_) {\n          this.finishDrawing();\n        } else if (\n          !this.freehand_ &&\n          (!startingToDraw || this.mode_ === 'Point')\n        ) {\n          if (this.atFinish_(event.pixel, tracing)) {\n            if (this.finishCondition_(event)) {\n              this.finishDrawing();\n            }\n          } else {\n            this.addToDrawing_(event.coordinate);\n          }\n        }\n        pass = false;\n      } else if (this.freehand_) {\n        this.abortDrawing();\n      }\n    }\n\n    if (!pass && this.stopClick_) {\n      event.preventDefault();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @private\n   */\n  handlePointerMove_(event) {\n    this.pointerType_ = event.originalEvent.pointerType;\n    if (\n      this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))\n    ) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_\n        ? squaredDistance > this.squaredClickTolerance_\n        : squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return;\n      }\n    }\n\n    if (!this.finishCoordinate_) {\n      this.createOrUpdateSketchPoint_(event.coordinate.slice());\n      return;\n    }\n\n    this.updateTrace_(event);\n    this.modifyDrawing_(event.coordinate);\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {boolean} [tracing] Drawing in trace mode (only stop if at the starting point).\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(pixel, tracing) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      const mode = this.mode_;\n      if (mode === 'Point') {\n        at = true;\n      } else if (mode === 'Circle') {\n        at = this.sketchCoords_.length === 2;\n      } else if (mode === 'LineString') {\n        potentiallyDone =\n          !tracing && this.sketchCoords_.length > this.minPoints_;\n      } else if (mode === 'Polygon') {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [\n          sketchCoords[0][0],\n          sketchCoords[0][sketchCoords[0].length - 2],\n        ];\n        if (tracing) {\n          potentiallyFinishCoordinates = [sketchCoords[0][0]];\n        } else {\n          potentiallyFinishCoordinates = [\n            sketchCoords[0][0],\n            sketchCoords[0][sketchCoords[0].length - 2],\n          ];\n        }\n      }\n      if (potentiallyDone) {\n        const map = this.getMap();\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../coordinate\").Coordinate} coordinates Coordinate.\n   * @private\n   */\n  createOrUpdateSketchPoint_(coordinates) {\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @private\n   */\n  createOrUpdateCustomSketchLine_(geometry) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature();\n    }\n    const ring = geometry.getLinearRing(0);\n    let sketchLineGeom = this.sketchLine_.getGeometry();\n    if (!sketchLineGeom) {\n      sketchLineGeom = new LineString(\n        ring.getFlatCoordinates(),\n        ring.getLayout()\n      );\n      this.sketchLine_.setGeometry(sketchLineGeom);\n    } else {\n      sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(),\n        ring.getFlatCoordinates()\n      );\n      sketchLineGeom.changed();\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n   * @private\n   */\n  startDrawing_(start) {\n    const projection = this.getMap().getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    while (start.length < stride) {\n      start.push(0);\n    }\n    this.finishCoordinate_ = start;\n    if (this.mode_ === 'Point') {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === 'Polygon') {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(\n      this.sketchCoords_,\n      undefined,\n      projection\n    );\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @private\n   */\n  modifyDrawing_(coordinate) {\n    const map = this.getMap();\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = map.getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    let coordinates, last;\n    while (coordinate.length < stride) {\n      coordinate.push(0);\n    }\n    if (this.mode_ === 'Point') {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(\n      /** @type {!LineCoordType} */ (this.sketchCoords_),\n      geometry,\n      projection\n    );\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    if (geometry.getType() === 'Polygon' && this.mode_ !== 'Polygon') {\n      this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n    } else if (this.sketchLineCoords_) {\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @private\n   */\n  addToDrawing_(coordinate) {\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let done;\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === 'LineString' || mode === 'Circle') {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (mode === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.createOrUpdateSketchPoint_(coordinate.slice());\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  }\n\n  /**\n   * @param {number} n The number of points to remove.\n   */\n  removeLastPoints_(n) {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    const mode = this.mode_;\n    for (let i = 0; i < n; ++i) {\n      let coordinates;\n      if (mode === 'LineString' || mode === 'Circle') {\n        coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n        coordinates.splice(-2, 1);\n        if (coordinates.length >= 2) {\n          this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n          const finishCoordinate = this.finishCoordinate_.slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        this.geometryFunction_(coordinates, geometry, projection);\n        if (geometry.getType() === 'Polygon' && this.sketchLine_) {\n          this.createOrUpdateCustomSketchLine_(\n            /** @type {Polygon} */ (geometry)\n          );\n        }\n      } else if (mode === 'Polygon') {\n        coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n        coordinates.splice(-2, 1);\n        const sketchLineGeom = this.sketchLine_.getGeometry();\n        if (coordinates.length >= 2) {\n          const finishCoordinate = coordinates[coordinates.length - 2].slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        sketchLineGeom.setCoordinates(coordinates);\n        this.geometryFunction_(this.sketchCoords_, geometry, projection);\n      }\n\n      if (coordinates.length === 1) {\n        this.abortDrawing();\n        break;\n      }\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn. Does not do anything when\n   * drawing POINT or MULTI_POINT geometries.\n   * @api\n   */\n  removeLastPoint() {\n    this.removeLastPoints_(1);\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    if (this.mode_ === 'LineString') {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === 'Polygon') {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === 'MultiPoint') {\n      sketchFeature.setGeometry(\n        new MultiPoint([/** @type {PointCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === 'MultiLineString') {\n      sketchFeature.setGeometry(\n        new MultiLineString([/** @type {LineCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === 'MultiPolygon') {\n      sketchFeature.setGeometry(\n        new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)])\n      );\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    this.deactivateTrace_();\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @api\n   */\n  abortDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (sketchFeature) {\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n    }\n  }\n\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon. If no geometry is being drawn, a new one will be created.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n   * the coordinate array.\n   * @api\n   */\n  appendCoordinates(coordinates) {\n    const mode = this.mode_;\n    const newDrawing = !this.sketchFeature_;\n    if (newDrawing) {\n      this.startDrawing_(coordinates[0]);\n    }\n    /** @type {LineCoordType} */\n    let sketchCoords;\n    if (mode === 'LineString' || mode === 'Circle') {\n      sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n    } else if (mode === 'Polygon') {\n      sketchCoords =\n        this.sketchCoords_ && this.sketchCoords_.length\n          ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n          : [];\n    } else {\n      return;\n    }\n\n    if (newDrawing) {\n      sketchCoords.shift();\n    }\n\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    sketchCoords.pop();\n\n    // Append coordinate list\n    for (let i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n\n    const ending = coordinates[coordinates.length - 1];\n    // Duplicate last coordinate for sketch drawing (cursor position)\n    this.addToDrawing_(ending);\n    this.modifyDrawing_(ending);\n  }\n\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.sketchPoint_ = new Feature(new Point(last));\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function (feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * {@link import(\"../geom/Circle.js\").Circle} geometry.\n * @param {number} [sides] Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number} [angle] Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(sides, angle) {\n  return function (coordinates, geometry, projection) {\n    const center = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[0],\n      projection\n    );\n    const end = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1],\n      projection\n    );\n    const radius = Math.sqrt(squaredCoordinateDistance(center, end));\n    geometry = geometry || fromCircle(new Circle(center), sides);\n\n    let internalAngle = angle;\n    if (!angle && angle !== 0) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      internalAngle = Math.atan2(y, x);\n    }\n    makeRegular(\n      /** @type {Polygon} */ (geometry),\n      center,\n      radius,\n      internalAngle\n    );\n\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return function (coordinates, geometry, projection) {\n    const extent = boundingExtent(\n      /** @type {LineCoordType} */ ([\n        coordinates[0],\n        coordinates[coordinates.length - 1],\n      ]).map(function (coordinate) {\n        return fromUserCoordinate(coordinate, projection);\n      })\n    );\n    const boxCoordinates = [\n      [\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent),\n      ],\n    ];\n    if (geometry) {\n      geometry.setCoordinates(boxCoordinates);\n    } else {\n      geometry = new Polygon(boxCoordinates);\n    }\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Get the drawing mode.  The mode for multi-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n      return 'Point';\n    case 'LineString':\n    case 'MultiLineString':\n      return 'LineString';\n    case 'Polygon':\n    case 'MultiPolygon':\n      return 'Polygon';\n    case 'Circle':\n      return 'Circle';\n    default:\n      throw new Error('Invalid type: ' + type);\n  }\n}\n\nexport default Draw;\n","/**\n * @module ol/interaction/Extent\n */\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {always} from '../events/condition.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {toUserExtent} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to the `Polygon` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to the `Point` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n/**\n * @enum {string}\n */\nconst ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event ExtentEvent#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nexport class ExtentEvent extends Event {\n  /**\n   * @param {import(\"../extent.js\").Extent} extent the new extent\n   */\n  constructor(extent) {\n    super(ExtentEventType.EXTENTCHANGED);\n\n    /**\n     * The current extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = extent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'extentchanged', ExtentEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'extentchanged', Return>} ExtentOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires ExtentEvent\n * @api\n */\nclass Extent extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ExtentOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * Condition\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * Extent of the drawn box\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.extent_ = null;\n\n    /**\n     * Handler for pointer move events\n     * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n     * @private\n     */\n    this.pointerHandler_ = null;\n\n    /**\n     * Pixel threshold to snap to extent\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Is the pointer snapped to an extent vertex\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Feature for displaying the visible extent\n     * @type {Feature}\n     * @private\n     */\n    this.extentFeature_ = null;\n\n    /**\n     * Feature for displaying the visible pointer\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    if (!options) {\n      options = {};\n    }\n\n    /**\n     * Layer for the extentFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.extentOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.boxStyle\n        ? options.boxStyle\n        : getDefaultExtentStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Layer for the vertexFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.vertexOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.pointerStyle\n        ? options.pointerStyle\n        : getDefaultPointerStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    if (options.extent) {\n      this.setExtent(options.extent);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n   * @param {import(\"../Map.js\").default} map map\n   * @return {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n   * @private\n   */\n  snapToVertex_(pixel, map) {\n    const pixelCoordinate = map.getCoordinateFromPixelInternal(pixel);\n    const sortByDistance = function (a, b) {\n      return (\n        squaredDistanceToSegment(pixelCoordinate, a) -\n        squaredDistanceToSegment(pixelCoordinate, b)\n      );\n    };\n    const extent = this.getExtentInternal();\n    if (extent) {\n      //convert extents to line segments and find the segment closest to pixelCoordinate\n      const segments = getSegments(extent);\n      segments.sort(sortByDistance);\n      const closestSegment = segments[0];\n\n      let vertex = closestOnSegment(pixelCoordinate, closestSegment);\n      const vertexPixel = map.getPixelFromCoordinateInternal(vertex);\n\n      //if the distance is within tolerance, snap to the segment\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        //test if we should further snap to a vertex\n        const pixel1 = map.getPixelFromCoordinateInternal(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinateInternal(closestSegment[1]);\n        const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex =\n            squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        }\n        return vertex;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n   * @private\n   */\n  handlePointerMove_(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    let vertex = this.snapToVertex_(pixel, map);\n    if (!vertex) {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n    }\n    this.createOrUpdatePointerFeature_(vertex);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent extent\n   * @return {Feature} extent as featrue\n   * @private\n   */\n  createOrUpdateExtentFeature_(extent) {\n    let extentFeature = this.extentFeature_;\n\n    if (!extentFeature) {\n      if (!extent) {\n        extentFeature = new Feature({});\n      } else {\n        extentFeature = new Feature(polygonFromExtent(extent));\n      }\n      this.extentFeature_ = extentFeature;\n      this.extentOverlay_.getSource().addFeature(extentFeature);\n    } else {\n      if (!extent) {\n        extentFeature.setGeometry(undefined);\n      } else {\n        extentFeature.setGeometry(polygonFromExtent(extent));\n      }\n    }\n    return extentFeature;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n   * @return {Feature} vertex as feature\n   * @private\n   */\n  createOrUpdatePointerFeature_(vertex) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(vertex));\n      this.vertexFeature_ = vertexFeature;\n      this.vertexOverlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(vertex);\n    }\n    return vertexFeature;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent || !this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    //display pointer (if not dragging)\n    if (\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    //call pointer to determine up/down/drag\n    super.handleEvent(mapBrowserEvent);\n    //return false to stop propagation\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    const extent = this.getExtentInternal();\n    let vertex = this.snapToVertex_(pixel, map);\n\n    //find the extent corner opposite the passed corner\n    const getOpposingPoint = function (point) {\n      let x_ = null;\n      let y_ = null;\n      if (point[0] == extent[0]) {\n        x_ = extent[2];\n      } else if (point[0] == extent[2]) {\n        x_ = extent[0];\n      }\n      if (point[1] == extent[1]) {\n        y_ = extent[3];\n      } else if (point[1] == extent[3]) {\n        y_ = extent[1];\n      }\n      if (x_ !== null && y_ !== null) {\n        return [x_, y_];\n      }\n      return null;\n    };\n    if (vertex && extent) {\n      const x =\n        vertex[0] == extent[0] || vertex[0] == extent[2] ? vertex[0] : null;\n      const y =\n        vertex[1] == extent[1] || vertex[1] == extent[3] ? vertex[1] : null;\n\n      //snap to point\n      if (x !== null && y !== null) {\n        this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n        //snap to edge\n      } else if (x !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([x, extent[1]]),\n          getOpposingPoint([x, extent[3]])\n        );\n      } else if (y !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([extent[0], y]),\n          getOpposingPoint([extent[2], y])\n        );\n      }\n      //no snap - new bbox\n    } else {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n      this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n      this.pointerHandler_ = getPointHandler(vertex);\n    }\n    return true; //event handled; start downup sequence\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (this.pointerHandler_) {\n      const pixelCoordinate = mapBrowserEvent.coordinate;\n      this.setExtent(this.pointerHandler_(pixelCoordinate));\n      this.createOrUpdatePointerFeature_(pixelCoordinate);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.pointerHandler_ = null;\n    //If bbox is zero area, set to null;\n    const extent = this.getExtentInternal();\n    if (!extent || getArea(extent) === 0) {\n      this.setExtent(null);\n    }\n    return false; //Stop handling downup sequence\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.extentOverlay_.setMap(map);\n    this.vertexOverlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection (or user projection if set)\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtent() {\n    return toUserExtent(\n      this.getExtentInternal(),\n      this.getMap().getView().getProjection()\n    );\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtentInternal() {\n    return this.extent_;\n  }\n\n  /**\n   * Manually sets the drawn extent, using the view projection.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent\n   * @api\n   */\n  setExtent(extent) {\n    //Null extent means no bbox\n    this.extent_ = extent ? extent : null;\n    this.createOrUpdateExtentFeature_(extent);\n    this.dispatchEvent(new ExtentEvent(this.extent_));\n  }\n}\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Polygon'];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function (point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  } else if (fixedP1[1] == fixedP2[1]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  }\n  return null;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [\n      [extent[0], extent[1]],\n      [extent[0], extent[3]],\n    ],\n    [\n      [extent[0], extent[3]],\n      [extent[2], extent[3]],\n    ],\n    [\n      [extent[2], extent[3]],\n      [extent[2], extent[1]],\n    ],\n    [\n      [extent[2], extent[1]],\n      [extent[0], extent[1]],\n    ],\n  ];\n}\n\nexport default Extent;\n","/**\n * @module ol/interaction/Link\n */\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport MapEventType from '../MapEventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {toFixed} from '../math.js';\n\n/**\n * @param {number} number A number.\n * @return {number} A number with at most 5 decimal places.\n */\nfunction to5(number) {\n  return toFixed(number, 5);\n}\n\n/**\n * @param {string} string A string.\n * @return {number} A number representing the string.\n */\nfunction readNumber(string) {\n  return parseFloat(string);\n}\n\n/**\n * @param {number} number A number.\n * @return {string} A string representing the number.\n */\nfunction writeNumber(number) {\n  return to5(number).toString();\n}\n\n/**\n * @param {number} a A number.\n * @param {number} b A number.\n * @return {boolean} The numbers are different.\n */\nfunction differentNumber(a, b) {\n  if (isNaN(a)) {\n    return false;\n  }\n  return a !== readNumber(writeNumber(b));\n}\n\n/**\n * @param {Array<number>} a An array of two numbers.\n * @param {Array<number>} b An array of two numbers.\n * @return {boolean} The arrays are different.\n */\nfunction differentArray(a, b) {\n  return differentNumber(a[0], b[0]) || differentNumber(a[1], b[1]);\n}\n\n/** @typedef {'x'|'y'|'z'|'r'|'l'} Params */\n\n/**\n * @typedef {Object} Options\n * @property {boolean|import('../View.js').AnimationOptions} [animate=true] Animate view transitions.\n * @property {Array<Params>} [params=['x', 'y', 'z', 'r', 'l']] Properties to track. Default is to track\n * `x` (center x), `y` (center y), `z` (zoom), `r` (rotation) and `l` (layers).\n * @property {boolean} [replace=false] Replace the current URL without creating the new entry in browser history.\n * By default, changes in the map state result in a new entry being added to the browser history.\n * @property {string} [prefix=''] By default, the URL will be updated with search parameters x, y, z, and r.  To\n * avoid collisions with existing search parameters that your application uses, you can supply a custom prefix for\n * the ones used by this interaction (e.g. 'ol:').\n */\n\n/**\n * @classdesc\n * An interaction that synchronizes the map state with the URL.\n *\n * @api\n */\nclass Link extends Interaction {\n  /**\n   * @param {Options} [options] Link options.\n   */\n  constructor(options) {\n    super();\n\n    options = Object.assign(\n      {\n        animate: true,\n        params: ['x', 'y', 'z', 'r', 'l'],\n        replace: false,\n        prefix: '',\n      },\n      options || {}\n    );\n\n    let animationOptions;\n    if (options.animate === true) {\n      animationOptions = {duration: 250};\n    } else if (!options.animate) {\n      animationOptions = null;\n    } else {\n      animationOptions = options.animate;\n    }\n\n    /**\n     * @type {import('../View.js').AnimationOptions|null}\n     * @private\n     */\n    this.animationOptions_ = animationOptions;\n\n    /**\n     * @type {Object<Params, boolean>}\n     * @private\n     */\n    this.params_ = options.params.reduce((acc, value) => {\n      acc[value] = true;\n      return acc;\n    }, {});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.replace_ = options.replace;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.prefix_ = options.prefix;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.initial_ = true;\n\n    this.updateState_ = this.updateState_.bind(this);\n  }\n\n  /**\n   * @private\n   * @param {string} name A parameter name.\n   * @return {string} A name with the prefix applied.\n   */\n  getParamName_(name) {\n    if (!this.prefix_) {\n      return name;\n    }\n    return this.prefix_ + name;\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   * @return {string|null} The parameter value.\n   */\n  get_(params, name) {\n    return params.get(this.getParamName_(name));\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   * @param {string} value The param value.\n   */\n  set_(params, name, value) {\n    if (!(name in this.params_)) {\n      return;\n    }\n    params.set(this.getParamName_(name), value);\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   */\n  delete_(params, name) {\n    if (!(name in this.params_)) {\n      return;\n    }\n    params.delete(this.getParamName_(name));\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      this.unregisterListeners_(oldMap);\n    }\n    if (map) {\n      this.initial_ = true;\n      this.updateState_();\n      this.registerListeners_(map);\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   * @private\n   */\n  registerListeners_(map) {\n    this.listenerKeys_.push(\n      listen(map, MapEventType.MOVEEND, this.updateUrl_, this),\n      listen(map.getLayerGroup(), EventType.CHANGE, this.updateUrl_, this),\n      listen(map, 'change:layergroup', this.handleChangeLayerGroup_, this)\n    );\n\n    if (!this.replace_) {\n      addEventListener('popstate', this.updateState_);\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   * @private\n   */\n  unregisterListeners_(map) {\n    for (let i = 0, ii = this.listenerKeys_.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys_[i]);\n    }\n    this.listenerKeys_.length = 0;\n\n    if (!this.replace_) {\n      removeEventListener('popstate', this.updateState_);\n    }\n\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    this.delete_(params, 'x');\n    this.delete_(params, 'y');\n    this.delete_(params, 'z');\n    this.delete_(params, 'r');\n    this.delete_(params, 'l');\n    window.history.replaceState(null, '', url);\n  }\n\n  /**\n   * @private\n   */\n  handleChangeLayerGroup_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    this.unregisterListeners_(map);\n    this.registerListeners_(map);\n    this.initial_ = true;\n    this.updateUrl_();\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    if (!view) {\n      return;\n    }\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n\n    let updateView = false;\n\n    /**\n     * @type {import('../View.js').AnimationOptions}\n     */\n    const viewProperties = {};\n\n    const zoom = readNumber(this.get_(params, 'z'));\n    if ('z' in this.params_ && differentNumber(zoom, view.getZoom())) {\n      updateView = true;\n      viewProperties.zoom = zoom;\n    }\n\n    const rotation = readNumber(this.get_(params, 'r'));\n    if ('r' in this.params_ && differentNumber(rotation, view.getRotation())) {\n      updateView = true;\n      viewProperties.rotation = rotation;\n    }\n\n    const center = [\n      readNumber(this.get_(params, 'x')),\n      readNumber(this.get_(params, 'y')),\n    ];\n    if (\n      ('x' in this.params_ || 'y' in this.params_) &&\n      differentArray(center, view.getCenter())\n    ) {\n      updateView = true;\n      viewProperties.center = center;\n    }\n\n    if (updateView) {\n      if (!this.initial_ && this.animationOptions_) {\n        view.animate(Object.assign(viewProperties, this.animationOptions_));\n      } else {\n        if (viewProperties.center) {\n          view.setCenter(viewProperties.center);\n        }\n        if ('zoom' in viewProperties) {\n          view.setZoom(viewProperties.zoom);\n        }\n        if ('rotation' in viewProperties) {\n          view.setRotation(viewProperties.rotation);\n        }\n      }\n    }\n\n    const layers = map.getAllLayers();\n    const layersParam = this.get_(params, 'l');\n    if (\n      'l' in this.params_ &&\n      layersParam &&\n      layersParam.length === layers.length\n    ) {\n      for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const value = parseInt(layersParam[i]);\n        if (!isNaN(value)) {\n          const visible = Boolean(value);\n          const layer = layers[i];\n          if (layer.getVisible() !== visible) {\n            layer.setVisible(visible);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateUrl_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    if (!view) {\n      return;\n    }\n    const initial = this.initial_;\n    this.initial_ = false;\n\n    const center = view.getCenter();\n    const zoom = view.getZoom();\n    const rotation = view.getRotation();\n\n    const layers = map.getAllLayers();\n    const visibilities = new Array(layers.length);\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      visibilities[i] = layers[i].getVisible() ? '1' : '0';\n    }\n\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n\n    this.set_(params, 'x', writeNumber(center[0]));\n    this.set_(params, 'y', writeNumber(center[1]));\n    this.set_(params, 'z', writeNumber(zoom));\n    this.set_(params, 'r', writeNumber(rotation));\n    this.set_(params, 'l', visibilities.join(''));\n\n    if (url.href !== window.location.href) {\n      if (initial || this.replace_) {\n        window.history.replaceState(history.state, '', url);\n      } else {\n        window.history.pushState(null, '', url);\n      }\n    }\n  }\n}\n\nexport default Link;\n","/**\n * @module ol/interaction/Modify\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  altKeyOnly,\n  always,\n  primaryAction,\n  singleClick,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  buffer as bufferExtent,\n  createOrUpdateFromCoordinate as createExtent,\n} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  equals as coordinatesEqual,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {equals} from '../array.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\nconst tempExtent = [0, 0, 0, 0];\nconst tempSegment = [];\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend',\n};\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth] Depth.\n * @property {Feature} feature Feature.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} [index] Index.\n * @property {Array<Array<number>>} segment Segment.\n * @property {Array<SegmentData>} [featureSegments] FeatureSegments.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition.primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition.singleClick} with\n * {@link module:ol/events/condition.altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition.always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style used for the modification point or vertex. For linestrings and polygons, this will\n * be the affected vertex, for circles a point along the circle, and for points the actual\n * point. If not configured, the default edit style is used (see {@link module:ol/style/Style~Style}).\n * When using a style function, the point feature passed to the function will have a `features`\n * property - an array whose entries are the features that are being modified, and a `geometries`\n * property - an array whose entries are the geometries that are being modified. Both arrays are\n * in the same order. The `geometries` are only useful when modifying geometry collections, where\n * the geometry will be the particular geometry from the collection that is being modified.\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the `features` option.\n * @property {boolean|import(\"../layer/BaseVector\").default} [hitDetection] When configured, point\n * features will be considered for modification based on their visual appearance, instead of being within\n * the `pixelTolerance` from the pointer location. When a {@link module:ol/layer/BaseVector~BaseVectorLayer} is\n * provided, only the rendered representation of the features on that layer will be considered.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the `source` option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {boolean} [snapToPointer=!hitDetection] The vertex, point or segment being modified snaps to the\n * pointer coordinate when clicked within the `pixelTolerance`.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport class ModifyEvent extends Event {\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {Collection<Feature>} features\n   * The features modified.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent\n   * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, features, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'modifyend'|'modifystart', ModifyEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'modifyend'|'modifystart', Return>} ModifyOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * Cartesian distance from the pointer is used to determine the features that\n * will be modified. This means that geometries will only be considered for\n * modification when they are within the configured `pixelTolerance`. For point\n * geometries, the `hitDetection` option can be used to match their visual\n * appearance.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nclass Modify extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ModifyOnSignature<void>}\n     */\n    this.un;\n\n    /** @private */\n    this.boundHandleFeatureChange_ = this.handleFeatureChange_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition\n      ? options.deleteCondition\n      : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition\n      ? options.insertVertexCondition\n      : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.featuresBeingModified_ = null;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n    };\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    /**\n     * @type {boolean|import(\"../layer/BaseVector\").default}\n     */\n    this.hitDetection_ = null;\n\n    /** @type {Collection<Feature>} */\n    let features;\n    if (options.features) {\n      features = options.features;\n    } else if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      this.source_.addEventListener(\n        VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_.bind(this)\n      );\n      this.source_.addEventListener(\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_.bind(this)\n      );\n    }\n    if (!features) {\n      throw new Error(\n        'The modify interaction requires features, a source or a layer'\n      );\n    }\n    if (options.hitDetection) {\n      this.hitDetection_ = options.hitDetection;\n    }\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    this.features_.addEventListener(\n      CollectionEventType.ADD,\n      this.handleFeatureAdd_.bind(this)\n    );\n    this.features_.addEventListener(\n      CollectionEventType.REMOVE,\n      this.handleFeatureRemove_.bind(this)\n    );\n\n    /**\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n    /**\n     * Delta (x, y in map units) between matched rtree vertex and pointer vertex.\n     * @type {Array<number>}\n     */\n    this.delta_ = [0, 0];\n\n    /**\n     * @private\n     */\n    this.snapToPointer_ =\n      options.snapToPointer === undefined\n        ? !this.hitDetection_\n        : options.snapToPointer;\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  addFeature_(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (writer) {\n        writer(feature, geometry);\n      }\n    }\n    const map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @param {Array<Array<SegmentData>>} segments The segments subject to modification.\n   * @private\n   */\n  willModifyFeatures_(evt, segments) {\n    if (!this.featuresBeingModified_) {\n      this.featuresBeingModified_ = new Collection();\n      const features = this.featuresBeingModified_.getArray();\n      for (let i = 0, ii = segments.length; i < ii; ++i) {\n        const segment = segments[i];\n        for (let s = 0, ss = segment.length; s < ss; ++s) {\n          const feature = segment[s].feature;\n          if (feature && !features.includes(feature)) {\n            this.featuresBeingModified_.push(feature);\n          }\n        }\n      }\n      if (this.featuresBeingModified_.getLength() === 0) {\n        this.featuresBeingModified_ = null;\n      } else {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYSTART,\n            this.featuresBeingModified_,\n            evt\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeature_(feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of candidate features is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    feature.removeEventListener(\n      EventType.CHANGE,\n      this.boundHandleFeatureChange_\n    );\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureSegmentData_(feature) {\n    const rBush = this.rBush_;\n    /** @type {Array<SegmentData>} */\n    const nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      }\n    );\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      const nodeToRemove = nodesToRemove[i];\n      for (let j = this.dragSegments_.length - 1; j >= 0; --j) {\n        if (this.dragSegments_[j][0] === nodeToRemove) {\n          this.dragSegments_.splice(j, 1);\n        }\n      }\n      rBush.remove(nodeToRemove);\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.overlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders the modification point or vertex to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceAdd_(event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceRemove_(event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    this.addFeature_(evt.element);\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    if (!this.changingFeature_) {\n      const feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    this.removeFeature_(evt.element);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n\n    /** @type {SegmentData} */\n    const segmentData = {\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates],\n    };\n\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates],\n      };\n\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment,\n      };\n\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n\n          /** @type {SegmentData} */\n          const segmentData = {\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment,\n          };\n\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const coordinates = geometry.getCenter();\n\n    /** @type {SegmentData} */\n    const centerSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    /** @type {SegmentData} */\n    const circumferenceSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = featureSegments;\n    circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n    let circleGeometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection && this.getMap()) {\n      const projection = this.getMap().getView().getProjection();\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n      circleGeometry = fromCircle(\n        /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n      ).transform(projection, userProjection);\n    }\n    this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const geometry = geometries[i];\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      writer(feature, geometry);\n    }\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {Array<Feature>} features The features being modified.\n   * @param {Array<import(\"../geom/SimpleGeometry.js\").default>} geometries The geometries being modified.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  createOrUpdateVertexFeature_(coordinates, features, geometries) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(coordinates);\n    }\n    vertexFeature.set('features', features);\n    vertexFeature.set('geometries', geometries);\n    return vertexFeature;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may modify the geometry.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    let handled;\n    if (\n      !mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (\n        mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_\n      ) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return super.handleEvent(mapBrowserEvent) && !handled;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   */\n  handleDragEvent(evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt, this.dragSegments_);\n\n    const vertex = [\n      evt.coordinate[0] + this.delta_[0],\n      evt.coordinate[1] + this.delta_[1],\n    ];\n    const features = [];\n    const geometries = [];\n    for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      const dragSegment = this.dragSegments_[i];\n      const segmentData = dragSegment[0];\n      const feature = segmentData.feature;\n      if (!features.includes(feature)) {\n        features.push(feature);\n      }\n      const geometry = segmentData.geometry;\n      if (!geometries.includes(geometry)) {\n        geometries.push(geometry);\n      }\n      const depth = segmentData.depth;\n      let coordinates;\n      const segment = segmentData.segment;\n      const index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case 'Point':\n          coordinates = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'MultiPoint':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'LineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiLineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Polygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiPolygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Circle':\n          segment[0] = vertex;\n          segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else {\n            // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            const projection = evt.map.getView().getProjection();\n            let radius = coordinateDistance(\n              fromUserCoordinate(geometry.getCenter(), projection),\n              fromUserCoordinate(vertex, projection)\n            );\n            const userProjection = getUserProjection();\n            if (userProjection) {\n              const circleGeometry = geometry\n                .clone()\n                .transform(userProjection, projection);\n              circleGeometry.setRadius(radius);\n              radius = circleGeometry\n                .transform(projection, userProjection)\n                .getRadius();\n            }\n            geometry.setRadius(radius);\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex, features, geometries);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    const pixelCoordinate = evt.coordinate;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, pixelCoordinate);\n    this.dragSegments_.length = 0;\n    this.featuresBeingModified_ = null;\n    const vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      const projection = evt.map.getView().getProjection();\n      const insertVertices = [];\n      const vertex = vertexFeature.getGeometry().getCoordinates();\n      const vertexExtent = boundingExtent([vertex]);\n      const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      const componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        const segmentDataMatch = segmentDataMatches[i];\n        const segment = segmentDataMatch.segment;\n        let uid = getUid(segmentDataMatch.geometry);\n        const depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n\n        if (\n          segmentDataMatch.geometry.getType() === 'Circle' &&\n          segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          const closestVertex = closestOnSegmentData(\n            pixelCoordinate,\n            segmentDataMatch,\n            projection\n          );\n          if (\n            coordinatesEqual(closestVertex, vertex) &&\n            !componentSegments[uid][0]\n          ) {\n            this.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]\n        ) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]\n        ) {\n          if (\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0\n          ) {\n            let coordinates = segmentDataMatch.geometry.getCoordinates();\n            switch (segmentDataMatch.geometry.getType()) {\n              // prevent dragging closed linestrings by the connecting node\n              case 'LineString':\n              case 'MultiLineString':\n                continue;\n              // if dragging the first vertex of a polygon, ensure the other segment\n              // belongs to the closing vertex of the linear ring\n              case 'MultiPolygon':\n                coordinates = coordinates[depth[1]];\n              /* falls through */\n              case 'Polygon':\n                if (\n                  segmentDataMatch.index !==\n                  coordinates[depth[0]].length - 2\n                ) {\n                  continue;\n                }\n                break;\n              default:\n              // pass\n            }\n          }\n\n          this.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          getUid(segment) in this.vertexSegments_ &&\n          !componentSegments[uid][0] &&\n          !componentSegments[uid][1] &&\n          this.insertVertexCondition_(evt)\n        ) {\n          insertVertices.push(segmentDataMatch);\n        }\n      }\n\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt, [insertVertices]);\n      }\n\n      for (let j = insertVertices.length - 1; j >= 0; --j) {\n        this.insertVertex_(insertVertices[j], vertex);\n      }\n    }\n    return !!this.vertexFeature_;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n      const segmentData = this.dragSegments_[i][0];\n      const geometry = segmentData.geometry;\n      if (geometry.getType() === 'Circle') {\n        // Update a circle object in the R* bush:\n        const coordinates = geometry.getCenter();\n        const centerSegmentData = segmentData.featureSegments[0];\n        const circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = coordinates;\n        centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = coordinates;\n        circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createExtent(coordinates), centerSegmentData);\n        let circleGeometry = geometry;\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          const projection = evt.map.getView().getProjection();\n          circleGeometry = circleGeometry\n            .clone()\n            .transform(userProjection, projection);\n          circleGeometry = fromCircle(circleGeometry).transform(\n            projection,\n            userProjection\n          );\n        }\n        this.rBush_.update(\n          circleGeometry.getExtent(),\n          circumferenceSegmentData\n        );\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.featuresBeingModified_) {\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYEND,\n          this.featuresBeingModified_,\n          evt\n        )\n      );\n      this.featuresBeingModified_ = null;\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  handlePointerMove_(evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, evt.coordinate);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../Map.js\").default} map Map.\n   * @param {import(\"../coordinate.js\").Coordinate} [coordinate] The pixel Coordinate.\n   * @private\n   */\n  handlePointerAtPixel_(pixel, map, coordinate) {\n    const pixelCoordinate = coordinate || map.getCoordinateFromPixel(pixel);\n    const projection = map.getView().getProjection();\n    const sortByDistance = function (a, b) {\n      return (\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection)\n      );\n    };\n\n    /** @type {Array<SegmentData>|undefined} */\n    let nodes;\n    /** @type {Point|undefined} */\n    let hitPointGeometry;\n    if (this.hitDetection_) {\n      const layerFilter =\n        typeof this.hitDetection_ === 'object'\n          ? (layer) => layer === this.hitDetection_\n          : undefined;\n      map.forEachFeatureAtPixel(\n        pixel,\n        (feature, layer, geometry) => {\n          const geom = geometry || feature.getGeometry();\n          if (\n            geom.getType() === 'Point' &&\n            feature instanceof Feature &&\n            this.features_.getArray().includes(feature)\n          ) {\n            hitPointGeometry = /** @type {Point} */ (geom);\n            const coordinate = hitPointGeometry\n              .getFlatCoordinates()\n              .slice(0, 2);\n            nodes = [\n              {\n                feature,\n                geometry: hitPointGeometry,\n                segment: [coordinate, coordinate],\n              },\n            ];\n          }\n          return true;\n        },\n        {layerFilter}\n      );\n    }\n    if (!nodes) {\n      const viewExtent = fromUserExtent(\n        createExtent(pixelCoordinate, tempExtent),\n        projection\n      );\n      const buffer = map.getView().getResolution() * this.pixelTolerance_;\n      const box = toUserExtent(\n        bufferExtent(viewExtent, buffer, tempExtent),\n        projection\n      );\n      nodes = this.rBush_.getInExtent(box);\n    }\n\n    if (nodes && nodes.length > 0) {\n      const node = nodes.sort(sortByDistance)[0];\n      const closestSegment = node.segment;\n      let vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n      let dist = coordinateDistance(pixel, vertexPixel);\n      if (hitPointGeometry || dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        const vertexSegments = {};\n        vertexSegments[getUid(closestSegment)] = true;\n\n        if (!this.snapToPointer_) {\n          this.delta_[0] = vertex[0] - pixelCoordinate[0];\n          this.delta_[1] = vertex[1] - pixelCoordinate[1];\n        }\n        if (\n          node.geometry.getType() === 'Circle' &&\n          node.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n        } else {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex =\n              squaredDist1 > squaredDist2\n                ? closestSegment[1]\n                : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n          const geometries = {};\n          geometries[getUid(node.geometry)] = true;\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\n            const segment = nodes[i].segment;\n            if (\n              (coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1])) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0]))\n            ) {\n              const geometryUid = getUid(nodes[i].geometry);\n              if (!(geometryUid in geometries)) {\n                geometries[geometryUid] = true;\n                vertexSegments[getUid(segment)] = true;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  }\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  insertVertex_(segmentData, vertex) {\n    const segment = segmentData.segment;\n    const feature = segmentData.feature;\n    const geometry = segmentData.geometry;\n    const depth = segmentData.depth;\n    const index = segmentData.index;\n    let coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case 'MultiLineString':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'Polygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'MultiPolygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'LineString':\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    const rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n\n    /** @type {SegmentData} */\n    const newSegmentData = {\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    /** @type {SegmentData} */\n    const newSegmentData2 = {\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  }\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  removePoint() {\n    if (\n      this.lastPointerEvent_ &&\n      this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG\n    ) {\n      const evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt, this.dragSegments_);\n      const removed = this.removeVertex_();\n      if (this.featuresBeingModified_) {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYEND,\n            this.featuresBeingModified_,\n            evt\n          )\n        );\n      }\n\n      this.featuresBeingModified_ = null;\n      return removed;\n    }\n    return false;\n  }\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  removeVertex_() {\n    const dragSegments = this.dragSegments_;\n    const segmentsByFeature = {};\n    let deleted = false;\n    let component, coordinates, dragSegment, geometry, i, index, left;\n    let newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case 'MultiLineString':\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'LineString':\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'MultiPolygon':\n          component = component[segmentData.depth[1]];\n        /* falls through */\n        case 'Polygon':\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        const segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          /** @type {SegmentData} */\n          const newSegmentData = {\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments,\n          };\n\n          this.rBush_.insert(\n            boundingExtent(newSegmentData.segment),\n            newSegmentData\n          );\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n    }\n    return deleted;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  setGeometryCoordinates_(geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  updateSegmentIndices_(geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(\n      geometry.getExtent(),\n      function (segmentDataMatch) {\n        if (\n          segmentDataMatch.geometry === geometry &&\n          (depth === undefined ||\n            segmentDataMatch.depth === undefined ||\n            equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index\n        ) {\n          segmentDataMatch.index += delta;\n        }\n      }\n    );\n  }\n}\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction projectedDistanceToSegmentDataSquared(\n  pointCoordinates,\n  segmentData,\n  projection\n) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === 'Circle') {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n          circleGeometry.clone().transform(userProjection, projection)\n        );\n      }\n      const distanceToCenterSquared = squaredCoordinateDistance(\n        circleGeometry.getCenter(),\n        fromUserCoordinate(pointCoordinates, projection)\n      );\n      const distanceToCircumference =\n        Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return squaredDistanceToSegment(coordinate, tempSegment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n  const geometry = segmentData.geometry;\n\n  if (\n    geometry.getType() === 'Circle' &&\n    segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX\n  ) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n        circleGeometry.clone().transform(userProjection, projection)\n      );\n    }\n    return toUserCoordinate(\n      circleGeometry.getClosestPoint(\n        fromUserCoordinate(pointCoordinates, projection)\n      ),\n      projection\n    );\n  }\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return toUserCoordinate(\n    closestOnSegment(coordinate, tempSegment),\n    projection\n  );\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n\nexport default Modify;\n","/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport Interaction from './Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {TRUE} from '../functions.js';\nimport {clear} from '../obj.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {never, shiftKeyOnly, singleClick} from '../events/condition.js';\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").default, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style/Style~Style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {Collection<Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature~Feature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nexport class SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nconst originalFeatureStyles = {};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'select', Return>} SelectOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * @fires SelectEvent\n * @api\n */\nclass Select extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SelectOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     */\n    this.boundAddFeature_ = this.addFeature_.bind(this);\n\n    /**\n     * @private\n     */\n    this.boundRemoveFeature_ = this.removeFeature_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition\n      ? options.removeCondition\n      : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition\n      ? options.toggleCondition\n      : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n    this.style_ =\n      options.style !== undefined ? options.style : getDefaultStyleFunction();\n\n    /**\n     * @private\n     * @type {Collection<Feature>}\n     */\n    this.features_ = options.features || new Collection();\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  addFeatureLayerAssociation_(feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  }\n\n  /**\n   * Get the selected features.\n   * @return {Collection<Feature>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~VectorLayer vector layer} of\n   * a selected feature.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n  getLayer(feature) {\n    return /** @type {import('../layer/Vector.js').default} */ (\n      this.featureLayerAssociation_[getUid(feature)]\n    );\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n    super.setMap(map);\n    if (map) {\n      this.features_.addEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.addEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.removeEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n    if (!this.getLayer(feature)) {\n      const layer = /** @type {VectorLayer} */ (\n        this.getMap()\n          .getAllLayers()\n          .find(function (layer) {\n            if (\n              layer instanceof VectorLayer &&\n              layer.getSource() &&\n              layer.getSource().hasFeature(feature)\n            ) {\n              return layer;\n            }\n          })\n      );\n      if (layer) {\n        this.addFeatureLayerAssociation_(feature, layer);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    if (this.style_) {\n      this.restorePreviousStyle_(evt.element);\n    }\n  }\n\n  /**\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  applySelectedStyle_(feature) {\n    const key = getUid(feature);\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n    feature.setStyle(this.style_);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  restorePreviousStyle_(feature) {\n    const interactions = this.getMap().getInteractions().getArray();\n    for (let i = interactions.length - 1; i >= 0; --i) {\n      const interaction = interactions[i];\n      if (\n        interaction !== this &&\n        interaction instanceof Select &&\n        interaction.getStyle() &&\n        interaction.getFeatures().getArray().lastIndexOf(feature) !== -1\n      ) {\n        feature.setStyle(interaction.getStyle());\n        return;\n      }\n    }\n\n    const key = getUid(feature);\n    feature.setStyle(originalFeatureStyles[key]);\n    delete originalFeatureStyles[key];\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureLayerAssociation_(feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may change the\n   * selected state of features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const add = this.addCondition_(mapBrowserEvent);\n    const remove = this.removeCondition_(mapBrowserEvent);\n    const toggle = this.toggleCondition_(mapBrowserEvent);\n    const set = !add && !remove && !toggle;\n    const map = mapBrowserEvent.map;\n    const features = this.getFeatures();\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const deselected = [];\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const selected = [];\n\n    if (set) {\n      // Replace the currently selected feature(s) with the feature(s) at the\n      // pixel, or clear the selected feature(s) if there is no feature at\n      // the pixel.\n      clear(this.featureLayerAssociation_);\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        (feature, layer) => {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          this.addFeatureLayerAssociation_(feature, layer);\n          selected.push(feature);\n          return !this.multi_;\n        },\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let i = features.getLength() - 1; i >= 0; --i) {\n        const feature = features.item(i);\n        const index = selected.indexOf(feature);\n        if (index > -1) {\n          // feature is already selected\n          selected.splice(index, 1);\n        } else {\n          features.remove(feature);\n          deselected.push(feature);\n        }\n      }\n      if (selected.length !== 0) {\n        features.extend(selected);\n      }\n    } else {\n      // Modify the currently selected feature(s).\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        (feature, layer) => {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          if ((add || toggle) && !features.getArray().includes(feature)) {\n            this.addFeatureLayerAssociation_(feature, layer);\n            selected.push(feature);\n          } else if (\n            (remove || toggle) &&\n            features.getArray().includes(feature)\n          ) {\n            deselected.push(feature);\n            this.removeFeatureLayerAssociation_(feature);\n          }\n          return !this.multi_;\n        },\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let j = deselected.length - 1; j >= 0; --j) {\n        features.remove(deselected[j]);\n      }\n      features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n      this.dispatchEvent(\n        new SelectEvent(\n          SelectEventType.SELECT,\n          selected,\n          deselected,\n          mapBrowserEvent\n        )\n      );\n    }\n    return true;\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles['Polygon'], styles['LineString']);\n  extend(styles['GeometryCollection'], styles['LineString']);\n\n  return function (feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\nexport default Select;\n","/**\n * @module ol/interaction/Snap\n */\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {boundingExtent, buffer, createEmpty} from '../extent.js';\nimport {\n  closestOnCircle,\n  closestOnSegment,\n  squaredDistance,\n} from '../coordinate.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Result\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex Vertex.\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel VertexPixel.\n */\n\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature Feature.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment Segment.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n * @return {import(\"../Feature.js\").default} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n  if (\n    /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature\n  ) {\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt)\n      .feature;\n  } else if (\n    /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element\n  ) {\n    return /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element;\n  }\n}\n\nconst tempSegment = [];\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector~VectorSource} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap.js';\n *\n *     const snap = new Snap({\n *       source: source\n *     });\n *\n *     map.addInteraction(snap);\n *\n * @api\n */\nclass Snap extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.handleDownEvent) {\n      pointerOptions.handleDownEvent = TRUE;\n    }\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @type {import(\"../source/Vector.js\").default|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<string, import(\"../extent.js\").Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Segment RTree for each layer\n     * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @const\n     * @private\n     * @type {Object<string, function(Array<Array<import('../coordinate.js').Coordinate>>, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.GEOMETRY_SEGMENTERS_ = {\n      'Point': this.segmentPointGeometry_.bind(this),\n      'LineString': this.segmentLineStringGeometry_.bind(this),\n      'LinearRing': this.segmentLineStringGeometry_.bind(this),\n      'Polygon': this.segmentPolygonGeometry_.bind(this),\n      'MultiPoint': this.segmentMultiPointGeometry_.bind(this),\n      'MultiLineString': this.segmentMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.segmentMultiPolygonGeometry_.bind(this),\n      'GeometryCollection': this.segmentGeometryCollectionGeometry_.bind(this),\n      'Circle': this.segmentCircleGeometry_.bind(this),\n    };\n  }\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {boolean} [register] Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  addFeature(feature, register) {\n    register = register !== undefined ? register : true;\n    const feature_uid = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const segmenter = this.GEOMETRY_SEGMENTERS_[geometry.getType()];\n      if (segmenter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(\n          createEmpty()\n        );\n        const segments =\n          /** @type {Array<Array<import('../coordinate.js').Coordinate>>} */ ([]);\n        segmenter(segments, geometry);\n        if (segments.length === 1) {\n          this.rBush_.insert(boundingExtent(segments[0]), {\n            feature: feature,\n            segment: segments[0],\n          });\n        } else if (segments.length > 1) {\n          const extents = segments.map((s) => boundingExtent(s));\n          const segmentsData = segments.map((segment) => ({\n            feature: feature,\n            segment: segment,\n          }));\n          this.rBush_.load(extents, segmentsData);\n        }\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_,\n        this\n      );\n    }\n  }\n\n  /**\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  getFeatures_() {\n    /** @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} */\n    let features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return features;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(evt) {\n    const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n    if (result) {\n      evt.coordinate = result.vertex.slice(0, 2);\n      evt.pixel = result.vertexPixel;\n    }\n    return super.handleEvent(evt);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    this.addFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    this.removeFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    const feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      const uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    const featuresToUpdate = Object.values(this.pendingFeatures_);\n    if (featuresToUpdate.length) {\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\n      this.pendingFeatures_ = {};\n    }\n    return false;\n  }\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {boolean} [unlisten] Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  removeFeature(feature, unlisten) {\n    const unregister = unlisten !== undefined ? unlisten : true;\n    const feature_uid = getUid(feature);\n    const extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      const rBush = this.rBush_;\n      const nodesToRemove = [];\n      rBush.forEachInExtent(extent, function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    const keys = this.featuresListenerKeys_;\n    const features = /** @type {Array<import(\"../Feature.js\").default>} */ (\n      this.getFeatures_()\n    );\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      this.rBush_.clear();\n      Object.values(this.featureChangeListenerKeys_).forEach(unlistenByKey);\n      this.featureChangeListenerKeys_ = {};\n    }\n    super.setMap(map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(\n            this.features_,\n            CollectionEventType.ADD,\n            this.handleFeatureAdd_,\n            this\n          ),\n          listen(\n            this.features_,\n            CollectionEventType.REMOVE,\n            this.handleFeatureRemove_,\n            this\n          )\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(\n            this.source_,\n            VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_,\n            this\n          ),\n          listen(\n            this.source_,\n            VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_,\n            this\n          )\n        );\n      }\n      features.forEach((feature) => this.addFeature(feature));\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n   * @param {import(\"../Map.js\").default} map Map.\n   * @return {Result|null} Snap result\n   */\n  snapTo(pixel, pixelCoordinate, map) {\n    const projection = map.getView().getProjection();\n    const projectedCoordinate = fromUserCoordinate(pixelCoordinate, projection);\n\n    const box = toUserExtent(\n      buffer(\n        boundingExtent([projectedCoordinate]),\n        map.getView().getResolution() * this.pixelTolerance_\n      ),\n      projection\n    );\n\n    const segments = this.rBush_.getInExtent(box);\n\n    const segmentsLength = segments.length;\n    if (segmentsLength === 0) {\n      return null;\n    }\n\n    let closestVertex;\n    let minSquaredDistance = Infinity;\n\n    const squaredPixelTolerance = this.pixelTolerance_ * this.pixelTolerance_;\n    const getResult = () => {\n      if (closestVertex) {\n        const vertexPixel = map.getPixelFromCoordinate(closestVertex);\n        const squaredPixelDistance = squaredDistance(pixel, vertexPixel);\n        if (squaredPixelDistance <= squaredPixelTolerance) {\n          return {\n            vertex: closestVertex,\n            vertexPixel: [\n              Math.round(vertexPixel[0]),\n              Math.round(vertexPixel[1]),\n            ],\n          };\n        }\n      }\n      return null;\n    };\n\n    if (this.vertex_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() !== 'Circle') {\n          segmentData.segment.forEach((vertex) => {\n            const tempVertexCoord = fromUserCoordinate(vertex, projection);\n            const delta = squaredDistance(projectedCoordinate, tempVertexCoord);\n            if (delta < minSquaredDistance) {\n              closestVertex = vertex;\n              minSquaredDistance = delta;\n            }\n          });\n        }\n      }\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    if (this.edge_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        let vertex = null;\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() === 'Circle') {\n          let circleGeometry = segmentData.feature.getGeometry();\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circleGeometry = circleGeometry\n              .clone()\n              .transform(userProjection, projection);\n          }\n          vertex = closestOnCircle(\n            projectedCoordinate,\n            /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n          );\n        } else {\n          const [segmentStart, segmentEnd] = segmentData.segment;\n          // points have only one coordinate\n          if (segmentEnd) {\n            tempSegment[0] = fromUserCoordinate(segmentStart, projection);\n            tempSegment[1] = fromUserCoordinate(segmentEnd, projection);\n            vertex = closestOnSegment(projectedCoordinate, tempSegment);\n          }\n        }\n        if (vertex) {\n          const delta = squaredDistance(projectedCoordinate, vertex);\n          if (delta < minSquaredDistance) {\n            closestVertex = toUserCoordinate(vertex, projection);\n            minSquaredDistance = delta;\n          }\n        }\n      }\n\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  updateFeature_(feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentCircleGeometry_(segments, geometry) {\n    const projection = this.getMap().getView().getProjection();\n    let circleGeometry = geometry;\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n        circleGeometry.clone().transform(userProjection, projection)\n      );\n    }\n    const polygon = fromCircle(circleGeometry);\n    if (userProjection) {\n      polygon.transform(projection, userProjection);\n    }\n    const coordinates = polygon.getCoordinates()[0];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segments.push(coordinates.slice(i, i + 2));\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentGeometryCollectionGeometry_(segments, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const segmenter = this.GEOMETRY_SEGMENTERS_[geometries[i].getType()];\n      if (segmenter) {\n        segmenter(segments, geometries[i]);\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentLineStringGeometry_(segments, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segments.push(coordinates.slice(i, i + 2));\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiLineStringGeometry_(segments, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segments.push(coordinates.slice(i, i + 2));\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiPointGeometry_(segments, geometry) {\n    geometry.getCoordinates().forEach((point) => {\n      segments.push([point]);\n    });\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiPolygonGeometry_(segments, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          segments.push(coordinates.slice(i, i + 2));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentPointGeometry_(segments, geometry) {\n    segments.push([geometry.getCoordinates()]);\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentPolygonGeometry_(segments, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segments.push(coordinates.slice(i, i + 2));\n      }\n    }\n  }\n}\n\nexport default Snap;\n","/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport InteractionProperty from './Property.js';\nimport PointerInteraction from './Pointer.js';\nimport {TRUE} from '../functions.js';\nimport {always} from '../events/condition.js';\n\n/**\n * @enum {string}\n */\nconst TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @typedef {function(Feature, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {Collection<Feature>} [features] Features contained in this collection will be able to be translated together.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * Not used if `features` is provided.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature~Feature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * translated or `false` otherwise. Not used if `features` is provided.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nexport class TranslateEvent extends Event {\n  /**\n   * @param {TranslateEventType} type Type.\n   * @param {Collection<Feature>} features The features translated.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} startCoordinate The original coordinates before.translation started\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   */\n  constructor(type, features, coordinate, startCoordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being translated.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * The coordinate of the start position before translation started.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.startCoordinate = startCoordinate;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'translateend'|'translatestart'|'translating', TranslateEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'translateend'|'translatestart'|'translating', Return>} TranslateOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n * If you want to translate multiple features in a single action (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.\n *\n * @fires TranslateEvent\n * @api\n */\nclass Translate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {TranslateOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TranslateOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TranslateOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * The last position we translated to.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = null;\n\n    /**\n     * The start position before translation started.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.startCoordinate_ = null;\n\n    /**\n     * @type {Collection<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features !== undefined ? options.features : null;\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers && !this.features_) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter && !this.features_ ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @type {Feature}\n     * @private\n     */\n    this.lastFeature_ = null;\n\n    this.addChangeListener(\n      InteractionProperty.ACTIVE,\n      this.handleActiveChanged_\n    );\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    if (!event.originalEvent || !this.condition_(event)) {\n      return false;\n    }\n    this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n    if (!this.lastCoordinate_ && this.lastFeature_) {\n      this.startCoordinate_ = event.coordinate;\n      this.lastCoordinate_ = event.coordinate;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATESTART,\n          features,\n          event.coordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    if (this.lastCoordinate_) {\n      this.lastCoordinate_ = null;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATEEND,\n          features,\n          event.coordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n      // cleanup\n      this.startCoordinate_ = null;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  handleDragEvent(event) {\n    if (this.lastCoordinate_) {\n      const newCoordinate = event.coordinate;\n      const deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n      const deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      features.forEach(function (feature) {\n        const geom = feature.getGeometry();\n        geom.translate(deltaX, deltaY);\n        feature.setGeometry(geom);\n      });\n\n      this.lastCoordinate_ = newCoordinate;\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATING,\n          features,\n          newCoordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n    }\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  handleMoveEvent(event) {\n    const elem = event.map.getViewport();\n\n    // Change the cursor to grab/grabbing if hovering any of the features managed\n    // by the interaction\n    if (this.featuresAtPixel_(event.pixel, event.map)) {\n      elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n      elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n    } else {\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {import(\"../Map.js\").default} map Map to test the intersection on.\n   * @return {Feature} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  featuresAtPixel_(pixel, map) {\n    return map.forEachFeatureAtPixel(\n      pixel,\n      (feature, layer) => {\n        if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n          return undefined;\n        }\n        if (this.features_ && !this.features_.getArray().includes(feature)) {\n          return undefined;\n        }\n        return feature;\n      },\n      {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_,\n      }\n    );\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    this.updateState_(oldMap);\n  }\n\n  /**\n   * @private\n   */\n  handleActiveChanged_() {\n    this.updateState_(null);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} oldMap Old map.\n   * @private\n   */\n  updateState_(oldMap) {\n    let map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        const elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  }\n}\n\nexport default Translate;\n","/**\n * @module ol/geom/flat/flip\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destOffset] Destination offset.\n * @return {Array<number>} Flat coordinates.\n */\nexport function flipXY(flatCoordinates, offset, end, stride, dest, destOffset) {\n  if (dest !== undefined) {\n    dest = dest;\n    destOffset = destOffset !== undefined ? destOffset : 0;\n  } else {\n    dest = [];\n    destOffset = 0;\n  }\n  let j = offset;\n  while (j < end) {\n    const x = flatCoordinates[j++];\n    dest[destOffset++] = flatCoordinates[j++];\n    dest[destOffset++] = x;\n    for (let k = 2; k < stride; ++k) {\n      dest[destOffset++] = flatCoordinates[j++];\n    }\n  }\n  dest.length = destOffset;\n  return dest;\n}\n","/**\n * @module ol/format/Feature\n */\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/EsriJSON\n */\nimport Feature from '../Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent} from '../extent.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {linearRingIsClockwise} from '../geom/flat/orient.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"arcgis-rest-api\").Feature} EsriJSONFeature\n * @typedef {import(\"arcgis-rest-api\").FeatureSet} EsriJSONFeatureSet\n * @typedef {import(\"arcgis-rest-api\").Geometry} EsriJSONGeometry\n * @typedef {import(\"arcgis-rest-api\").Point} EsriJSONPoint\n * @typedef {import(\"arcgis-rest-api\").Polyline} EsriJSONPolyline\n * @typedef {import(\"arcgis-rest-api\").Polygon} EsriJSONPolygon\n * @typedef {import(\"arcgis-rest-api\").Multipoint} EsriJSONMultipoint\n * @typedef {import(\"arcgis-rest-api\").HasZM} EsriJSONHasZM\n * @typedef {import(\"arcgis-rest-api\").Position} EsriJSONPosition\n * @typedef {import(\"arcgis-rest-api\").SpatialReferenceWkid} EsriJSONSpatialReferenceWkid\n */\n\n/**\n * @typedef {Object} EsriJSONMultiPolygon\n * @property {Array<Array<Array<Array<number>>>>} rings Rings for the MultiPolygon.\n * @property {boolean} [hasM] If the polygon coordinates have an M value.\n * @property {boolean} [hasZ] If the polygon coordinates have a Z value.\n * @property {EsriJSONSpatialReferenceWkid} [spatialReference] The coordinate reference system.\n */\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type, function(EsriJSONGeometry): import(\"../geom/Geometry.js\").default>}\n */\nconst GEOMETRY_READERS = {\n  Point: readPointGeometry,\n  LineString: readLineStringGeometry,\n  Polygon: readPolygonGeometry,\n  MultiPoint: readMultiPointGeometry,\n  MultiLineString: readMultiLineStringGeometry,\n  MultiPolygon: readMultiPolygonGeometry,\n};\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type, function(import(\"../geom/Geometry.js\").default, import(\"./Feature.js\").WriteOptions=): (EsriJSONGeometry)>}\n */\nconst GEOMETRY_WRITERS = {\n  Point: writePointGeometry,\n  LineString: writeLineStringGeometry,\n  Polygon: writePolygonGeometry,\n  MultiPoint: writeMultiPointGeometry,\n  MultiLineString: writeMultiLineStringGeometry,\n  MultiPolygon: writeMultiPolygonGeometry,\n};\n\n/**\n * @typedef {Object} Options\n * @property {string} [geometryName] Geometry name to use when creating features.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the EsriJSON format.\n *\n * @api\n */\nclass EsriJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @param {string} [idField] Name of the field where to get the id from.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options, idField) {\n    const esriJSONFeature = /** @type {EsriJSONFeature} */ (object);\n    const geometry = readGeometry(esriJSONFeature.geometry, options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    }\n    feature.setGeometry(geometry);\n    if (esriJSONFeature.attributes) {\n      feature.setProperties(esriJSONFeature.attributes, true);\n      const id = esriJSONFeature.attributes[idField];\n      if (id !== undefined) {\n        feature.setId(/** @type {number} */ (id));\n      }\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    options = options ? options : {};\n    if (object['features']) {\n      const esriJSONFeatureSet = /** @type {EsriJSONFeatureSet} */ (object);\n      /** @type {Array<import(\"../Feature.js\").default>} */\n      const features = [];\n      const esriJSONFeatures = esriJSONFeatureSet.features;\n      for (let i = 0, ii = esriJSONFeatures.length; i < ii; ++i) {\n        features.push(\n          this.readFeatureFromObject(\n            esriJSONFeatures[i],\n            options,\n            object.objectIdFieldName\n          )\n        );\n      }\n      return features;\n    }\n    return [this.readFeatureFromObject(object, options)];\n  }\n\n  /**\n   * @param {EsriJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    if (\n      object['spatialReference'] &&\n      object['spatialReference']['wkid'] !== undefined\n    ) {\n      const spatialReference = /** @type {EsriJSONSpatialReferenceWkid} */ (\n        object['spatialReference']\n      );\n      const crs = spatialReference.wkid;\n      return getProjection('EPSG:' + crs);\n    }\n    return null;\n  }\n\n  /**\n   * Encode a geometry as a EsriJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {EsriJSONGeometry} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n\n  /**\n   * Encode a feature as a esriJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n    const object = {};\n    if (!feature.hasProperties()) {\n      object['attributes'] = {};\n      return object;\n    }\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object['geometry'] = writeGeometry(geometry, options);\n      const projection =\n        options && (options.dataProjection || options.featureProjection);\n      if (projection) {\n        object['geometry']['spatialReference'] =\n          /** @type {EsriJSONSpatialReferenceWkid} */ ({\n            wkid: Number(getProjection(projection).getCode().split(':').pop()),\n          });\n      }\n      delete properties[feature.getGeometryName()];\n    }\n    if (!isEmpty(properties)) {\n      object['attributes'] = properties;\n    } else {\n      object['attributes'] = {};\n    }\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a EsriJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {EsriJSONFeatureSet} EsriJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      'features': objects,\n    };\n  }\n}\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  /** @type {import(\"../geom/Geometry.js\").Type} */\n  let type;\n  if (typeof object['x'] === 'number' && typeof object['y'] === 'number') {\n    type = 'Point';\n  } else if (object['points']) {\n    type = 'MultiPoint';\n  } else if (object['paths']) {\n    const esriJSONPolyline = /** @type {EsriJSONPolyline} */ (object);\n    if (esriJSONPolyline.paths.length === 1) {\n      type = 'LineString';\n    } else {\n      type = 'MultiLineString';\n    }\n  } else if (object['rings']) {\n    const esriJSONPolygon = /** @type {EsriJSONPolygon} */ (object);\n    const layout = getGeometryLayout(esriJSONPolygon);\n    const rings = convertRings(esriJSONPolygon.rings, layout);\n    if (rings.length === 1) {\n      type = 'Polygon';\n      object = Object.assign({}, object, {['rings']: rings[0]});\n    } else {\n      type = 'MultiPolygon';\n      object = Object.assign({}, object, {['rings']: rings});\n    }\n  }\n  const geometryReader = GEOMETRY_READERS[type];\n  return transformGeometryWithOptions(geometryReader(object), false, options);\n}\n\n/**\n * Determines inner and outer rings.\n * Checks if any polygons in this array contain any other polygons in this\n * array. It is used for checking for holes.\n * Logic inspired by: https://github.com/Esri/terraformer-arcgis-parser\n * @param {Array<!Array<!Array<number>>>} rings Rings.\n * @param {import(\"../geom/Geometry.js\").GeometryLayout} layout Geometry layout.\n * @return {Array<!Array<!Array<!Array<number>>>>} Transformed rings.\n */\nfunction convertRings(rings, layout) {\n  const flatRing = [];\n  const outerRings = [];\n  const holes = [];\n  let i, ii;\n  for (i = 0, ii = rings.length; i < ii; ++i) {\n    flatRing.length = 0;\n    deflateCoordinates(flatRing, 0, rings[i], layout.length);\n    // is this ring an outer ring? is it clockwise?\n    const clockwise = linearRingIsClockwise(\n      flatRing,\n      0,\n      flatRing.length,\n      layout.length\n    );\n    if (clockwise) {\n      outerRings.push([rings[i]]);\n    } else {\n      holes.push(rings[i]);\n    }\n  }\n  while (holes.length) {\n    const hole = holes.shift();\n    let matched = false;\n    // loop over all outer rings and see if they contain our hole.\n    for (i = outerRings.length - 1; i >= 0; i--) {\n      const outerRing = outerRings[i][0];\n      const containsHole = containsExtent(\n        new LinearRing(outerRing).getExtent(),\n        new LinearRing(hole).getExtent()\n      );\n      if (containsHole) {\n        // the hole is contained push it into our polygon\n        outerRings[i].push(hole);\n        matched = true;\n        break;\n      }\n    }\n    if (!matched) {\n      // no outer rings contain this hole turn it into and outer\n      // ring (reverse it)\n      outerRings.push([hole.reverse()]);\n    }\n  }\n  return outerRings;\n}\n\n/**\n * @param {EsriJSONPoint} object Object.\n * @return {import(\"../geom/Geometry.js\").default} Point.\n */\nfunction readPointGeometry(object) {\n  let point;\n  if (object.m !== undefined && object.z !== undefined) {\n    point = new Point([object.x, object.y, object.z, object.m], 'XYZM');\n  } else if (object.z !== undefined) {\n    point = new Point([object.x, object.y, object.z], 'XYZ');\n  } else if (object.m !== undefined) {\n    point = new Point([object.x, object.y, object.m], 'XYM');\n  } else {\n    point = new Point([object.x, object.y]);\n  }\n  return point;\n}\n\n/**\n * @param {EsriJSONPolyline} object Object.\n * @return {import(\"../geom/Geometry.js\").default} LineString.\n */\nfunction readLineStringGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new LineString(object.paths[0], layout);\n}\n\n/**\n * @param {EsriJSONPolyline} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new MultiLineString(object.paths, layout);\n}\n\n/**\n * @param {EsriJSONHasZM} object Object.\n * @return {import(\"../geom/Geometry.js\").GeometryLayout} The geometry layout to use.\n */\nfunction getGeometryLayout(object) {\n  /** @type {import(\"../geom/Geometry.js\").GeometryLayout} */\n  let layout = 'XY';\n  if (object.hasZ === true && object.hasM === true) {\n    layout = 'XYZM';\n  } else if (object.hasZ === true) {\n    layout = 'XYZ';\n  } else if (object.hasM === true) {\n    layout = 'XYM';\n  }\n  return layout;\n}\n\n/**\n * @param {EsriJSONMultipoint} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new MultiPoint(object.points, layout);\n}\n\n/**\n * @param {EsriJSONMultiPolygon} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new MultiPolygon(object.rings, layout);\n}\n\n/**\n * @param {EsriJSONPolygon} object Object.\n * @return {import(\"../geom/Geometry.js\").default} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new Polygon(object.rings, layout);\n}\n\n/**\n * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONPoint} EsriJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  const coordinates = geometry.getCoordinates();\n  /** @type {EsriJSONPoint} */\n  let esriJSON;\n  const layout = geometry.getLayout();\n  if (layout === 'XYZ') {\n    esriJSON = {\n      x: coordinates[0],\n      y: coordinates[1],\n      z: coordinates[2],\n    };\n  } else if (layout === 'XYM') {\n    esriJSON = {\n      x: coordinates[0],\n      y: coordinates[1],\n      m: coordinates[2],\n    };\n  } else if (layout === 'XYZM') {\n    esriJSON = {\n      x: coordinates[0],\n      y: coordinates[1],\n      z: coordinates[2],\n      m: coordinates[3],\n    };\n  } else if (layout === 'XY') {\n    esriJSON = {\n      x: coordinates[0],\n      y: coordinates[1],\n    };\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n  return esriJSON;\n}\n\n/**\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @return {Object} Object with boolean hasZ and hasM keys.\n */\nfunction getHasZM(geometry) {\n  const layout = geometry.getLayout();\n  return {\n    hasZ: layout === 'XYZ' || layout === 'XYZM',\n    hasM: layout === 'XYM' || layout === 'XYZM',\n  };\n}\n\n/**\n * @param {import(\"../geom/LineString.js\").default} lineString Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeLineStringGeometry(lineString, options) {\n  const hasZM = getHasZM(lineString);\n  return {\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    paths: [\n      /** @type {Array<EsriJSONPosition>} */ (lineString.getCoordinates()),\n    ],\n  };\n}\n\n/**\n * @param {import(\"../geom/Polygon.js\").default} polygon Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writePolygonGeometry(polygon, options) {\n  // Esri geometries use the left-hand rule\n  const hasZM = getHasZM(polygon);\n  return {\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    rings: /** @type {Array<Array<EsriJSONPosition>>} */ (\n      polygon.getCoordinates(false)\n    ),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default} multiLineString Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeMultiLineStringGeometry(multiLineString, options) {\n  const hasZM = getHasZM(multiLineString);\n  return {\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    paths: /** @type {Array<Array<EsriJSONPosition>>} */ (\n      multiLineString.getCoordinates()\n    ),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default} multiPoint Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONMultipoint} EsriJSON geometry.\n */\nfunction writeMultiPointGeometry(multiPoint, options) {\n  const hasZM = getHasZM(multiPoint);\n  return {\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    points: /** @type {Array<EsriJSONPosition>} */ (\n      multiPoint.getCoordinates()\n    ),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  const hasZM = getHasZM(geometry);\n  const coordinates = geometry.getCoordinates(false);\n  const output = [];\n  for (let i = 0; i < coordinates.length; i++) {\n    for (let x = coordinates[i].length - 1; x >= 0; x--) {\n      output.push(coordinates[i][x]);\n    }\n  }\n  return {\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    rings: /** @type {Array<Array<EsriJSONPosition>>} */ (output),\n  };\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONGeometry} EsriJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  const geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n  return geometryWriter(\n    transformGeometryWithOptions(geometry, true, options),\n    options\n  );\n}\n\nexport default EsriJSON;\n","/**\n * @module ol/format/XMLFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport {abstract} from '../util.js';\nimport {extend} from '../array.js';\nimport {getXMLSerializer, isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nclass XMLFeature extends FeatureFormat {\n  constructor() {\n    super();\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = getXMLSerializer();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'xml';\n  }\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureFromDocument(doc, options);\n    } else if (isDocument(source)) {\n      return this.readFeatureFromDocument(\n        /** @type {Document} */ (source),\n        options\n      );\n    }\n    return this.readFeatureFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromDocument(doc, options) {\n    const features = this.readFeaturesFromDocument(doc, options);\n    if (features.length > 0) {\n      return features[0];\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    if (!source) {\n      return [];\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeaturesFromDocument(doc, options);\n    } else if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source),\n        options\n      );\n    }\n    return this.readFeaturesFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromDocument(doc, options) {\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    const features = [];\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          features,\n          this.readFeaturesFromNode(/** @type {Element} */ (n), options)\n        );\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readGeometryFromDocument(doc, options);\n    } else if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source),\n        options\n      );\n    }\n    return this.readGeometryFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromDocument(doc, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readProjectionFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    return this.dataProjection;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   */\n  writeFeature(feature, options) {\n    const node = this.writeFeatureNode(feature, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  writeFeatureNode(feature, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Result.\n   * @api\n   */\n  writeFeatures(features, options) {\n    const node = this.writeFeaturesNode(features, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeFeaturesNode(features, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   */\n  writeGeometry(geometry, options) {\n    const node = this.writeGeometryNode(geometry, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeGeometryNode(geometry, options) {\n    return null; // not implemented\n  }\n}\n\nexport default XMLFeature;\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, getDocument} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readPositiveInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(getDocument().createTextNode(string));\n}\n","/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  makeArrayPusher,\n  makeArraySerializer,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readDateTime,\n  readDecimal,\n  readPositiveInteger,\n  readString,\n  writeDateTimeTextNode,\n  writeDecimalTextNode,\n  writeNonNegativeIntegerTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.topografix.com/GPX/1/1 ' +\n  'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt,\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GPX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeArrayPusher(readRte),\n  'trk': makeArrayPusher(readTrk),\n  'wpt': makeArrayPusher(readWpt),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeObjectPropertySetter(readString, 'linkText'),\n  'type': makeObjectPropertySetter(readString, 'linkType'),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst GPX_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeChildAppender(writeRte),\n  'trk': makeChildAppender(writeTrk),\n  'wpt': makeChildAppender(writeWpt),\n});\n\n/**\n * @typedef {Object} Options\n * @property {function(Feature, Node):void} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ] HasZ.\n * @property {boolean} [hasM] HasM.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nclass GPX extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @type {function(Feature, Node): void|undefined}\n     * @private\n     */\n    this.readExtensions_ = options.readExtensions;\n  }\n\n  /**\n   * @param {Array<Feature>} features List of features.\n   * @private\n   */\n  handleReadExtensions_(features) {\n    if (!features) {\n      features = [];\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      if (this.readExtensions_) {\n        const extensionsNode = feature.get('extensionsNode_') || null;\n        this.readExtensions_(feature, extensionsNode);\n      }\n      feature.set('extensionsNode_', undefined);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    const featureReader = FEATURE_READER[node.localName];\n    if (!featureReader) {\n      return null;\n    }\n    const feature = featureReader(node, [this.getReadOptions(node, options)]);\n    if (!feature) {\n      return null;\n    }\n    this.handleReadExtensions_([feature]);\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return [];\n    }\n    if (node.localName == 'gpx') {\n      /** @type {Array<Feature>} */\n      const features = pushParseAndPop([], GPX_PARSERS, node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (features) {\n        this.handleReadExtensions_(features);\n        return features;\n      }\n      return [];\n    }\n    return [];\n  }\n\n  /**\n   * Encode an array of features in the GPX format as an XML node.\n   * LineString geometries are output as routes (`<rte>`), and MultiLineString\n   * as tracks (`<trk>`).\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    //FIXME Serialize metadata\n    const gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    gpx.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION\n    );\n    gpx.setAttribute('version', '1.1');\n    gpx.setAttribute('creator', 'OpenLayers');\n\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: gpx}),\n      GPX_SERIALIZERS,\n      GPX_NODE_FACTORY,\n      features,\n      [options]\n    );\n    return gpx;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readPositiveInteger),\n  'extensions': parseExtensions,\n  'type': makeObjectPropertySetter(readString),\n  'rtept': parseRtePt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTEPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readPositiveInteger),\n  'type': makeObjectPropertySetter(readString),\n  'extensions': parseExtensions,\n  'trkseg': parseTrkSeg,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKSEG_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': parseTrkPt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n  'magvar': makeObjectPropertySetter(readDecimal),\n  'geoidheight': makeObjectPropertySetter(readDecimal),\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'sym': makeObjectPropertySetter(readString),\n  'type': makeObjectPropertySetter(readString),\n  'fix': makeObjectPropertySetter(readString),\n  'sat': makeObjectPropertySetter(readPositiveInteger),\n  'hdop': makeObjectPropertySetter(readDecimal),\n  'vdop': makeObjectPropertySetter(readDecimal),\n  'pdop': makeObjectPropertySetter(readDecimal),\n  'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n  'dgpsid': makeObjectPropertySetter(readPositiveInteger),\n  'extensions': parseExtensions,\n});\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'rtept',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst RTE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'rtept': makeArraySerializer(makeChildAppender(writeWptType)),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTEPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['ele', 'time']);\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst TRK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'trkseg',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg)),\n});\n\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRKSEG_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': makeChildAppender(writeWptType),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'ele',\n  'time',\n  'magvar',\n  'geoidheight',\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'sym',\n  'type',\n  'fix',\n  'sat',\n  'hdop',\n  'vdop',\n  'pdop',\n  'ageofdgpsdata',\n  'dgpsid',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeChildAppender(writeDecimalTextNode),\n  'time': makeChildAppender(writeDateTimeTextNode),\n  'magvar': makeChildAppender(writeDecimalTextNode),\n  'geoidheight': makeChildAppender(writeDecimalTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'sym': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'fix': makeChildAppender(writeStringTextNode),\n  'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'hdop': makeChildAppender(writeDecimalTextNode),\n  'vdop': makeChildAppender(writeDecimalTextNode),\n  'pdop': makeChildAppender(writeDecimalTextNode),\n  'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n  'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk',\n};\n\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, nodeName) {\n  const geometry = /** @type {Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Element} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat'))\n  );\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>} [ends] Ends.\n * @return {import(\"../geom/Geometry.js\").GeometryLayout} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n  /** @type {import(\"../geom/Geometry.js\").GeometryLayout} */\n  let layout = 'XY';\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = 'XYZM';\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = 'XYZ';\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = 'XYM';\n    stride = 3;\n  }\n  if (stride !== 4) {\n    for (let i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = (flatCoordinates.length / 4) * stride;\n    if (ends) {\n      for (let i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = (ends[i] / 4) * stride;\n      }\n    }\n  }\n  return layout;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {!Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const flatCoordinates = /** @type {Array<number>} */ (\n      rteValues['flatCoordinates']\n    );\n    const layoutOptions = /** @type {LayoutOptions} */ (\n      rteValues['layoutOptions']\n    );\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {!Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const flatCoordinates = /** @type {Array<number>} */ (\n      trkValues['flatCoordinates']\n    );\n    const layoutOptions = /** @type {LayoutOptions} */ (\n      trkValues['layoutOptions']\n    );\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'layoutOptions': {},\n    },\n    RTE_PARSERS,\n    node,\n    objectStack\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n  const geometry = new LineString(flatCoordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'ends': [],\n      'layoutOptions': {},\n    },\n    TRK_PARSERS,\n    node,\n    objectStack\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(flatCoordinates, layout, ends);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = applyLayoutOptions(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [properties['linkText'], properties['linkType']];\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    link,\n    objectStack,\n    LINK_SEQUENCE\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  node.setAttributeNS(null, 'lat', String(coordinate[1]));\n  node.setAttributeNS(null, 'lon', String(coordinate[0]));\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case 'XYZM':\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n    // fall through\n    case 'XYZ':\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case 'XYM':\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n    // pass\n  }\n  const orderedKeys =\n    node.nodeName == 'rtept'\n      ? RTEPT_TYPE_SEQUENCE[namespaceURI]\n      : WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const properties = feature.getProperties();\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'LineString') {\n    const lineString = /** @type {LineString} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    context['geometryLayout'] = lineString.getLayout();\n    properties['rtept'] = lineString.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    RTE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const properties = feature.getProperties();\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'MultiLineString') {\n    const multiLineString = /** @type {MultiLineString} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    properties['trkseg'] = multiLineString.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    TRK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['geometryLayout'] = lineString.getLayout();\n  context['properties'] = {};\n  pushSerializeAndPop(\n    context,\n    TRKSEG_SERIALIZERS,\n    TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(),\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'Point') {\n    const point = /** @type {Point} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    context['geometryLayout'] = point.getLayout();\n    writeWptType(node, point.getCoordinates(), objectStack);\n  }\n}\n\nexport default GPX;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assert} from '../asserts.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), options);\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/format/TextFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nclass TextFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'text';\n  }\n\n  /**\n   * Read the feature from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromText(\n      getText(source),\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the features from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromText(\n      getText(source),\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the geometry from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromText(\n      getText(source),\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromText(getText(source));\n  }\n\n  /**\n   * @param {string} text Text.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjectionFromText(text) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as a string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return this.writeFeatureText(feature, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return this.writeFeaturesText(features, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return this.writeGeometryText(geometry, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  }\n  return '';\n}\n\nexport default TextFeature;\n","/**\n * @module ol/format/IGC\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport TextFeature from './TextFeature.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {'barometric' | 'gps' | 'none'} IGCZ\n * IGC altitude/z. One of 'barometric', 'gps', 'none'.\n */\n\n/**\n * @const\n * @type {RegExp}\n */\nconst B_RECORD_RE =\n  /^B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5})/;\n\n/**\n * @const\n * @type {RegExp}\n */\nconst H_RECORD_RE = /^H.([A-Z]{3}).*?:(.*)/;\n\n/**\n * @const\n * @type {RegExp}\n */\nconst HFDTE_RECORD_RE = /^HFDTE(\\d{2})(\\d{2})(\\d{2})/;\n\n/**\n * A regular expression matching the newline characters `\\r\\n`, `\\r` and `\\n`.\n *\n * @const\n * @type {RegExp}\n */\nconst NEWLINE_RE = /\\r\\n|\\r|\\n/;\n\n/**\n * @typedef {Object} Options\n * @property {IGCZ} [altitudeMode='none'] Altitude mode. Possible\n * values are `'barometric'`, `'gps'`, and `'none'`.\n */\n\n/**\n * @classdesc\n * Feature format for `*.igc` flight recording files.\n *\n * As IGC sources contain a single feature,\n * {@link module:ol/format/IGC~IGC#readFeatures} will return the feature in an\n * array\n *\n * @api\n */\nclass IGC extends TextFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {IGCZ}\n     */\n    this.altitudeMode_ = options.altitudeMode ? options.altitudeMode : 'none';\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    const altitudeMode = this.altitudeMode_;\n    const lines = text.split(NEWLINE_RE);\n    /** @type {Object<string, string>} */\n    const properties = {};\n    const flatCoordinates = [];\n    let year = 2000;\n    let month = 0;\n    let day = 1;\n    let lastDateTime = -1;\n    let i, ii;\n    for (i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      let m;\n      if (line.charAt(0) == 'B') {\n        m = B_RECORD_RE.exec(line);\n        if (m) {\n          const hour = parseInt(m[1], 10);\n          const minute = parseInt(m[2], 10);\n          const second = parseInt(m[3], 10);\n          let y = parseInt(m[4], 10) + parseInt(m[5], 10) / 60000;\n          if (m[6] == 'S') {\n            y = -y;\n          }\n          let x = parseInt(m[7], 10) + parseInt(m[8], 10) / 60000;\n          if (m[9] == 'W') {\n            x = -x;\n          }\n          flatCoordinates.push(x, y);\n          if (altitudeMode != 'none') {\n            let z;\n            if (altitudeMode == 'gps') {\n              z = parseInt(m[11], 10);\n            } else if (altitudeMode == 'barometric') {\n              z = parseInt(m[12], 10);\n            } else {\n              z = 0;\n            }\n            flatCoordinates.push(z);\n          }\n          let dateTime = Date.UTC(year, month, day, hour, minute, second);\n          // Detect UTC midnight wrap around.\n          if (dateTime < lastDateTime) {\n            dateTime = Date.UTC(year, month, day + 1, hour, minute, second);\n          }\n          flatCoordinates.push(dateTime / 1000);\n          lastDateTime = dateTime;\n        }\n      } else if (line.charAt(0) == 'H') {\n        m = HFDTE_RECORD_RE.exec(line);\n        if (m) {\n          day = parseInt(m[1], 10);\n          month = parseInt(m[2], 10) - 1;\n          year = 2000 + parseInt(m[3], 10);\n        } else {\n          m = H_RECORD_RE.exec(line);\n          if (m) {\n            properties[m[1]] = m[2].trim();\n          }\n        }\n      }\n    }\n    if (flatCoordinates.length === 0) {\n      return null;\n    }\n    const layout = altitudeMode == 'none' ? 'XYM' : 'XYZM';\n    const lineString = new LineString(flatCoordinates, layout);\n    const feature = new Feature(\n      transformGeometryWithOptions(lineString, false, options)\n    );\n    feature.setProperties(properties, true);\n    return feature;\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    const feature = this.readFeatureFromText(text, options);\n    if (feature) {\n      return [feature];\n    }\n    return [];\n  }\n}\n\nexport default IGC;\n","/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport Icon from '../style/Icon.js';\nimport ImageState from '../ImageState.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  isDocument,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeReplacer,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readBoolean,\n  readDecimal,\n  readString,\n  writeBooleanTextNode,\n  writeCDATASection,\n  writeDecimalTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {toRadians} from '../math.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x X coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} xunits Units of x.\n * @property {number} y Y coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} yunits Units of Y.\n * @property {import(\"../style/Icon.js\").IconOrigin} [origin] Origin.\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<Array<number>>} coordinates Coordinates.\n * @property {Array<number>} whens Whens.\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst GX_NAMESPACE_URIS = ['http://www.google.com/kml/ext/2.2'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.opengis.net/kml/2.2 ' +\n  'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n/**\n * @type {Object<string, import(\"../style/Icon.js\").IconAnchorUnits>}\n */\nconst ICON_ANCHOR_UNITS_MAP = {\n  'fraction': 'fraction',\n  'pixels': 'pixels',\n  'insetPixels': 'pixels',\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PLACEMARK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readStyleURL),\n    'visibility': makeObjectPropertySetter(readBoolean),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry'),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': extendedDataParser,\n  'Region': regionParser,\n  'Link': linkParser,\n  'address': makeObjectPropertySetter(readString),\n  'description': makeObjectPropertySetter(readString),\n  'name': makeObjectPropertySetter(readString),\n  'open': makeObjectPropertySetter(readBoolean),\n  'phoneNumber': makeObjectPropertySetter(readString),\n  'visibility': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'href': makeObjectPropertySetter(readURI),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LatLonAltBox': latLonAltBoxParser,\n  'Lod': lodParser,\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['Document', 'Placemark']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Document': makeChildAppender(writeDocument),\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @type {import(\"../color.js\").Color}\n */\nlet DEFAULT_COLOR;\n\n/**\n * @type {Fill|null}\n */\nlet DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill|null} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nlet DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {import(\"../style/Image.js\").default|null}\n */\nlet DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default|null} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nlet DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {Stroke|null}\n */\nlet DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke|null} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {Stroke}\n */\nlet DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {Text|null}\n */\nlet DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text|null} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {Style|null}\n */\nlet DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {Style|null} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>|null} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\n/**\n * Function that returns the scale needed to normalize an icon image to 32 pixels.\n * @param {import(\"../size.js\").Size} size Image size.\n * @return {number} Scale.\n */\nfunction scaleForSize(size) {\n  return 32 / Math.min(size[0], size[1]);\n}\n\nfunction createStyleDefaults() {\n  DEFAULT_COLOR = [255, 255, 255, 1];\n\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR,\n  });\n\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2];\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = 'pixels';\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = 'pixels';\n\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n\n  DEFAULT_IMAGE_STYLE_SRC =\n    'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: 'bottom-left',\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: scaleForSize(DEFAULT_IMAGE_STYLE_SIZE),\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC,\n  });\n\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1,\n  });\n\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2,\n  });\n\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8,\n  });\n\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0,\n  });\n\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n\n/**\n * @type {HTMLTextAreaElement}\n */\nlet TEXTAREA;\n\n/**\n * A function that takes a url `{string}` and returns a url `{string}`.\n * Might be used to change an icon path or to substitute a\n * data url obtained from a KMZ array buffer.\n *\n * @typedef {function(string):string} IconUrlFunction\n * @api\n */\n\n/**\n * Function that returns a url unchanged.\n * @param {string} href Input url.\n * @return {string} Output url.\n */\nfunction defaultIconUrlFunction(href) {\n  return href;\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * @property {IconUrlFunction} [iconUrlFunction] Function that takes a url string and returns a url string.\n * Might be used to change an icon path or to substitute a data url obtained from a KMZ array buffer.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * @api\n */\nclass KML extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    if (!DEFAULT_STYLE_ARRAY) {\n      createStyleDefaults();\n    }\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {Array<Style>}\n     */\n    this.defaultStyle_ = options.defaultStyle\n      ? options.defaultStyle\n      : DEFAULT_STYLE_ARRAY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.extractStyles_ =\n      options.extractStyles !== undefined ? options.extractStyles : true;\n\n    /**\n     * @type {boolean}\n     */\n    this.writeStyles_ =\n      options.writeStyles !== undefined ? options.writeStyles : true;\n\n    /**\n     * @private\n     * @type {!Object<string, (Array<Style>|string)>}\n     */\n    this.sharedStyles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.showPointNames_ =\n      options.showPointNames !== undefined ? options.showPointNames : true;\n\n    /**\n     * @type {null|string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    /**\n     * @type {IconUrlFunction}\n     */\n    this.iconUrlFunction_ = options.iconUrlFunction\n      ? options.iconUrlFunction\n      : defaultIconUrlFunction;\n\n    this.supportedMediaTypes = ['application/vnd.google-earth.kml+xml'];\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<Feature>|undefined} Features.\n   */\n  readDocumentOrFolder_(node, objectStack) {\n    // FIXME use scope somehow\n    const parsersNS = makeStructureNS(NAMESPACE_URIS, {\n      'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this),\n    });\n    /** @type {Array<Feature>} */\n    // @ts-ignore\n    const features = pushParseAndPop([], parsersNS, node, objectStack, this);\n    if (features) {\n      return features;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Feature|undefined} Feature.\n   */\n  readPlacemark_(node, objectStack) {\n    const object = pushParseAndPop(\n      {'geometry': null},\n      PLACEMARK_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (!object) {\n      return undefined;\n    }\n    const feature = new Feature();\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      feature.setId(id);\n    }\n    const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n      objectStack[0]\n    );\n\n    const geometry = object['geometry'];\n    if (geometry) {\n      transformGeometryWithOptions(geometry, false, options);\n    }\n    feature.setGeometry(geometry);\n    delete object['geometry'];\n\n    if (this.extractStyles_) {\n      const style = object['Style'];\n      const styleUrl = object['styleUrl'];\n      const styleFunction = createFeatureStyleFunction(\n        style,\n        styleUrl,\n        this.defaultStyle_,\n        this.sharedStyles_,\n        this.showPointNames_\n      );\n      feature.setStyle(styleFunction);\n    }\n    delete object['Style'];\n    // we do not remove the styleUrl property from the object, so it\n    // gets stored on feature when setProperties is called\n\n    feature.setProperties(object, true);\n\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyle_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      const style = readStyle.call(this, node, objectStack);\n      if (style) {\n        let styleUri;\n        let baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n          baseURI = window.location.href;\n        }\n        if (baseURI) {\n          const url = new URL('#' + id, baseURI);\n          styleUri = url.href;\n        } else {\n          styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = style;\n      }\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyleMap_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id === null) {\n      return;\n    }\n    const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n    if (!styleMapValue) {\n      return;\n    }\n    let styleUri;\n    let baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n      baseURI = window.location.href;\n    }\n    if (baseURI) {\n      const url = new URL('#' + id, baseURI);\n      styleUri = url.href;\n    } else {\n      styleUri = '#' + id;\n    }\n    this.sharedStyles_[styleUri] = styleMapValue;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    const feature = this.readPlacemark_(node, [\n      this.getReadOptions(node, options),\n    ]);\n    if (feature) {\n      return feature;\n    }\n    return null;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return [];\n    }\n    let features;\n    const localName = node.localName;\n    if (localName == 'Document' || localName == 'Folder') {\n      features = this.readDocumentOrFolder_(node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (features) {\n        return features;\n      }\n      return [];\n    } else if (localName == 'Placemark') {\n      const feature = this.readPlacemark_(node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (feature) {\n        return [feature];\n      }\n      return [];\n    } else if (localName == 'kml') {\n      features = [];\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        const fs = this.readFeaturesFromNode(n, options);\n        if (fs) {\n          extend(features, fs);\n        }\n      }\n      return features;\n    }\n    return [];\n  }\n\n  /**\n   * Read the name of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {string|undefined} Name.\n   * @api\n   */\n  readName(source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readNameFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readNameFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readNameFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {string|undefined} Name.\n   */\n  readNameFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        const name = this.readNameFromNode(/** @type {Element} */ (n));\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {string|undefined} Name.\n   */\n  readNameFromNode(node) {\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'name') {\n        return readString(n);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' ||\n          localName == 'Folder' ||\n          localName == 'Placemark' ||\n          localName == 'kml')\n      ) {\n        const name = this.readNameFromNode(n);\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Read the network links of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Network links.\n   * @api\n   */\n  readNetworkLinks(source) {\n    const networkLinks = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromNode(/** @type {Element} */ (source))\n      );\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromDocument(doc) {\n    const networkLinks = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          networkLinks,\n          this.readNetworkLinksFromNode(/** @type {Element} */ (n))\n        );\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromNode(node) {\n    const networkLinks = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        n.localName == 'NetworkLink'\n      ) {\n        const obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n        networkLinks.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(networkLinks, this.readNetworkLinksFromNode(n));\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * Read the regions of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Regions.\n   * @api\n   */\n  readRegion(source) {\n    const regions = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(regions, this.readRegionFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        regions,\n        this.readRegionFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(regions, this.readRegionFromNode(/** @type {Element} */ (source)));\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Region.\n   */\n  readRegionFromDocument(doc) {\n    const regions = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Region.\n   * @api\n   */\n  readRegionFromNode(node) {\n    const regions = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'Region') {\n        const obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n        regions.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(regions, this.readRegionFromNode(n));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    const kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    kml.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION\n    );\n\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: kml,\n      };\n    /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n    const properties = {};\n    if (features.length > 1) {\n      properties['Document'] = features;\n    } else if (features.length == 1) {\n      properties['Placemark'] = features[0];\n    }\n    const orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n    const values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(\n      context,\n      KML_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      [options],\n      orderedKeys,\n      this\n    );\n    return kml;\n  }\n}\n\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  const textOffset = [0, 0];\n  /** @type {CanvasTextAlign} */\n  let textAlign = 'start';\n  const imageStyle = foundStyle.getImage();\n  if (imageStyle) {\n    const imageSize = imageStyle.getSize();\n    if (imageSize && imageSize.length == 2) {\n      const imageScale = imageStyle.getScaleArray();\n      const anchor = imageStyle.getAnchor();\n      // Offset the label to be centered to the right of the icon,\n      // if there is one.\n      textOffset[0] = imageScale[0] * (imageSize[0] - anchor[0]);\n      textOffset[1] = imageScale[1] * (imageSize[1] / 2 - anchor[1]);\n      textAlign = 'left';\n    }\n  }\n  let textStyle = foundStyle.getText();\n  if (textStyle) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    textStyle = textStyle.clone();\n    textStyle.setFont(textStyle.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(textStyle.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(textStyle.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(textStyle.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    image: imageStyle,\n    text: textStyle,\n  });\n  return nameStyle;\n}\n\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(\n  style,\n  styleUrl,\n  defaultStyle,\n  sharedStyles,\n  showPointNames\n) {\n  return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>|Style} Style.\n     */\n    function (feature, resolution) {\n      let drawName = showPointNames;\n      let name = '';\n      let multiGeometryPoints = [];\n      if (drawName) {\n        const geometry = feature.getGeometry();\n        if (geometry) {\n          if (geometry instanceof GeometryCollection) {\n            multiGeometryPoints = geometry\n              .getGeometriesArrayRecursive()\n              .filter(function (geometry) {\n                const type = geometry.getType();\n                return type === 'Point' || type === 'MultiPoint';\n              });\n            drawName = multiGeometryPoints.length > 0;\n          } else {\n            const type = geometry.getType();\n            drawName = type === 'Point' || type === 'MultiPoint';\n          }\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (feature.get('name'));\n        drawName = drawName && !!name;\n        // convert any html character codes\n        if (drawName && /&[^&]+;/.test(name)) {\n          if (!TEXTAREA) {\n            TEXTAREA = document.createElement('textarea');\n          }\n          TEXTAREA.innerHTML = name;\n          name = TEXTAREA.value;\n        }\n      }\n\n      let featureStyle = defaultStyle;\n      if (style) {\n        featureStyle = style;\n      } else if (styleUrl) {\n        featureStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n      }\n      if (drawName) {\n        const nameStyle = createNameStyleFunction(featureStyle[0], name);\n        if (multiGeometryPoints.length > 0) {\n          // in multigeometries restrict the name style to points and create a\n          // style without image or text for geometries requiring fill or stroke\n          // including any polygon specific style if there is one\n          nameStyle.setGeometry(new GeometryCollection(multiGeometryPoints));\n          const baseStyle = new Style({\n            geometry: featureStyle[0].getGeometry(),\n            image: null,\n            fill: featureStyle[0].getFill(),\n            stroke: featureStyle[0].getStroke(),\n            text: null,\n          });\n          return [nameStyle, baseStyle].concat(featureStyle.slice(1));\n        }\n        return nameStyle;\n      }\n      return featureStyle;\n    }\n  );\n}\n\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  }\n  return defaultStyle;\n}\n\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n  const s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255,\n    ];\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  let s = getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  s = s.replace(/\\s*,\\s*/g, ',');\n  const re =\n    /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?),([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|,|$)(?:([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|$))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  const s = getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  }\n  return s;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readStyleURL(node) {\n  // KML files in the wild occasionally forget the leading\n  // `#` on styleUrlsdefined in the same document.\n  const s = getAllTextContent(node, false)\n    .trim()\n    .replace(/^(?!.*#)/, '#');\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  }\n  return s;\n}\n\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  /** @type {import('../style/Icon.js').IconOrigin} */\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = 'bottom-left';\n    } else {\n      origin = 'top-left';\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = 'bottom-right';\n    } else {\n      origin = 'top-right';\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin,\n  };\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Pair': pairDataParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack, this);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeObjectPropertySetter(readIcon),\n  'color': makeObjectPropertySetter(readColor),\n  'heading': makeObjectPropertySetter(readDecimal),\n  'hotSpot': makeObjectPropertySetter(readVec2),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = !('Icon' in object) || Object.keys(IconObject).length > 0;\n  let src;\n  const href = /** @type {string|undefined} */ (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  /** @type {import('../style/Icon.js').IconOrigin|undefined} */\n  let anchorOrigin = 'bottom-left';\n  const hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (/^https?:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    // Google hotspots from https://kml4earth.appspot.com/icons.html#notes\n    if (src.includes('pushpin')) {\n      anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (src.includes('arrow-reverse')) {\n      anchor = [54, 42];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (src.includes('paddle')) {\n      anchor = [32, 1];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    }\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */ (IconObject['x']);\n  const y = /** @type {number|undefined} */ (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */ (IconObject['w']);\n  const h = /** @type {number|undefined} */ (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */ (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  const scale = /** @type {number|undefined} */ (object['scale']);\n\n  const color = /** @type {Array<number>|undefined} */ (object['color']);\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: this.crossOrigin_,\n      offset: offset,\n      offsetOrigin: 'bottom-left',\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: this.iconUrlFunction_(src),\n      color: color,\n    });\n\n    const imageScale = imageStyle.getScaleArray()[0];\n    const imageSize = imageStyle.getSize();\n    if (imageSize === null) {\n      const imageState = imageStyle.getImageState();\n      if (imageState === ImageState.IDLE || imageState === ImageState.LOADING) {\n        const listener = function () {\n          const imageState = imageStyle.getImageState();\n          if (\n            !(\n              imageState === ImageState.IDLE ||\n              imageState === ImageState.LOADING\n            )\n          ) {\n            const imageSize = imageStyle.getSize();\n            if (imageSize && imageSize.length == 2) {\n              const resizeScale = scaleForSize(imageSize);\n              imageStyle.setScale(imageScale * resizeScale);\n            }\n            imageStyle.unlistenImageChange(listener);\n          }\n        };\n        imageStyle.listenImageChange(listener);\n        if (imageState === ImageState.IDLE) {\n          imageStyle.load();\n        }\n      }\n    } else if (imageSize.length == 2) {\n      const resizeScale = scaleForSize(imageSize);\n      imageStyle.setScale(imageScale * resizeScale);\n    }\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color:\n        /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    }),\n    scale: /** @type {number|undefined} */ (object['scale']),\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'width': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1),\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'fill': makeObjectPropertySetter(readBoolean),\n  'outline': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline = /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const coordinates = gxTrackObject.coordinates;\n  const s = getAllTextContent(node, false);\n  const re =\n    /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    coordinates.push([x, y, z]);\n  } else {\n    coordinates.push([]);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n  'Track': makeArrayPusher(readGxTrack),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  const lineStrings = pushParseAndPop(\n    [],\n    GX_MULTITRACK_GEOMETRY_PARSERS,\n    node,\n    objectStack\n  );\n  if (!lineStrings) {\n    return undefined;\n  }\n  return new MultiLineString(lineStrings);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_TRACK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'when': whenParser,\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'coord': gxCoordParser,\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  const gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n      coordinates: [],\n      whens: [],\n    }),\n    GX_TRACK_PARSERS,\n    node,\n    objectStack\n  );\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = [];\n  const coordinates = gxTrackObject.coordinates;\n  const whens = gxTrackObject.whens;\n  for (\n    let i = 0, ii = Math.min(coordinates.length, whens.length);\n    i < ii;\n    ++i\n  ) {\n    if (coordinates[i].length == 3) {\n      flatCoordinates.push(\n        coordinates[i][0],\n        coordinates[i][1],\n        coordinates[i][2],\n        whens[i]\n      );\n    }\n  }\n  return new LineString(flatCoordinates, 'XYZM');\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeObjectPropertySetter(readURI),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeObjectPropertySetter(readDecimal),\n    'y': makeObjectPropertySetter(readDecimal),\n    'w': makeObjectPropertySetter(readDecimal),\n    'h': makeObjectPropertySetter(readDecimal),\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  const iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  }\n  return null;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(\n    null,\n    GEOMETRY_FLAT_COORDINATES_PARSERS,\n    node,\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeObjectPropertySetter(readBoolean),\n  'tessellate': makeObjectPropertySetter(readBoolean),\n  'altitudeMode': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(flatCoordinates, 'XYZ');\n    lineString.setProperties(properties, true);\n    return lineString;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(flatCoordinates, 'XYZ', [\n      flatCoordinates.length,\n    ]);\n    polygon.setProperties(properties, true);\n    return polygon;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeArrayPusher(readLineString),\n  'LinearRing': makeArrayPusher(readLinearRing),\n  'MultiGeometry': makeArrayPusher(readMultiGeometry),\n  'Point': makeArrayPusher(readPoint),\n  'Polygon': makeArrayPusher(readPolygon),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  const geometries = pushParseAndPop(\n    [],\n    MULTI_GEOMETRY_PARSERS,\n    node,\n    objectStack\n  );\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry;\n  for (let i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == 'Point') {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (let i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'LineString') {\n      multiGeometry = new MultiLineString(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'Polygon') {\n      multiGeometry = new MultiPolygon(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'GeometryCollection') {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(flatCoordinates, 'XYZ');\n    point.setProperties(properties, true);\n    return point;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'innerBoundaryIs': innerBoundaryIsParser,\n  'outerBoundaryIs': outerBoundaryIsParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  const properties = pushParseAndPop(\n    /** @type {Object<string,*>} */ ({}),\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatLinearRings = pushParseAndPop(\n    [null],\n    FLAT_LINEAR_RINGS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRings && flatLinearRings[0]) {\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    for (let i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    const polygon = new Polygon(flatCoordinates, 'XYZ', ends);\n    polygon.setProperties(properties, true);\n    return polygon;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': iconStyleParser,\n  'LabelStyle': labelStyleParser,\n  'LineStyle': lineStyleParser,\n  'PolyStyle': polyStyleParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  const styleObject = pushParseAndPop(\n    {},\n    STYLE_PARSERS,\n    node,\n    objectStack,\n    this\n  );\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle =\n    /** @type {Fill} */\n    (\n      'fillStyle' in styleObject ? styleObject['fillStyle'] : DEFAULT_FILL_STYLE\n    );\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle;\n  if ('imageStyle' in styleObject) {\n    if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n      imageStyle = /** @type {import(\"../style/Image.js\").default} */ (\n        styleObject['imageStyle']\n      );\n    }\n  } else {\n    imageStyle = DEFAULT_IMAGE_STYLE;\n  }\n  const textStyle =\n    /** @type {Text} */\n    (\n      'textStyle' in styleObject ? styleObject['textStyle'] : DEFAULT_TEXT_STYLE\n    );\n  const strokeStyle =\n    /** @type {Stroke} */\n    (\n      'strokeStyle' in styleObject\n        ? styleObject['strokeStyle']\n        : DEFAULT_STROKE_STYLE\n    );\n  const outline = /** @type {boolean|undefined} */ (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    // if the polystyle specifies no outline two styles are needed,\n    // one for non-polygon geometries where linestrings require a stroke\n    // and one for polygons where there should be no stroke\n    return [\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === 'GeometryCollection') {\n            const collection =\n              /** @type {import(\"../geom/GeometryCollection\").default} */ (\n                geometry\n              );\n            return new GeometryCollection(\n              collection\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type !== 'Polygon' && type !== 'MultiPolygon';\n                })\n            );\n          } else if (type !== 'Polygon' && type !== 'MultiPolygon') {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        image: imageStyle,\n        stroke: strokeStyle,\n        text: textStyle,\n        zIndex: undefined, // FIXME\n      }),\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === 'GeometryCollection') {\n            const collection =\n              /** @type {import(\"../geom/GeometryCollection\").default} */ (\n                geometry\n              );\n            return new GeometryCollection(\n              collection\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type === 'Polygon' || type === 'MultiPolygon';\n                })\n            );\n          } else if (type === 'Polygon' || type === 'MultiPolygon') {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        stroke: null,\n        zIndex: undefined, // FIXME\n      }),\n    ];\n  }\n  return [\n    new Style({\n      fill: fillStyle,\n      image: imageStyle,\n      stroke: strokeStyle,\n      text: textStyle,\n      zIndex: undefined, // FIXME\n    }),\n  ];\n}\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = false;\n  hasTessellate = false;\n  hasAltitudeMode = false;\n  for (let i = 0; i < ii; ++i) {\n    const geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'displayName': makeObjectPropertySetter(readString),\n  'value': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  const featureObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  if (name && featureObject.displayName) {\n    featureObject[name] = {\n      value: featureObject.value,\n      displayName: featureObject.displayName,\n      toString: function () {\n        return featureObject.value;\n      },\n    };\n  } else if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': dataParser,\n  'SchemaData': schemaDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Style': makeObjectPropertySetter(readStyle),\n  'key': makeObjectPropertySetter(readString),\n  'styleUrl': makeObjectPropertySetter(readStyleURL),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  const pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack, this);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */ (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const style = /** @type {Style} */ (pairObject['Style']);\n    if (style) {\n      objectStack[objectStack.length - 1] = style;\n    }\n  }\n}\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'SimpleData': simpleDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = readString(node);\n    const featureObject = /** @type {Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    featureObject[name] = data;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'altitudeMode': makeObjectPropertySetter(readString),\n  'minAltitude': makeObjectPropertySetter(readDecimal),\n  'maxAltitude': makeObjectPropertySetter(readDecimal),\n  'north': makeObjectPropertySetter(readDecimal),\n  'south': makeObjectPropertySetter(readDecimal),\n  'east': makeObjectPropertySetter(readDecimal),\n  'west': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  const object = pushParseAndPop(\n    {},\n    LAT_LON_ALT_BOX_PARSERS,\n    node,\n    objectStack\n  );\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north']),\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'minLodPixels': makeObjectPropertySetter(readDecimal),\n  'maxLodPixels': makeObjectPropertySetter(readDecimal),\n  'minFadeExtent': makeObjectPropertySetter(readDecimal),\n  'maxFadeExtent': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  const object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  // KML spec only allows one LinearRing  per innerBoundaryIs, but Google Earth\n  // allows multiple, so we parse multiple here too.\n  'LinearRing': makeArrayPusher(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  const innerBoundaryFlatLinearRings = pushParseAndPop(\n    /** @type {Array<Array<number>>} */ ([]),\n    INNER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack\n  );\n  if (innerBoundaryFlatLinearRings.length > 0) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(...innerBoundaryFlatLinearRings);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(\n    undefined,\n    OUTER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRing) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  const rgba = asArray(color);\n  const opacity = rgba.length == 4 ? rgba[3] : 1;\n  /** @type {Array<string|number>} */\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (let i = 0; i < 4; ++i) {\n    const hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n    abgr[i] = hex.length == 1 ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == 'XY' || layout == 'XYM') {\n    dimension = 2;\n  } else if (layout == 'XYZ' || layout == 'XYZM') {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (let d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (let i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (let d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': makeChildAppender(writeDataNode),\n  'value': makeChildAppender(writeDataNodeValue),\n  'displayName': makeChildAppender(writeDataNodeName),\n});\n\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.displayName],\n        objectStack,\n        ['displayName']\n      );\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.value],\n        objectStack,\n        ['value']\n      );\n    }\n  } else {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      [value],\n      objectStack,\n      ['value']\n    );\n  }\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst DOCUMENT_NODE_FACTORY = function (value, objectStack, nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    DOCUMENT_SERIALIZERS,\n    DOCUMENT_NODE_FACTORY,\n    features,\n    objectStack,\n    undefined,\n    this\n  );\n}\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n/**\n * @param {Element} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      DATA_NODE_FACTORY,\n      [{name: names[i], value: values[i]}],\n      objectStack\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS,\n  ['href'],\n  makeStructureNS(GX_NAMESPACE_URIS, ['x', 'y', 'w', 'h'])\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeChildAppender(writeStringTextNode),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeChildAppender(writeDecimalTextNode),\n    'y': makeChildAppender(writeDecimalTextNode),\n    'w': makeChildAppender(writeDecimalTextNode),\n    'h': makeChildAppender(writeDecimalTextNode),\n  })\n);\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GX_NODE_FACTORY = function (value, objectStack, nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + nodeName);\n};\n\n/**\n * @param {Element} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  let values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n  orderedKeys = ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    GX_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'scale',\n  'heading',\n  'Icon',\n  'color',\n  'hotSpot',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeChildAppender(writeIcon),\n  'color': makeChildAppender(writeColorTextNode),\n  'heading': makeChildAppender(writeDecimalTextNode),\n  'hotSpot': makeChildAppender(writeVec2),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const /** @type {Object<string, any>} */ properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src,\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {Vec2} */ hotSpot = {\n          x: anchor[0],\n          xunits: 'pixels',\n          y: size[1] - anchor[1],\n          yunits: 'pixels',\n        };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  let scale = style.getScaleArray()[0];\n  let imageSize = size;\n  if (imageSize === null) {\n    imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n  }\n  if (imageSize.length == 2) {\n    const resizeScale = scaleForSize(imageSize);\n    scale = scale / resizeScale;\n  }\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const color = style.getColor();\n  if (color) {\n    properties['color'] = color;\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'scale',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LABEL_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'width']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'width': makeChildAppender(writeDecimalTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': Number(style.getWidth()) || 1,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LINE_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry',\n};\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GEOMETRY_NODE_FACTORY = function (value, objectStack, nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      parentNode.namespaceURI,\n      GEOMETRY_TYPE_TO_NODENAME[\n        /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType()\n      ]\n    );\n  }\n};\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'GeometryCollection': makeChildAppender(writeMultiGeometry),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n  let geometries = [];\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type === 'GeometryCollection') {\n    /** @type {GeometryCollection} */ (geometry)\n      .getGeometriesArrayRecursive()\n      .forEach(function (geometry) {\n        const type = geometry.getType();\n        if (type === 'MultiPoint') {\n          geometries = geometries.concat(\n            /** @type {MultiPoint} */ (geometry).getPoints()\n          );\n        } else if (type === 'MultiLineString') {\n          geometries = geometries.concat(\n            /** @type {MultiLineString} */ (geometry).getLineStrings()\n          );\n        } else if (type === 'MultiPolygon') {\n          geometries = geometries.concat(\n            /** @type {MultiPolygon} */ (geometry).getPolygons()\n          );\n        } else if (\n          type === 'Point' ||\n          type === 'LineString' ||\n          type === 'Polygon'\n        ) {\n          geometries.push(geometry);\n        } else {\n          assert(false, 39); // Unknown geometry type\n        }\n      });\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type === 'MultiPoint') {\n    geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type === 'MultiLineString') {\n    geometries = /** @type {MultiLineString} */ (geometry).getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type === 'MultiPolygon') {\n    geometries = /** @type {MultiPolygon} */ (geometry).getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  pushSerializeAndPop(\n    context,\n    MULTI_GEOMETRY_SERIALIZERS,\n    factory,\n    geometries,\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    BOUNDARY_IS_SERIALIZERS,\n    LINEAR_RING_NODE_FACTORY,\n    [linearRing],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': makeChildAppender(writeExtendedData),\n  'MultiGeometry': makeChildAppender(writeMultiGeometry),\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'Style': makeChildAppender(writeStyle),\n  'address': makeChildAppender(writeStringTextNode),\n  'description': makeChildAppender(writeStringTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'open': makeChildAppender(writeBooleanTextNode),\n  'phoneNumber': makeChildAppender(writeStringTextNode),\n  'styleUrl': makeChildAppender(writeStringTextNode),\n  'visibility': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'open',\n  'visibility',\n  'address',\n  'phoneNumber',\n  'description',\n  'styleUrl',\n  'Style',\n]);\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', /** @type {string} */ (feature.getId()));\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {\n    'address': 1,\n    'description': 1,\n    'name': 1,\n    'open': 1,\n    'phoneNumber': 1,\n    'styleUrl': 1,\n    'visibility': 1,\n  };\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {})\n    .sort()\n    .filter(function (v) {\n      return !filter[v];\n    });\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction(feature, 0);\n    if (styles) {\n      const styleArray = Array.isArray(styles) ? styles : [styles];\n      let pointStyles = styleArray;\n      if (feature.getGeometry()) {\n        pointStyles = styleArray.filter(function (style) {\n          const geometry = style.getGeometryFunction()(feature);\n          if (geometry) {\n            const type = geometry.getType();\n            if (type === 'GeometryCollection') {\n              return /** @type {GeometryCollection} */ (geometry)\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type === 'Point' || type === 'MultiPoint';\n                }).length;\n            }\n            return type === 'Point' || type === 'MultiPoint';\n          }\n        });\n        ('Point');\n      }\n      if (this.writeStyles_) {\n        let lineStyles = styleArray;\n        let polyStyles = styleArray;\n        if (feature.getGeometry()) {\n          lineStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === 'GeometryCollection') {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return type === 'LineString' || type === 'MultiLineString';\n                  }).length;\n              }\n              return type === 'LineString' || type === 'MultiLineString';\n            }\n          });\n          polyStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === 'GeometryCollection') {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return type === 'Polygon' || type === 'MultiPolygon';\n                  }).length;\n              }\n              return type === 'Polygon' || type === 'MultiPolygon';\n            }\n          });\n        }\n        properties['Style'] = {\n          pointStyles: pointStyles,\n          lineStyles: lineStyles,\n          polyStyles: polyStyles,\n        };\n      }\n      if (pointStyles.length && properties['name'] === undefined) {\n        const textStyle = pointStyles[0].getText();\n        if (textStyle) {\n          properties['name'] = textStyle.getText();\n        }\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n\n  if (keys.length > 0) {\n    const sequence = makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    pushSerializeAndPop(\n      context,\n      PLACEMARK_SERIALIZERS,\n      EXTENDEDDATA_NODE_FACTORY,\n      [namesAndValues],\n      objectStack\n    );\n  }\n\n  // serialize geometry\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformGeometryWithOptions(geometry, true, options);\n  }\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    GEOMETRY_NODE_FACTORY,\n    [geometry],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'extrude',\n  'tessellate',\n  'altitudeMode',\n  'coordinates',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeChildAppender(writeBooleanTextNode),\n  'tessellate': makeChildAppender(writeBooleanTextNode),\n  'altitudeMode': makeChildAppender(writeStringTextNode),\n  'coordinates': makeChildAppender(writeCoordinatesTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PRIMITIVE_GEOMETRY_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'fill',\n  'outline',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n  'innerBoundaryIs': makeChildAppender(writeBoundaryIs),\n});\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n/**\n * @param {Element} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  // inner rings\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    INNER_BOUNDARY_NODE_FACTORY,\n    linearRings,\n    objectStack\n  );\n  // outer ring\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    OUTER_BOUNDARY_NODE_FACTORY,\n    [outerRing],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'fill': makeChildAppender(writeBooleanTextNode),\n  'outline': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const fill = style.getFill();\n  const stroke = style.getStroke();\n  const properties = {\n    'color': fill ? fill.getColor() : undefined,\n    'fill': fill ? undefined : false,\n    'outline': stroke ? undefined : false,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = POLY_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    POLY_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'IconStyle',\n  'LabelStyle',\n  'LineStyle',\n  'PolyStyle',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': makeChildAppender(writeIconStyle),\n  'LabelStyle': makeChildAppender(writeLabelStyle),\n  'LineStyle': makeChildAppender(writeLineStyle),\n  'PolyStyle': makeChildAppender(writePolyStyle),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Object<string, Array<Style>>} styles Styles.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, styles, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  if (styles.pointStyles.length) {\n    const textStyle = styles.pointStyles[0].getText();\n    if (textStyle) {\n      properties['LabelStyle'] = textStyle;\n    }\n    const imageStyle = styles.pointStyles[0].getImage();\n    if (\n      imageStyle &&\n      typeof (/** @type {?} */ (imageStyle).getSrc) === 'function'\n    ) {\n      properties['IconStyle'] = imageStyle;\n    }\n  }\n  if (styles.lineStyles.length) {\n    const strokeStyle = styles.lineStyles[0].getStroke();\n    if (strokeStyle) {\n      properties['LineStyle'] = strokeStyle;\n    }\n  }\n  if (styles.polyStyles.length) {\n    const strokeStyle = styles.polyStyles[0].getStroke();\n    if (strokeStyle && !properties['LineStyle']) {\n      properties['LineStyle'] = strokeStyle;\n    }\n    properties['PolyStyle'] = styles.polyStyles[0];\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', String(vec2.x));\n  node.setAttribute('y', String(vec2.y));\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\nexport default KML;\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos;\n        var pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return readUtf8TextDecoder(this.buf, pos, end);\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport {assert} from '../asserts.js';\nimport {get} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options} [options] Options.\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    /**\n     * @private\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass_ = options.featureClass\n      ? options.featureClass\n      : RenderFeature;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1]\n          );\n          coordsLen += 2;\n        }\n      } else {\n        assert(false, 59); // Invalid command found in the PBF\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(\n        geometryType,\n        flatCoordinates,\n        ends,\n        values,\n        id\n      );\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n            ? new LineString(flatCoordinates, 'XY')\n            : geometryType === 'MultiPoint'\n            ? new MultiPoint(flatCoordinates, 'XY')\n            : geometryType === 'MultiLineString'\n            ? new MultiLineString(flatCoordinates, 'XY', ends)\n            : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass_\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return feature;\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return features;\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n          ? pbf.readFloat()\n          : tag === 3\n          ? pbf.readDouble()\n          : tag === 4\n          ? pbf.readVarint64()\n          : tag === 5\n          ? pbf.readVarint()\n          : tag === 6\n          ? pbf.readSVarint()\n          : tag === 7\n          ? pbf.readBoolean()\n          : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../geom/Geometry.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../geom/Geometry.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/format/OSMXML\n */\n// FIXME add typedef for stack state objects\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport XMLFeature from './XMLFeature.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {makeStructureNS, pushParseAndPop} from '../xml.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @const\n * @type {Array<null>}\n */\nconst NAMESPACE_URIS = [null];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WAY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'nd': readNd,\n  'tag': readTag,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'node': readNode,\n  'way': readWay,\n});\n\n/**\n * @classdesc\n * Feature format for reading data in the\n * [OSMXML format](https://wiki.openstreetmap.org/wiki/OSM_XML).\n *\n * @api\n */\nclass OSMXML extends XMLFeature {\n  constructor() {\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    options = this.getReadOptions(node, options);\n    if (node.localName == 'osm') {\n      const state = pushParseAndPop(\n        {\n          nodes: {},\n          ways: [],\n          features: [],\n        },\n        PARSERS,\n        node,\n        [options]\n      );\n      // parse nodes in ways\n      for (let j = 0; j < state.ways.length; j++) {\n        const values = /** @type {Object} */ (state.ways[j]);\n        /** @type {Array<number>} */\n        const flatCoordinates = [];\n        for (let i = 0, ii = values.ndrefs.length; i < ii; i++) {\n          const point = state.nodes[values.ndrefs[i]];\n          extend(flatCoordinates, point);\n        }\n        let geometry;\n        if (values.ndrefs[0] == values.ndrefs[values.ndrefs.length - 1]) {\n          // closed way\n          geometry = new Polygon(flatCoordinates, 'XY', [\n            flatCoordinates.length,\n          ]);\n        } else {\n          geometry = new LineString(flatCoordinates, 'XY');\n        }\n        transformGeometryWithOptions(geometry, false, options);\n        const feature = new Feature(geometry);\n        if (values.id !== undefined) {\n          feature.setId(values.id);\n        }\n        feature.setProperties(values.tags, true);\n        state.features.push(feature);\n      }\n      if (state.features) {\n        return state.features;\n      }\n    }\n    return [];\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'tag': readTag,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNode(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const id = node.getAttribute('id');\n  /** @type {import(\"../coordinate.js\").Coordinate} */\n  const coordinates = [\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')),\n  ];\n  state.nodes[id] = coordinates;\n\n  const values = pushParseAndPop(\n    {\n      tags: {},\n    },\n    NODE_PARSERS,\n    node,\n    objectStack\n  );\n  if (!isEmpty(values.tags)) {\n    const geometry = new Point(coordinates);\n    transformGeometryWithOptions(geometry, false, options);\n    const feature = new Feature(geometry);\n    if (id !== undefined) {\n      feature.setId(id);\n    }\n    feature.setProperties(values.tags, true);\n    state.features.push(feature);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readWay(node, objectStack) {\n  const id = node.getAttribute('id');\n  const values = pushParseAndPop(\n    {\n      id: id,\n      ndrefs: [],\n      tags: {},\n    },\n    WAY_PARSERS,\n    node,\n    objectStack\n  );\n  const state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  state.ways.push(values);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNd(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values.ndrefs.push(node.getAttribute('ref'));\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readTag(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values.tags[node.getAttribute('k')] = node.getAttribute('v');\n}\n\nexport default OSMXML;\n","/**\n * @module ol/format/XML\n */\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nclass XML {\n  /**\n   * Read the source document.\n   *\n   * @param {Document|Element|string} source The XML source.\n   * @return {Object} An object representing the source.\n   * @api\n   */\n  read(source) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Object} Object\n   */\n  readFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {}\n}\n\nexport default XML;\n","/**\n * @module ol/format/xlink\n */\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n/**\n * @param {Element} node Node.\n * @return {string|undefined} href.\n */\nexport function readHref(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n","/**\n * @module ol/format/OWS\n */\nimport XML from './XML.js';\nimport {\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readHref} from './xlink.js';\nimport {readString} from './xsd.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n  'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n  'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata),\n});\n\nclass OWS extends XML {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {\n    const owsObject = pushParseAndPop({}, PARSERS, node, []);\n    return owsObject ? owsObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DeliveryPoint': makeObjectPropertySetter(readString),\n  'City': makeObjectPropertySetter(readString),\n  'AdministrativeArea': makeObjectPropertySetter(readString),\n  'PostalCode': makeObjectPropertySetter(readString),\n  'Country': makeObjectPropertySetter(readString),\n  'ElectronicMailAddress': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ALLOWED_VALUES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Value': makeObjectPropertyPusher(readValue),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONSTRAINT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'AllowedValues': makeObjectPropertySetter(readAllowedValues),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_INFO_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Phone': makeObjectPropertySetter(readPhone),\n  'Address': makeObjectPropertySetter(readAddress),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DCP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'HTTP': makeObjectPropertySetter(readHttp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Get': makeObjectPropertyPusher(readGet),\n  'Post': undefined, // TODO\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DCP': makeObjectPropertySetter(readDcp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATIONS_METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Operation': readOperation,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PHONE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Voice': makeObjectPropertySetter(readString),\n  'Facsimile': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REQUEST_METHOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Constraint': makeObjectPropertyPusher(readConstraint),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_CONTACT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IndividualName': makeObjectPropertySetter(readString),\n  'PositionName': makeObjectPropertySetter(readString),\n  'ContactInfo': makeObjectPropertySetter(readContactInfo),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_IDENTIFICATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Abstract': makeObjectPropertySetter(readString),\n  'AccessConstraints': makeObjectPropertySetter(readString),\n  'Fees': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'ServiceTypeVersion': makeObjectPropertySetter(readString),\n  'ServiceType': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PROVIDER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ProviderName': makeObjectPropertySetter(readString),\n  'ProviderSite': makeObjectPropertySetter(readHref),\n  'ServiceContact': makeObjectPropertySetter(readServiceContact),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({}, ADDRESS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({}, ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({'name': name}, CONSTRAINT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({}, DCP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  const href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop(\n    {'href': href},\n    REQUEST_METHOD_PARSERS,\n    node,\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = pushParseAndPop({}, OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  object[name] = value;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONS_METADATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({}, PHONE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_IDENTIFICATION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_CONTACT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PROVIDER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\n\nexport default OWS;\n","/**\n * @module ol/format/Polyline\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport TextFeature from './TextFeature.js';\nimport {assert} from '../asserts.js';\nimport {flipXY} from '../geom/flat/flip.js';\nimport {get as getProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the format reader.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the Encoded\n * Polyline Algorithm Format.\n *\n * When reading features, the coordinates are assumed to be in two dimensions\n * and in [latitude, longitude] order.\n *\n * As Polyline sources contain a single feature,\n * {@link module:ol/format/Polyline~Polyline#readFeatures} will return the\n * feature in an array.\n *\n * @api\n */\nclass Polyline extends TextFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.factor_ = options.factor ? options.factor : 1e5;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    const geometry = this.readGeometryFromText(text, options);\n    return new Feature(geometry);\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    const feature = this.readFeatureFromText(text, options);\n    return [feature];\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, options) {\n    const stride = getStrideForLayout(this.geometryLayout_);\n    const flatCoordinates = decodeDeltas(text, stride, this.factor_);\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    const coordinates = inflateCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    const lineString = new LineString(coordinates, this.geometryLayout_);\n\n    return transformGeometryWithOptions(\n      lineString,\n      false,\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default<LineString>} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, options) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, options);\n    }\n    assert(false, 40); // Expected `feature` to have a geometry\n    return '';\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default<LineString>>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, options) {\n    return this.writeFeatureText(features[0], options);\n  }\n\n  /**\n   * @param {LineString} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, options) {\n    geometry =\n      /** @type {LineString} */\n      (\n        transformGeometryWithOptions(geometry, true, this.adaptOptions(options))\n      );\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    return encodeDeltas(flatCoordinates, stride, this.factor_);\n  }\n}\n\n/**\n * Encode a list of n-dimensional points and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of n-dimensional points.\n * @param {number} stride The number of dimension of the points in the list.\n * @param {number} [factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeDeltas(numbers, stride, factor) {\n  factor = factor ? factor : 1e5;\n  let d;\n\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      const num = numbers[i];\n      const delta = num - lastNumbers[d];\n      lastNumbers[d] = num;\n\n      numbers[i] = delta;\n    }\n  }\n\n  return encodeFloats(numbers, factor);\n}\n\n/**\n * Decode a list of n-dimensional points from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} stride The number of dimension of the points in the\n *     encoded string.\n * @param {number} [factor] The factor by which the resulting numbers will\n *     be divided. Default is `1e5`.\n * @return {Array<number>} A list of n-dimensional points.\n * @api\n */\nexport function decodeDeltas(encoded, stride, factor) {\n  factor = factor ? factor : 1e5;\n  let d;\n\n  /** @type {Array<number>} */\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  const numbers = decodeFloats(encoded, factor);\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      lastNumbers[d] += numbers[i];\n\n      numbers[i] = lastNumbers[d];\n    }\n  }\n\n  return numbers;\n}\n\n/**\n * Encode a list of floating point numbers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of floating point numbers.\n * @param {number} [factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeFloats(numbers, factor) {\n  factor = factor ? factor : 1e5;\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] = Math.round(numbers[i] * factor);\n  }\n\n  return encodeSignedIntegers(numbers);\n}\n\n/**\n * Decode a list of floating point numbers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} [factor] The factor by which the result will be divided.\n *     Default is `1e5`.\n * @return {Array<number>} A list of floating point numbers.\n * @api\n */\nexport function decodeFloats(encoded, factor) {\n  factor = factor ? factor : 1e5;\n  const numbers = decodeSignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] /= factor;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of signed integers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of signed integers.\n * @return {string} The encoded string.\n */\nexport function encodeSignedIntegers(numbers) {\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num < 0 ? ~(num << 1) : num << 1;\n  }\n  return encodeUnsignedIntegers(numbers);\n}\n\n/**\n * Decode a list of signed integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of signed integers.\n */\nexport function decodeSignedIntegers(encoded) {\n  const numbers = decodeUnsignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num & 1 ? ~(num >> 1) : num >> 1;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of unsigned integers and return an encoded string\n *\n * @param {Array<number>} numbers A list of unsigned integers.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedIntegers(numbers) {\n  let encoded = '';\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    encoded += encodeUnsignedInteger(numbers[i]);\n  }\n  return encoded;\n}\n\n/**\n * Decode a list of unsigned integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of unsigned integers.\n */\nexport function decodeUnsignedIntegers(encoded) {\n  const numbers = [];\n  let current = 0;\n  let shift = 0;\n  for (let i = 0, ii = encoded.length; i < ii; ++i) {\n    const b = encoded.charCodeAt(i) - 63;\n    current |= (b & 0x1f) << shift;\n    if (b < 0x20) {\n      numbers.push(current);\n      current = 0;\n      shift = 0;\n    } else {\n      shift += 5;\n    }\n  }\n  return numbers;\n}\n\n/**\n * Encode one single unsigned integer and return an encoded string\n *\n * @param {number} num Unsigned integer that should be encoded.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedInteger(num) {\n  let value,\n    encoded = '';\n  while (num >= 0x20) {\n    value = (0x20 | (num & 0x1f)) + 63;\n    encoded += String.fromCharCode(value);\n    num >>= 5;\n  }\n  value = num + 63;\n  encoded += String.fromCharCode(value);\n  return encoded;\n}\n\nexport default Polyline;\n","/**\n * @module ol/format/TopoJSON\n */\nimport Feature from '../Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"topojson-specification\").Topology} TopoJSONTopology\n * @typedef {import(\"topojson-specification\").GeometryCollection} TopoJSONGeometryCollection\n * @typedef {import(\"topojson-specification\").GeometryObject} TopoJSONGeometry\n * @typedef {import(\"topojson-specification\").Point} TopoJSONPoint\n * @typedef {import(\"topojson-specification\").MultiPoint} TopoJSONMultiPoint\n * @typedef {import(\"topojson-specification\").LineString} TopoJSONLineString\n * @typedef {import(\"topojson-specification\").MultiLineString} TopoJSONMultiLineString\n * @typedef {import(\"topojson-specification\").Polygon} TopoJSONPolygon\n * @typedef {import(\"topojson-specification\").MultiPolygon} TopoJSONMultiPolygon\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {string} [layerName] Set the name of the TopoJSON topology\n * `objects`'s children as feature property with the specified name. This means\n * that when set to `'layer'`, a topology like\n * ```\n * {\n *   \"type\": \"Topology\",\n *   \"objects\": {\n *     \"example\": {\n *       \"type\": \"GeometryCollection\",\n *       \"geometries\": []\n *     }\n *   }\n * }\n * ```\n * will result in features that have a property `'layer'` set to `'example'`.\n * When not set, no property will be added to features.\n * @property {Array<string>} [layers] Names of the TopoJSON topology's\n * `objects`'s children to read features from.  If not provided, features will\n * be read from all children.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the TopoJSON format.\n *\n * @api\n */\nclass TopoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.layerName_ = options.layerName;\n\n    /**\n     * @private\n     * @type {?Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    if (object.type == 'Topology') {\n      const topoJSONTopology = /** @type {TopoJSONTopology} */ (object);\n      let transform,\n        scale = null,\n        translate = null;\n      if (topoJSONTopology['transform']) {\n        transform = topoJSONTopology['transform'];\n        scale = transform['scale'];\n        translate = transform['translate'];\n      }\n      const arcs = topoJSONTopology['arcs'];\n      if (transform) {\n        transformArcs(arcs, scale, translate);\n      }\n      /** @type {Array<Feature>} */\n      const features = [];\n      const topoJSONFeatures = topoJSONTopology['objects'];\n      const property = this.layerName_;\n      let feature;\n      for (const objectName in topoJSONFeatures) {\n        if (this.layers_ && !this.layers_.includes(objectName)) {\n          continue;\n        }\n        if (topoJSONFeatures[objectName].type === 'GeometryCollection') {\n          feature = /** @type {TopoJSONGeometryCollection} */ (\n            topoJSONFeatures[objectName]\n          );\n          features.push.apply(\n            features,\n            readFeaturesFromGeometryCollection(\n              feature,\n              arcs,\n              scale,\n              translate,\n              property,\n              objectName,\n              options\n            )\n          );\n        } else {\n          feature = /** @type {TopoJSONGeometry} */ (\n            topoJSONFeatures[objectName]\n          );\n          features.push(\n            readFeatureFromGeometry(\n              feature,\n              arcs,\n              scale,\n              translate,\n              property,\n              objectName,\n              options\n            )\n          );\n        }\n      }\n      return features;\n    }\n    return [];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return this.dataProjection;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, function(TopoJSONGeometry, Array, ...Array=): import(\"../geom/Geometry.js\").default>}\n */\nconst GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry,\n};\n\n/**\n * Concatenate arcs into a coordinate array.\n * @param {Array<number>} indices Indices of arcs to concatenate.  Negative\n *     values indicate arcs need to be reversed.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs (already\n *     transformed).\n * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates array.\n */\nfunction concatenateArcs(indices, arcs) {\n  /** @type {Array<import(\"../coordinate.js\").Coordinate>} */\n  const coordinates = [];\n  let index;\n  for (let i = 0, ii = indices.length; i < ii; ++i) {\n    index = indices[i];\n    if (i > 0) {\n      // splicing together arcs, discard last point\n      coordinates.pop();\n    }\n    if (index >= 0) {\n      // forward arc\n      const arc = arcs[index];\n      for (let j = 0, jj = arc.length; j < jj; ++j) {\n        coordinates.push(arc[j].slice(0));\n      }\n    } else {\n      // reverse arc\n      const arc = arcs[~index];\n      for (let j = arc.length - 1; j >= 0; --j) {\n        coordinates.push(arc[j].slice(0));\n      }\n    }\n  }\n  return coordinates;\n}\n\n/**\n * Create a point from a TopoJSON geometry object.\n *\n * @param {TopoJSONPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {Point} Geometry.\n */\nfunction readPointGeometry(object, scale, translate) {\n  const coordinates = object['coordinates'];\n  if (scale && translate) {\n    transformVertex(coordinates, scale, translate);\n  }\n  return new Point(coordinates);\n}\n\n/**\n * Create a multi-point from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {MultiPoint} Geometry.\n */\nfunction readMultiPointGeometry(object, scale, translate) {\n  const coordinates = object['coordinates'];\n  if (scale && translate) {\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      transformVertex(coordinates[i], scale, translate);\n    }\n  }\n  return new MultiPoint(coordinates);\n}\n\n/**\n * Create a linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {LineString} Geometry.\n */\nfunction readLineStringGeometry(object, arcs) {\n  const coordinates = concatenateArcs(object['arcs'], arcs);\n  return new LineString(coordinates);\n}\n\n/**\n * Create a multi-linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiLineString} Geometry.\n */\nfunction readMultiLineStringGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n  }\n  return new MultiLineString(coordinates);\n}\n\n/**\n * Create a polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {Polygon} Geometry.\n */\nfunction readPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n  }\n  return new Polygon(coordinates);\n}\n\n/**\n * Create a multi-polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiPolygon} Geometry.\n */\nfunction readMultiPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    // for each polygon\n    const polyArray = object['arcs'][i];\n    const ringCoords = [];\n    for (let j = 0, jj = polyArray.length; j < jj; ++j) {\n      // for each ring\n      ringCoords[j] = concatenateArcs(polyArray[j], arcs);\n    }\n    coordinates[i] = ringCoords;\n  }\n  return new MultiPolygon(coordinates);\n}\n\n/**\n * Create features from a TopoJSON GeometryCollection object.\n *\n * @param {TopoJSONGeometryCollection} collection TopoJSON Geometry\n *     object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {Array<Feature>} Array of features.\n */\nfunction readFeaturesFromGeometryCollection(\n  collection,\n  arcs,\n  scale,\n  translate,\n  property,\n  name,\n  options\n) {\n  const geometries = collection['geometries'];\n  const features = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    features[i] = readFeatureFromGeometry(\n      geometries[i],\n      arcs,\n      scale,\n      translate,\n      property,\n      name,\n      options\n    );\n  }\n  return features;\n}\n\n/**\n * Create a feature from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON geometry object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {Feature} Feature.\n */\nfunction readFeatureFromGeometry(\n  object,\n  arcs,\n  scale,\n  translate,\n  property,\n  name,\n  options\n) {\n  let geometry = null;\n  const type = object.type;\n  if (type) {\n    const geometryReader = GEOMETRY_READERS[type];\n    if (type === 'Point' || type === 'MultiPoint') {\n      geometry = geometryReader(object, scale, translate);\n    } else {\n      geometry = geometryReader(object, arcs);\n    }\n    geometry = transformGeometryWithOptions(geometry, false, options);\n  }\n  const feature = new Feature({geometry: geometry});\n  if (object.id !== undefined) {\n    feature.setId(object.id);\n  }\n  let properties = object.properties;\n  if (property) {\n    if (!properties) {\n      properties = {};\n    }\n    properties[property] = name;\n  }\n  if (properties) {\n    feature.setProperties(properties, true);\n  }\n  return feature;\n}\n\n/**\n * Apply a linear transform to array of arcs.  The provided array of arcs is\n * modified in place.\n *\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArcs(arcs, scale, translate) {\n  for (let i = 0, ii = arcs.length; i < ii; ++i) {\n    transformArc(arcs[i], scale, translate);\n  }\n}\n\n/**\n * Apply a linear transform to an arc.  The provided arc is modified in place.\n *\n * @param {Array<import(\"../coordinate.js\").Coordinate>} arc Arc.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArc(arc, scale, translate) {\n  let x = 0;\n  let y = 0;\n  for (let i = 0, ii = arc.length; i < ii; ++i) {\n    const vertex = arc[i];\n    x += vertex[0];\n    y += vertex[1];\n    vertex[0] = x;\n    vertex[1] = y;\n    transformVertex(vertex, scale, translate);\n  }\n}\n\n/**\n * Apply a linear transform to a vertex.  The provided vertex is modified in\n * place.\n *\n * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformVertex(vertex, scale, translate) {\n  vertex[0] = vertex[0] * scale[0] + translate[0];\n  vertex[1] = vertex[1] * scale[1] + translate[1];\n}\n\nexport default TopoJSON;\n","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport Feature from '../Feature.js';\nimport Geometry from '../geom/Geometry.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport XMLFeature from './XMLFeature.js';\nimport {extend} from '../array.js';\nimport {\n  getAllTextContent,\n  getAttributeNS,\n  makeArrayPusher,\n  makeReplacer,\n  parseNode,\n  pushParseAndPop,\n} from '../xml.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\n\n/**\n * @const\n * @type {string}\n */\nexport const GMLNS = 'http://www.opengis.net/gml';\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc.\n *\n * @const\n * @type {RegExp}\n */\nconst ONLY_WHITESPACE_RE = /^\\s*$/;\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] Feature\n * namespace. If not defined will be derived from GML. If multiple\n * feature types have been configured which come from different feature\n * namespaces, this will be an object with the keys being the prefixes used\n * in the entries of featureType array. The values of the object will be the\n * feature namespaces themselves. So for instance there might be a featureType\n * item `topp:states` in the `featureType` array and then there will be a key\n * `topp` in the featureNS object with value `http://www.openplans.org/topp`.\n * @property {Array<string>|string} [featureType] Feature type(s) to parse.\n * If multiple feature types need to be configured\n * which come from different feature namespaces, `featureNS` will be an object\n * with the keys being the prefixes used in the entries of featureType array.\n * The values of the object will be the feature namespaces themselves.\n * So for instance there might be a featureType item `topp:states` and then\n * there will be a key named `topp` in the featureNS object with value\n * `http://www.openplans.org/topp`.\n * @property {string} [srsName] srsName to use when writing geometries.\n * @property {boolean} [surface=false] Write gml:Surface instead of gml:Polygon\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [curve=false] Write gml:Curve instead of gml:LineString\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [multiCurve=true] Write gml:MultiCurve instead of gml:MultiLineString.\n * Since the latter is deprecated in GML 3.\n * @property {boolean} [multiSurface=true] Write gml:multiSurface instead of\n * gml:MultiPolygon. Since the latter is deprecated in GML 3.\n * @property {string} [schemaLocation] Optional schemaLocation to use when\n * writing out the GML, this will override the default provided.\n * @property {boolean} [hasZ=false] If coordinates have a Z value.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes GML2 and GML3.\n *\n * @abstract\n * @api\n */\nclass GMLBase extends XMLFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @protected\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType = options.featureType;\n\n    /**\n     * @protected\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS = options.featureNS;\n\n    /**\n     * @protected\n     * @type {string|undefined}\n     */\n    this.srsName = options.srsName;\n\n    /**\n     * @protected\n     * @type {string}\n     */\n    this.schemaLocation = '';\n\n    /**\n     * @type {Object<string, Object<string, Object>>}\n     */\n    this.FEATURE_COLLECTION_PARSERS = {};\n    this.FEATURE_COLLECTION_PARSERS[this.namespace] = {\n      'featureMember': makeArrayPusher(this.readFeaturesInternal),\n      'featureMembers': makeReplacer(this.readFeaturesInternal),\n    };\n\n    this.supportedMediaTypes = ['application/gml+xml'];\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<Feature> | undefined} Features.\n   */\n  readFeaturesInternal(node, objectStack) {\n    const localName = node.localName;\n    let features = null;\n    if (localName == 'FeatureCollection') {\n      features = pushParseAndPop(\n        [],\n        this.FEATURE_COLLECTION_PARSERS,\n        node,\n        objectStack,\n        this\n      );\n    } else if (\n      localName == 'featureMembers' ||\n      localName == 'featureMember' ||\n      localName == 'member'\n    ) {\n      const context = objectStack[0];\n      let featureType = context['featureType'];\n      let featureNS = context['featureNS'];\n      const prefix = 'p';\n      const defaultPrefix = 'p0';\n      if (!featureType && node.childNodes) {\n        (featureType = []), (featureNS = {});\n        for (let i = 0, ii = node.childNodes.length; i < ii; ++i) {\n          const child = /** @type {Element} */ (node.childNodes[i]);\n          if (child.nodeType === 1) {\n            const ft = child.nodeName.split(':').pop();\n            if (!featureType.includes(ft)) {\n              let key = '';\n              let count = 0;\n              const uri = child.namespaceURI;\n              for (const candidate in featureNS) {\n                if (featureNS[candidate] === uri) {\n                  key = candidate;\n                  break;\n                }\n                ++count;\n              }\n              if (!key) {\n                key = prefix + count;\n                featureNS[key] = uri;\n              }\n              featureType.push(key + ':' + ft);\n            }\n          }\n        }\n        if (localName != 'featureMember') {\n          // recheck featureType for each featureMember\n          context['featureType'] = featureType;\n          context['featureNS'] = featureNS;\n        }\n      }\n      if (typeof featureNS === 'string') {\n        const ns = featureNS;\n        featureNS = {};\n        featureNS[defaultPrefix] = ns;\n      }\n      /** @type {Object<string, Object<string, import(\"../xml.js\").Parser>>} */\n      const parsersNS = {};\n      const featureTypes = Array.isArray(featureType)\n        ? featureType\n        : [featureType];\n      for (const p in featureNS) {\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        const parsers = {};\n        for (let i = 0, ii = featureTypes.length; i < ii; ++i) {\n          const featurePrefix = featureTypes[i].includes(':')\n            ? featureTypes[i].split(':')[0]\n            : defaultPrefix;\n          if (featurePrefix === p) {\n            parsers[featureTypes[i].split(':').pop()] =\n              localName == 'featureMembers'\n                ? makeArrayPusher(this.readFeatureElement, this)\n                : makeReplacer(this.readFeatureElement, this);\n          }\n        }\n        parsersNS[featureNS[p]] = parsers;\n      }\n      if (localName == 'featureMember' || localName == 'member') {\n        features = pushParseAndPop(undefined, parsersNS, node, objectStack);\n      } else {\n        features = pushParseAndPop([], parsersNS, node, objectStack);\n      }\n    }\n    if (features === null) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent|undefined} Geometry.\n   */\n  readGeometryOrExtent(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    context['srsName'] = node.firstElementChild.getAttribute('srsName');\n    context['srsDimension'] =\n      node.firstElementChild.getAttribute('srsDimension');\n    return pushParseAndPop(\n      null,\n      this.GEOMETRY_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Geometry.\n   */\n  readExtentElement(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    const extent = /** @type {import(\"../extent.js\").Extent} */ (\n      this.readGeometryOrExtent(node, objectStack)\n    );\n    return extent ? transformExtentWithOptions(extent, context) : undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../geom/Geometry.js\").default|undefined} Geometry.\n   */\n  readGeometryElement(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    const geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      this.readGeometryOrExtent(node, objectStack)\n    );\n    return geometry\n      ? transformGeometryWithOptions(geometry, false, context)\n      : undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {boolean} asFeature whether result should be wrapped as a feature.\n   * @return {Feature|Object} Feature\n   */\n  readFeatureElementInternal(node, objectStack, asFeature) {\n    let geometryName;\n    const values = {};\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      let value;\n      const localName = n.localName;\n      // first, check if it is simple attribute\n      if (\n        n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n          (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))\n      ) {\n        value = getAllTextContent(n, false);\n        if (ONLY_WHITESPACE_RE.test(value)) {\n          value = undefined;\n        }\n      } else {\n        if (asFeature) {\n          //if feature, try it as a geometry or extent\n          value =\n            localName === 'boundedBy'\n              ? this.readExtentElement(n, objectStack)\n              : this.readGeometryElement(n, objectStack);\n        }\n        if (!value) {\n          //if not a geometry or not a feature, treat it as a complex attribute\n          value = this.readFeatureElementInternal(n, objectStack, false);\n        } else if (localName !== 'boundedBy') {\n          // boundedBy is an extent and must not be considered as a geometry\n          geometryName = localName;\n        }\n      }\n\n      const len = n.attributes.length;\n      if (len > 0 && !(value instanceof Geometry)) {\n        value = {_content_: value};\n        for (let i = 0; i < len; i++) {\n          const attName = n.attributes[i].name;\n          value[attName] = n.attributes[i].value;\n        }\n      }\n\n      if (values[localName]) {\n        if (!(values[localName] instanceof Array)) {\n          values[localName] = [values[localName]];\n        }\n        values[localName].push(value);\n      } else {\n        values[localName] = value;\n      }\n    }\n    if (!asFeature) {\n      return values;\n    }\n    const feature = new Feature(values);\n    if (geometryName) {\n      feature.setGeometryName(geometryName);\n    }\n    const fid =\n      node.getAttribute('fid') || getAttributeNS(node, this.namespace, 'id');\n    if (fid) {\n      feature.setId(fid);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Feature} Feature.\n   */\n  readFeatureElement(node, objectStack) {\n    return this.readFeatureElementInternal(node, objectStack, true);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Point|undefined} Point.\n   */\n  readPoint(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      return new Point(flatCoordinates, 'XYZ');\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPoint|undefined} MultiPoint.\n   */\n  readMultiPoint(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const coordinates = pushParseAndPop(\n      [],\n      this.MULTIPOINT_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (coordinates) {\n      return new MultiPoint(coordinates);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  readMultiLineString(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTILINESTRING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (lineStrings) {\n      return new MultiLineString(lineStrings);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiPolygon(node, objectStack) {\n    /** @type {Array<Polygon>} */\n    const polygons = pushParseAndPop(\n      [],\n      this.MULTIPOLYGON_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  pointMemberParser(node, objectStack) {\n    parseNode(this.POINTMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  lineStringMemberParser(node, objectStack) {\n    parseNode(this.LINESTRINGMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  polygonMemberParser(node, objectStack) {\n    parseNode(this.POLYGONMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n  readLineString(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, 'XYZ');\n      return lineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} LinearRing flat coordinates.\n   */\n  readFlatLinearRing(node, objectStack) {\n    const ring = pushParseAndPop(\n      null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (ring) {\n      return ring;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LinearRing|undefined} LinearRing.\n   */\n  readLinearRing(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      return new LinearRing(flatCoordinates, 'XYZ');\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n  readPolygon(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const flatLinearRings = pushParseAndPop(\n      [null],\n      this.FLAT_LINEAR_RINGS_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, 'XYZ', ends);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>} Flat coordinates.\n   */\n  readFlatCoordinatesFromNode(node, objectStack) {\n    return pushParseAndPop(\n      null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, options) {\n    const geometry = this.readGeometryElement(node, [\n      this.getReadOptions(node, options ? options : {}),\n    ]);\n    return geometry ? geometry : null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    const internalOptions = {\n      featureType: this.featureType,\n      featureNS: this.featureNS,\n    };\n    if (internalOptions) {\n      Object.assign(internalOptions, this.getReadOptions(node, options));\n    }\n    const features = this.readFeaturesInternal(node, [internalOptions]);\n    return features || [];\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return getProjection(\n      this.srsName\n        ? this.srsName\n        : node.firstElementChild.getAttribute('srsName')\n    );\n  }\n}\n\nGMLBase.prototype.namespace = GMLNS;\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTIPOINT_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser\n    ),\n    'lineStringMembers': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.POINTMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n  },\n};\n\nexport default GMLBase;\n","/**\n * @module ol/format/GML2\n */\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  createElementNS,\n  getAllTextContent,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n  makeSimpleNodeFactory,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {createOrUpdate} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport {writeStringTextNode} from './xsd.js';\n\n/**\n * @const\n * @type {string}\n */\nconst schemaLocation =\n  GMLNS + ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember',\n};\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @api\n */\nclass GML2 extends GMLBase {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    this.FEATURE_COLLECTION_PARSERS[GMLNS]['featureMember'] = makeArrayPusher(\n      this.readFeaturesInternal\n    );\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : schemaLocation;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatCoordinates(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n      objectStack[0]\n    );\n    const containerSrs = context['srsName'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      if (proj) {\n        axisOrientation = proj.getAxisOrientation();\n      }\n    }\n    const coordsGroups = s.trim().split(/\\s+/);\n    const flatCoordinates = [];\n    for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n      const coords = coordsGroups[i].split(/,+/);\n      const x = parseFloat(coords[0]);\n      const y = parseFloat(coords[1]);\n      const z = coords.length === 3 ? parseFloat(coords[2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  readBox(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.BOX_PARSERS_,\n      node,\n      objectStack,\n      this\n    );\n    return createOrUpdate(\n      flatCoordinates[1][0],\n      flatCoordinates[1][1],\n      flatCoordinates[1][3],\n      flatCoordinates[1][4]\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  innerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  outerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const multiCurve = context['multiCurve'];\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        value\n      ).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS('http://www.opengis.net/gml', nodeName);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const keys = [];\n    const values = [];\n    if (feature.hasProperties()) {\n      const properties = feature.getProperties();\n      for (const key in properties) {\n        const value = properties[key];\n        if (value !== null) {\n          keys.push(key);\n          values.push(value);\n          if (\n            key == geometryName ||\n            typeof (/** @type {?} */ (value).getSimplifiedGeometry) ===\n              'function'\n          ) {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] = makeChildAppender(\n                this.writeGeometryElement,\n                this\n              );\n            }\n          } else {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] =\n                makeChildAppender(writeStringTextNode);\n            }\n          }\n        }\n      }\n    }\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack,\n      keys\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (\n      node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment'\n    ) {\n      const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n      node.appendChild(coordinates);\n      this.writeCoordinates_(coordinates, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLineStringOrCurveMember(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      lines,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const item = Object.assign({}, context);\n    item['node'] = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      value = transformExtentWithOptions(\n        /** @type {import(\"../extent.js\").Extent} */ (geometry),\n        context\n      );\n    } else {\n      value = transformGeometryWithOptions(\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry),\n        true,\n        context\n      );\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      this.GEOMETRY_SERIALIZERS,\n      this.GEOMETRY_NODE_FACTORY_,\n      [value],\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {string} namespaceURI XML namespace.\n   * @return {Element} coordinates node.\n   * @private\n   */\n  createCoordinatesNode_(namespaceURI) {\n    const coordinates = createElementNS(namespaceURI, 'coordinates');\n    coordinates.setAttribute('decimal', '.');\n    coordinates.setAttribute('cs', ',');\n    coordinates.setAttribute('ts', ' ');\n\n    return coordinates;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/LineString.js\").default|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCoordinates_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      const point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString(child, line, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS,\n        this.RING_NODE_FACTORY_,\n        rings,\n        objectStack,\n        undefined,\n        this\n      );\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(\n      parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs'\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeRing(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string} [srsName] Optional srsName\n   * @param {boolean} [hasZ] whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, srsName, hasZ) {\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    let coords =\n      axisOrientation.substr(0, 2) === 'en'\n        ? point[0] + ',' + point[1]\n        : point[1] + ',' + point[0];\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ',' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    const point = geometry.getCoordinates();\n    const coord = this.getCoords_(point, srsName, hasZ);\n    writeStringTextNode(coordinates, coord);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiPoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS,\n      makeSimpleNodeFactory('pointMember'),\n      points,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePointMember(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint(child, point, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLinearRing(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      polygons,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygonMember(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}),\n      this.ENVELOPE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack,\n      keys,\n      this\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      'http://www.opengis.net/gml',\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeArrayPusher(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Box': makeReplacer(GML2.prototype.readBox),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(GML2.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML2.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML2.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML2.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML2.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString\n    ),\n    'LinearRing': makeChildAppender(GML2.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Surface': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Envelope': makeChildAppender(GML2.prototype.writeEnvelope),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember\n    ),\n    'curveMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': makeChildAppender(GML2.prototype.writeRing),\n    'innerBoundaryIs': makeChildAppender(GML2.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(GML2.prototype.writePointMember),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember\n    ),\n    'polygonMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\nexport default GML2;\n","/**\n * @module ol/format/GML3\n */\nimport GML2 from './GML2.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n  makeSimpleNodeFactory,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {createOrUpdate} from '../extent.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {readNonNegativeIntegerString, writeStringTextNode} from './xsd.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\n\n/**\n * @const\n * @type {string}\n * @private\n */\nconst schemaLocation =\n  GMLNS +\n  ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n  '1.0.0/gmlsf.xsd';\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember',\n};\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @api\n */\nclass GML3 extends GMLBase {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.surface_ = options.surface !== undefined ? options.surface : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.curve_ = options.curve !== undefined ? options.curve : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiCurve_ =\n      options.multiCurve !== undefined ? options.multiCurve : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiSurface_ =\n      options.multiSurface !== undefined ? options.multiSurface : true;\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : schemaLocation;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hasZ = options.hasZ !== undefined ? options.hasZ : false;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  readMultiCurve(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTICURVE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (lineStrings) {\n      const multiLineString = new MultiLineString(lineStrings);\n      return multiLineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Polygon.\n   */\n  readFlatCurveRing(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTICURVE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    const flatCoordinates = [];\n    for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n      extend(flatCoordinates, lineStrings[i].getFlatCoordinates());\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiSurface(node, objectStack) {\n    /** @type {Array<Polygon>} */\n    const polygons = pushParseAndPop(\n      [],\n      this.MULTISURFACE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  curveMemberParser(node, objectStack) {\n    parseNode(this.CURVEMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  surfaceMemberParser(node, objectStack) {\n    parseNode(this.SURFACEMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  readPatch(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.PATCHES_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  readSegment(node, objectStack) {\n    return pushParseAndPop([], this.SEGMENTS_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  readPolygonPatch(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.FLAT_LINEAR_RINGS_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  readLineStringSegment(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  interiorParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  exteriorParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n  readSurface(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const flatLinearRings = pushParseAndPop(\n      [null],\n      this.SURFACE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, 'XYZ', ends);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n  readCurve(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.CURVE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, 'XYZ');\n      return lineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  readEnvelope(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.ENVELOPE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    return createOrUpdate(\n      flatCoordinates[1][0],\n      flatCoordinates[1][1],\n      flatCoordinates[2][0],\n      flatCoordinates[2][1]\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatPos(node, objectStack) {\n    let s = getAllTextContent(node, false);\n    const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n    /** @type {Array<number>} */\n    const flatCoordinates = [];\n    let m;\n    while ((m = re.exec(s))) {\n      flatCoordinates.push(parseFloat(m[1]));\n      s = s.substr(m[0].length);\n    }\n    if (s !== '') {\n      return undefined;\n    }\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    if (axisOrientation === 'neu') {\n      let i, ii;\n      for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n        const y = flatCoordinates[i];\n        const x = flatCoordinates[i + 1];\n        flatCoordinates[i] = x;\n        flatCoordinates[i + 1] = y;\n      }\n    }\n    const len = flatCoordinates.length;\n    if (len == 2) {\n      flatCoordinates.push(0);\n    }\n    if (len === 0) {\n      return undefined;\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatPosList(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    const contextDimension = context['srsDimension'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    const coords = s.split(/\\s+/);\n    // The \"dimension\" attribute is from the GML 3.0.1 spec.\n    let dim = 2;\n    if (node.getAttribute('srsDimension')) {\n      dim = readNonNegativeIntegerString(node.getAttribute('srsDimension'));\n    } else if (node.getAttribute('dimension')) {\n      dim = readNonNegativeIntegerString(node.getAttribute('dimension'));\n    } else if (\n      /** @type {Element} */ (node.parentNode).getAttribute('srsDimension')\n    ) {\n      dim = readNonNegativeIntegerString(\n        /** @type {Element} */ (node.parentNode).getAttribute('srsDimension')\n      );\n    } else if (contextDimension) {\n      dim = readNonNegativeIntegerString(contextDimension);\n    }\n    let x, y, z;\n    const flatCoordinates = [];\n    for (let i = 0, ii = coords.length; i < ii; i += dim) {\n      x = parseFloat(coords[i]);\n      y = parseFloat(coords[i + 1]);\n      z = dim === 3 ? parseFloat(coords[i + 2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} value Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePos_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    const point = value.getCoordinates();\n    let coords;\n    // only 2d for simple features profile\n    if (axisOrientation.substr(0, 2) === 'en') {\n      coords = point[0] + ' ' + point[1];\n    } else {\n      coords = point[1] + ' ' + point[0];\n    }\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n    writeStringTextNode(node, coords);\n  }\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string} [srsName] Optional srsName\n   * @param {boolean} [hasZ] whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, srsName, hasZ) {\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    let coords =\n      axisOrientation.substr(0, 2) === 'en'\n        ? point[0] + ' ' + point[1]\n        : point[1] + ' ' + point[0];\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePosList_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    let point;\n    for (let i = 0; i < len; ++i) {\n      point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const pos = createElementNS(node.namespaceURI, 'pos');\n    node.appendChild(pos);\n    this.writePos_(pos, geometry, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}),\n      this.ENVELOPE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack,\n      keys,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLinearRing(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const posList = createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(\n      parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'interior' : 'exterior'\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS,\n        this.RING_NODE_FACTORY_,\n        rings,\n        objectStack,\n        undefined,\n        this\n      );\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (\n      node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment'\n    ) {\n      const posList = createElementNS(node.namespaceURI, 'posList');\n      node.appendChild(posList);\n      this.writePosList_(posList, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiPolygon} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      polygons,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiPoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    const hasZ = context['hasZ'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS,\n      makeSimpleNodeFactory('pointMember'),\n      points,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiLineString} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      lines,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeRing(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygonMember(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePointMember(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint(child, point, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLineStringOrCurveMember(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString(child, line, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const item = Object.assign({}, context);\n    item['node'] = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      value = transformExtentWithOptions(\n        /** @type {import(\"../extent.js\").Extent} */ (geometry),\n        context\n      );\n    } else {\n      value = transformGeometryWithOptions(\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry),\n        true,\n        context\n      );\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      this.GEOMETRY_SERIALIZERS,\n      this.GEOMETRY_NODE_FACTORY_,\n      [value],\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const keys = [];\n    const values = [];\n    if (feature.hasProperties()) {\n      const properties = feature.getProperties();\n      for (const key in properties) {\n        const value = properties[key];\n        if (value !== null) {\n          keys.push(key);\n          values.push(value);\n          if (\n            key == geometryName ||\n            typeof (/** @type {?} */ (value).getSimplifiedGeometry) ===\n              'function'\n          ) {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] = makeChildAppender(\n                this.writeGeometryElement,\n                this\n              );\n            }\n          } else {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] =\n                makeChildAppender(writeStringTextNode);\n            }\n          }\n        }\n      }\n    }\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack,\n      keys\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeFeatureMembers_(node, features, objectStack) {\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureType = context['featureType'];\n    const featureNS = context['featureNS'];\n    /** @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>} */\n    const serializers = {};\n    serializers[featureNS] = {};\n    serializers[featureNS][featureType] = makeChildAppender(\n      this.writeFeatureElement,\n      this\n    );\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      serializers,\n      makeSimpleNodeFactory(featureType, featureNS),\n      features,\n      objectStack\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      this.namespace,\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const curve = context['curve'];\n    const multiCurve = context['multiCurve'];\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        value\n      ).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'LineString' && curve === true) {\n        nodeName = 'Curve';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS(this.namespace, nodeName);\n  }\n\n  /**\n   * Encode a geometry in GML 3.1.1 Simple Features.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeGeometryNode(geometry, options) {\n    options = this.adaptOptions(options);\n    const geom = createElementNS(this.namespace, 'geom');\n    const context = {\n      node: geom,\n      hasZ: this.hasZ,\n      srsName: this.srsName,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n    };\n    if (options) {\n      Object.assign(context, options);\n    }\n    this.writeGeometryElement(geom, geometry, [context]);\n    return geom;\n  }\n\n  /**\n   * Encode an array of features in the GML 3.1.1 format as an XML node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Element} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    const node = createElementNS(this.namespace, 'featureMembers');\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      this.schemaLocation\n    );\n    const context = {\n      srsName: this.srsName,\n      hasZ: this.hasZ,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n      featureNS: this.featureNS,\n      featureType: this.featureType,\n    };\n    if (options) {\n      Object.assign(context, options);\n    }\n    this.writeFeatureMembers_(node, features, [context]);\n    return node;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList),\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser,\n    'exterior': GML3.prototype.exteriorParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML3.prototype.readSurface),\n    'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface),\n    'Curve': makeReplacer(GML3.prototype.readCurve),\n    'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve),\n    'Envelope': makeReplacer(GML3.prototype.readEnvelope),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.MULTICURVE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser),\n    'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.MULTISURFACE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n    'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.CURVEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SURFACEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SURFACE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'patches': makeReplacer(GML3.prototype.readPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.CURVE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'segments': makeReplacer(GML3.prototype.readSegment),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.ENVELOPE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n    'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.PATCHES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SEGMENTS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': makeArrayExtender(\n      GML3.prototype.readLineStringSegment\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n    'Ring': makeReplacer(GML3.prototype.readFlatCurveRing),\n  },\n};\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing),\n    'interior': makeChildAppender(GML3.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember\n    ),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(GML3.prototype.writePointMember),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember\n    ),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML3.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString\n    ),\n    'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Envelope': makeChildAppender(GML3.prototype.writeEnvelope),\n  },\n};\n\nexport default GML3;\n","/**\n * @module ol/format/GML32\n */\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GMLBase from './GMLBase.js';\nimport {\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n} from '../xml.js';\nimport {writeStringTextNode} from '../format/xsd.js';\n\n/**\n * @classdesc Feature format for reading and writing data in the GML format\n *            version 3.2.1.\n * @api\n */\nclass GML32 extends GML3 {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : this.namespace + ' http://schemas.opengis.net/gml/3.2.1/gml.xsd';\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    objectStack[objectStack.length - 1] = Object.assign(\n      {multiCurve: true, multiSurface: true},\n      context\n    );\n    super.writeGeometryElement(node, geometry, objectStack);\n  }\n}\n\nGML32.prototype.namespace = 'http://www.opengis.net/gml/3.2';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList),\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'interior': GML3.prototype.interiorParser,\n    'exterior': GML3.prototype.exteriorParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML32.prototype.readSurface),\n    'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface),\n    'Curve': makeReplacer(GML32.prototype.readCurve),\n    'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve),\n    'Envelope': makeReplacer(GML32.prototype.readEnvelope),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTICURVE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser),\n    'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTISURFACE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n    'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.CURVEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SURFACEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SURFACE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'patches': makeReplacer(GML3.prototype.readPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.CURVE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'segments': makeReplacer(GML3.prototype.readSegment),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.ENVELOPE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n    'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.PATCHES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SEGMENTS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineStringSegment': makeArrayExtender(\n      GML3.prototype.readLineStringSegment\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTIPOINT_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTILINESTRING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser\n    ),\n    'lineStringMembers': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTIPOLYGON_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.POINTMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.LINESTRINGMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.POLYGONMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n    'Ring': makeReplacer(GML32.prototype.readFlatCurveRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing),\n    'interior': makeChildAppender(GML3.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember\n    ),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeChildAppender(GML3.prototype.writePointMember),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember\n    ),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML32.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString\n    ),\n    'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Envelope': makeChildAppender(GML3.prototype.writeEnvelope),\n  },\n};\n\nexport default GML32;\n","/**\n * @module ol/format/filter/Filter\n */\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @abstract\n */\nclass Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   */\n  constructor(tagName) {\n    /**\n     * @private\n     * @type {!string}\n     */\n    this.tagName_ = tagName;\n  }\n\n  /**\n   * The XML tag name for a filter.\n   * @return {!string} Name.\n   */\n  getTagName() {\n    return this.tagName_;\n  }\n}\n\nexport default Filter;\n","/**\n * @module ol/format/filter/LogicalNary\n */\nimport Filter from './Filter.js';\nimport {assert} from '../../asserts.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @abstract\n */\nclass LogicalNary extends Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   * @param {Array<import(\"./Filter.js\").default>} conditions Conditions.\n   */\n  constructor(tagName, conditions) {\n    super(tagName);\n\n    /**\n     * @type {Array<import(\"./Filter.js\").default>}\n     */\n    this.conditions = conditions;\n    assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n  }\n}\n\nexport default LogicalNary;\n","/**\n * @module ol/format/filter/And\n */\nimport LogicalNary from './LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @abstract\n */\nclass And extends LogicalNary {\n  /**\n   * @param {...import(\"./Filter.js\").default} conditions Conditions.\n   */\n  constructor(conditions) {\n    super('And', Array.prototype.slice.call(arguments));\n  }\n}\n\nexport default And;\n","/**\n * @module ol/format/filter/Bbox\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @api\n */\nclass Bbox extends Filter {\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../../extent.js\").Extent} extent Extent.\n   * @param {string} [srsName] SRS name. No srsName attribute will be set\n   * on geometries when this is not provided.\n   */\n  constructor(geometryName, extent, srsName) {\n    super('BBOX');\n\n    /**\n     * @type {!string}\n     */\n    this.geometryName = geometryName;\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent = extent;\n    if (extent.length !== 4) {\n      throw new Error(\n        'Expected an extent with four values ([minX, minY, maxX, maxY])'\n      );\n    }\n\n    /**\n     * @type {string|undefined}\n     */\n    this.srsName = srsName;\n  }\n}\n\nexport default Bbox;\n","/**\n * @module ol/format/WFS\n */\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GML32 from './GML32.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  isDocument,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSimpleNodeFactory,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {and as andFilterFn, bbox as bboxFilterFn} from './filter.js';\nimport {assert} from '../asserts.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readNonNegativeIntegerString,\n  readPositiveInteger,\n  writeStringTextNode,\n} from './xsd.js';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst FEATURE_COLLECTION_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': makeObjectPropertySetter(\n      GMLBase.prototype.readExtentElement,\n      'bounds'\n    ),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'member': makeArrayPusher(GMLBase.prototype.readFeaturesInternal),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst TRANSACTION_SUMMARY_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst TRANSACTION_RESPONSE_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary,\n      'transactionSummary'\n    ),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds'),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary,\n      'transactionSummary'\n    ),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds'),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst QUERY_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': makeChildAppender(writeStringTextNode),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'PropertyName': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst TRANSACTION_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative),\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] The namespace URI used for features.\n * @property {Array<string>|string} [featureType] The feature type to parse. Only used for read operations.\n * @property {GMLBase} [gmlFormat] The GML format to use to parse the response.\n * Default is `ol/format/GML2` for WFS 1.0.0, `ol/format/GML3` for WFS 1.1.0 and `ol/format/GML32` for WFS 2.0.0.\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\n * @property {string} [version='1.1.0'] WFS version to use. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * @typedef {Object} WriteGetFeatureOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {Array<string|FeatureType>} featureTypes The feature type names or FeatureType objects to\n * define a unique bbox filter per feature type name (in this case, options `bbox` and `geometryName` are\n * ignored.).\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {string} [outputFormat] Output format.\n * @property {number} [maxFeatures] Maximum number of features to fetch.\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\n * @property {Array<string>} [propertyNames] Optional list of property names to serialize.\n * @property {string} [viewParams] viewParams GeoServer vendor parameter.\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\n * @property {number} [count] Number of features to retrieve when paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\n * Web Feature Services have repurposed `maxfeatures` instead.\n * @property {import(\"../extent.js\").Extent} [bbox] Extent to use for the BBOX filter. The `geometryName`\n * option must be set.\n * @property {import(\"./filter/Filter.js\").default} [filter] Filter condition. See\n * {@link module:ol/format/filter} for more information.\n * @property {string} [resultType] Indicates what response should be returned,\n * e.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\n */\n\n/**\n * @typedef {Object} FeatureType\n * @property {!string} name The feature type name.\n * @property {!import(\"../extent.js\").Extent} bbox Extent to use for the BBOX filter.\n * @property {!string} geometryName Geometry name to use in the BBOX filter.\n */\n\n/**\n * @typedef {Object} WriteTransactionOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {string} featureType The feature type name.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\n * @property {Array<Object>} nativeElements Native elements. Currently not supported.\n * @property {import(\"./GMLBase.js\").Options} [gmlOptions] GML options for the WFS transaction writer.\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * Number of features; bounds/extent.\n * @typedef {Object} FeatureCollectionMetadata\n * @property {number} numberOfFeatures NumberOfFeatures.\n * @property {import(\"../extent.js\").Extent} bounds Bounds.\n */\n\n/**\n * Total deleted; total inserted; total updated; array of insert ids.\n * @typedef {Object} TransactionResponse\n * @property {number} totalDeleted TotalDeleted.\n * @property {number} totalInserted TotalInserted.\n * @property {number} totalUpdated TotalUpdated.\n * @property {Array<string>} insertIds InsertIds.\n */\n\n/**\n * @type {string}\n */\nconst FEATURE_PREFIX = 'feature';\n\n/**\n * @type {string}\n */\nconst XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n/**\n * @type {Object<string, string>}\n */\nconst OGCNS = {\n  '2.0.0': 'http://www.opengis.net/ogc/1.1',\n  '1.1.0': 'http://www.opengis.net/ogc',\n  '1.0.0': 'http://www.opengis.net/ogc',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst WFSNS = {\n  '2.0.0': 'http://www.opengis.net/wfs/2.0',\n  '1.1.0': 'http://www.opengis.net/wfs',\n  '1.0.0': 'http://www.opengis.net/wfs',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst FESNS = {\n  '2.0.0': 'http://www.opengis.net/fes/2.0',\n  '1.1.0': 'http://www.opengis.net/fes',\n  '1.0.0': 'http://www.opengis.net/fes',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst SCHEMA_LOCATIONS = {\n  '2.0.0':\n    'http://www.opengis.net/wfs/2.0 http://schemas.opengis.net/wfs/2.0/wfs.xsd',\n  '1.1.0':\n    'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0':\n    'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd',\n};\n\n/**\n * @type {Object<string, object>}\n */\nconst GML_FORMATS = {\n  '2.0.0': GML32,\n  '1.1.0': GML3,\n  '1.0.0': GML2,\n};\n\n/**\n * @const\n * @type {string}\n */\nconst DEFAULT_VERSION = '1.1.0';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option to override the default.\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\n *\n * @api\n */\nclass WFS extends XMLFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version ? options.version : DEFAULT_VERSION;\n\n    /**\n     * @private\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType_ = options.featureType;\n\n    /**\n     * @private\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS_ = options.featureNS;\n\n    /**\n     * @private\n     * @type {GMLBase}\n     */\n    this.gmlFormat_ = options.gmlFormat\n      ? options.gmlFormat\n      : new GML_FORMATS[this.version_]();\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.schemaLocation_ = options.schemaLocation\n      ? options.schemaLocation\n      : SCHEMA_LOCATIONS[this.version_];\n  }\n\n  /**\n   * @return {Array<string>|string|undefined} featureType\n   */\n  getFeatureType() {\n    return this.featureType_;\n  }\n\n  /**\n   * @param {Array<string>|string|undefined} featureType Feature type(s) to parse.\n   */\n  setFeatureType(featureType) {\n    this.featureType_ = featureType;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    const context = {\n      node,\n    };\n    Object.assign(context, {\n      'featureType': this.featureType_,\n      'featureNS': this.featureNS_,\n    });\n\n    Object.assign(context, this.getReadOptions(node, options ? options : {}));\n    const objectStack = [context];\n    let featuresNS;\n    if (this.version_ === '2.0.0') {\n      featuresNS = FEATURE_COLLECTION_PARSERS;\n    } else {\n      featuresNS = this.gmlFormat_.FEATURE_COLLECTION_PARSERS;\n    }\n    let features = pushParseAndPop(\n      [],\n      featuresNS,\n      node,\n      objectStack,\n      this.gmlFormat_\n    );\n    if (!features) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * Read transaction response of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {TransactionResponse|undefined} Transaction response.\n   * @api\n   */\n  readTransactionResponse(source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readTransactionResponseFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readTransactionResponseFromDocument(\n        /** @type {Document} */ (source)\n      );\n    }\n    return this.readTransactionResponseFromNode(\n      /** @type {Element} */ (source)\n    );\n  }\n\n  /**\n   * Read feature collection metadata of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   * @api\n   */\n  readFeatureCollectionMetadata(source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureCollectionMetadataFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readFeatureCollectionMetadataFromDocument(\n        /** @type {Document} */ (source)\n      );\n    }\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Element} */ (source)\n    );\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFeatureCollectionMetadataFromNode(\n          /** @type {Element} */ (n)\n        );\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromNode(node) {\n    const result = {};\n    const value = readNonNegativeIntegerString(\n      node.getAttribute('numberOfFeatures')\n    );\n    result['numberOfFeatures'] = value;\n    return pushParseAndPop(\n      /** @type {FeatureCollectionMetadata} */ (result),\n      FEATURE_COLLECTION_PARSERS,\n      node,\n      [],\n      this.gmlFormat_\n    );\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readTransactionResponseFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromNode(node) {\n    return pushParseAndPop(\n      /** @type {TransactionResponse} */ ({}),\n      TRANSACTION_RESPONSE_PARSERS,\n      node,\n      []\n    );\n  }\n\n  /**\n   * Encode format as WFS `GetFeature` and return the Node.\n   *\n   * @param {WriteGetFeatureOptions} options Options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeGetFeature(options) {\n    const node = createElementNS(WFSNS[this.version_], 'GetFeature');\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', this.version_);\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', String(options.maxFeatures));\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', String(options.startIndex));\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', String(options.count));\n    }\n    if (options.viewParams !== undefined) {\n      node.setAttribute('viewParams', options.viewParams);\n    }\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      this.schemaLocation_\n    );\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    const context = {\n      node,\n    };\n    Object.assign(context, {\n      'version': this.version_,\n      'srsName': options.srsName,\n      'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n      'featurePrefix': options.featurePrefix,\n      'propertyNames': options.propertyNames ? options.propertyNames : [],\n    });\n    assert(Array.isArray(options.featureTypes), 11); // `options.featureTypes` must be an Array\n    if (typeof options.featureTypes[0] === 'string') {\n      let filter = options.filter;\n      if (options.bbox) {\n        assert(options.geometryName, 12); // `options.geometryName` must also be provided when `options.bbox` is set\n        filter = this.combineBboxAndFilter(\n          options.geometryName,\n          options.bbox,\n          options.srsName,\n          filter\n        );\n      }\n      Object.assign(context, {\n        'geometryName': options.geometryName,\n        'filter': filter,\n      });\n      writeGetFeature(\n        node,\n        /** @type {!Array<string>} */ (options.featureTypes),\n        [context]\n      );\n    } else {\n      // Write one query node per element in featuresType.\n      options.featureTypes.forEach((/** @type {FeatureType} */ featureType) => {\n        const completeFilter = this.combineBboxAndFilter(\n          featureType.geometryName,\n          featureType.bbox,\n          options.srsName,\n          options.filter\n        );\n        Object.assign(context, {\n          'geometryName': featureType.geometryName,\n          'filter': completeFilter,\n        });\n        writeGetFeature(node, [featureType.name], [context]);\n      });\n    }\n    return node;\n  }\n\n  /**\n   * Create a bbox filter and combine it with another optional filter.\n   *\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../extent.js\").Extent} extent Extent.\n   * @param {string} [srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   * @param {import(\"./filter/Filter.js\").default} [filter] Filter condition.\n   * @return {import(\"./filter/Filter.js\").default} The filter.\n   */\n  combineBboxAndFilter(geometryName, extent, srsName, filter) {\n    const bboxFilter = bboxFilterFn(geometryName, extent, srsName);\n    if (filter) {\n      // if bbox and filter are both set, combine the two into a single filter\n      return andFilterFn(filter, bboxFilter);\n    }\n    return bboxFilter;\n  }\n\n  /**\n   * Encode format as WFS `Transaction` and return the Node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} inserts The features to insert.\n   * @param {Array<import(\"../Feature.js\").default>} updates The features to update.\n   * @param {Array<import(\"../Feature.js\").default>} deletes The features to delete.\n   * @param {WriteTransactionOptions} options Write options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeTransaction(inserts, updates, deletes, options) {\n    const objectStack = [];\n    const version = options.version ? options.version : this.version_;\n    const node = createElementNS(WFSNS[version], 'Transaction');\n\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', version);\n    let baseObj;\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    if (options) {\n      baseObj = options.gmlOptions ? options.gmlOptions : {};\n      if (options.handle) {\n        node.setAttribute('handle', options.handle);\n      }\n    }\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATIONS[version]\n    );\n\n    const request = createTransactionRequest(node, baseObj, version, options);\n    if (inserts) {\n      serializeTransactionRequest('Insert', inserts, objectStack, request);\n    }\n    if (updates) {\n      serializeTransactionRequest('Update', updates, objectStack, request);\n    }\n    if (deletes) {\n      serializeTransactionRequest('Delete', deletes, objectStack, request);\n    }\n    if (options.nativeElements) {\n      serializeTransactionRequest(\n        'Native',\n        options.nativeElements,\n        objectStack,\n        request\n      );\n    }\n    return node;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readProjectionFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    if (node.firstElementChild && node.firstElementChild.firstElementChild) {\n      node = node.firstElementChild.firstElementChild;\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        if (\n          !(\n            n.childNodes.length === 0 ||\n            (n.childNodes.length === 1 && n.firstChild.nodeType === 3)\n          )\n        ) {\n          const objectStack = [{}];\n          this.gmlFormat_.readGeometryElement(n, objectStack);\n          return getProjection(objectStack.pop().srsName);\n        }\n      }\n    }\n\n    return null;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {*} baseObj Base object.\n * @param {string} version Version.\n * @param {WriteTransactionOptions} options Options.\n * @return {Object} Request object.\n */\nfunction createTransactionRequest(node, baseObj, version, options) {\n  const featurePrefix = options.featurePrefix\n    ? options.featurePrefix\n    : FEATURE_PREFIX;\n  let gmlVersion;\n  if (version === '1.0.0') {\n    gmlVersion = 2;\n  } else if (version === '1.1.0') {\n    gmlVersion = 3;\n  } else if (version === '2.0.0') {\n    gmlVersion = 3.2;\n  }\n  const obj = Object.assign(\n    {node},\n    {\n      version,\n      'featureNS': options.featureNS,\n      'featureType': options.featureType,\n      'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion,\n      'hasZ': options.hasZ,\n      'srsName': options.srsName,\n    },\n    baseObj\n  );\n  return obj;\n}\n\n/**\n * @param {string} type Request type.\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @param {Element} request Transaction Request.\n */\nfunction serializeTransactionRequest(type, features, objectStack, request) {\n  pushSerializeAndPop(\n    request,\n    TRANSACTION_SERIALIZERS,\n    makeSimpleNodeFactory(type),\n    features,\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n */\nfunction readTransactionSummary(node, objectStack) {\n  return pushParseAndPop({}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst OGC_FID_PARSERS = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    }),\n  },\n  'http://www.opengis.net/ogc/1.1': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    }),\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction fidParser(node, objectStack) {\n  parseNode(OGC_FID_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst INSERT_RESULTS_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'Feature': fidParser,\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Feature': fidParser,\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Insert results.\n */\nfunction readInsertResults(node, objectStack) {\n  return pushParseAndPop([], INSERT_RESULTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFeature(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else if (gmlVersion === 3) {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML32.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeOgcFidFilter(node, fid, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const version = context['version'];\n  const ns = OGCNS[version];\n  const filter = createElementNS(ns, 'Filter');\n  const child = createElementNS(ns, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', /** @type {string} */ (fid));\n  node.appendChild(filter);\n}\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @return {string} The value of the typeName property.\n */\nfunction getTypeName(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.startsWith(prefix)) {\n    return featureType;\n  }\n  return prefix + featureType;\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDelete(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeUpdate(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const version = context['version'];\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (\n          value &&\n          typeof (/** @type {?} */ (value).getSimplifiedGeometry) === 'function'\n        ) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */ ({\n        version,\n        'gmlVersion': context['gmlVersion'],\n        node,\n        'hasZ': context['hasZ'],\n        'srsName': context['srsName'],\n      }),\n      TRANSACTION_SERIALIZERS,\n      makeSimpleNodeFactory('Property'),\n      values,\n      objectStack\n    );\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeProperty(node, pair, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const version = context['version'];\n  const ns = WFSNS[version];\n  const name = createElementNS(ns, 'Name');\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = createElementNS(ns, 'Value');\n    node.appendChild(value);\n    if (\n      pair.value &&\n      typeof (/** @type {?} */ (pair.value).getSimplifiedGeometry) ===\n        'function'\n    ) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else if (gmlVersion === 3) {\n        GML3.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else {\n        GML32.prototype.writeGeometryElement(value, pair.value, objectStack);\n      }\n    } else {\n      writeStringTextNode(value, pair.value);\n    }\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}} nativeElement The native element.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNative(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', String(nativeElement.safeToIgnore));\n  }\n  if (nativeElement.value !== undefined) {\n    writeStringTextNode(node, nativeElement.value);\n  }\n}\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst GETFEATURE_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Query': makeChildAppender(writeQuery),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Query': makeChildAppender(writeQuery),\n  },\n  'http://www.opengis.net/ogc': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter),\n  },\n  'http://www.opengis.net/fes/2.0': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Disjoint': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'ResourceId': makeChildAppender(writeResourceIdFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter),\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {string} featureType Feature type.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeQuery(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const version = context['version'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = getTypeName(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  let typeNameAttr;\n  if (version === '2.0.0') {\n    typeNameAttr = 'typeNames';\n  } else {\n    typeNameAttr = 'typeName';\n  }\n  node.setAttribute(typeNameAttr, typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  }\n  const item = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n    Object.assign({}, context)\n  );\n  item.node = node;\n  pushSerializeAndPop(\n    item,\n    QUERY_SERIALIZERS,\n    makeSimpleNodeFactory('PropertyName'),\n    propertyNames,\n    objectStack\n  );\n  const filter = context['filter'];\n  if (filter) {\n    const child = createElementNS(getFilterNS(version), 'Filter');\n    node.appendChild(child);\n    writeFilterCondition(child, filter, objectStack);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFilterCondition(node, filter, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(filter.getTagName()),\n    [filter],\n    objectStack\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Bbox.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeBboxFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  parent['srsName'] = filter.srsName;\n  const format = GML_FORMATS[version];\n\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.extent, objectStack);\n}\n\n/**\n * @param {Element} node Element.\n * @param {import(\"./filter/ResourceId.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeResourceIdFilter(node, filter, objectStack) {\n  node.setAttribute('rid', /** @type {string} */ (filter.rid));\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Spatial.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeSpatialFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  parent['srsName'] = filter.srsName;\n  const format = GML_FORMATS[version];\n\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/DWithin.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDWithinFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  writeSpatialFilter(node, filter, objectStack);\n  const distance = createElementNS(getFilterNS(version), 'Distance');\n  writeStringTextNode(distance, filter.distance.toString());\n  if (version === '2.0.0') {\n    distance.setAttribute('uom', filter.unit);\n  } else {\n    distance.setAttribute('units', filter.unit);\n  }\n  node.appendChild(distance);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/During.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDuringFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n\n  writeExpression(FESNS[version], 'ValueReference', node, filter.propertyName);\n  const timePeriod = createElementNS(GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = createElementNS(GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  writeTimeInstant(begin, filter.begin);\n\n  const end = createElementNS(GMLNS, 'end');\n  timePeriod.appendChild(end);\n  writeTimeInstant(end, filter.end);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/LogicalNary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLogicalFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    pushSerializeAndPop(\n      item,\n      GETFEATURE_SERIALIZERS,\n      makeSimpleNodeFactory(condition.getTagName()),\n      [condition],\n      objectStack\n    );\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/Not.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNotFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  const condition = filter.condition;\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(condition.getTagName()),\n    [condition],\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/ComparisonBinary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeComparisonFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.expression);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsNull.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsNullFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  writePropertyName(version, node, filter.propertyName);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsBetween.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsBetweenFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  const ns = getFilterNS(version);\n\n  writePropertyName(version, node, filter.propertyName);\n\n  const lowerBoundary = createElementNS(ns, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  writeLiteral(version, lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = createElementNS(ns, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  writeLiteral(version, upperBoundary, '' + filter.upperBoundary);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/IsLike.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsLikeFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.pattern);\n}\n\n/**\n * @param {string} ns Namespace.\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n */\nfunction writeExpression(ns, tagName, node, value) {\n  const property = createElementNS(ns, tagName);\n  writeStringTextNode(property, value);\n  node.appendChild(property);\n}\n\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeLiteral(version, node, value) {\n  writeExpression(getFilterNS(version), 'Literal', node, value);\n}\n\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writePropertyName(version, node, value) {\n  if (version === '2.0.0') {\n    writeExpression(FESNS[version], 'ValueReference', node, value);\n  } else {\n    writeExpression(OGCNS[version], 'PropertyName', node, value);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n */\nfunction writeTimeInstant(node, time) {\n  const timeInstant = createElementNS(GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = createElementNS(GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  writeStringTextNode(timePosition, time);\n}\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {string} version WFS version. If not provided defaults to '1.1.0'\n * @return {Node} Result.\n * @api\n */\nexport function writeFilter(filter, version) {\n  version = version || '1.1.0';\n  const child = createElementNS(getFilterNS(version), 'Filter');\n  const context = {\n    node: child,\n  };\n  Object.assign(context, {\n    'version': version,\n    'filter': filter,\n  });\n  writeFilterCondition(child, filter, [context]);\n  return child;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<string>} featureTypes Feature types.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeGetFeature(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n    Object.assign({}, context)\n  );\n  item.node = node;\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory('Query'),\n    featureTypes,\n    objectStack\n  );\n}\n\nfunction getFilterNS(version) {\n  let ns;\n  if (version === '2.0.0') {\n    ns = FESNS[version];\n  } else {\n    ns = OGCNS[version];\n  }\n  return ns;\n}\n\nexport default WFS;\n","/**\n * @module ol/format/filter\n */\nimport And from './filter/And.js';\nimport Bbox from './filter/Bbox.js';\nimport Contains from './filter/Contains.js';\nimport DWithin from './filter/DWithin.js';\nimport Disjoint from './filter/Disjoint.js';\nimport During from './filter/During.js';\nimport EqualTo from './filter/EqualTo.js';\nimport GreaterThan from './filter/GreaterThan.js';\nimport GreaterThanOrEqualTo from './filter/GreaterThanOrEqualTo.js';\nimport Intersects from './filter/Intersects.js';\nimport IsBetween from './filter/IsBetween.js';\nimport IsLike from './filter/IsLike.js';\nimport IsNull from './filter/IsNull.js';\nimport LessThan from './filter/LessThan.js';\nimport LessThanOrEqualTo from './filter/LessThanOrEqualTo.js';\nimport Not from './filter/Not.js';\nimport NotEqualTo from './filter/NotEqualTo.js';\nimport Or from './filter/Or.js';\nimport ResourceId from './filter/ResourceId.js';\nimport Within from './filter/Within.js';\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @return {!And} `<And>` operator.\n * @api\n */\nexport function and(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(And, params))();\n}\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @return {!Or} `<Or>` operator.\n * @api\n */\nexport function or(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(Or, params))();\n}\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!import(\"./filter/Filter.js\").default} condition Filter condition.\n * @return {!Not} `<Not>` operator.\n * @api\n */\nexport function not(condition) {\n  return new Not(condition);\n}\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../extent.js\").Extent} extent Extent.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Bbox} `<BBOX>` operator.\n * @api\n */\nexport function bbox(geometryName, extent, srsName) {\n  return new Bbox(geometryName, extent, srsName);\n}\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Contains} `<Contains>` operator.\n * @api\n */\nexport function contains(geometryName, geometry, srsName) {\n  return new Contains(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Intersects} `<Intersects>` operator.\n * @api\n */\nexport function intersects(geometryName, geometry, srsName) {\n  return new Intersects(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Disjoint>` operator to test whether a geometry-valued property\n * is disjoint to a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Disjoint} `<Disjoint>` operator.\n * @api\n */\nexport function disjoint(geometryName, geometry, srsName) {\n  return new Disjoint(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Within} `<Within>` operator.\n * @api\n */\nexport function within(geometryName, geometry, srsName) {\n  return new Within(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<DWithin>` operator to test whether a geometry-valued property\n * is within a distance to a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {!number} distance Distance.\n * @param {!string} unit Unit.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!DWithin} `<DWithin>` operator.\n * @api\n */\nexport function dwithin(geometryName, geometry, distance, unit, srsName) {\n  return new DWithin(geometryName, geometry, distance, unit, srsName);\n}\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\nexport function equalTo(propertyName, expression, matchCase) {\n  return new EqualTo(propertyName, expression, matchCase);\n}\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\nexport function notEqualTo(propertyName, expression, matchCase) {\n  return new NotEqualTo(propertyName, expression, matchCase);\n}\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\nexport function lessThan(propertyName, expression) {\n  return new LessThan(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\nexport function lessThanOrEqualTo(propertyName, expression) {\n  return new LessThanOrEqualTo(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\nexport function greaterThan(propertyName, expression) {\n  return new GreaterThan(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\nexport function greaterThanOrEqualTo(propertyName, expression) {\n  return new GreaterThanOrEqualTo(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @return {!IsNull} `<PropertyIsNull>` operator.\n * @api\n */\nexport function isNull(propertyName) {\n  return new IsNull(propertyName);\n}\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @return {!IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\nexport function between(propertyName, lowerBoundary, upperBoundary) {\n  return new IsBetween(propertyName, lowerBoundary, upperBoundary);\n}\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string} [wildCard] Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string} [singleChar] pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string} [escapeChar] Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!IsLike} `<PropertyIsLike>` operator.\n * @api\n */\nexport function like(\n  propertyName,\n  pattern,\n  wildCard,\n  singleChar,\n  escapeChar,\n  matchCase\n) {\n  return new IsLike(\n    propertyName,\n    pattern,\n    wildCard,\n    singleChar,\n    escapeChar,\n    matchCase\n  );\n}\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @return {!During} `<During>` operator.\n * @api\n */\nexport function during(propertyName, begin, end) {\n  return new During(propertyName, begin, end);\n}\n\nexport function resourceId(rid) {\n  return new ResourceId(rid);\n}\n","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport GML2 from './GML2.js';\nimport XMLFeature from './XMLFeature.js';\nimport {extend} from '../array.js';\nimport {makeArrayPusher, makeStructureNS, pushParseAndPop} from '../xml.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<string>} [layers] If set, only features of the given layers will be returned by the format when read.\n */\n\n/**\n * @const\n * @type {string}\n */\nconst featureIdentifier = '_feature';\n\n/**\n * @const\n * @type {string}\n */\nconst layerIdentifier = '_layer';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link module:ol/format/GML2~GML2} to read features.\n *\n * @api\n */\nclass WMSGetFeatureInfo extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n    /**\n     * @private\n     * @type {GML2}\n     */\n    this.gmlFormat_ = new GML2();\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n  }\n\n  /**\n   * @return {Array<string>|null} layers\n   */\n  getLayers() {\n    return this.layers_;\n  }\n\n  /**\n   * @param {Array<string>|null} layers Layers to parse.\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  readFeatures_(node, objectStack) {\n    node.setAttribute('namespaceURI', this.featureNS_);\n    const localName = node.localName;\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = [];\n    if (node.childNodes.length === 0) {\n      return features;\n    }\n    if (localName == 'msGMLOutput') {\n      for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n        const layer = node.childNodes[i];\n        if (layer.nodeType !== Node.ELEMENT_NODE) {\n          continue;\n        }\n\n        const layerElement = /** @type {Element} */ (layer);\n        const context = objectStack[0];\n\n        const toRemove = layerIdentifier;\n        const layerName = layerElement.localName.replace(toRemove, '');\n\n        if (this.layers_ && !this.layers_.includes(layerName)) {\n          continue;\n        }\n\n        const featureType = layerName + featureIdentifier;\n\n        context['featureType'] = featureType;\n        context['featureNS'] = this.featureNS_;\n\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        const parsers = {};\n        parsers[featureType] = makeArrayPusher(\n          this.gmlFormat_.readFeatureElement,\n          this.gmlFormat_\n        );\n        const parsersNS = makeStructureNS(\n          [context['featureNS'], null],\n          parsers\n        );\n        layerElement.setAttribute('namespaceURI', this.featureNS_);\n        const layerFeatures = pushParseAndPop(\n          [],\n          // @ts-ignore\n          parsersNS,\n          layerElement,\n          objectStack,\n          this.gmlFormat_\n        );\n        if (layerFeatures) {\n          extend(features, layerFeatures);\n        }\n      }\n    }\n    if (localName == 'FeatureCollection') {\n      const gmlFeatures = pushParseAndPop(\n        [],\n        this.gmlFormat_.FEATURE_COLLECTION_PARSERS,\n        node,\n        [{}],\n        this.gmlFormat_\n      );\n      if (gmlFeatures) {\n        features = gmlFeatures;\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    const internalOptions = {};\n    if (options) {\n      Object.assign(internalOptions, this.getReadOptions(node, options));\n    }\n    return this.readFeatures_(node, [internalOptions]);\n  }\n}\n\nexport default WMSGetFeatureInfo;\n","/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceNode} from '../dom.js';\n\nconst events = [\n  'fullscreenchange',\n  'webkitfullscreenchange',\n  'MSFullscreenChange',\n];\n\n/**\n * @enum {string}\n */\nconst FullScreenEventType = {\n  /**\n   * Triggered after the map entered fullscreen.\n   * @event FullScreenEventType#enterfullscreen\n   * @api\n   */\n  ENTERFULLSCREEN: 'enterfullscreen',\n\n  /**\n   * Triggered after the map leave fullscreen.\n   * @event FullScreenEventType#leavefullscreen\n   * @api\n   */\n  LEAVEFULLSCREEN: 'leavefullscreen',\n};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen', import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen'|import(\"../ObjectEventType\").Types, Return>} FullScreenOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text|HTMLElement} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [activeClassName=className + '-true'] CSS class name for the button\n * when full-screen is active.\n * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button\n * when full-screen is inactive.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](https://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @fires FullScreenEventType#enterfullscreen\n * @fires FullScreenEventType#leavefullscreen\n * @api\n */\nclass FullScreen extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FullScreenOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.isInFullscreen_ = false;\n\n    /**\n     * @private\n     */\n    this.boundHandleMapTargetChange_ = this.handleMapTargetChange_.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ =\n      options.className !== undefined ? options.className : 'ol-full-screen';\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.documentListeners_ = [];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.activeClassName_ =\n      options.activeClassName !== undefined\n        ? options.activeClassName.split(' ')\n        : [this.cssClassName_ + '-true'];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.inactiveClassName_ =\n      options.inactiveClassName !== undefined\n        ? options.inactiveClassName.split(' ')\n        : [this.cssClassName_ + '-false'];\n\n    const label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelNode_ =\n      typeof label === 'string' ? document.createTextNode(label) : label;\n\n    const labelActive =\n      options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelActiveNode_ =\n      typeof labelActive === 'string'\n        ? document.createTextNode(labelActive)\n        : labelActive;\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n    this.button_.title = tipLabel;\n    this.button_.setAttribute('type', 'button');\n    this.button_.appendChild(this.labelNode_);\n    this.button_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n    this.setClassName_(this.button_, this.isInFullscreen_);\n\n    this.element.className = `${this.cssClassName_} ${CLASS_UNSELECTABLE} ${CLASS_CONTROL}`;\n    this.element.appendChild(this.button_);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreen_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const doc = map.getOwnerDocument();\n    if (!isFullScreenSupported(doc)) {\n      return;\n    }\n    if (isFullScreen(doc)) {\n      exitFullScreen(doc);\n    } else {\n      let element;\n      if (this.source_) {\n        element =\n          typeof this.source_ === 'string'\n            ? doc.getElementById(this.source_)\n            : this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreenChange_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const wasInFullscreen = this.isInFullscreen_;\n    this.isInFullscreen_ = isFullScreen(map.getOwnerDocument());\n    if (wasInFullscreen !== this.isInFullscreen_) {\n      this.setClassName_(this.button_, this.isInFullscreen_);\n      if (this.isInFullscreen_) {\n        replaceNode(this.labelActiveNode_, this.labelNode_);\n        this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\n      } else {\n        replaceNode(this.labelNode_, this.labelActiveNode_);\n        this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\n      }\n      map.updateSize();\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  setClassName_(element, fullscreen) {\n    if (fullscreen) {\n      element.classList.remove(...this.inactiveClassName_);\n      element.classList.add(...this.activeClassName_);\n    } else {\n      element.classList.remove(...this.activeClassName_);\n      element.classList.add(...this.inactiveClassName_);\n    }\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (oldMap) {\n      oldMap.removeChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_\n      );\n    }\n\n    super.setMap(map);\n\n    this.handleMapTargetChange_();\n    if (map) {\n      map.addChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleMapTargetChange_() {\n    const listeners = this.documentListeners_;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      unlistenByKey(listeners[i]);\n    }\n    listeners.length = 0;\n\n    const map = this.getMap();\n    if (map) {\n      const doc = map.getOwnerDocument();\n      if (isFullScreenSupported(doc)) {\n        this.element.classList.remove(CLASS_UNSUPPORTED);\n      } else {\n        this.element.classList.add(CLASS_UNSUPPORTED);\n      }\n\n      for (let i = 0, ii = events.length; i < ii; ++i) {\n        listeners.push(\n          listen(doc, events[i], this.handleFullScreenChange_, this)\n        );\n      }\n      this.handleFullScreenChange_();\n    }\n  }\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported(doc) {\n  const body = doc.body;\n  return !!(\n    body['webkitRequestFullscreen'] ||\n    (body.requestFullscreen && doc.fullscreenEnabled)\n  );\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen(doc) {\n  return !!(doc['webkitIsFullScreen'] || doc.fullscreenElement);\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n * @param {Document} doc The document to exit fullscren from\n */\nfunction exitFullScreen(doc) {\n  if (doc.exitFullscreen) {\n    doc.exitFullscreen();\n  } else if (doc['webkitExitFullscreen']) {\n    doc['webkitExitFullscreen']();\n  }\n}\n\nexport default FullScreen;\n","/**\n * @module ol/control/MousePosition\n */\n\nimport Control from './Control.js';\nimport EventType from '../pointer/EventType.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  getUserProjection,\n  identityTransform,\n} from '../proj.js';\nimport {listen} from '../events.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', Return>} MousePositionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [placeholder] Markup to show when the mouse position is not\n * available (e.g. when the pointer leaves the map viewport).  By default, a non-breaking space is rendered\n * initially and the last position is retained when the mouse leaves the viewport.\n * When a string is provided (e.g. `'no position'` or `''` for an empty string) it is used as a\n * placeholder.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the projection's antimeridian, if it\n * is a global projection.\n */\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nclass MousePosition extends Control {\n  /**\n   * @param {Options} [options] Mouse position options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.className =\n      options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MousePositionOnSignature<void>}\n     */\n    this.un;\n\n    this.addChangeListener(PROJECTION, this.handleProjectionChanged_);\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = options.placeholder !== undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.placeholder_ = this.renderOnMouseOut_ ? options.placeholder : '&#160;';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {?import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX === false ? false : true;\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    this.transform_ = null;\n  }\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  getCoordinateFormat() {\n    return /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (\n      this.get(COORDINATE_FORMAT)\n    );\n  }\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"../proj/Projection.js\").default|undefined} */ (\n      this.get(PROJECTION)\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event Browser event.\n   * @protected\n   */\n  handleMouseMove(event) {\n    const map = this.getMap();\n    this.updateHTML_(map.getEventPixel(event));\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseOut(event) {\n    this.updateHTML_(null);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      const viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this)\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this)\n        );\n      }\n      this.updateHTML_(null);\n    }\n  }\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  setCoordinateFormat(format) {\n    this.set(COORDINATE_FORMAT, format);\n  }\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  updateHTML_(pixel) {\n    let html = this.placeholder_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        const projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            projection\n          );\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      const map = this.getMap();\n      const coordinate = map.getCoordinateFromPixelInternal(pixel);\n      if (coordinate) {\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            userProjection\n          );\n        }\n        this.transform_(coordinate, coordinate);\n        if (this.wrapX_) {\n          const projection =\n            userProjection || this.getProjection() || this.mapProjection_;\n          wrapX(coordinate, projection);\n        }\n        const coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  }\n\n  /**\n   * Update the projection. Rendering of the coordinates is done in\n   * `handleMouseMove` and `handleMouseUp`.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.mapProjection_ = null;\n    } else {\n      if (this.mapProjection_ != frameState.viewState.projection) {\n        this.mapProjection_ = frameState.viewState.projection;\n        this.transform_ = null;\n      }\n    }\n  }\n}\n\nexport default MousePosition;\n","/**\n * @module ol/control/OverviewMap\n */\nimport Collection from '../Collection.js';\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport View from '../View.js';\nimport ViewProperty from '../ViewProperty.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {\n  containsExtent,\n  equals as equalsExtent,\n  getBottomRight,\n  getTopLeft,\n  scaleFromCenter,\n} from '../extent.js';\nimport {listen, listenOnce} from '../events.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {replaceNode} from '../dom.js';\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nconst MAX_RATIO = 0.75;\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nconst MIN_RATIO = 0.1;\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='‹'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='›'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Base.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Base.js\").default>} [layers]\n * Layers for the overview map.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {boolean} [rotateWithView=false] Whether the control view should rotate with the main map view.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {View} [view] Custom view for the overview map (should use same projection as main map). If not provided,\n * a default view with the same projection as the main map will be used.\n */\n\n/**\n * Create a new control with a map acting as an overview map for another\n * defined map.\n *\n * @api\n */\nclass OverviewMap extends Control {\n  /**\n   * @param {Options} [options] OverviewMap options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     */\n    this.boundHandleRotationChanged_ = this.handleRotationChanged_.bind(this);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.viewExtent_ = undefined;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u2039';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : '\\u203A';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('div');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * Explicitly given view to be used instead of a view derived from the main map.\n     * @type {View}\n     * @private\n     */\n    this.view_ = options.view;\n\n    const ovmap = new Map({\n      view: options.view,\n      controls: new Collection(),\n      interactions: new Collection(),\n    });\n\n    /**\n     * @type {Map}\n     * @private\n     */\n    this.ovmap_ = ovmap;\n\n    if (options.layers) {\n      options.layers.forEach(function (layer) {\n        ovmap.addLayer(layer);\n      });\n    }\n\n    const box = document.createElement('div');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {import(\"../Overlay.js\").default}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: 'center-center',\n      element: box,\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    const scope = this;\n\n    const overlay = this.boxOverlay_;\n    const overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    const computeDesiredMousePosition = function (mousePosition) {\n      return {\n        clientX: mousePosition.clientX,\n        clientY: mousePosition.clientY,\n      };\n    };\n\n    const move = function (event) {\n      const position = /** @type {?} */ (computeDesiredMousePosition(event));\n      const coordinates = ovmap.getEventCoordinateInternal(\n        /** @type {MouseEvent} */ (position)\n      );\n\n      overlay.setPosition(coordinates);\n    };\n\n    const endMoving = function (event) {\n      const coordinates = ovmap.getEventCoordinateInternal(event);\n\n      scope.getMap().getView().setCenterInternal(coordinates);\n\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', endMoving);\n    };\n\n    /* Binding */\n\n    overlayBox.addEventListener('mousedown', function () {\n      window.addEventListener('mousemove', move);\n      window.addEventListener('mouseup', endMoving);\n    });\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      const oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    super.setMap(map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(\n        listen(\n          map,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleMapPropertyChange_,\n          this\n        )\n      );\n\n      const view = map.getView();\n      if (view) {\n        this.bindView_(view);\n        if (view.isDef()) {\n          this.ovmap_.updateSize();\n          this.resetExtent_();\n        }\n      }\n\n      if (!this.ovmap_.isRendered()) {\n        this.updateBoxAfterOvmapIsRendered_();\n      }\n    }\n  }\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n   * @private\n   */\n  handleMapPropertyChange_(event) {\n    if (event.key === MapProperty.VIEW) {\n      const oldView = /** @type {import(\"../View.js\").default} */ (\n        event.oldValue\n      );\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      const newView = this.getMap().getView();\n      this.bindView_(newView);\n    } else if (\n      !this.ovmap_.isRendered() &&\n      (event.key === MapProperty.TARGET || event.key === MapProperty.SIZE)\n    ) {\n      this.ovmap_.updateSize();\n    }\n  }\n\n  /**\n   * Register listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  bindView_(view) {\n    if (!this.view_) {\n      // Unless an explicit view definition was given, derive default from whatever main map uses.\n      const newView = new View({\n        projection: view.getProjection(),\n      });\n      this.ovmap_.setView(newView);\n    }\n\n    view.addChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_\n    );\n    // Sync once with the new view\n    this.handleRotationChanged_();\n  }\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  unbindView_(view) {\n    view.removeChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_\n    );\n  }\n\n  /**\n   * Handle rotation changes to the main map.\n   * @private\n   */\n  handleRotationChanged_() {\n    if (this.rotateWithView_) {\n      this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n    }\n  }\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  validateExtent_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    if (this.viewExtent_ && equalsExtent(extent, this.viewExtent_)) {\n      // repeats of the same extent may indicate constraint conflicts leading to an endless cycle\n      return;\n    }\n    this.viewExtent_ = extent;\n\n    const ovmapSize = /** @type {import(\"../size.js\").Size} */ (\n      ovmap.getSize()\n    );\n\n    const ovview = ovmap.getView();\n    const ovextent = ovview.calculateExtentInternal(ovmapSize);\n\n    const topLeftPixel = ovmap.getPixelFromCoordinateInternal(\n      getTopLeft(extent)\n    );\n    const bottomRightPixel = ovmap.getPixelFromCoordinateInternal(\n      getBottomRight(extent)\n    );\n\n    const boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    const boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    const ovmapWidth = ovmapSize[0];\n    const ovmapHeight = ovmapSize[1];\n\n    if (\n      boxWidth < ovmapWidth * MIN_RATIO ||\n      boxHeight < ovmapHeight * MIN_RATIO ||\n      boxWidth > ovmapWidth * MAX_RATIO ||\n      boxHeight > ovmapHeight * MAX_RATIO\n    ) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  }\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  resetExtent_() {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    const ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    const steps = Math.log(MAX_RATIO / MIN_RATIO) / Math.LN2;\n    const ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fitInternal(polygonFromExtent(extent));\n  }\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  recenter_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    ovview.setCenterInternal(view.getCenterInternal());\n  }\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  updateBox_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    const rotation = this.rotateWithView_ ? 0 : -view.getRotation();\n\n    const overlay = this.boxOverlay_;\n    const box = this.boxOverlay_.getElement();\n    const center = view.getCenterInternal();\n    const resolution = view.getResolution();\n    const ovresolution = ovview.getResolution();\n    const width = (mapSize[0] * resolution) / ovresolution;\n    const height = (mapSize[1] * resolution) / ovresolution;\n\n    // set position using center coordinates\n    overlay.setPosition(center);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = width + 'px';\n      box.style.height = height + 'px';\n      const transform = 'rotate(' + rotation + 'rad)';\n      box.style.transform = transform;\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateBoxAfterOvmapIsRendered_() {\n    if (this.ovmapPostrenderKey_) {\n      return;\n    }\n    this.ovmapPostrenderKey_ = listenOnce(\n      this.ovmap_,\n      MapEventType.POSTRENDER,\n      function (event) {\n        delete this.ovmapPostrenderKey_;\n        this.updateBox_();\n      },\n      this\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    const ovmap = this.ovmap_;\n    if (!this.collapsed_) {\n      if (ovmap.isRendered()) {\n        this.viewExtent_ = undefined;\n        ovmap.render();\n        return;\n      }\n      ovmap.updateSize();\n      this.resetExtent_();\n      this.updateBoxAfterOvmapIsRendered_();\n    }\n  }\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the overview map view can rotate, `false` otherwise.\n   * @return {boolean} True if the control view can rotate.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Set whether the overview map view should rotate with the main map view.\n   * @param {boolean} rotateWithView True if the control view should rotate.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    if (this.rotateWithView_ === rotateWithView) {\n      return;\n    }\n    this.rotateWithView_ = rotateWithView;\n    if (this.getMap().getView().getRotation() !== 0) {\n      if (this.rotateWithView_) {\n        this.handleRotationChanged_();\n      } else {\n        this.ovmap_.getView().setRotation(0);\n      }\n      this.viewExtent_ = undefined;\n      this.validateExtent_();\n      this.updateBox_();\n    }\n  }\n\n  /**\n   * Return the overview map.\n   * @return {import(\"../Map.js\").default} Overview map.\n   * @api\n   */\n  getOverviewMap() {\n    return this.ovmap_;\n  }\n\n  /**\n   * Update the overview map element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.validateExtent_();\n    this.updateBox_();\n  }\n}\n\nexport default OverviewMap;\n","/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * @typedef {'degrees' | 'imperial' | 'nautical' | 'metric' | 'us'} Units\n * Units for the scale line.\n */\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className] CSS class name. The default is `ol-scale-bar` when configured with\n * `bar: true`. Otherwise the default is `ol-scale-line`.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {number} [maxWidth] Maximum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options} [options] Scale line options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.style.pointerEvents = 'none';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ScaleLineOnSignature<void>}\n     */\n    this.un;\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n        ? 'ol-scale-bar'\n        : 'ol-scale-line';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.maxWidth_ = options.maxWidth;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addChangeListener(UNITS_PROP, this.handleUnitsChanged_);\n\n    this.setUnits(options.units || 'metric');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits = units == 'degrees' ? 'degrees' : 'm';\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    const maxWidth =\n      this.maxWidth_ !== undefined\n        ? (this.maxWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI\n        : undefined;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == 'degrees') {\n      const metersPerDegree = METERS_PER_UNIT.degrees;\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == 'imperial') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == 'nautical') {\n      pointResolution /= 1852;\n      suffix = 'NM';\n    } else if (units == 'metric') {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == 'us') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    let previousCount, previousWidth, previousDecimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      }\n      if (maxWidth !== undefined && width >= maxWidth) {\n        count = previousCount;\n        width = previousWidth;\n        decimalCount = previousDecimalCount;\n        break;\n      } else if (width >= minWidth) {\n        break;\n      }\n      previousCount = count;\n      previousWidth = width;\n      previousDecimalCount = decimalCount;\n      ++i;\n    }\n    const html = this.scaleBar_\n      ? this.createScaleBar(width, count, suffix)\n      : count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @return {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const resolutionScale = this.getScaleForResolution();\n    const mapScale =\n      resolutionScale < 1\n        ? Math.round(1 / resolutionScale).toLocaleString() + ' : 1'\n        : '1 : ' + Math.round(resolutionScale).toLocaleString();\n    const steps = this.scaleBarSteps_;\n    const stepWidth = width / steps;\n    const scaleSteps = [this.createMarker('absolute')];\n    for (let i = 0; i < steps; ++i) {\n      const cls =\n        i % 2 === 0 ? 'ol-scale-singlebar-odd' : 'ol-scale-singlebar-even';\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          `class=\"ol-scale-singlebar ${cls}\" ` +\n          `style=\"width: ${stepWidth}px;\"` +\n          '>' +\n          '</div>' +\n          this.createMarker('relative') +\n          // render text every second step, except when only 2 steps\n          (i % 2 === 0 || steps === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>'\n      );\n    }\n    // render text at the end\n    scaleSteps.push(this.createStepText(steps, width, true, scale, suffix));\n\n    const scaleBarText = this.scaleBarText_\n      ? `<div class=\"ol-scale-text\" style=\"width: ${width}px;\">` +\n        mapScale +\n        '</div>'\n      : '';\n    return scaleBarText + scaleSteps.join('');\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {'absolute'|'relative'} position The position, absolute or relative\n   * @return {string} The stringified div containing the marker\n   */\n  createMarker(position) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      `style=\"position: ${position}; top: ${top}px;\"` +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i The iterator\n   * @param {number} width The width the scalebar will currently use\n   * @param {boolean} isLast Flag indicating if we add the last step text\n   * @param {number} scale The current scale for the whole scalebar\n   * @param {string} suffix The suffix for the scale\n   * @return {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      `margin-left: ${margin}px;` +\n      `text-align: ${i === 0 ? 'left' : 'center'};` +\n      `min-width: ${minWidth}px;` +\n      `left: ${isLast ? width + 'px' : 'unset'};` +\n      '\">' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center,\n      'm'\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const inchesPerMeter = 1000 / 25.4;\n    return resolution * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n","/**\n * @module ol/control/ZoomSlider\n */\n\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {clamp} from '../math.js';\nimport {easeOut} from '../easing.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nconst Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1,\n};\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n */\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nclass ZoomSlider extends Control {\n  /**\n   * @param {Options} [options] Zoom slider options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n    });\n\n    /**\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    this.currentResolution_ = undefined;\n\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    this.direction_ = Direction.VERTICAL;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.heightLimit_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.widthLimit_ = 0;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startX_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startY_;\n\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.thumbSize_ = null;\n\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    this.sliderInitialized_ = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoomslider';\n    const thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    const containerElement = this.element;\n    containerElement.className =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n\n    containerElement.addEventListener(\n      PointerEventType.POINTERDOWN,\n      this.handleDraggerStart_.bind(this),\n      false\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERMOVE,\n      this.handleDraggerDrag_.bind(this),\n      false\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERUP,\n      this.handleDraggerEnd_.bind(this),\n      false\n    );\n\n    containerElement.addEventListener(\n      EventType.CLICK,\n      this.handleContainerClick_.bind(this),\n      false\n    );\n    thumbElement.addEventListener(EventType.CLICK, stopPropagation, false);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      map.render();\n    }\n  }\n\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @return {boolean} Initialization successful\n   * @private\n   */\n  initSlider_() {\n    const container = this.element;\n    let containerWidth = container.offsetWidth;\n    let containerHeight = container.offsetHeight;\n    if (containerWidth === 0 && containerHeight === 0) {\n      return (this.sliderInitialized_ = false);\n    }\n\n    const containerStyle = getComputedStyle(container);\n    containerWidth -=\n      parseFloat(containerStyle['paddingRight']) +\n      parseFloat(containerStyle['paddingLeft']);\n    containerHeight -=\n      parseFloat(containerStyle['paddingTop']) +\n      parseFloat(containerStyle['paddingBottom']);\n    const thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n    const thumbStyle = getComputedStyle(thumb);\n    const thumbWidth =\n      thumb.offsetWidth +\n      parseFloat(thumbStyle['marginRight']) +\n      parseFloat(thumbStyle['marginLeft']);\n    const thumbHeight =\n      thumb.offsetHeight +\n      parseFloat(thumbStyle['marginTop']) +\n      parseFloat(thumbStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerWidth > containerHeight) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerWidth - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerHeight - thumbHeight;\n    }\n    return (this.sliderInitialized_ = true);\n  }\n\n  /**\n   * @param {PointerEvent} event The browser event to handle.\n   * @private\n   */\n  handleContainerClick_(event) {\n    const view = this.getMap().getView();\n\n    const relativePosition = this.getRelativePosition_(\n      event.offsetX - this.thumbSize_[0] / 2,\n      event.offsetY - this.thumbSize_[1] / 2\n    );\n\n    const resolution = this.getResolutionForPosition_(relativePosition);\n    const zoom = view.getConstrainedZoom(view.getZoomForResolution(resolution));\n\n    view.animateInternal({\n      zoom: zoom,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n\n  /**\n   * Handle dragger start events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerStart_(event) {\n    if (!this.dragging_ && event.target === this.element.firstElementChild) {\n      const element = /** @type {HTMLElement} */ (\n        this.element.firstElementChild\n      );\n      this.getMap().getView().beginInteraction();\n      this.startX_ = event.clientX - parseFloat(element.style.left);\n      this.startY_ = event.clientY - parseFloat(element.style.top);\n      this.dragging_ = true;\n\n      if (this.dragListenerKeys_.length === 0) {\n        const drag = this.handleDraggerDrag_;\n        const end = this.handleDraggerEnd_;\n        const doc = this.getMap().getOwnerDocument();\n        this.dragListenerKeys_.push(\n          listen(doc, PointerEventType.POINTERMOVE, drag, this),\n          listen(doc, PointerEventType.POINTERUP, end, this)\n        );\n      }\n    }\n  }\n\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerDrag_(event) {\n    if (this.dragging_) {\n      const deltaX = event.clientX - this.startX_;\n      const deltaY = event.clientY - this.startY_;\n      const relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ =\n        this.getResolutionForPosition_(relativePosition);\n      this.getMap().getView().setResolution(this.currentResolution_);\n    }\n  }\n\n  /**\n   * Handle dragger end events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerEnd_(event) {\n    if (this.dragging_) {\n      const view = this.getMap().getView();\n      view.endInteraction();\n\n      this.dragging_ = false;\n      this.startX_ = undefined;\n      this.startY_ = undefined;\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n    }\n  }\n\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  setThumbPosition_(res) {\n    const position = this.getPositionForResolution_(res);\n    const thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  }\n\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  getRelativePosition_(x, y) {\n    let amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  }\n\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  getResolutionForPosition_(position) {\n    const fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  }\n\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  getPositionForResolution_(res) {\n    const fn = this.getMap().getView().getValueForResolutionFunction();\n    return clamp(1 - fn(res), 0, 1);\n  }\n\n  /**\n   * Update the zoomslider element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    if (!mapEvent.frameState) {\n      return;\n    }\n    if (!this.sliderInitialized_ && !this.initSlider_()) {\n      return;\n    }\n    const res = mapEvent.frameState.viewState.resolution;\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\nexport default ZoomSlider;\n","/**\n * @module ol/control/ZoomToExtent\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nclass ZoomToExtent extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent|null}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    const label = options.label !== undefined ? options.label : 'E';\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label\n    );\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  }\n\n  /**\n   * @protected\n   */\n  handleZoomToExtent() {\n    const map = this.getMap();\n    const view = map.getView();\n    const extent = !this.extent\n      ? view.getProjection().getExtent()\n      : this.extent;\n    view.fitInternal(polygonFromExtent(extent));\n  }\n}\n\nexport default ZoomToExtent;\n","import $ol$AssertionError from './ol/AssertionError.js';\nimport {CollectionEvent as _ol_Collection$CollectionEvent} from './ol/Collection.js';\nimport $ol$Collection from './ol/Collection.js';\nimport {asImageLike as _ol_DataTile$asImageLike} from './ol/DataTile.js';\nimport {asArrayLike as _ol_DataTile$asArrayLike} from './ol/DataTile.js';\nimport {toArray as _ol_DataTile$toArray} from './ol/DataTile.js';\nimport $ol$DataTile from './ol/DataTile.js';\nimport $ol$Disposable from './ol/Disposable.js';\nimport $ol$Feature from './ol/Feature.js';\nimport {createStyleFunction as _ol_Feature$createStyleFunction} from './ol/Feature.js';\nimport {GeolocationError as _ol_Geolocation$GeolocationError} from './ol/Geolocation.js';\nimport $ol$Geolocation from './ol/Geolocation.js';\nimport $ol$Image from './ol/Image.js';\nimport {listenImage as _ol_Image$listenImage} from './ol/Image.js';\nimport $ol$ImageBase from './ol/ImageBase.js';\nimport $ol$ImageCanvas from './ol/ImageCanvas.js';\nimport $ol$ImageTile from './ol/ImageTile.js';\nimport $ol$Kinetic from './ol/Kinetic.js';\nimport $ol$Map from './ol/Map.js';\nimport $ol$MapBrowserEvent from './ol/MapBrowserEvent.js';\nimport $ol$MapBrowserEventHandler from './ol/MapBrowserEventHandler.js';\nimport $ol$MapEvent from './ol/MapEvent.js';\nimport {ObjectEvent as _ol_Object$ObjectEvent} from './ol/Object.js';\nimport $ol$Object from './ol/Object.js';\nimport $ol$Observable from './ol/Observable.js';\nimport {unByKey as _ol_Observable$unByKey} from './ol/Observable.js';\nimport $ol$Overlay from './ol/Overlay.js';\nimport $ol$Tile from './ol/Tile.js';\nimport $ol$TileCache from './ol/TileCache.js';\nimport $ol$TileQueue from './ol/TileQueue.js';\nimport {getTilePriority as _ol_TileQueue$getTilePriority} from './ol/TileQueue.js';\nimport $ol$TileRange from './ol/TileRange.js';\nimport {createOrUpdate as _ol_TileRange$createOrUpdate} from './ol/TileRange.js';\nimport $ol$VectorRenderTile from './ol/VectorRenderTile.js';\nimport $ol$View from './ol/View.js';\nimport {createCenterConstraint as _ol_View$createCenterConstraint} from './ol/View.js';\nimport {createResolutionConstraint as _ol_View$createResolutionConstraint} from './ol/View.js';\nimport {createRotationConstraint as _ol_View$createRotationConstraint} from './ol/View.js';\nimport {isNoopAnimation as _ol_View$isNoopAnimation} from './ol/View.js';\nimport {binarySearch as _ol_array$binarySearch} from './ol/array.js';\nimport {ascending as _ol_array$ascending} from './ol/array.js';\nimport {linearFindNearest as _ol_array$linearFindNearest} from './ol/array.js';\nimport {reverseSubArray as _ol_array$reverseSubArray} from './ol/array.js';\nimport {extend as _ol_array$extend} from './ol/array.js';\nimport {remove as _ol_array$remove} from './ol/array.js';\nimport {equals as _ol_array$equals} from './ol/array.js';\nimport {stableSort as _ol_array$stableSort} from './ol/array.js';\nimport {isSorted as _ol_array$isSorted} from './ol/array.js';\nimport {assert as _ol_asserts$assert} from './ol/asserts.js';\nimport {createExtent as _ol_centerconstraint$createExtent} from './ol/centerconstraint.js';\nimport {none as _ol_centerconstraint$none} from './ol/centerconstraint.js';\nimport {asString as _ol_color$asString} from './ol/color.js';\nimport {fromString as _ol_color$fromString} from './ol/color.js';\nimport {asArray as _ol_color$asArray} from './ol/color.js';\nimport {normalize as _ol_color$normalize} from './ol/color.js';\nimport {toString as _ol_color$toString} from './ol/color.js';\nimport {isStringColor as _ol_color$isStringColor} from './ol/color.js';\nimport {asColorLike as _ol_colorlike$asColorLike} from './ol/colorlike.js';\nimport {setLevel as _ol_console$setLevel} from './ol/console.js';\nimport {log as _ol_console$log} from './ol/console.js';\nimport {warn as _ol_console$warn} from './ol/console.js';\nimport {error as _ol_console$error} from './ol/console.js';\nimport {add as _ol_coordinate$add} from './ol/coordinate.js';\nimport {closestOnCircle as _ol_coordinate$closestOnCircle} from './ol/coordinate.js';\nimport {closestOnSegment as _ol_coordinate$closestOnSegment} from './ol/coordinate.js';\nimport {createStringXY as _ol_coordinate$createStringXY} from './ol/coordinate.js';\nimport {degreesToStringHDMS as _ol_coordinate$degreesToStringHDMS} from './ol/coordinate.js';\nimport {format as _ol_coordinate$format} from './ol/coordinate.js';\nimport {equals as _ol_coordinate$equals} from './ol/coordinate.js';\nimport {rotate as _ol_coordinate$rotate} from './ol/coordinate.js';\nimport {scale as _ol_coordinate$scale} from './ol/coordinate.js';\nimport {squaredDistance as _ol_coordinate$squaredDistance} from './ol/coordinate.js';\nimport {distance as _ol_coordinate$distance} from './ol/coordinate.js';\nimport {squaredDistanceToSegment as _ol_coordinate$squaredDistanceToSegment} from './ol/coordinate.js';\nimport {toStringHDMS as _ol_coordinate$toStringHDMS} from './ol/coordinate.js';\nimport {toStringXY as _ol_coordinate$toStringXY} from './ol/coordinate.js';\nimport {wrapX as _ol_coordinate$wrapX} from './ol/coordinate.js';\nimport {getWorldsAway as _ol_coordinate$getWorldsAway} from './ol/coordinate.js';\nimport {CLASS_HIDDEN as _ol_css$CLASS_HIDDEN} from './ol/css.js';\nimport {CLASS_SELECTABLE as _ol_css$CLASS_SELECTABLE} from './ol/css.js';\nimport {CLASS_UNSELECTABLE as _ol_css$CLASS_UNSELECTABLE} from './ol/css.js';\nimport {CLASS_UNSUPPORTED as _ol_css$CLASS_UNSUPPORTED} from './ol/css.js';\nimport {CLASS_CONTROL as _ol_css$CLASS_CONTROL} from './ol/css.js';\nimport {CLASS_COLLAPSED as _ol_css$CLASS_COLLAPSED} from './ol/css.js';\nimport {getFontParameters as _ol_css$getFontParameters} from './ol/css.js';\nimport {createCanvasContext2D as _ol_dom$createCanvasContext2D} from './ol/dom.js';\nimport {releaseCanvas as _ol_dom$releaseCanvas} from './ol/dom.js';\nimport {outerWidth as _ol_dom$outerWidth} from './ol/dom.js';\nimport {outerHeight as _ol_dom$outerHeight} from './ol/dom.js';\nimport {replaceNode as _ol_dom$replaceNode} from './ol/dom.js';\nimport {removeNode as _ol_dom$removeNode} from './ol/dom.js';\nimport {removeChildren as _ol_dom$removeChildren} from './ol/dom.js';\nimport {replaceChildren as _ol_dom$replaceChildren} from './ol/dom.js';\nimport {easeIn as _ol_easing$easeIn} from './ol/easing.js';\nimport {easeOut as _ol_easing$easeOut} from './ol/easing.js';\nimport {inAndOut as _ol_easing$inAndOut} from './ol/easing.js';\nimport {linear as _ol_easing$linear} from './ol/easing.js';\nimport {upAndDown as _ol_easing$upAndDown} from './ol/easing.js';\nimport {listen as _ol_events$listen} from './ol/events.js';\nimport {listenOnce as _ol_events$listenOnce} from './ol/events.js';\nimport {unlistenByKey as _ol_events$unlistenByKey} from './ol/events.js';\nimport {boundingExtent as _ol_extent$boundingExtent} from './ol/extent.js';\nimport {buffer as _ol_extent$buffer} from './ol/extent.js';\nimport {clone as _ol_extent$clone} from './ol/extent.js';\nimport {closestSquaredDistanceXY as _ol_extent$closestSquaredDistanceXY} from './ol/extent.js';\nimport {containsCoordinate as _ol_extent$containsCoordinate} from './ol/extent.js';\nimport {containsExtent as _ol_extent$containsExtent} from './ol/extent.js';\nimport {containsXY as _ol_extent$containsXY} from './ol/extent.js';\nimport {coordinateRelationship as _ol_extent$coordinateRelationship} from './ol/extent.js';\nimport {createEmpty as _ol_extent$createEmpty} from './ol/extent.js';\nimport {createOrUpdate as _ol_extent$createOrUpdate} from './ol/extent.js';\nimport {createOrUpdateEmpty as _ol_extent$createOrUpdateEmpty} from './ol/extent.js';\nimport {createOrUpdateFromCoordinate as _ol_extent$createOrUpdateFromCoordinate} from './ol/extent.js';\nimport {createOrUpdateFromCoordinates as _ol_extent$createOrUpdateFromCoordinates} from './ol/extent.js';\nimport {createOrUpdateFromFlatCoordinates as _ol_extent$createOrUpdateFromFlatCoordinates} from './ol/extent.js';\nimport {createOrUpdateFromRings as _ol_extent$createOrUpdateFromRings} from './ol/extent.js';\nimport {equals as _ol_extent$equals} from './ol/extent.js';\nimport {approximatelyEquals as _ol_extent$approximatelyEquals} from './ol/extent.js';\nimport {extend as _ol_extent$extend} from './ol/extent.js';\nimport {extendCoordinate as _ol_extent$extendCoordinate} from './ol/extent.js';\nimport {extendCoordinates as _ol_extent$extendCoordinates} from './ol/extent.js';\nimport {extendFlatCoordinates as _ol_extent$extendFlatCoordinates} from './ol/extent.js';\nimport {extendRings as _ol_extent$extendRings} from './ol/extent.js';\nimport {extendXY as _ol_extent$extendXY} from './ol/extent.js';\nimport {forEachCorner as _ol_extent$forEachCorner} from './ol/extent.js';\nimport {getArea as _ol_extent$getArea} from './ol/extent.js';\nimport {getBottomLeft as _ol_extent$getBottomLeft} from './ol/extent.js';\nimport {getBottomRight as _ol_extent$getBottomRight} from './ol/extent.js';\nimport {getCenter as _ol_extent$getCenter} from './ol/extent.js';\nimport {getCorner as _ol_extent$getCorner} from './ol/extent.js';\nimport {getEnlargedArea as _ol_extent$getEnlargedArea} from './ol/extent.js';\nimport {getForViewAndSize as _ol_extent$getForViewAndSize} from './ol/extent.js';\nimport {getRotatedViewport as _ol_extent$getRotatedViewport} from './ol/extent.js';\nimport {getHeight as _ol_extent$getHeight} from './ol/extent.js';\nimport {getIntersectionArea as _ol_extent$getIntersectionArea} from './ol/extent.js';\nimport {getIntersection as _ol_extent$getIntersection} from './ol/extent.js';\nimport {getMargin as _ol_extent$getMargin} from './ol/extent.js';\nimport {getSize as _ol_extent$getSize} from './ol/extent.js';\nimport {getTopLeft as _ol_extent$getTopLeft} from './ol/extent.js';\nimport {getTopRight as _ol_extent$getTopRight} from './ol/extent.js';\nimport {getWidth as _ol_extent$getWidth} from './ol/extent.js';\nimport {intersects as _ol_extent$intersects} from './ol/extent.js';\nimport {isEmpty as _ol_extent$isEmpty} from './ol/extent.js';\nimport {returnOrUpdate as _ol_extent$returnOrUpdate} from './ol/extent.js';\nimport {scaleFromCenter as _ol_extent$scaleFromCenter} from './ol/extent.js';\nimport {intersectsSegment as _ol_extent$intersectsSegment} from './ol/extent.js';\nimport {applyTransform as _ol_extent$applyTransform} from './ol/extent.js';\nimport {wrapX as _ol_extent$wrapX} from './ol/extent.js';\nimport {wrapAndSliceX as _ol_extent$wrapAndSliceX} from './ol/extent.js';\nimport {loadFeaturesXhr as _ol_featureloader$loadFeaturesXhr} from './ol/featureloader.js';\nimport {xhr as _ol_featureloader$xhr} from './ol/featureloader.js';\nimport {setWithCredentials as _ol_featureloader$setWithCredentials} from './ol/featureloader.js';\nimport {TRUE as _ol_functions$TRUE} from './ol/functions.js';\nimport {FALSE as _ol_functions$FALSE} from './ol/functions.js';\nimport {VOID as _ol_functions$VOID} from './ol/functions.js';\nimport {memoizeOne as _ol_functions$memoizeOne} from './ol/functions.js';\nimport {toPromise as _ol_functions$toPromise} from './ol/functions.js';\nimport {FIREFOX as _ol_has$FIREFOX} from './ol/has.js';\nimport {SAFARI as _ol_has$SAFARI} from './ol/has.js';\nimport {SAFARI_BUG_237906 as _ol_has$SAFARI_BUG_237906} from './ol/has.js';\nimport {WEBKIT as _ol_has$WEBKIT} from './ol/has.js';\nimport {MAC as _ol_has$MAC} from './ol/has.js';\nimport {DEVICE_PIXEL_RATIO as _ol_has$DEVICE_PIXEL_RATIO} from './ol/has.js';\nimport {WORKER_OFFSCREEN_CANVAS as _ol_has$WORKER_OFFSCREEN_CANVAS} from './ol/has.js';\nimport {IMAGE_DECODE as _ol_has$IMAGE_DECODE} from './ol/has.js';\nimport {PASSIVE_EVENT_LISTENERS as _ol_has$PASSIVE_EVENT_LISTENERS} from './ol/has.js';\nimport {all as _ol_loadingstrategy$all} from './ol/loadingstrategy.js';\nimport {bbox as _ol_loadingstrategy$bbox} from './ol/loadingstrategy.js';\nimport {tile as _ol_loadingstrategy$tile} from './ol/loadingstrategy.js';\nimport {clamp as _ol_math$clamp} from './ol/math.js';\nimport {squaredSegmentDistance as _ol_math$squaredSegmentDistance} from './ol/math.js';\nimport {squaredDistance as _ol_math$squaredDistance} from './ol/math.js';\nimport {solveLinearSystem as _ol_math$solveLinearSystem} from './ol/math.js';\nimport {toDegrees as _ol_math$toDegrees} from './ol/math.js';\nimport {toRadians as _ol_math$toRadians} from './ol/math.js';\nimport {modulo as _ol_math$modulo} from './ol/math.js';\nimport {lerp as _ol_math$lerp} from './ol/math.js';\nimport {toFixed as _ol_math$toFixed} from './ol/math.js';\nimport {round as _ol_math$round} from './ol/math.js';\nimport {floor as _ol_math$floor} from './ol/math.js';\nimport {ceil as _ol_math$ceil} from './ol/math.js';\nimport {jsonp as _ol_net$jsonp} from './ol/net.js';\nimport {ResponseError as _ol_net$ResponseError} from './ol/net.js';\nimport {ClientError as _ol_net$ClientError} from './ol/net.js';\nimport {getJSON as _ol_net$getJSON} from './ol/net.js';\nimport {resolveUrl as _ol_net$resolveUrl} from './ol/net.js';\nimport {overrideXHR as _ol_net$overrideXHR} from './ol/net.js';\nimport {restoreXHR as _ol_net$restoreXHR} from './ol/net.js';\nimport {clear as _ol_obj$clear} from './ol/obj.js';\nimport {isEmpty as _ol_obj$isEmpty} from './ol/obj.js';\nimport {disableCoordinateWarning as _ol_proj$disableCoordinateWarning} from './ol/proj.js';\nimport {cloneTransform as _ol_proj$cloneTransform} from './ol/proj.js';\nimport {identityTransform as _ol_proj$identityTransform} from './ol/proj.js';\nimport {addProjection as _ol_proj$addProjection} from './ol/proj.js';\nimport {addProjections as _ol_proj$addProjections} from './ol/proj.js';\nimport {get as _ol_proj$get} from './ol/proj.js';\nimport {getPointResolution as _ol_proj$getPointResolution} from './ol/proj.js';\nimport {addEquivalentProjections as _ol_proj$addEquivalentProjections} from './ol/proj.js';\nimport {addEquivalentTransforms as _ol_proj$addEquivalentTransforms} from './ol/proj.js';\nimport {clearAllProjections as _ol_proj$clearAllProjections} from './ol/proj.js';\nimport {createProjection as _ol_proj$createProjection} from './ol/proj.js';\nimport {createTransformFromCoordinateTransform as _ol_proj$createTransformFromCoordinateTransform} from './ol/proj.js';\nimport {addCoordinateTransforms as _ol_proj$addCoordinateTransforms} from './ol/proj.js';\nimport {fromLonLat as _ol_proj$fromLonLat} from './ol/proj.js';\nimport {toLonLat as _ol_proj$toLonLat} from './ol/proj.js';\nimport {equivalent as _ol_proj$equivalent} from './ol/proj.js';\nimport {getTransformFromProjections as _ol_proj$getTransformFromProjections} from './ol/proj.js';\nimport {getTransform as _ol_proj$getTransform} from './ol/proj.js';\nimport {transform as _ol_proj$transform} from './ol/proj.js';\nimport {transformExtent as _ol_proj$transformExtent} from './ol/proj.js';\nimport {transformWithProjections as _ol_proj$transformWithProjections} from './ol/proj.js';\nimport {setUserProjection as _ol_proj$setUserProjection} from './ol/proj.js';\nimport {clearUserProjection as _ol_proj$clearUserProjection} from './ol/proj.js';\nimport {getUserProjection as _ol_proj$getUserProjection} from './ol/proj.js';\nimport {useGeographic as _ol_proj$useGeographic} from './ol/proj.js';\nimport {toUserCoordinate as _ol_proj$toUserCoordinate} from './ol/proj.js';\nimport {fromUserCoordinate as _ol_proj$fromUserCoordinate} from './ol/proj.js';\nimport {toUserExtent as _ol_proj$toUserExtent} from './ol/proj.js';\nimport {fromUserExtent as _ol_proj$fromUserExtent} from './ol/proj.js';\nimport {toUserResolution as _ol_proj$toUserResolution} from './ol/proj.js';\nimport {fromUserResolution as _ol_proj$fromUserResolution} from './ol/proj.js';\nimport {createSafeCoordinateTransform as _ol_proj$createSafeCoordinateTransform} from './ol/proj.js';\nimport {addCommon as _ol_proj$addCommon} from './ol/proj.js';\nimport {toContext as _ol_render$toContext} from './ol/render.js';\nimport {getVectorContext as _ol_render$getVectorContext} from './ol/render.js';\nimport {getRenderPixel as _ol_render$getRenderPixel} from './ol/render.js';\nimport {canvasPool as _ol_reproj$canvasPool} from './ol/reproj.js';\nimport {calculateSourceResolution as _ol_reproj$calculateSourceResolution} from './ol/reproj.js';\nimport {calculateSourceExtentResolution as _ol_reproj$calculateSourceExtentResolution} from './ol/reproj.js';\nimport {render as _ol_reproj$render} from './ol/reproj.js';\nimport {createSnapToResolutions as _ol_resolutionconstraint$createSnapToResolutions} from './ol/resolutionconstraint.js';\nimport {createSnapToPower as _ol_resolutionconstraint$createSnapToPower} from './ol/resolutionconstraint.js';\nimport {createMinMaxResolution as _ol_resolutionconstraint$createMinMaxResolution} from './ol/resolutionconstraint.js';\nimport {disable as _ol_rotationconstraint$disable} from './ol/rotationconstraint.js';\nimport {none as _ol_rotationconstraint$none} from './ol/rotationconstraint.js';\nimport {createSnapToN as _ol_rotationconstraint$createSnapToN} from './ol/rotationconstraint.js';\nimport {createSnapToZero as _ol_rotationconstraint$createSnapToZero} from './ol/rotationconstraint.js';\nimport {buffer as _ol_size$buffer} from './ol/size.js';\nimport {hasArea as _ol_size$hasArea} from './ol/size.js';\nimport {scale as _ol_size$scale} from './ol/size.js';\nimport {toSize as _ol_size$toSize} from './ol/size.js';\nimport {sourcesFromTileGrid as _ol_source$sourcesFromTileGrid} from './ol/source.js';\nimport {DEFAULT_RADIUS as _ol_sphere$DEFAULT_RADIUS} from './ol/sphere.js';\nimport {getDistance as _ol_sphere$getDistance} from './ol/sphere.js';\nimport {getLength as _ol_sphere$getLength} from './ol/sphere.js';\nimport {getArea as _ol_sphere$getArea} from './ol/sphere.js';\nimport {offset as _ol_sphere$offset} from './ol/sphere.js';\nimport {padNumber as _ol_string$padNumber} from './ol/string.js';\nimport {compareVersions as _ol_string$compareVersions} from './ol/string.js';\nimport {createOrUpdate as _ol_tilecoord$createOrUpdate} from './ol/tilecoord.js';\nimport {getKeyZXY as _ol_tilecoord$getKeyZXY} from './ol/tilecoord.js';\nimport {getKey as _ol_tilecoord$getKey} from './ol/tilecoord.js';\nimport {getCacheKeyForTileKey as _ol_tilecoord$getCacheKeyForTileKey} from './ol/tilecoord.js';\nimport {fromKey as _ol_tilecoord$fromKey} from './ol/tilecoord.js';\nimport {hash as _ol_tilecoord$hash} from './ol/tilecoord.js';\nimport {withinExtentAndZ as _ol_tilecoord$withinExtentAndZ} from './ol/tilecoord.js';\nimport {getForProjection as _ol_tilegrid$getForProjection} from './ol/tilegrid.js';\nimport {wrapX as _ol_tilegrid$wrapX} from './ol/tilegrid.js';\nimport {createForExtent as _ol_tilegrid$createForExtent} from './ol/tilegrid.js';\nimport {createXYZ as _ol_tilegrid$createXYZ} from './ol/tilegrid.js';\nimport {createForProjection as _ol_tilegrid$createForProjection} from './ol/tilegrid.js';\nimport {extentFromProjection as _ol_tilegrid$extentFromProjection} from './ol/tilegrid.js';\nimport {createFromTemplate as _ol_tileurlfunction$createFromTemplate} from './ol/tileurlfunction.js';\nimport {createFromTemplates as _ol_tileurlfunction$createFromTemplates} from './ol/tileurlfunction.js';\nimport {createFromTileUrlFunctions as _ol_tileurlfunction$createFromTileUrlFunctions} from './ol/tileurlfunction.js';\nimport {nullTileUrlFunction as _ol_tileurlfunction$nullTileUrlFunction} from './ol/tileurlfunction.js';\nimport {expandUrl as _ol_tileurlfunction$expandUrl} from './ol/tileurlfunction.js';\nimport {create as _ol_transform$create} from './ol/transform.js';\nimport {reset as _ol_transform$reset} from './ol/transform.js';\nimport {multiply as _ol_transform$multiply} from './ol/transform.js';\nimport {set as _ol_transform$set} from './ol/transform.js';\nimport {setFromArray as _ol_transform$setFromArray} from './ol/transform.js';\nimport {apply as _ol_transform$apply} from './ol/transform.js';\nimport {rotate as _ol_transform$rotate} from './ol/transform.js';\nimport {scale as _ol_transform$scale} from './ol/transform.js';\nimport {makeScale as _ol_transform$makeScale} from './ol/transform.js';\nimport {translate as _ol_transform$translate} from './ol/transform.js';\nimport {compose as _ol_transform$compose} from './ol/transform.js';\nimport {composeCssTransform as _ol_transform$composeCssTransform} from './ol/transform.js';\nimport {invert as _ol_transform$invert} from './ol/transform.js';\nimport {makeInverse as _ol_transform$makeInverse} from './ol/transform.js';\nimport {determinant as _ol_transform$determinant} from './ol/transform.js';\nimport {toString as _ol_transform$toString} from './ol/transform.js';\nimport {appendParams as _ol_uri$appendParams} from './ol/uri.js';\nimport {abstract as _ol_util$abstract} from './ol/util.js';\nimport {getUid as _ol_util$getUid} from './ol/util.js';\nimport {VERSION as _ol_util$VERSION} from './ol/util.js';\nimport {XML_SCHEMA_INSTANCE_URI as _ol_xml$XML_SCHEMA_INSTANCE_URI} from './ol/xml.js';\nimport {createElementNS as _ol_xml$createElementNS} from './ol/xml.js';\nimport {getAllTextContent as _ol_xml$getAllTextContent} from './ol/xml.js';\nimport {getAllTextContent_ as _ol_xml$getAllTextContent_} from './ol/xml.js';\nimport {isDocument as _ol_xml$isDocument} from './ol/xml.js';\nimport {getAttributeNS as _ol_xml$getAttributeNS} from './ol/xml.js';\nimport {parse as _ol_xml$parse} from './ol/xml.js';\nimport {makeArrayExtender as _ol_xml$makeArrayExtender} from './ol/xml.js';\nimport {makeArrayPusher as _ol_xml$makeArrayPusher} from './ol/xml.js';\nimport {makeReplacer as _ol_xml$makeReplacer} from './ol/xml.js';\nimport {makeObjectPropertyPusher as _ol_xml$makeObjectPropertyPusher} from './ol/xml.js';\nimport {makeObjectPropertySetter as _ol_xml$makeObjectPropertySetter} from './ol/xml.js';\nimport {makeChildAppender as _ol_xml$makeChildAppender} from './ol/xml.js';\nimport {makeArraySerializer as _ol_xml$makeArraySerializer} from './ol/xml.js';\nimport {makeSimpleNodeFactory as _ol_xml$makeSimpleNodeFactory} from './ol/xml.js';\nimport {OBJECT_PROPERTY_NODE_FACTORY as _ol_xml$OBJECT_PROPERTY_NODE_FACTORY} from './ol/xml.js';\nimport {makeSequence as _ol_xml$makeSequence} from './ol/xml.js';\nimport {makeStructureNS as _ol_xml$makeStructureNS} from './ol/xml.js';\nimport {parseNode as _ol_xml$parseNode} from './ol/xml.js';\nimport {pushParseAndPop as _ol_xml$pushParseAndPop} from './ol/xml.js';\nimport {serialize as _ol_xml$serialize} from './ol/xml.js';\nimport {pushSerializeAndPop as _ol_xml$pushSerializeAndPop} from './ol/xml.js';\nimport {registerXMLSerializer as _ol_xml$registerXMLSerializer} from './ol/xml.js';\nimport {getXMLSerializer as _ol_xml$getXMLSerializer} from './ol/xml.js';\nimport {registerDocument as _ol_xml$registerDocument} from './ol/xml.js';\nimport {getDocument as _ol_xml$getDocument} from './ol/xml.js';\nimport {create as _ol_vec_mat4$create} from './ol/vec/mat4.js';\nimport {fromTransform as _ol_vec_mat4$fromTransform} from './ol/vec/mat4.js';\nimport $ol$tilegrid$TileGrid from './ol/tilegrid/TileGrid.js';\nimport $ol$tilegrid$WMTS from './ol/tilegrid/WMTS.js';\nimport {createFromCapabilitiesMatrixSet as _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet} from './ol/tilegrid/WMTS.js';\nimport {DEFAULT_MAX_ZOOM as _ol_tilegrid_common$DEFAULT_MAX_ZOOM} from './ol/tilegrid/common.js';\nimport {DEFAULT_TILE_SIZE as _ol_tilegrid_common$DEFAULT_TILE_SIZE} from './ol/tilegrid/common.js';\nimport $ol$style$Circle from './ol/style/Circle.js';\nimport $ol$style$Fill from './ol/style/Fill.js';\nimport $ol$style$Icon from './ol/style/Icon.js';\nimport $ol$style$IconImage from './ol/style/IconImage.js';\nimport {get as _ol_style_IconImage$get} from './ol/style/IconImage.js';\nimport $ol$style$IconImageCache from './ol/style/IconImageCache.js';\nimport {shared as _ol_style_IconImageCache$shared} from './ol/style/IconImageCache.js';\nimport $ol$style$Image from './ol/style/Image.js';\nimport $ol$style$RegularShape from './ol/style/RegularShape.js';\nimport $ol$style$Stroke from './ol/style/Stroke.js';\nimport $ol$style$Style from './ol/style/Style.js';\nimport {toFunction as _ol_style_Style$toFunction} from './ol/style/Style.js';\nimport {createDefaultStyle as _ol_style_Style$createDefaultStyle} from './ol/style/Style.js';\nimport {createEditingStyle as _ol_style_Style$createEditingStyle} from './ol/style/Style.js';\nimport $ol$style$Text from './ol/style/Text.js';\nimport {Operators as _ol_style_expressions$Operators} from './ol/style/expressions.js';\nimport {getValueType as _ol_style_expressions$getValueType} from './ol/style/expressions.js';\nimport {isTypeUnique as _ol_style_expressions$isTypeUnique} from './ol/style/expressions.js';\nimport {numberToGlsl as _ol_style_expressions$numberToGlsl} from './ol/style/expressions.js';\nimport {arrayToGlsl as _ol_style_expressions$arrayToGlsl} from './ol/style/expressions.js';\nimport {colorToGlsl as _ol_style_expressions$colorToGlsl} from './ol/style/expressions.js';\nimport {getStringNumberEquivalent as _ol_style_expressions$getStringNumberEquivalent} from './ol/style/expressions.js';\nimport {stringToGlsl as _ol_style_expressions$stringToGlsl} from './ol/style/expressions.js';\nimport {expressionToGlsl as _ol_style_expressions$expressionToGlsl} from './ol/style/expressions.js';\nimport {uniformNameForVariable as _ol_style_expressions$uniformNameForVariable} from './ol/style/expressions.js';\nimport {PALETTE_TEXTURE_ARRAY as _ol_style_expressions$PALETTE_TEXTURE_ARRAY} from './ol/style/expressions.js';\nimport {toStyle as _ol_style_flat$toStyle} from './ol/style/flat.js';\nimport $ol$structs$LRUCache from './ol/structs/LRUCache.js';\nimport $ol$structs$LinkedList from './ol/structs/LinkedList.js';\nimport {DROP as _ol_structs_PriorityQueue$DROP} from './ol/structs/PriorityQueue.js';\nimport $ol$structs$PriorityQueue from './ol/structs/PriorityQueue.js';\nimport $ol$structs$RBush from './ol/structs/RBush.js';\nimport {quadKey as _ol_source_BingMaps$quadKey} from './ol/source/BingMaps.js';\nimport $ol$source$BingMaps from './ol/source/BingMaps.js';\nimport $ol$source$Cluster from './ol/source/Cluster.js';\nimport $ol$source$DataTile from './ol/source/DataTile.js';\nimport {ImageSourceEvent as _ol_source_Image$ImageSourceEvent} from './ol/source/Image.js';\nimport $ol$source$Image from './ol/source/Image.js';\nimport {defaultImageLoadFunction as _ol_source_Image$defaultImageLoadFunction} from './ol/source/Image.js';\nimport $ol$source$ImageArcGISRest from './ol/source/ImageArcGISRest.js';\nimport $ol$source$ImageCanvas from './ol/source/ImageCanvas.js';\nimport $ol$source$ImageStatic from './ol/source/ImageStatic.js';\nimport $ol$source$ImageWMS from './ol/source/ImageWMS.js';\nimport $ol$source$OGCMapTile from './ol/source/OGCMapTile.js';\nimport {ATTRIBUTION as _ol_source_OSM$ATTRIBUTION} from './ol/source/OSM.js';\nimport $ol$source$OSM from './ol/source/OSM.js';\nimport {newImageData as _ol_source_Raster$newImageData} from './ol/source/Raster.js';\nimport {Processor as _ol_source_Raster$Processor} from './ol/source/Raster.js';\nimport {RasterSourceEvent as _ol_source_Raster$RasterSourceEvent} from './ol/source/Raster.js';\nimport $ol$source$Raster from './ol/source/Raster.js';\nimport $ol$source$Source from './ol/source/Source.js';\nimport $ol$source$Stamen from './ol/source/Stamen.js';\nimport $ol$source$Tile from './ol/source/Tile.js';\nimport {TileSourceEvent as _ol_source_Tile$TileSourceEvent} from './ol/source/Tile.js';\nimport $ol$source$TileArcGISRest from './ol/source/TileArcGISRest.js';\nimport $ol$source$TileDebug from './ol/source/TileDebug.js';\nimport $ol$source$TileImage from './ol/source/TileImage.js';\nimport $ol$source$TileJSON from './ol/source/TileJSON.js';\nimport $ol$source$TileWMS from './ol/source/TileWMS.js';\nimport {CustomTile as _ol_source_UTFGrid$CustomTile} from './ol/source/UTFGrid.js';\nimport $ol$source$UTFGrid from './ol/source/UTFGrid.js';\nimport $ol$source$UrlTile from './ol/source/UrlTile.js';\nimport {VectorSourceEvent as _ol_source_Vector$VectorSourceEvent} from './ol/source/Vector.js';\nimport $ol$source$Vector from './ol/source/Vector.js';\nimport $ol$source$WMTS from './ol/source/WMTS.js';\nimport {optionsFromCapabilities as _ol_source_WMTS$optionsFromCapabilities} from './ol/source/WMTS.js';\nimport $ol$source$XYZ from './ol/source/XYZ.js';\nimport {DEFAULT_WMS_VERSION as _ol_source_common$DEFAULT_WMS_VERSION} from './ol/source/common.js';\nimport {getMapTileUrlTemplate as _ol_source_ogcTileUtil$getMapTileUrlTemplate} from './ol/source/ogcTileUtil.js';\nimport {getVectorTileUrlTemplate as _ol_source_ogcTileUtil$getVectorTileUrlTemplate} from './ol/source/ogcTileUtil.js';\nimport {getTileSetInfo as _ol_source_ogcTileUtil$getTileSetInfo} from './ol/source/ogcTileUtil.js';\nimport {DEFAULT_VERSION as _ol_source_wms$DEFAULT_VERSION} from './ol/source/wms.js';\nimport $ol$reproj$DataTile from './ol/reproj/DataTile.js';\nimport $ol$reproj$Image from './ol/reproj/Image.js';\nimport $ol$reproj$Tile from './ol/reproj/Tile.js';\nimport $ol$reproj$Triangulation from './ol/reproj/Triangulation.js';\nimport {ERROR_THRESHOLD as _ol_reproj_common$ERROR_THRESHOLD} from './ol/reproj/common.js';\nimport $ol$renderer$Composite from './ol/renderer/Composite.js';\nimport $ol$renderer$Layer from './ol/renderer/Layer.js';\nimport $ol$renderer$Map from './ol/renderer/Map.js';\nimport {defaultOrder as _ol_renderer_vector$defaultOrder} from './ol/renderer/vector.js';\nimport {getSquaredTolerance as _ol_renderer_vector$getSquaredTolerance} from './ol/renderer/vector.js';\nimport {getTolerance as _ol_renderer_vector$getTolerance} from './ol/renderer/vector.js';\nimport {renderFeature as _ol_renderer_vector$renderFeature} from './ol/renderer/vector.js';\nimport $ol$renderer$canvas$ImageLayer from './ol/renderer/canvas/ImageLayer.js';\nimport {canvasPool as _ol_renderer_canvas_Layer$canvasPool} from './ol/renderer/canvas/Layer.js';\nimport $ol$renderer$canvas$Layer from './ol/renderer/canvas/Layer.js';\nimport $ol$renderer$canvas$TileLayer from './ol/renderer/canvas/TileLayer.js';\nimport $ol$renderer$canvas$VectorImageLayer from './ol/renderer/canvas/VectorImageLayer.js';\nimport $ol$renderer$canvas$VectorLayer from './ol/renderer/canvas/VectorLayer.js';\nimport $ol$render$Box from './ol/render/Box.js';\nimport $ol$render$Event from './ol/render/Event.js';\nimport $ol$render$Feature from './ol/render/Feature.js';\nimport {toGeometry as _ol_render_Feature$toGeometry} from './ol/render/Feature.js';\nimport {toFeature as _ol_render_Feature$toFeature} from './ol/render/Feature.js';\nimport $ol$render$VectorContext from './ol/render/VectorContext.js';\nimport {defaultFont as _ol_render_canvas$defaultFont} from './ol/render/canvas.js';\nimport {defaultFillStyle as _ol_render_canvas$defaultFillStyle} from './ol/render/canvas.js';\nimport {defaultLineCap as _ol_render_canvas$defaultLineCap} from './ol/render/canvas.js';\nimport {defaultLineDash as _ol_render_canvas$defaultLineDash} from './ol/render/canvas.js';\nimport {defaultLineDashOffset as _ol_render_canvas$defaultLineDashOffset} from './ol/render/canvas.js';\nimport {defaultLineJoin as _ol_render_canvas$defaultLineJoin} from './ol/render/canvas.js';\nimport {defaultMiterLimit as _ol_render_canvas$defaultMiterLimit} from './ol/render/canvas.js';\nimport {defaultStrokeStyle as _ol_render_canvas$defaultStrokeStyle} from './ol/render/canvas.js';\nimport {defaultTextAlign as _ol_render_canvas$defaultTextAlign} from './ol/render/canvas.js';\nimport {defaultTextBaseline as _ol_render_canvas$defaultTextBaseline} from './ol/render/canvas.js';\nimport {defaultPadding as _ol_render_canvas$defaultPadding} from './ol/render/canvas.js';\nimport {defaultLineWidth as _ol_render_canvas$defaultLineWidth} from './ol/render/canvas.js';\nimport {checkedFonts as _ol_render_canvas$checkedFonts} from './ol/render/canvas.js';\nimport {textHeights as _ol_render_canvas$textHeights} from './ol/render/canvas.js';\nimport {registerFont as _ol_render_canvas$registerFont} from './ol/render/canvas.js';\nimport {measureTextHeight as _ol_render_canvas$measureTextHeight} from './ol/render/canvas.js';\nimport {measureTextWidth as _ol_render_canvas$measureTextWidth} from './ol/render/canvas.js';\nimport {measureAndCacheTextWidth as _ol_render_canvas$measureAndCacheTextWidth} from './ol/render/canvas.js';\nimport {getTextDimensions as _ol_render_canvas$getTextDimensions} from './ol/render/canvas.js';\nimport {rotateAtOffset as _ol_render_canvas$rotateAtOffset} from './ol/render/canvas.js';\nimport {drawImageOrLabel as _ol_render_canvas$drawImageOrLabel} from './ol/render/canvas.js';\nimport $ol$render$canvas$Builder from './ol/render/canvas/Builder.js';\nimport $ol$render$canvas$BuilderGroup from './ol/render/canvas/BuilderGroup.js';\nimport $ol$render$canvas$Executor from './ol/render/canvas/Executor.js';\nimport $ol$render$canvas$ExecutorGroup from './ol/render/canvas/ExecutorGroup.js';\nimport {getPixelIndexArray as _ol_render_canvas_ExecutorGroup$getPixelIndexArray} from './ol/render/canvas/ExecutorGroup.js';\nimport $ol$render$canvas$ImageBuilder from './ol/render/canvas/ImageBuilder.js';\nimport $ol$render$canvas$Immediate from './ol/render/canvas/Immediate.js';\nimport {fillInstruction as _ol_render_canvas_Instruction$fillInstruction} from './ol/render/canvas/Instruction.js';\nimport {strokeInstruction as _ol_render_canvas_Instruction$strokeInstruction} from './ol/render/canvas/Instruction.js';\nimport {beginPathInstruction as _ol_render_canvas_Instruction$beginPathInstruction} from './ol/render/canvas/Instruction.js';\nimport {closePathInstruction as _ol_render_canvas_Instruction$closePathInstruction} from './ol/render/canvas/Instruction.js';\nimport $ol$render$canvas$LineStringBuilder from './ol/render/canvas/LineStringBuilder.js';\nimport $ol$render$canvas$PolygonBuilder from './ol/render/canvas/PolygonBuilder.js';\nimport $ol$render$canvas$TextBuilder from './ol/render/canvas/TextBuilder.js';\nimport {HIT_DETECT_RESOLUTION as _ol_render_canvas_hitdetect$HIT_DETECT_RESOLUTION} from './ol/render/canvas/hitdetect.js';\nimport {createHitDetectionImageData as _ol_render_canvas_hitdetect$createHitDetectionImageData} from './ol/render/canvas/hitdetect.js';\nimport {hitDetect as _ol_render_canvas_hitdetect$hitDetect} from './ol/render/canvas/hitdetect.js';\nimport $ol$proj$Projection from './ol/proj/Projection.js';\nimport {fromCode as _ol_proj_Units$fromCode} from './ol/proj/Units.js';\nimport {METERS_PER_UNIT as _ol_proj_Units$METERS_PER_UNIT} from './ol/proj/Units.js';\nimport {RADIUS as _ol_proj_epsg3857$RADIUS} from './ol/proj/epsg3857.js';\nimport {HALF_SIZE as _ol_proj_epsg3857$HALF_SIZE} from './ol/proj/epsg3857.js';\nimport {EXTENT as _ol_proj_epsg3857$EXTENT} from './ol/proj/epsg3857.js';\nimport {WORLD_EXTENT as _ol_proj_epsg3857$WORLD_EXTENT} from './ol/proj/epsg3857.js';\nimport {MAX_SAFE_Y as _ol_proj_epsg3857$MAX_SAFE_Y} from './ol/proj/epsg3857.js';\nimport {PROJECTIONS as _ol_proj_epsg3857$PROJECTIONS} from './ol/proj/epsg3857.js';\nimport {fromEPSG4326 as _ol_proj_epsg3857$fromEPSG4326} from './ol/proj/epsg3857.js';\nimport {toEPSG4326 as _ol_proj_epsg3857$toEPSG4326} from './ol/proj/epsg3857.js';\nimport {RADIUS as _ol_proj_epsg4326$RADIUS} from './ol/proj/epsg4326.js';\nimport {EXTENT as _ol_proj_epsg4326$EXTENT} from './ol/proj/epsg4326.js';\nimport {METERS_PER_UNIT as _ol_proj_epsg4326$METERS_PER_UNIT} from './ol/proj/epsg4326.js';\nimport {PROJECTIONS as _ol_proj_epsg4326$PROJECTIONS} from './ol/proj/epsg4326.js';\nimport {isRegistered as _ol_proj_proj4$isRegistered} from './ol/proj/proj4.js';\nimport {unregister as _ol_proj_proj4$unregister} from './ol/proj/proj4.js';\nimport {register as _ol_proj_proj4$register} from './ol/proj/proj4.js';\nimport {setEPSGLookup as _ol_proj_proj4$setEPSGLookup} from './ol/proj/proj4.js';\nimport {getEPSGLookup as _ol_proj_proj4$getEPSGLookup} from './ol/proj/proj4.js';\nimport {fromEPSGCode as _ol_proj_proj4$fromEPSGCode} from './ol/proj/proj4.js';\nimport {clear as _ol_proj_projections$clear} from './ol/proj/projections.js';\nimport {get as _ol_proj_projections$get} from './ol/proj/projections.js';\nimport {add as _ol_proj_projections$add} from './ol/proj/projections.js';\nimport {clear as _ol_proj_transforms$clear} from './ol/proj/transforms.js';\nimport {add as _ol_proj_transforms$add} from './ol/proj/transforms.js';\nimport {remove as _ol_proj_transforms$remove} from './ol/proj/transforms.js';\nimport {get as _ol_proj_transforms$get} from './ol/proj/transforms.js';\nimport $ol$layer$Base from './ol/layer/Base.js';\nimport $ol$layer$BaseImage from './ol/layer/BaseImage.js';\nimport $ol$layer$BaseTile from './ol/layer/BaseTile.js';\nimport $ol$layer$BaseVector from './ol/layer/BaseVector.js';\nimport $ol$layer$Graticule from './ol/layer/Graticule.js';\nimport {GroupEvent as _ol_layer_Group$GroupEvent} from './ol/layer/Group.js';\nimport $ol$layer$Group from './ol/layer/Group.js';\nimport $ol$layer$Heatmap from './ol/layer/Heatmap.js';\nimport $ol$layer$Image from './ol/layer/Image.js';\nimport $ol$layer$Layer from './ol/layer/Layer.js';\nimport {inView as _ol_layer_Layer$inView} from './ol/layer/Layer.js';\nimport $ol$layer$Tile from './ol/layer/Tile.js';\nimport $ol$layer$Vector from './ol/layer/Vector.js';\nimport $ol$layer$VectorImage from './ol/layer/VectorImage.js';\nimport $ol$interaction$DoubleClickZoom from './ol/interaction/DoubleClickZoom.js';\nimport {DragAndDropEvent as _ol_interaction_DragAndDrop$DragAndDropEvent} from './ol/interaction/DragAndDrop.js';\nimport $ol$interaction$DragAndDrop from './ol/interaction/DragAndDrop.js';\nimport {DragBoxEvent as _ol_interaction_DragBox$DragBoxEvent} from './ol/interaction/DragBox.js';\nimport $ol$interaction$DragBox from './ol/interaction/DragBox.js';\nimport $ol$interaction$DragPan from './ol/interaction/DragPan.js';\nimport $ol$interaction$DragRotate from './ol/interaction/DragRotate.js';\nimport $ol$interaction$DragRotateAndZoom from './ol/interaction/DragRotateAndZoom.js';\nimport $ol$interaction$DragZoom from './ol/interaction/DragZoom.js';\nimport {DrawEvent as _ol_interaction_Draw$DrawEvent} from './ol/interaction/Draw.js';\nimport $ol$interaction$Draw from './ol/interaction/Draw.js';\nimport {createRegularPolygon as _ol_interaction_Draw$createRegularPolygon} from './ol/interaction/Draw.js';\nimport {createBox as _ol_interaction_Draw$createBox} from './ol/interaction/Draw.js';\nimport {ExtentEvent as _ol_interaction_Extent$ExtentEvent} from './ol/interaction/Extent.js';\nimport $ol$interaction$Extent from './ol/interaction/Extent.js';\nimport $ol$interaction$Interaction from './ol/interaction/Interaction.js';\nimport {pan as _ol_interaction_Interaction$pan} from './ol/interaction/Interaction.js';\nimport {zoomByDelta as _ol_interaction_Interaction$zoomByDelta} from './ol/interaction/Interaction.js';\nimport $ol$interaction$KeyboardPan from './ol/interaction/KeyboardPan.js';\nimport $ol$interaction$KeyboardZoom from './ol/interaction/KeyboardZoom.js';\nimport $ol$interaction$Link from './ol/interaction/Link.js';\nimport {ModifyEvent as _ol_interaction_Modify$ModifyEvent} from './ol/interaction/Modify.js';\nimport $ol$interaction$Modify from './ol/interaction/Modify.js';\nimport $ol$interaction$MouseWheelZoom from './ol/interaction/MouseWheelZoom.js';\nimport $ol$interaction$PinchRotate from './ol/interaction/PinchRotate.js';\nimport $ol$interaction$PinchZoom from './ol/interaction/PinchZoom.js';\nimport $ol$interaction$Pointer from './ol/interaction/Pointer.js';\nimport {centroid as _ol_interaction_Pointer$centroid} from './ol/interaction/Pointer.js';\nimport {SelectEvent as _ol_interaction_Select$SelectEvent} from './ol/interaction/Select.js';\nimport $ol$interaction$Select from './ol/interaction/Select.js';\nimport $ol$interaction$Snap from './ol/interaction/Snap.js';\nimport {TranslateEvent as _ol_interaction_Translate$TranslateEvent} from './ol/interaction/Translate.js';\nimport $ol$interaction$Translate from './ol/interaction/Translate.js';\nimport {defaults as _ol_interaction_defaults$defaults} from './ol/interaction/defaults.js';\nimport $ol$geom$Circle from './ol/geom/Circle.js';\nimport $ol$geom$Geometry from './ol/geom/Geometry.js';\nimport $ol$geom$GeometryCollection from './ol/geom/GeometryCollection.js';\nimport $ol$geom$LineString from './ol/geom/LineString.js';\nimport $ol$geom$LinearRing from './ol/geom/LinearRing.js';\nimport $ol$geom$MultiLineString from './ol/geom/MultiLineString.js';\nimport $ol$geom$MultiPoint from './ol/geom/MultiPoint.js';\nimport $ol$geom$MultiPolygon from './ol/geom/MultiPolygon.js';\nimport $ol$geom$Point from './ol/geom/Point.js';\nimport $ol$geom$Polygon from './ol/geom/Polygon.js';\nimport {circular as _ol_geom_Polygon$circular} from './ol/geom/Polygon.js';\nimport {fromExtent as _ol_geom_Polygon$fromExtent} from './ol/geom/Polygon.js';\nimport {fromCircle as _ol_geom_Polygon$fromCircle} from './ol/geom/Polygon.js';\nimport {makeRegular as _ol_geom_Polygon$makeRegular} from './ol/geom/Polygon.js';\nimport $ol$geom$SimpleGeometry from './ol/geom/SimpleGeometry.js';\nimport {getStrideForLayout as _ol_geom_SimpleGeometry$getStrideForLayout} from './ol/geom/SimpleGeometry.js';\nimport {transformGeom2D as _ol_geom_SimpleGeometry$transformGeom2D} from './ol/geom/SimpleGeometry.js';\nimport {linearRing as _ol_geom_flat_area$linearRing} from './ol/geom/flat/area.js';\nimport {linearRings as _ol_geom_flat_area$linearRings} from './ol/geom/flat/area.js';\nimport {linearRingss as _ol_geom_flat_area$linearRingss} from './ol/geom/flat/area.js';\nimport {linearRingss as _ol_geom_flat_center$linearRingss} from './ol/geom/flat/center.js';\nimport {maxSquaredDelta as _ol_geom_flat_closest$maxSquaredDelta} from './ol/geom/flat/closest.js';\nimport {arrayMaxSquaredDelta as _ol_geom_flat_closest$arrayMaxSquaredDelta} from './ol/geom/flat/closest.js';\nimport {multiArrayMaxSquaredDelta as _ol_geom_flat_closest$multiArrayMaxSquaredDelta} from './ol/geom/flat/closest.js';\nimport {assignClosestPoint as _ol_geom_flat_closest$assignClosestPoint} from './ol/geom/flat/closest.js';\nimport {assignClosestArrayPoint as _ol_geom_flat_closest$assignClosestArrayPoint} from './ol/geom/flat/closest.js';\nimport {assignClosestMultiArrayPoint as _ol_geom_flat_closest$assignClosestMultiArrayPoint} from './ol/geom/flat/closest.js';\nimport {linearRingContainsExtent as _ol_geom_flat_contains$linearRingContainsExtent} from './ol/geom/flat/contains.js';\nimport {linearRingContainsXY as _ol_geom_flat_contains$linearRingContainsXY} from './ol/geom/flat/contains.js';\nimport {linearRingsContainsXY as _ol_geom_flat_contains$linearRingsContainsXY} from './ol/geom/flat/contains.js';\nimport {linearRingssContainsXY as _ol_geom_flat_contains$linearRingssContainsXY} from './ol/geom/flat/contains.js';\nimport {deflateCoordinate as _ol_geom_flat_deflate$deflateCoordinate} from './ol/geom/flat/deflate.js';\nimport {deflateCoordinates as _ol_geom_flat_deflate$deflateCoordinates} from './ol/geom/flat/deflate.js';\nimport {deflateCoordinatesArray as _ol_geom_flat_deflate$deflateCoordinatesArray} from './ol/geom/flat/deflate.js';\nimport {deflateMultiCoordinatesArray as _ol_geom_flat_deflate$deflateMultiCoordinatesArray} from './ol/geom/flat/deflate.js';\nimport {flipXY as _ol_geom_flat_flip$flipXY} from './ol/geom/flat/flip.js';\nimport {greatCircleArc as _ol_geom_flat_geodesic$greatCircleArc} from './ol/geom/flat/geodesic.js';\nimport {meridian as _ol_geom_flat_geodesic$meridian} from './ol/geom/flat/geodesic.js';\nimport {parallel as _ol_geom_flat_geodesic$parallel} from './ol/geom/flat/geodesic.js';\nimport {inflateCoordinates as _ol_geom_flat_inflate$inflateCoordinates} from './ol/geom/flat/inflate.js';\nimport {inflateCoordinatesArray as _ol_geom_flat_inflate$inflateCoordinatesArray} from './ol/geom/flat/inflate.js';\nimport {inflateMultiCoordinatesArray as _ol_geom_flat_inflate$inflateMultiCoordinatesArray} from './ol/geom/flat/inflate.js';\nimport {getInteriorPointOfArray as _ol_geom_flat_interiorpoint$getInteriorPointOfArray} from './ol/geom/flat/interiorpoint.js';\nimport {getInteriorPointsOfMultiArray as _ol_geom_flat_interiorpoint$getInteriorPointsOfMultiArray} from './ol/geom/flat/interiorpoint.js';\nimport {interpolatePoint as _ol_geom_flat_interpolate$interpolatePoint} from './ol/geom/flat/interpolate.js';\nimport {lineStringCoordinateAtM as _ol_geom_flat_interpolate$lineStringCoordinateAtM} from './ol/geom/flat/interpolate.js';\nimport {lineStringsCoordinateAtM as _ol_geom_flat_interpolate$lineStringsCoordinateAtM} from './ol/geom/flat/interpolate.js';\nimport {intersectsLineString as _ol_geom_flat_intersectsextent$intersectsLineString} from './ol/geom/flat/intersectsextent.js';\nimport {intersectsLineStringArray as _ol_geom_flat_intersectsextent$intersectsLineStringArray} from './ol/geom/flat/intersectsextent.js';\nimport {intersectsLinearRing as _ol_geom_flat_intersectsextent$intersectsLinearRing} from './ol/geom/flat/intersectsextent.js';\nimport {intersectsLinearRingArray as _ol_geom_flat_intersectsextent$intersectsLinearRingArray} from './ol/geom/flat/intersectsextent.js';\nimport {intersectsLinearRingMultiArray as _ol_geom_flat_intersectsextent$intersectsLinearRingMultiArray} from './ol/geom/flat/intersectsextent.js';\nimport {lineStringLength as _ol_geom_flat_length$lineStringLength} from './ol/geom/flat/length.js';\nimport {linearRingLength as _ol_geom_flat_length$linearRingLength} from './ol/geom/flat/length.js';\nimport {linearRingIsClockwise as _ol_geom_flat_orient$linearRingIsClockwise} from './ol/geom/flat/orient.js';\nimport {linearRingsAreOriented as _ol_geom_flat_orient$linearRingsAreOriented} from './ol/geom/flat/orient.js';\nimport {linearRingssAreOriented as _ol_geom_flat_orient$linearRingssAreOriented} from './ol/geom/flat/orient.js';\nimport {orientLinearRings as _ol_geom_flat_orient$orientLinearRings} from './ol/geom/flat/orient.js';\nimport {orientLinearRingsArray as _ol_geom_flat_orient$orientLinearRingsArray} from './ol/geom/flat/orient.js';\nimport {inflateEnds as _ol_geom_flat_orient$inflateEnds} from './ol/geom/flat/orient.js';\nimport {coordinates as _ol_geom_flat_reverse$coordinates} from './ol/geom/flat/reverse.js';\nimport {forEach as _ol_geom_flat_segments$forEach} from './ol/geom/flat/segments.js';\nimport {simplifyLineString as _ol_geom_flat_simplify$simplifyLineString} from './ol/geom/flat/simplify.js';\nimport {douglasPeucker as _ol_geom_flat_simplify$douglasPeucker} from './ol/geom/flat/simplify.js';\nimport {douglasPeuckerArray as _ol_geom_flat_simplify$douglasPeuckerArray} from './ol/geom/flat/simplify.js';\nimport {douglasPeuckerMultiArray as _ol_geom_flat_simplify$douglasPeuckerMultiArray} from './ol/geom/flat/simplify.js';\nimport {radialDistance as _ol_geom_flat_simplify$radialDistance} from './ol/geom/flat/simplify.js';\nimport {snap as _ol_geom_flat_simplify$snap} from './ol/geom/flat/simplify.js';\nimport {quantize as _ol_geom_flat_simplify$quantize} from './ol/geom/flat/simplify.js';\nimport {quantizeArray as _ol_geom_flat_simplify$quantizeArray} from './ol/geom/flat/simplify.js';\nimport {quantizeMultiArray as _ol_geom_flat_simplify$quantizeMultiArray} from './ol/geom/flat/simplify.js';\nimport {matchingChunk as _ol_geom_flat_straightchunk$matchingChunk} from './ol/geom/flat/straightchunk.js';\nimport {drawTextOnPath as _ol_geom_flat_textpath$drawTextOnPath} from './ol/geom/flat/textpath.js';\nimport {lineStringIsClosed as _ol_geom_flat_topology$lineStringIsClosed} from './ol/geom/flat/topology.js';\nimport {transform2D as _ol_geom_flat_transform$transform2D} from './ol/geom/flat/transform.js';\nimport {rotate as _ol_geom_flat_transform$rotate} from './ol/geom/flat/transform.js';\nimport {scale as _ol_geom_flat_transform$scale} from './ol/geom/flat/transform.js';\nimport {translate as _ol_geom_flat_transform$translate} from './ol/geom/flat/transform.js';\nimport $ol$format$EsriJSON from './ol/format/EsriJSON.js';\nimport $ol$format$Feature from './ol/format/Feature.js';\nimport {transformGeometryWithOptions as _ol_format_Feature$transformGeometryWithOptions} from './ol/format/Feature.js';\nimport {transformExtentWithOptions as _ol_format_Feature$transformExtentWithOptions} from './ol/format/Feature.js';\nimport $ol$format$GPX from './ol/format/GPX.js';\nimport $ol$format$GeoJSON from './ol/format/GeoJSON.js';\nimport $ol$format$IGC from './ol/format/IGC.js';\nimport $ol$format$JSONFeature from './ol/format/JSONFeature.js';\nimport {getDefaultFillStyle as _ol_format_KML$getDefaultFillStyle} from './ol/format/KML.js';\nimport {getDefaultImageStyle as _ol_format_KML$getDefaultImageStyle} from './ol/format/KML.js';\nimport {getDefaultStrokeStyle as _ol_format_KML$getDefaultStrokeStyle} from './ol/format/KML.js';\nimport {getDefaultTextStyle as _ol_format_KML$getDefaultTextStyle} from './ol/format/KML.js';\nimport {getDefaultStyle as _ol_format_KML$getDefaultStyle} from './ol/format/KML.js';\nimport {getDefaultStyleArray as _ol_format_KML$getDefaultStyleArray} from './ol/format/KML.js';\nimport $ol$format$KML from './ol/format/KML.js';\nimport {readFlatCoordinates as _ol_format_KML$readFlatCoordinates} from './ol/format/KML.js';\nimport $ol$format$MVT from './ol/format/MVT.js';\nimport $ol$format$OSMXML from './ol/format/OSMXML.js';\nimport $ol$format$OWS from './ol/format/OWS.js';\nimport $ol$format$Polyline from './ol/format/Polyline.js';\nimport {encodeDeltas as _ol_format_Polyline$encodeDeltas} from './ol/format/Polyline.js';\nimport {decodeDeltas as _ol_format_Polyline$decodeDeltas} from './ol/format/Polyline.js';\nimport {encodeFloats as _ol_format_Polyline$encodeFloats} from './ol/format/Polyline.js';\nimport {decodeFloats as _ol_format_Polyline$decodeFloats} from './ol/format/Polyline.js';\nimport {encodeSignedIntegers as _ol_format_Polyline$encodeSignedIntegers} from './ol/format/Polyline.js';\nimport {decodeSignedIntegers as _ol_format_Polyline$decodeSignedIntegers} from './ol/format/Polyline.js';\nimport {encodeUnsignedIntegers as _ol_format_Polyline$encodeUnsignedIntegers} from './ol/format/Polyline.js';\nimport {decodeUnsignedIntegers as _ol_format_Polyline$decodeUnsignedIntegers} from './ol/format/Polyline.js';\nimport {encodeUnsignedInteger as _ol_format_Polyline$encodeUnsignedInteger} from './ol/format/Polyline.js';\nimport $ol$format$TextFeature from './ol/format/TextFeature.js';\nimport $ol$format$TopoJSON from './ol/format/TopoJSON.js';\nimport $ol$format$WFS from './ol/format/WFS.js';\nimport {writeFilter as _ol_format_WFS$writeFilter} from './ol/format/WFS.js';\nimport $ol$format$WMSGetFeatureInfo from './ol/format/WMSGetFeatureInfo.js';\nimport {readHref as _ol_format_xlink$readHref} from './ol/format/xlink.js';\nimport {readBoolean as _ol_format_xsd$readBoolean} from './ol/format/xsd.js';\nimport {readBooleanString as _ol_format_xsd$readBooleanString} from './ol/format/xsd.js';\nimport {readDateTime as _ol_format_xsd$readDateTime} from './ol/format/xsd.js';\nimport {readDecimal as _ol_format_xsd$readDecimal} from './ol/format/xsd.js';\nimport {readDecimalString as _ol_format_xsd$readDecimalString} from './ol/format/xsd.js';\nimport {readPositiveInteger as _ol_format_xsd$readPositiveInteger} from './ol/format/xsd.js';\nimport {readNonNegativeIntegerString as _ol_format_xsd$readNonNegativeIntegerString} from './ol/format/xsd.js';\nimport {readString as _ol_format_xsd$readString} from './ol/format/xsd.js';\nimport {writeBooleanTextNode as _ol_format_xsd$writeBooleanTextNode} from './ol/format/xsd.js';\nimport {writeCDATASection as _ol_format_xsd$writeCDATASection} from './ol/format/xsd.js';\nimport {writeDateTimeTextNode as _ol_format_xsd$writeDateTimeTextNode} from './ol/format/xsd.js';\nimport {writeDecimalTextNode as _ol_format_xsd$writeDecimalTextNode} from './ol/format/xsd.js';\nimport {writeNonNegativeIntegerTextNode as _ol_format_xsd$writeNonNegativeIntegerTextNode} from './ol/format/xsd.js';\nimport {writeStringTextNode as _ol_format_xsd$writeStringTextNode} from './ol/format/xsd.js';\nimport $ol$events$Event from './ol/events/Event.js';\nimport {stopPropagation as _ol_events_Event$stopPropagation} from './ol/events/Event.js';\nimport {preventDefault as _ol_events_Event$preventDefault} from './ol/events/Event.js';\nimport $ol$events$Target from './ol/events/Target.js';\nimport {all as _ol_events_condition$all} from './ol/events/condition.js';\nimport {altKeyOnly as _ol_events_condition$altKeyOnly} from './ol/events/condition.js';\nimport {altShiftKeysOnly as _ol_events_condition$altShiftKeysOnly} from './ol/events/condition.js';\nimport {focus as _ol_events_condition$focus} from './ol/events/condition.js';\nimport {focusWithTabindex as _ol_events_condition$focusWithTabindex} from './ol/events/condition.js';\nimport {always as _ol_events_condition$always} from './ol/events/condition.js';\nimport {click as _ol_events_condition$click} from './ol/events/condition.js';\nimport {mouseActionButton as _ol_events_condition$mouseActionButton} from './ol/events/condition.js';\nimport {never as _ol_events_condition$never} from './ol/events/condition.js';\nimport {pointerMove as _ol_events_condition$pointerMove} from './ol/events/condition.js';\nimport {singleClick as _ol_events_condition$singleClick} from './ol/events/condition.js';\nimport {doubleClick as _ol_events_condition$doubleClick} from './ol/events/condition.js';\nimport {noModifierKeys as _ol_events_condition$noModifierKeys} from './ol/events/condition.js';\nimport {platformModifierKeyOnly as _ol_events_condition$platformModifierKeyOnly} from './ol/events/condition.js';\nimport {shiftKeyOnly as _ol_events_condition$shiftKeyOnly} from './ol/events/condition.js';\nimport {targetNotEditable as _ol_events_condition$targetNotEditable} from './ol/events/condition.js';\nimport {mouseOnly as _ol_events_condition$mouseOnly} from './ol/events/condition.js';\nimport {touchOnly as _ol_events_condition$touchOnly} from './ol/events/condition.js';\nimport {penOnly as _ol_events_condition$penOnly} from './ol/events/condition.js';\nimport {primaryAction as _ol_events_condition$primaryAction} from './ol/events/condition.js';\nimport $ol$control$Attribution from './ol/control/Attribution.js';\nimport $ol$control$Control from './ol/control/Control.js';\nimport $ol$control$FullScreen from './ol/control/FullScreen.js';\nimport $ol$control$MousePosition from './ol/control/MousePosition.js';\nimport $ol$control$OverviewMap from './ol/control/OverviewMap.js';\nimport $ol$control$Rotate from './ol/control/Rotate.js';\nimport $ol$control$ScaleLine from './ol/control/ScaleLine.js';\nimport $ol$control$Zoom from './ol/control/Zoom.js';\nimport $ol$control$ZoomSlider from './ol/control/ZoomSlider.js';\nimport $ol$control$ZoomToExtent from './ol/control/ZoomToExtent.js';\nimport {defaults as _ol_control_defaults$defaults} from './ol/control/defaults.js';\n\nvar ol = {};\nol.AssertionError = $ol$AssertionError;\nol.Collection = $ol$Collection;\nol.Collection.CollectionEvent = _ol_Collection$CollectionEvent;\nol.DataTile = $ol$DataTile;\nol.DataTile.asArrayLike = _ol_DataTile$asArrayLike;\nol.DataTile.asImageLike = _ol_DataTile$asImageLike;\nol.DataTile.toArray = _ol_DataTile$toArray;\nol.Disposable = $ol$Disposable;\nol.Feature = $ol$Feature;\nol.Feature.createStyleFunction = _ol_Feature$createStyleFunction;\nol.Geolocation = $ol$Geolocation;\nol.Geolocation.GeolocationError = _ol_Geolocation$GeolocationError;\nol.Image = $ol$Image;\nol.Image.listenImage = _ol_Image$listenImage;\nol.ImageBase = $ol$ImageBase;\nol.ImageCanvas = $ol$ImageCanvas;\nol.ImageTile = $ol$ImageTile;\nol.Kinetic = $ol$Kinetic;\nol.Map = $ol$Map;\nol.MapBrowserEvent = $ol$MapBrowserEvent;\nol.MapBrowserEventHandler = $ol$MapBrowserEventHandler;\nol.MapEvent = $ol$MapEvent;\nol.Object = $ol$Object;\nol.Object.ObjectEvent = _ol_Object$ObjectEvent;\nol.Observable = $ol$Observable;\nol.Observable.unByKey = _ol_Observable$unByKey;\nol.Overlay = $ol$Overlay;\nol.Tile = $ol$Tile;\nol.TileCache = $ol$TileCache;\nol.TileQueue = $ol$TileQueue;\nol.TileQueue.getTilePriority = _ol_TileQueue$getTilePriority;\nol.TileRange = $ol$TileRange;\nol.TileRange.createOrUpdate = _ol_TileRange$createOrUpdate;\nol.VectorRenderTile = $ol$VectorRenderTile;\nol.View = $ol$View;\nol.View.createCenterConstraint = _ol_View$createCenterConstraint;\nol.View.createResolutionConstraint = _ol_View$createResolutionConstraint;\nol.View.createRotationConstraint = _ol_View$createRotationConstraint;\nol.View.isNoopAnimation = _ol_View$isNoopAnimation;\nol.array = {};\nol.array.ascending = _ol_array$ascending;\nol.array.binarySearch = _ol_array$binarySearch;\nol.array.equals = _ol_array$equals;\nol.array.extend = _ol_array$extend;\nol.array.isSorted = _ol_array$isSorted;\nol.array.linearFindNearest = _ol_array$linearFindNearest;\nol.array.remove = _ol_array$remove;\nol.array.reverseSubArray = _ol_array$reverseSubArray;\nol.array.stableSort = _ol_array$stableSort;\nol.asserts = {};\nol.asserts.assert = _ol_asserts$assert;\nol.centerconstraint = {};\nol.centerconstraint.createExtent = _ol_centerconstraint$createExtent;\nol.centerconstraint.none = _ol_centerconstraint$none;\nol.color = {};\nol.color.asArray = _ol_color$asArray;\nol.color.asString = _ol_color$asString;\nol.color.fromString = _ol_color$fromString;\nol.color.isStringColor = _ol_color$isStringColor;\nol.color.normalize = _ol_color$normalize;\nol.color.toString = _ol_color$toString;\nol.colorlike = {};\nol.colorlike.asColorLike = _ol_colorlike$asColorLike;\nol.console = {};\nol.console.error = _ol_console$error;\nol.console.log = _ol_console$log;\nol.console.setLevel = _ol_console$setLevel;\nol.console.warn = _ol_console$warn;\nol.control = {};\nol.control.Attribution = $ol$control$Attribution;\nol.control.Control = $ol$control$Control;\nol.control.FullScreen = $ol$control$FullScreen;\nol.control.MousePosition = $ol$control$MousePosition;\nol.control.OverviewMap = $ol$control$OverviewMap;\nol.control.Rotate = $ol$control$Rotate;\nol.control.ScaleLine = $ol$control$ScaleLine;\nol.control.Zoom = $ol$control$Zoom;\nol.control.ZoomSlider = $ol$control$ZoomSlider;\nol.control.ZoomToExtent = $ol$control$ZoomToExtent;\nol.control.defaults = {};\nol.control.defaults.defaults = _ol_control_defaults$defaults;\nol.coordinate = {};\nol.coordinate.add = _ol_coordinate$add;\nol.coordinate.closestOnCircle = _ol_coordinate$closestOnCircle;\nol.coordinate.closestOnSegment = _ol_coordinate$closestOnSegment;\nol.coordinate.createStringXY = _ol_coordinate$createStringXY;\nol.coordinate.degreesToStringHDMS = _ol_coordinate$degreesToStringHDMS;\nol.coordinate.distance = _ol_coordinate$distance;\nol.coordinate.equals = _ol_coordinate$equals;\nol.coordinate.format = _ol_coordinate$format;\nol.coordinate.getWorldsAway = _ol_coordinate$getWorldsAway;\nol.coordinate.rotate = _ol_coordinate$rotate;\nol.coordinate.scale = _ol_coordinate$scale;\nol.coordinate.squaredDistance = _ol_coordinate$squaredDistance;\nol.coordinate.squaredDistanceToSegment = _ol_coordinate$squaredDistanceToSegment;\nol.coordinate.toStringHDMS = _ol_coordinate$toStringHDMS;\nol.coordinate.toStringXY = _ol_coordinate$toStringXY;\nol.coordinate.wrapX = _ol_coordinate$wrapX;\nol.css = {};\nol.css.CLASS_COLLAPSED = _ol_css$CLASS_COLLAPSED;\nol.css.CLASS_CONTROL = _ol_css$CLASS_CONTROL;\nol.css.CLASS_HIDDEN = _ol_css$CLASS_HIDDEN;\nol.css.CLASS_SELECTABLE = _ol_css$CLASS_SELECTABLE;\nol.css.CLASS_UNSELECTABLE = _ol_css$CLASS_UNSELECTABLE;\nol.css.CLASS_UNSUPPORTED = _ol_css$CLASS_UNSUPPORTED;\nol.css.getFontParameters = _ol_css$getFontParameters;\nol.dom = {};\nol.dom.createCanvasContext2D = _ol_dom$createCanvasContext2D;\nol.dom.outerHeight = _ol_dom$outerHeight;\nol.dom.outerWidth = _ol_dom$outerWidth;\nol.dom.releaseCanvas = _ol_dom$releaseCanvas;\nol.dom.removeChildren = _ol_dom$removeChildren;\nol.dom.removeNode = _ol_dom$removeNode;\nol.dom.replaceChildren = _ol_dom$replaceChildren;\nol.dom.replaceNode = _ol_dom$replaceNode;\nol.easing = {};\nol.easing.easeIn = _ol_easing$easeIn;\nol.easing.easeOut = _ol_easing$easeOut;\nol.easing.inAndOut = _ol_easing$inAndOut;\nol.easing.linear = _ol_easing$linear;\nol.easing.upAndDown = _ol_easing$upAndDown;\nol.events = {};\nol.events.Event = $ol$events$Event;\nol.events.Event.preventDefault = _ol_events_Event$preventDefault;\nol.events.Event.stopPropagation = _ol_events_Event$stopPropagation;\nol.events.Target = $ol$events$Target;\nol.events.condition = {};\nol.events.condition.all = _ol_events_condition$all;\nol.events.condition.altKeyOnly = _ol_events_condition$altKeyOnly;\nol.events.condition.altShiftKeysOnly = _ol_events_condition$altShiftKeysOnly;\nol.events.condition.always = _ol_events_condition$always;\nol.events.condition.click = _ol_events_condition$click;\nol.events.condition.doubleClick = _ol_events_condition$doubleClick;\nol.events.condition.focus = _ol_events_condition$focus;\nol.events.condition.focusWithTabindex = _ol_events_condition$focusWithTabindex;\nol.events.condition.mouseActionButton = _ol_events_condition$mouseActionButton;\nol.events.condition.mouseOnly = _ol_events_condition$mouseOnly;\nol.events.condition.never = _ol_events_condition$never;\nol.events.condition.noModifierKeys = _ol_events_condition$noModifierKeys;\nol.events.condition.penOnly = _ol_events_condition$penOnly;\nol.events.condition.platformModifierKeyOnly = _ol_events_condition$platformModifierKeyOnly;\nol.events.condition.pointerMove = _ol_events_condition$pointerMove;\nol.events.condition.primaryAction = _ol_events_condition$primaryAction;\nol.events.condition.shiftKeyOnly = _ol_events_condition$shiftKeyOnly;\nol.events.condition.singleClick = _ol_events_condition$singleClick;\nol.events.condition.targetNotEditable = _ol_events_condition$targetNotEditable;\nol.events.condition.touchOnly = _ol_events_condition$touchOnly;\nol.events.listen = _ol_events$listen;\nol.events.listenOnce = _ol_events$listenOnce;\nol.events.unlistenByKey = _ol_events$unlistenByKey;\nol.extent = {};\nol.extent.applyTransform = _ol_extent$applyTransform;\nol.extent.approximatelyEquals = _ol_extent$approximatelyEquals;\nol.extent.boundingExtent = _ol_extent$boundingExtent;\nol.extent.buffer = _ol_extent$buffer;\nol.extent.clone = _ol_extent$clone;\nol.extent.closestSquaredDistanceXY = _ol_extent$closestSquaredDistanceXY;\nol.extent.containsCoordinate = _ol_extent$containsCoordinate;\nol.extent.containsExtent = _ol_extent$containsExtent;\nol.extent.containsXY = _ol_extent$containsXY;\nol.extent.coordinateRelationship = _ol_extent$coordinateRelationship;\nol.extent.createEmpty = _ol_extent$createEmpty;\nol.extent.createOrUpdate = _ol_extent$createOrUpdate;\nol.extent.createOrUpdateEmpty = _ol_extent$createOrUpdateEmpty;\nol.extent.createOrUpdateFromCoordinate = _ol_extent$createOrUpdateFromCoordinate;\nol.extent.createOrUpdateFromCoordinates = _ol_extent$createOrUpdateFromCoordinates;\nol.extent.createOrUpdateFromFlatCoordinates = _ol_extent$createOrUpdateFromFlatCoordinates;\nol.extent.createOrUpdateFromRings = _ol_extent$createOrUpdateFromRings;\nol.extent.equals = _ol_extent$equals;\nol.extent.extend = _ol_extent$extend;\nol.extent.extendCoordinate = _ol_extent$extendCoordinate;\nol.extent.extendCoordinates = _ol_extent$extendCoordinates;\nol.extent.extendFlatCoordinates = _ol_extent$extendFlatCoordinates;\nol.extent.extendRings = _ol_extent$extendRings;\nol.extent.extendXY = _ol_extent$extendXY;\nol.extent.forEachCorner = _ol_extent$forEachCorner;\nol.extent.getArea = _ol_extent$getArea;\nol.extent.getBottomLeft = _ol_extent$getBottomLeft;\nol.extent.getBottomRight = _ol_extent$getBottomRight;\nol.extent.getCenter = _ol_extent$getCenter;\nol.extent.getCorner = _ol_extent$getCorner;\nol.extent.getEnlargedArea = _ol_extent$getEnlargedArea;\nol.extent.getForViewAndSize = _ol_extent$getForViewAndSize;\nol.extent.getHeight = _ol_extent$getHeight;\nol.extent.getIntersection = _ol_extent$getIntersection;\nol.extent.getIntersectionArea = _ol_extent$getIntersectionArea;\nol.extent.getMargin = _ol_extent$getMargin;\nol.extent.getRotatedViewport = _ol_extent$getRotatedViewport;\nol.extent.getSize = _ol_extent$getSize;\nol.extent.getTopLeft = _ol_extent$getTopLeft;\nol.extent.getTopRight = _ol_extent$getTopRight;\nol.extent.getWidth = _ol_extent$getWidth;\nol.extent.intersects = _ol_extent$intersects;\nol.extent.intersectsSegment = _ol_extent$intersectsSegment;\nol.extent.isEmpty = _ol_extent$isEmpty;\nol.extent.returnOrUpdate = _ol_extent$returnOrUpdate;\nol.extent.scaleFromCenter = _ol_extent$scaleFromCenter;\nol.extent.wrapAndSliceX = _ol_extent$wrapAndSliceX;\nol.extent.wrapX = _ol_extent$wrapX;\nol.featureloader = {};\nol.featureloader.loadFeaturesXhr = _ol_featureloader$loadFeaturesXhr;\nol.featureloader.setWithCredentials = _ol_featureloader$setWithCredentials;\nol.featureloader.xhr = _ol_featureloader$xhr;\nol.format = {};\nol.format.EsriJSON = $ol$format$EsriJSON;\nol.format.Feature = $ol$format$Feature;\nol.format.Feature.transformExtentWithOptions = _ol_format_Feature$transformExtentWithOptions;\nol.format.Feature.transformGeometryWithOptions = _ol_format_Feature$transformGeometryWithOptions;\nol.format.GPX = $ol$format$GPX;\nol.format.GeoJSON = $ol$format$GeoJSON;\nol.format.IGC = $ol$format$IGC;\nol.format.JSONFeature = $ol$format$JSONFeature;\nol.format.KML = $ol$format$KML;\nol.format.KML.getDefaultFillStyle = _ol_format_KML$getDefaultFillStyle;\nol.format.KML.getDefaultImageStyle = _ol_format_KML$getDefaultImageStyle;\nol.format.KML.getDefaultStrokeStyle = _ol_format_KML$getDefaultStrokeStyle;\nol.format.KML.getDefaultStyle = _ol_format_KML$getDefaultStyle;\nol.format.KML.getDefaultStyleArray = _ol_format_KML$getDefaultStyleArray;\nol.format.KML.getDefaultTextStyle = _ol_format_KML$getDefaultTextStyle;\nol.format.KML.readFlatCoordinates = _ol_format_KML$readFlatCoordinates;\nol.format.MVT = $ol$format$MVT;\nol.format.OSMXML = $ol$format$OSMXML;\nol.format.OWS = $ol$format$OWS;\nol.format.Polyline = $ol$format$Polyline;\nol.format.Polyline.decodeDeltas = _ol_format_Polyline$decodeDeltas;\nol.format.Polyline.decodeFloats = _ol_format_Polyline$decodeFloats;\nol.format.Polyline.decodeSignedIntegers = _ol_format_Polyline$decodeSignedIntegers;\nol.format.Polyline.decodeUnsignedIntegers = _ol_format_Polyline$decodeUnsignedIntegers;\nol.format.Polyline.encodeDeltas = _ol_format_Polyline$encodeDeltas;\nol.format.Polyline.encodeFloats = _ol_format_Polyline$encodeFloats;\nol.format.Polyline.encodeSignedIntegers = _ol_format_Polyline$encodeSignedIntegers;\nol.format.Polyline.encodeUnsignedInteger = _ol_format_Polyline$encodeUnsignedInteger;\nol.format.Polyline.encodeUnsignedIntegers = _ol_format_Polyline$encodeUnsignedIntegers;\nol.format.TextFeature = $ol$format$TextFeature;\nol.format.TopoJSON = $ol$format$TopoJSON;\nol.format.WFS = $ol$format$WFS;\nol.format.WFS.writeFilter = _ol_format_WFS$writeFilter;\nol.format.WMSGetFeatureInfo = $ol$format$WMSGetFeatureInfo;\nol.format.xlink = {};\nol.format.xlink.readHref = _ol_format_xlink$readHref;\nol.format.xsd = {};\nol.format.xsd.readBoolean = _ol_format_xsd$readBoolean;\nol.format.xsd.readBooleanString = _ol_format_xsd$readBooleanString;\nol.format.xsd.readDateTime = _ol_format_xsd$readDateTime;\nol.format.xsd.readDecimal = _ol_format_xsd$readDecimal;\nol.format.xsd.readDecimalString = _ol_format_xsd$readDecimalString;\nol.format.xsd.readNonNegativeIntegerString = _ol_format_xsd$readNonNegativeIntegerString;\nol.format.xsd.readPositiveInteger = _ol_format_xsd$readPositiveInteger;\nol.format.xsd.readString = _ol_format_xsd$readString;\nol.format.xsd.writeBooleanTextNode = _ol_format_xsd$writeBooleanTextNode;\nol.format.xsd.writeCDATASection = _ol_format_xsd$writeCDATASection;\nol.format.xsd.writeDateTimeTextNode = _ol_format_xsd$writeDateTimeTextNode;\nol.format.xsd.writeDecimalTextNode = _ol_format_xsd$writeDecimalTextNode;\nol.format.xsd.writeNonNegativeIntegerTextNode = _ol_format_xsd$writeNonNegativeIntegerTextNode;\nol.format.xsd.writeStringTextNode = _ol_format_xsd$writeStringTextNode;\nol.functions = {};\nol.functions.FALSE = _ol_functions$FALSE;\nol.functions.TRUE = _ol_functions$TRUE;\nol.functions.VOID = _ol_functions$VOID;\nol.functions.memoizeOne = _ol_functions$memoizeOne;\nol.functions.toPromise = _ol_functions$toPromise;\nol.geom = {};\nol.geom.Circle = $ol$geom$Circle;\nol.geom.Geometry = $ol$geom$Geometry;\nol.geom.GeometryCollection = $ol$geom$GeometryCollection;\nol.geom.LineString = $ol$geom$LineString;\nol.geom.LinearRing = $ol$geom$LinearRing;\nol.geom.MultiLineString = $ol$geom$MultiLineString;\nol.geom.MultiPoint = $ol$geom$MultiPoint;\nol.geom.MultiPolygon = $ol$geom$MultiPolygon;\nol.geom.Point = $ol$geom$Point;\nol.geom.Polygon = $ol$geom$Polygon;\nol.geom.Polygon.circular = _ol_geom_Polygon$circular;\nol.geom.Polygon.fromCircle = _ol_geom_Polygon$fromCircle;\nol.geom.Polygon.fromExtent = _ol_geom_Polygon$fromExtent;\nol.geom.Polygon.makeRegular = _ol_geom_Polygon$makeRegular;\nol.geom.SimpleGeometry = $ol$geom$SimpleGeometry;\nol.geom.SimpleGeometry.getStrideForLayout = _ol_geom_SimpleGeometry$getStrideForLayout;\nol.geom.SimpleGeometry.transformGeom2D = _ol_geom_SimpleGeometry$transformGeom2D;\nol.geom.flat = {};\nol.geom.flat.area = {};\nol.geom.flat.area.linearRing = _ol_geom_flat_area$linearRing;\nol.geom.flat.area.linearRings = _ol_geom_flat_area$linearRings;\nol.geom.flat.area.linearRingss = _ol_geom_flat_area$linearRingss;\nol.geom.flat.center = {};\nol.geom.flat.center.linearRingss = _ol_geom_flat_center$linearRingss;\nol.geom.flat.closest = {};\nol.geom.flat.closest.arrayMaxSquaredDelta = _ol_geom_flat_closest$arrayMaxSquaredDelta;\nol.geom.flat.closest.assignClosestArrayPoint = _ol_geom_flat_closest$assignClosestArrayPoint;\nol.geom.flat.closest.assignClosestMultiArrayPoint = _ol_geom_flat_closest$assignClosestMultiArrayPoint;\nol.geom.flat.closest.assignClosestPoint = _ol_geom_flat_closest$assignClosestPoint;\nol.geom.flat.closest.maxSquaredDelta = _ol_geom_flat_closest$maxSquaredDelta;\nol.geom.flat.closest.multiArrayMaxSquaredDelta = _ol_geom_flat_closest$multiArrayMaxSquaredDelta;\nol.geom.flat.contains = {};\nol.geom.flat.contains.linearRingContainsExtent = _ol_geom_flat_contains$linearRingContainsExtent;\nol.geom.flat.contains.linearRingContainsXY = _ol_geom_flat_contains$linearRingContainsXY;\nol.geom.flat.contains.linearRingsContainsXY = _ol_geom_flat_contains$linearRingsContainsXY;\nol.geom.flat.contains.linearRingssContainsXY = _ol_geom_flat_contains$linearRingssContainsXY;\nol.geom.flat.deflate = {};\nol.geom.flat.deflate.deflateCoordinate = _ol_geom_flat_deflate$deflateCoordinate;\nol.geom.flat.deflate.deflateCoordinates = _ol_geom_flat_deflate$deflateCoordinates;\nol.geom.flat.deflate.deflateCoordinatesArray = _ol_geom_flat_deflate$deflateCoordinatesArray;\nol.geom.flat.deflate.deflateMultiCoordinatesArray = _ol_geom_flat_deflate$deflateMultiCoordinatesArray;\nol.geom.flat.flip = {};\nol.geom.flat.flip.flipXY = _ol_geom_flat_flip$flipXY;\nol.geom.flat.geodesic = {};\nol.geom.flat.geodesic.greatCircleArc = _ol_geom_flat_geodesic$greatCircleArc;\nol.geom.flat.geodesic.meridian = _ol_geom_flat_geodesic$meridian;\nol.geom.flat.geodesic.parallel = _ol_geom_flat_geodesic$parallel;\nol.geom.flat.inflate = {};\nol.geom.flat.inflate.inflateCoordinates = _ol_geom_flat_inflate$inflateCoordinates;\nol.geom.flat.inflate.inflateCoordinatesArray = _ol_geom_flat_inflate$inflateCoordinatesArray;\nol.geom.flat.inflate.inflateMultiCoordinatesArray = _ol_geom_flat_inflate$inflateMultiCoordinatesArray;\nol.geom.flat.interiorpoint = {};\nol.geom.flat.interiorpoint.getInteriorPointOfArray = _ol_geom_flat_interiorpoint$getInteriorPointOfArray;\nol.geom.flat.interiorpoint.getInteriorPointsOfMultiArray = _ol_geom_flat_interiorpoint$getInteriorPointsOfMultiArray;\nol.geom.flat.interpolate = {};\nol.geom.flat.interpolate.interpolatePoint = _ol_geom_flat_interpolate$interpolatePoint;\nol.geom.flat.interpolate.lineStringCoordinateAtM = _ol_geom_flat_interpolate$lineStringCoordinateAtM;\nol.geom.flat.interpolate.lineStringsCoordinateAtM = _ol_geom_flat_interpolate$lineStringsCoordinateAtM;\nol.geom.flat.intersectsextent = {};\nol.geom.flat.intersectsextent.intersectsLineString = _ol_geom_flat_intersectsextent$intersectsLineString;\nol.geom.flat.intersectsextent.intersectsLineStringArray = _ol_geom_flat_intersectsextent$intersectsLineStringArray;\nol.geom.flat.intersectsextent.intersectsLinearRing = _ol_geom_flat_intersectsextent$intersectsLinearRing;\nol.geom.flat.intersectsextent.intersectsLinearRingArray = _ol_geom_flat_intersectsextent$intersectsLinearRingArray;\nol.geom.flat.intersectsextent.intersectsLinearRingMultiArray = _ol_geom_flat_intersectsextent$intersectsLinearRingMultiArray;\nol.geom.flat.length = {};\nol.geom.flat.length.lineStringLength = _ol_geom_flat_length$lineStringLength;\nol.geom.flat.length.linearRingLength = _ol_geom_flat_length$linearRingLength;\nol.geom.flat.orient = {};\nol.geom.flat.orient.inflateEnds = _ol_geom_flat_orient$inflateEnds;\nol.geom.flat.orient.linearRingIsClockwise = _ol_geom_flat_orient$linearRingIsClockwise;\nol.geom.flat.orient.linearRingsAreOriented = _ol_geom_flat_orient$linearRingsAreOriented;\nol.geom.flat.orient.linearRingssAreOriented = _ol_geom_flat_orient$linearRingssAreOriented;\nol.geom.flat.orient.orientLinearRings = _ol_geom_flat_orient$orientLinearRings;\nol.geom.flat.orient.orientLinearRingsArray = _ol_geom_flat_orient$orientLinearRingsArray;\nol.geom.flat.reverse = {};\nol.geom.flat.reverse.coordinates = _ol_geom_flat_reverse$coordinates;\nol.geom.flat.segments = {};\nol.geom.flat.segments.forEach = _ol_geom_flat_segments$forEach;\nol.geom.flat.simplify = {};\nol.geom.flat.simplify.douglasPeucker = _ol_geom_flat_simplify$douglasPeucker;\nol.geom.flat.simplify.douglasPeuckerArray = _ol_geom_flat_simplify$douglasPeuckerArray;\nol.geom.flat.simplify.douglasPeuckerMultiArray = _ol_geom_flat_simplify$douglasPeuckerMultiArray;\nol.geom.flat.simplify.quantize = _ol_geom_flat_simplify$quantize;\nol.geom.flat.simplify.quantizeArray = _ol_geom_flat_simplify$quantizeArray;\nol.geom.flat.simplify.quantizeMultiArray = _ol_geom_flat_simplify$quantizeMultiArray;\nol.geom.flat.simplify.radialDistance = _ol_geom_flat_simplify$radialDistance;\nol.geom.flat.simplify.simplifyLineString = _ol_geom_flat_simplify$simplifyLineString;\nol.geom.flat.simplify.snap = _ol_geom_flat_simplify$snap;\nol.geom.flat.straightchunk = {};\nol.geom.flat.straightchunk.matchingChunk = _ol_geom_flat_straightchunk$matchingChunk;\nol.geom.flat.textpath = {};\nol.geom.flat.textpath.drawTextOnPath = _ol_geom_flat_textpath$drawTextOnPath;\nol.geom.flat.topology = {};\nol.geom.flat.topology.lineStringIsClosed = _ol_geom_flat_topology$lineStringIsClosed;\nol.geom.flat.transform = {};\nol.geom.flat.transform.rotate = _ol_geom_flat_transform$rotate;\nol.geom.flat.transform.scale = _ol_geom_flat_transform$scale;\nol.geom.flat.transform.transform2D = _ol_geom_flat_transform$transform2D;\nol.geom.flat.transform.translate = _ol_geom_flat_transform$translate;\nol.has = {};\nol.has.DEVICE_PIXEL_RATIO = _ol_has$DEVICE_PIXEL_RATIO;\nol.has.FIREFOX = _ol_has$FIREFOX;\nol.has.IMAGE_DECODE = _ol_has$IMAGE_DECODE;\nol.has.MAC = _ol_has$MAC;\nol.has.PASSIVE_EVENT_LISTENERS = _ol_has$PASSIVE_EVENT_LISTENERS;\nol.has.SAFARI = _ol_has$SAFARI;\nol.has.SAFARI_BUG_237906 = _ol_has$SAFARI_BUG_237906;\nol.has.WEBKIT = _ol_has$WEBKIT;\nol.has.WORKER_OFFSCREEN_CANVAS = _ol_has$WORKER_OFFSCREEN_CANVAS;\nol.interaction = {};\nol.interaction.DoubleClickZoom = $ol$interaction$DoubleClickZoom;\nol.interaction.DragAndDrop = $ol$interaction$DragAndDrop;\nol.interaction.DragAndDrop.DragAndDropEvent = _ol_interaction_DragAndDrop$DragAndDropEvent;\nol.interaction.DragBox = $ol$interaction$DragBox;\nol.interaction.DragBox.DragBoxEvent = _ol_interaction_DragBox$DragBoxEvent;\nol.interaction.DragPan = $ol$interaction$DragPan;\nol.interaction.DragRotate = $ol$interaction$DragRotate;\nol.interaction.DragRotateAndZoom = $ol$interaction$DragRotateAndZoom;\nol.interaction.DragZoom = $ol$interaction$DragZoom;\nol.interaction.Draw = $ol$interaction$Draw;\nol.interaction.Draw.DrawEvent = _ol_interaction_Draw$DrawEvent;\nol.interaction.Draw.createBox = _ol_interaction_Draw$createBox;\nol.interaction.Draw.createRegularPolygon = _ol_interaction_Draw$createRegularPolygon;\nol.interaction.Extent = $ol$interaction$Extent;\nol.interaction.Extent.ExtentEvent = _ol_interaction_Extent$ExtentEvent;\nol.interaction.Interaction = $ol$interaction$Interaction;\nol.interaction.Interaction.pan = _ol_interaction_Interaction$pan;\nol.interaction.Interaction.zoomByDelta = _ol_interaction_Interaction$zoomByDelta;\nol.interaction.KeyboardPan = $ol$interaction$KeyboardPan;\nol.interaction.KeyboardZoom = $ol$interaction$KeyboardZoom;\nol.interaction.Link = $ol$interaction$Link;\nol.interaction.Modify = $ol$interaction$Modify;\nol.interaction.Modify.ModifyEvent = _ol_interaction_Modify$ModifyEvent;\nol.interaction.MouseWheelZoom = $ol$interaction$MouseWheelZoom;\nol.interaction.PinchRotate = $ol$interaction$PinchRotate;\nol.interaction.PinchZoom = $ol$interaction$PinchZoom;\nol.interaction.Pointer = $ol$interaction$Pointer;\nol.interaction.Pointer.centroid = _ol_interaction_Pointer$centroid;\nol.interaction.Select = $ol$interaction$Select;\nol.interaction.Select.SelectEvent = _ol_interaction_Select$SelectEvent;\nol.interaction.Snap = $ol$interaction$Snap;\nol.interaction.Translate = $ol$interaction$Translate;\nol.interaction.Translate.TranslateEvent = _ol_interaction_Translate$TranslateEvent;\nol.interaction.defaults = {};\nol.interaction.defaults.defaults = _ol_interaction_defaults$defaults;\nol.layer = {};\nol.layer.Base = $ol$layer$Base;\nol.layer.BaseImage = $ol$layer$BaseImage;\nol.layer.BaseTile = $ol$layer$BaseTile;\nol.layer.BaseVector = $ol$layer$BaseVector;\nol.layer.Graticule = $ol$layer$Graticule;\nol.layer.Group = $ol$layer$Group;\nol.layer.Group.GroupEvent = _ol_layer_Group$GroupEvent;\nol.layer.Heatmap = $ol$layer$Heatmap;\nol.layer.Image = $ol$layer$Image;\nol.layer.Layer = $ol$layer$Layer;\nol.layer.Layer.inView = _ol_layer_Layer$inView;\nol.layer.Tile = $ol$layer$Tile;\nol.layer.Vector = $ol$layer$Vector;\nol.layer.VectorImage = $ol$layer$VectorImage;\nol.loadingstrategy = {};\nol.loadingstrategy.all = _ol_loadingstrategy$all;\nol.loadingstrategy.bbox = _ol_loadingstrategy$bbox;\nol.loadingstrategy.tile = _ol_loadingstrategy$tile;\nol.math = {};\nol.math.ceil = _ol_math$ceil;\nol.math.clamp = _ol_math$clamp;\nol.math.floor = _ol_math$floor;\nol.math.lerp = _ol_math$lerp;\nol.math.modulo = _ol_math$modulo;\nol.math.round = _ol_math$round;\nol.math.solveLinearSystem = _ol_math$solveLinearSystem;\nol.math.squaredDistance = _ol_math$squaredDistance;\nol.math.squaredSegmentDistance = _ol_math$squaredSegmentDistance;\nol.math.toDegrees = _ol_math$toDegrees;\nol.math.toFixed = _ol_math$toFixed;\nol.math.toRadians = _ol_math$toRadians;\nol.net = {};\nol.net.ClientError = _ol_net$ClientError;\nol.net.ResponseError = _ol_net$ResponseError;\nol.net.getJSON = _ol_net$getJSON;\nol.net.jsonp = _ol_net$jsonp;\nol.net.overrideXHR = _ol_net$overrideXHR;\nol.net.resolveUrl = _ol_net$resolveUrl;\nol.net.restoreXHR = _ol_net$restoreXHR;\nol.obj = {};\nol.obj.clear = _ol_obj$clear;\nol.obj.isEmpty = _ol_obj$isEmpty;\nol.proj = {};\nol.proj.Projection = $ol$proj$Projection;\nol.proj.Units = {};\nol.proj.Units.METERS_PER_UNIT = _ol_proj_Units$METERS_PER_UNIT;\nol.proj.Units.fromCode = _ol_proj_Units$fromCode;\nol.proj.addCommon = _ol_proj$addCommon;\nol.proj.addCoordinateTransforms = _ol_proj$addCoordinateTransforms;\nol.proj.addEquivalentProjections = _ol_proj$addEquivalentProjections;\nol.proj.addEquivalentTransforms = _ol_proj$addEquivalentTransforms;\nol.proj.addProjection = _ol_proj$addProjection;\nol.proj.addProjections = _ol_proj$addProjections;\nol.proj.clearAllProjections = _ol_proj$clearAllProjections;\nol.proj.clearUserProjection = _ol_proj$clearUserProjection;\nol.proj.cloneTransform = _ol_proj$cloneTransform;\nol.proj.createProjection = _ol_proj$createProjection;\nol.proj.createSafeCoordinateTransform = _ol_proj$createSafeCoordinateTransform;\nol.proj.createTransformFromCoordinateTransform = _ol_proj$createTransformFromCoordinateTransform;\nol.proj.disableCoordinateWarning = _ol_proj$disableCoordinateWarning;\nol.proj.epsg3857 = {};\nol.proj.epsg3857.EXTENT = _ol_proj_epsg3857$EXTENT;\nol.proj.epsg3857.HALF_SIZE = _ol_proj_epsg3857$HALF_SIZE;\nol.proj.epsg3857.MAX_SAFE_Y = _ol_proj_epsg3857$MAX_SAFE_Y;\nol.proj.epsg3857.PROJECTIONS = _ol_proj_epsg3857$PROJECTIONS;\nol.proj.epsg3857.RADIUS = _ol_proj_epsg3857$RADIUS;\nol.proj.epsg3857.WORLD_EXTENT = _ol_proj_epsg3857$WORLD_EXTENT;\nol.proj.epsg3857.fromEPSG4326 = _ol_proj_epsg3857$fromEPSG4326;\nol.proj.epsg3857.toEPSG4326 = _ol_proj_epsg3857$toEPSG4326;\nol.proj.epsg4326 = {};\nol.proj.epsg4326.EXTENT = _ol_proj_epsg4326$EXTENT;\nol.proj.epsg4326.METERS_PER_UNIT = _ol_proj_epsg4326$METERS_PER_UNIT;\nol.proj.epsg4326.PROJECTIONS = _ol_proj_epsg4326$PROJECTIONS;\nol.proj.epsg4326.RADIUS = _ol_proj_epsg4326$RADIUS;\nol.proj.equivalent = _ol_proj$equivalent;\nol.proj.fromLonLat = _ol_proj$fromLonLat;\nol.proj.fromUserCoordinate = _ol_proj$fromUserCoordinate;\nol.proj.fromUserExtent = _ol_proj$fromUserExtent;\nol.proj.fromUserResolution = _ol_proj$fromUserResolution;\nol.proj.get = _ol_proj$get;\nol.proj.getPointResolution = _ol_proj$getPointResolution;\nol.proj.getTransform = _ol_proj$getTransform;\nol.proj.getTransformFromProjections = _ol_proj$getTransformFromProjections;\nol.proj.getUserProjection = _ol_proj$getUserProjection;\nol.proj.identityTransform = _ol_proj$identityTransform;\nol.proj.proj4 = {};\nol.proj.proj4.fromEPSGCode = _ol_proj_proj4$fromEPSGCode;\nol.proj.proj4.getEPSGLookup = _ol_proj_proj4$getEPSGLookup;\nol.proj.proj4.isRegistered = _ol_proj_proj4$isRegistered;\nol.proj.proj4.register = _ol_proj_proj4$register;\nol.proj.proj4.setEPSGLookup = _ol_proj_proj4$setEPSGLookup;\nol.proj.proj4.unregister = _ol_proj_proj4$unregister;\nol.proj.projections = {};\nol.proj.projections.add = _ol_proj_projections$add;\nol.proj.projections.clear = _ol_proj_projections$clear;\nol.proj.projections.get = _ol_proj_projections$get;\nol.proj.setUserProjection = _ol_proj$setUserProjection;\nol.proj.toLonLat = _ol_proj$toLonLat;\nol.proj.toUserCoordinate = _ol_proj$toUserCoordinate;\nol.proj.toUserExtent = _ol_proj$toUserExtent;\nol.proj.toUserResolution = _ol_proj$toUserResolution;\nol.proj.transform = _ol_proj$transform;\nol.proj.transformExtent = _ol_proj$transformExtent;\nol.proj.transformWithProjections = _ol_proj$transformWithProjections;\nol.proj.transforms = {};\nol.proj.transforms.add = _ol_proj_transforms$add;\nol.proj.transforms.clear = _ol_proj_transforms$clear;\nol.proj.transforms.get = _ol_proj_transforms$get;\nol.proj.transforms.remove = _ol_proj_transforms$remove;\nol.proj.useGeographic = _ol_proj$useGeographic;\nol.render = {};\nol.render.Box = $ol$render$Box;\nol.render.Event = $ol$render$Event;\nol.render.Feature = $ol$render$Feature;\nol.render.Feature.toFeature = _ol_render_Feature$toFeature;\nol.render.Feature.toGeometry = _ol_render_Feature$toGeometry;\nol.render.VectorContext = $ol$render$VectorContext;\nol.render.canvas = {};\nol.render.canvas.Builder = $ol$render$canvas$Builder;\nol.render.canvas.BuilderGroup = $ol$render$canvas$BuilderGroup;\nol.render.canvas.Executor = $ol$render$canvas$Executor;\nol.render.canvas.ExecutorGroup = $ol$render$canvas$ExecutorGroup;\nol.render.canvas.ExecutorGroup.getPixelIndexArray = _ol_render_canvas_ExecutorGroup$getPixelIndexArray;\nol.render.canvas.ImageBuilder = $ol$render$canvas$ImageBuilder;\nol.render.canvas.Immediate = $ol$render$canvas$Immediate;\nol.render.canvas.Instruction = {};\nol.render.canvas.Instruction.beginPathInstruction = _ol_render_canvas_Instruction$beginPathInstruction;\nol.render.canvas.Instruction.closePathInstruction = _ol_render_canvas_Instruction$closePathInstruction;\nol.render.canvas.Instruction.fillInstruction = _ol_render_canvas_Instruction$fillInstruction;\nol.render.canvas.Instruction.strokeInstruction = _ol_render_canvas_Instruction$strokeInstruction;\nol.render.canvas.LineStringBuilder = $ol$render$canvas$LineStringBuilder;\nol.render.canvas.PolygonBuilder = $ol$render$canvas$PolygonBuilder;\nol.render.canvas.TextBuilder = $ol$render$canvas$TextBuilder;\nol.render.canvas.checkedFonts = _ol_render_canvas$checkedFonts;\nol.render.canvas.defaultFillStyle = _ol_render_canvas$defaultFillStyle;\nol.render.canvas.defaultFont = _ol_render_canvas$defaultFont;\nol.render.canvas.defaultLineCap = _ol_render_canvas$defaultLineCap;\nol.render.canvas.defaultLineDash = _ol_render_canvas$defaultLineDash;\nol.render.canvas.defaultLineDashOffset = _ol_render_canvas$defaultLineDashOffset;\nol.render.canvas.defaultLineJoin = _ol_render_canvas$defaultLineJoin;\nol.render.canvas.defaultLineWidth = _ol_render_canvas$defaultLineWidth;\nol.render.canvas.defaultMiterLimit = _ol_render_canvas$defaultMiterLimit;\nol.render.canvas.defaultPadding = _ol_render_canvas$defaultPadding;\nol.render.canvas.defaultStrokeStyle = _ol_render_canvas$defaultStrokeStyle;\nol.render.canvas.defaultTextAlign = _ol_render_canvas$defaultTextAlign;\nol.render.canvas.defaultTextBaseline = _ol_render_canvas$defaultTextBaseline;\nol.render.canvas.drawImageOrLabel = _ol_render_canvas$drawImageOrLabel;\nol.render.canvas.getTextDimensions = _ol_render_canvas$getTextDimensions;\nol.render.canvas.hitdetect = {};\nol.render.canvas.hitdetect.HIT_DETECT_RESOLUTION = _ol_render_canvas_hitdetect$HIT_DETECT_RESOLUTION;\nol.render.canvas.hitdetect.createHitDetectionImageData = _ol_render_canvas_hitdetect$createHitDetectionImageData;\nol.render.canvas.hitdetect.hitDetect = _ol_render_canvas_hitdetect$hitDetect;\nol.render.canvas.measureAndCacheTextWidth = _ol_render_canvas$measureAndCacheTextWidth;\nol.render.canvas.measureTextHeight = _ol_render_canvas$measureTextHeight;\nol.render.canvas.measureTextWidth = _ol_render_canvas$measureTextWidth;\nol.render.canvas.registerFont = _ol_render_canvas$registerFont;\nol.render.canvas.rotateAtOffset = _ol_render_canvas$rotateAtOffset;\nol.render.canvas.textHeights = _ol_render_canvas$textHeights;\nol.render.getRenderPixel = _ol_render$getRenderPixel;\nol.render.getVectorContext = _ol_render$getVectorContext;\nol.render.toContext = _ol_render$toContext;\nol.renderer = {};\nol.renderer.Composite = $ol$renderer$Composite;\nol.renderer.Layer = $ol$renderer$Layer;\nol.renderer.Map = $ol$renderer$Map;\nol.renderer.canvas = {};\nol.renderer.canvas.ImageLayer = $ol$renderer$canvas$ImageLayer;\nol.renderer.canvas.Layer = $ol$renderer$canvas$Layer;\nol.renderer.canvas.Layer.canvasPool = _ol_renderer_canvas_Layer$canvasPool;\nol.renderer.canvas.TileLayer = $ol$renderer$canvas$TileLayer;\nol.renderer.canvas.VectorImageLayer = $ol$renderer$canvas$VectorImageLayer;\nol.renderer.canvas.VectorLayer = $ol$renderer$canvas$VectorLayer;\nol.renderer.vector = {};\nol.renderer.vector.defaultOrder = _ol_renderer_vector$defaultOrder;\nol.renderer.vector.getSquaredTolerance = _ol_renderer_vector$getSquaredTolerance;\nol.renderer.vector.getTolerance = _ol_renderer_vector$getTolerance;\nol.renderer.vector.renderFeature = _ol_renderer_vector$renderFeature;\nol.reproj = {};\nol.reproj.DataTile = $ol$reproj$DataTile;\nol.reproj.Image = $ol$reproj$Image;\nol.reproj.Tile = $ol$reproj$Tile;\nol.reproj.Triangulation = $ol$reproj$Triangulation;\nol.reproj.calculateSourceExtentResolution = _ol_reproj$calculateSourceExtentResolution;\nol.reproj.calculateSourceResolution = _ol_reproj$calculateSourceResolution;\nol.reproj.canvasPool = _ol_reproj$canvasPool;\nol.reproj.common = {};\nol.reproj.common.ERROR_THRESHOLD = _ol_reproj_common$ERROR_THRESHOLD;\nol.reproj.render = _ol_reproj$render;\nol.resolutionconstraint = {};\nol.resolutionconstraint.createMinMaxResolution = _ol_resolutionconstraint$createMinMaxResolution;\nol.resolutionconstraint.createSnapToPower = _ol_resolutionconstraint$createSnapToPower;\nol.resolutionconstraint.createSnapToResolutions = _ol_resolutionconstraint$createSnapToResolutions;\nol.rotationconstraint = {};\nol.rotationconstraint.createSnapToN = _ol_rotationconstraint$createSnapToN;\nol.rotationconstraint.createSnapToZero = _ol_rotationconstraint$createSnapToZero;\nol.rotationconstraint.disable = _ol_rotationconstraint$disable;\nol.rotationconstraint.none = _ol_rotationconstraint$none;\nol.size = {};\nol.size.buffer = _ol_size$buffer;\nol.size.hasArea = _ol_size$hasArea;\nol.size.scale = _ol_size$scale;\nol.size.toSize = _ol_size$toSize;\nol.source = {};\nol.source.BingMaps = $ol$source$BingMaps;\nol.source.BingMaps.quadKey = _ol_source_BingMaps$quadKey;\nol.source.Cluster = $ol$source$Cluster;\nol.source.DataTile = $ol$source$DataTile;\nol.source.Image = $ol$source$Image;\nol.source.Image.ImageSourceEvent = _ol_source_Image$ImageSourceEvent;\nol.source.Image.defaultImageLoadFunction = _ol_source_Image$defaultImageLoadFunction;\nol.source.ImageArcGISRest = $ol$source$ImageArcGISRest;\nol.source.ImageCanvas = $ol$source$ImageCanvas;\nol.source.ImageStatic = $ol$source$ImageStatic;\nol.source.ImageWMS = $ol$source$ImageWMS;\nol.source.OGCMapTile = $ol$source$OGCMapTile;\nol.source.OSM = $ol$source$OSM;\nol.source.OSM.ATTRIBUTION = _ol_source_OSM$ATTRIBUTION;\nol.source.Raster = $ol$source$Raster;\nol.source.Raster.Processor = _ol_source_Raster$Processor;\nol.source.Raster.RasterSourceEvent = _ol_source_Raster$RasterSourceEvent;\nol.source.Raster.newImageData = _ol_source_Raster$newImageData;\nol.source.Source = $ol$source$Source;\nol.source.Stamen = $ol$source$Stamen;\nol.source.Tile = $ol$source$Tile;\nol.source.Tile.TileSourceEvent = _ol_source_Tile$TileSourceEvent;\nol.source.TileArcGISRest = $ol$source$TileArcGISRest;\nol.source.TileDebug = $ol$source$TileDebug;\nol.source.TileImage = $ol$source$TileImage;\nol.source.TileJSON = $ol$source$TileJSON;\nol.source.TileWMS = $ol$source$TileWMS;\nol.source.UTFGrid = $ol$source$UTFGrid;\nol.source.UTFGrid.CustomTile = _ol_source_UTFGrid$CustomTile;\nol.source.UrlTile = $ol$source$UrlTile;\nol.source.Vector = $ol$source$Vector;\nol.source.Vector.VectorSourceEvent = _ol_source_Vector$VectorSourceEvent;\nol.source.WMTS = $ol$source$WMTS;\nol.source.WMTS.optionsFromCapabilities = _ol_source_WMTS$optionsFromCapabilities;\nol.source.XYZ = $ol$source$XYZ;\nol.source.common = {};\nol.source.common.DEFAULT_WMS_VERSION = _ol_source_common$DEFAULT_WMS_VERSION;\nol.source.ogcTileUtil = {};\nol.source.ogcTileUtil.getMapTileUrlTemplate = _ol_source_ogcTileUtil$getMapTileUrlTemplate;\nol.source.ogcTileUtil.getTileSetInfo = _ol_source_ogcTileUtil$getTileSetInfo;\nol.source.ogcTileUtil.getVectorTileUrlTemplate = _ol_source_ogcTileUtil$getVectorTileUrlTemplate;\nol.source.sourcesFromTileGrid = _ol_source$sourcesFromTileGrid;\nol.source.wms = {};\nol.source.wms.DEFAULT_VERSION = _ol_source_wms$DEFAULT_VERSION;\nol.sphere = {};\nol.sphere.DEFAULT_RADIUS = _ol_sphere$DEFAULT_RADIUS;\nol.sphere.getArea = _ol_sphere$getArea;\nol.sphere.getDistance = _ol_sphere$getDistance;\nol.sphere.getLength = _ol_sphere$getLength;\nol.sphere.offset = _ol_sphere$offset;\nol.string = {};\nol.string.compareVersions = _ol_string$compareVersions;\nol.string.padNumber = _ol_string$padNumber;\nol.structs = {};\nol.structs.LRUCache = $ol$structs$LRUCache;\nol.structs.LinkedList = $ol$structs$LinkedList;\nol.structs.PriorityQueue = $ol$structs$PriorityQueue;\nol.structs.PriorityQueue.DROP = _ol_structs_PriorityQueue$DROP;\nol.structs.RBush = $ol$structs$RBush;\nol.style = {};\nol.style.Circle = $ol$style$Circle;\nol.style.Fill = $ol$style$Fill;\nol.style.Icon = $ol$style$Icon;\nol.style.IconImage = $ol$style$IconImage;\nol.style.IconImage.get = _ol_style_IconImage$get;\nol.style.IconImageCache = $ol$style$IconImageCache;\nol.style.IconImageCache.shared = _ol_style_IconImageCache$shared;\nol.style.Image = $ol$style$Image;\nol.style.RegularShape = $ol$style$RegularShape;\nol.style.Stroke = $ol$style$Stroke;\nol.style.Style = $ol$style$Style;\nol.style.Style.createDefaultStyle = _ol_style_Style$createDefaultStyle;\nol.style.Style.createEditingStyle = _ol_style_Style$createEditingStyle;\nol.style.Style.toFunction = _ol_style_Style$toFunction;\nol.style.Text = $ol$style$Text;\nol.style.expressions = {};\nol.style.expressions.Operators = _ol_style_expressions$Operators;\nol.style.expressions.PALETTE_TEXTURE_ARRAY = _ol_style_expressions$PALETTE_TEXTURE_ARRAY;\nol.style.expressions.arrayToGlsl = _ol_style_expressions$arrayToGlsl;\nol.style.expressions.colorToGlsl = _ol_style_expressions$colorToGlsl;\nol.style.expressions.expressionToGlsl = _ol_style_expressions$expressionToGlsl;\nol.style.expressions.getStringNumberEquivalent = _ol_style_expressions$getStringNumberEquivalent;\nol.style.expressions.getValueType = _ol_style_expressions$getValueType;\nol.style.expressions.isTypeUnique = _ol_style_expressions$isTypeUnique;\nol.style.expressions.numberToGlsl = _ol_style_expressions$numberToGlsl;\nol.style.expressions.stringToGlsl = _ol_style_expressions$stringToGlsl;\nol.style.expressions.uniformNameForVariable = _ol_style_expressions$uniformNameForVariable;\nol.style.flat = {};\nol.style.flat.toStyle = _ol_style_flat$toStyle;\nol.tilecoord = {};\nol.tilecoord.createOrUpdate = _ol_tilecoord$createOrUpdate;\nol.tilecoord.fromKey = _ol_tilecoord$fromKey;\nol.tilecoord.getCacheKeyForTileKey = _ol_tilecoord$getCacheKeyForTileKey;\nol.tilecoord.getKey = _ol_tilecoord$getKey;\nol.tilecoord.getKeyZXY = _ol_tilecoord$getKeyZXY;\nol.tilecoord.hash = _ol_tilecoord$hash;\nol.tilecoord.withinExtentAndZ = _ol_tilecoord$withinExtentAndZ;\nol.tilegrid = {};\nol.tilegrid.TileGrid = $ol$tilegrid$TileGrid;\nol.tilegrid.WMTS = $ol$tilegrid$WMTS;\nol.tilegrid.WMTS.createFromCapabilitiesMatrixSet = _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet;\nol.tilegrid.common = {};\nol.tilegrid.common.DEFAULT_MAX_ZOOM = _ol_tilegrid_common$DEFAULT_MAX_ZOOM;\nol.tilegrid.common.DEFAULT_TILE_SIZE = _ol_tilegrid_common$DEFAULT_TILE_SIZE;\nol.tilegrid.createForExtent = _ol_tilegrid$createForExtent;\nol.tilegrid.createForProjection = _ol_tilegrid$createForProjection;\nol.tilegrid.createXYZ = _ol_tilegrid$createXYZ;\nol.tilegrid.extentFromProjection = _ol_tilegrid$extentFromProjection;\nol.tilegrid.getForProjection = _ol_tilegrid$getForProjection;\nol.tilegrid.wrapX = _ol_tilegrid$wrapX;\nol.tileurlfunction = {};\nol.tileurlfunction.createFromTemplate = _ol_tileurlfunction$createFromTemplate;\nol.tileurlfunction.createFromTemplates = _ol_tileurlfunction$createFromTemplates;\nol.tileurlfunction.createFromTileUrlFunctions = _ol_tileurlfunction$createFromTileUrlFunctions;\nol.tileurlfunction.expandUrl = _ol_tileurlfunction$expandUrl;\nol.tileurlfunction.nullTileUrlFunction = _ol_tileurlfunction$nullTileUrlFunction;\nol.transform = {};\nol.transform.apply = _ol_transform$apply;\nol.transform.compose = _ol_transform$compose;\nol.transform.composeCssTransform = _ol_transform$composeCssTransform;\nol.transform.create = _ol_transform$create;\nol.transform.determinant = _ol_transform$determinant;\nol.transform.invert = _ol_transform$invert;\nol.transform.makeInverse = _ol_transform$makeInverse;\nol.transform.makeScale = _ol_transform$makeScale;\nol.transform.multiply = _ol_transform$multiply;\nol.transform.reset = _ol_transform$reset;\nol.transform.rotate = _ol_transform$rotate;\nol.transform.scale = _ol_transform$scale;\nol.transform.set = _ol_transform$set;\nol.transform.setFromArray = _ol_transform$setFromArray;\nol.transform.toString = _ol_transform$toString;\nol.transform.translate = _ol_transform$translate;\nol.uri = {};\nol.uri.appendParams = _ol_uri$appendParams;\nol.util = {};\nol.util.VERSION = _ol_util$VERSION;\nol.util.abstract = _ol_util$abstract;\nol.util.getUid = _ol_util$getUid;\nol.vec = {};\nol.vec.mat4 = {};\nol.vec.mat4.create = _ol_vec_mat4$create;\nol.vec.mat4.fromTransform = _ol_vec_mat4$fromTransform;\nol.xml = {};\nol.xml.OBJECT_PROPERTY_NODE_FACTORY = _ol_xml$OBJECT_PROPERTY_NODE_FACTORY;\nol.xml.XML_SCHEMA_INSTANCE_URI = _ol_xml$XML_SCHEMA_INSTANCE_URI;\nol.xml.createElementNS = _ol_xml$createElementNS;\nol.xml.getAllTextContent = _ol_xml$getAllTextContent;\nol.xml.getAllTextContent_ = _ol_xml$getAllTextContent_;\nol.xml.getAttributeNS = _ol_xml$getAttributeNS;\nol.xml.getDocument = _ol_xml$getDocument;\nol.xml.getXMLSerializer = _ol_xml$getXMLSerializer;\nol.xml.isDocument = _ol_xml$isDocument;\nol.xml.makeArrayExtender = _ol_xml$makeArrayExtender;\nol.xml.makeArrayPusher = _ol_xml$makeArrayPusher;\nol.xml.makeArraySerializer = _ol_xml$makeArraySerializer;\nol.xml.makeChildAppender = _ol_xml$makeChildAppender;\nol.xml.makeObjectPropertyPusher = _ol_xml$makeObjectPropertyPusher;\nol.xml.makeObjectPropertySetter = _ol_xml$makeObjectPropertySetter;\nol.xml.makeReplacer = _ol_xml$makeReplacer;\nol.xml.makeSequence = _ol_xml$makeSequence;\nol.xml.makeSimpleNodeFactory = _ol_xml$makeSimpleNodeFactory;\nol.xml.makeStructureNS = _ol_xml$makeStructureNS;\nol.xml.parse = _ol_xml$parse;\nol.xml.parseNode = _ol_xml$parseNode;\nol.xml.pushParseAndPop = _ol_xml$pushParseAndPop;\nol.xml.pushSerializeAndPop = _ol_xml$pushSerializeAndPop;\nol.xml.registerDocument = _ol_xml$registerDocument;\nol.xml.registerXMLSerializer = _ol_xml$registerXMLSerializer;\nol.xml.serialize = _ol_xml$serialize;\n\nexport default ol;","/**\n * @module ol/geom/flat/topology\n */\nimport {linearRing as linearRingArea} from './area.js';\n\n/**\n * Check if the linestring is a boundary.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} The linestring is a boundary.\n */\nexport function lineStringIsClosed(flatCoordinates, offset, end, stride) {\n  const lastCoord = end - stride;\n  if (\n    flatCoordinates[offset] === flatCoordinates[lastCoord] &&\n    flatCoordinates[offset + 1] === flatCoordinates[lastCoord + 1] &&\n    (end - offset) / stride > 3\n  ) {\n    return !!linearRingArea(flatCoordinates, offset, end, stride);\n  }\n  return false;\n}\n","/**\n * @module ol/source\n */\n\nimport LRUCache from './structs/LRUCache.js';\nimport {getIntersection} from './extent.js';\n\nexport {default as BingMaps} from './source/BingMaps.js';\nexport {default as CartoDB} from './source/CartoDB.js';\nexport {default as Cluster} from './source/Cluster.js';\nexport {default as DataTile} from './source/DataTile.js';\nexport {default as GeoTIFF} from './source/GeoTIFF.js';\nexport {default as IIIF} from './source/IIIF.js';\nexport {default as Image} from './source/Image.js';\nexport {default as ImageArcGISRest} from './source/ImageArcGISRest.js';\nexport {default as ImageCanvas} from './source/ImageCanvas.js';\nexport {default as ImageMapGuide} from './source/ImageMapGuide.js';\nexport {default as ImageStatic} from './source/ImageStatic.js';\nexport {default as ImageWMS} from './source/ImageWMS.js';\nexport {default as OSM} from './source/OSM.js';\nexport {default as Raster} from './source/Raster.js';\nexport {default as Source} from './source/Source.js';\nexport {default as Stamen} from './source/Stamen.js';\nexport {default as Tile} from './source/Tile.js';\nexport {default as TileArcGISRest} from './source/TileArcGISRest.js';\nexport {default as TileDebug} from './source/TileDebug.js';\nexport {default as TileImage} from './source/TileImage.js';\nexport {default as TileJSON} from './source/TileJSON.js';\nexport {default as TileWMS} from './source/TileWMS.js';\nexport {default as UrlTile} from './source/UrlTile.js';\nexport {default as UTFGrid} from './source/UTFGrid.js';\nexport {default as Vector} from './source/Vector.js';\nexport {default as VectorTile} from './source/VectorTile.js';\nexport {default as WMTS} from './source/WMTS.js';\nexport {default as XYZ} from './source/XYZ.js';\nexport {default as Zoomify} from './source/Zoomify.js';\n\n/**\n * Creates a sources function from a tile grid. This function can be used as value for the\n * `sources` property of the {@link module:ol/layer/Layer~Layer} subclasses that support it.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @param {function(import(\"./tilecoord.js\").TileCoord): import(\"./source/Source.js\").default} factory Source factory.\n * This function takes a {@link module:ol/tilecoord~TileCoord} as argument and is expected to return a\n * {@link module:ol/source/Source~Source}. **Note**: The returned sources should have a tile grid with\n * a limited set of resolutions, matching the resolution range of a single zoom level of the pyramid\n * `tileGrid` that `sourcesFromTileGrid` was called with.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./source/Source.js\").default>} Sources function.\n * @api\n */\nexport function sourcesFromTileGrid(tileGrid, factory) {\n  const sourceCache = new LRUCache(32);\n  const tileGridExtent = tileGrid.getExtent();\n  return function (extent, resolution) {\n    sourceCache.expireCache();\n    if (tileGridExtent) {\n      extent = getIntersection(tileGridExtent, extent);\n    }\n    const z = tileGrid.getZForResolution(resolution);\n    const wantedSources = [];\n    tileGrid.forEachTileCoord(extent, z, (tileCoord) => {\n      const key = tileCoord.toString();\n      if (!sourceCache.containsKey(key)) {\n        const source = factory(tileCoord);\n        sourceCache.set(key, source);\n      }\n      wantedSources.push(sourceCache.get(key));\n    });\n    return wantedSources;\n  };\n}\n"],"names":["messages","AssertionError","Error","constructor","code","message","super","this","name","$ol$AssertionError","stopPropagation","evt","$ol$events$Event","type","propagationStopped","defaultPrevented","target","preventDefault","ObjectEventType","$ol$Disposable","disposed","dispose","disposeInternal","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","length","found","a","b","linearFindNearest","arr","direction","n","i","reverseSubArray","begin","end","tmp","extend","data","extension","Array","isArray","equals","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","index","res","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","called","nextArgs","prototype","slice","call","arguments","arrayEquals","apply","toPromise","getter","value","err","Promise","reject","resolve","promiseGetter","clear","object","property","isEmpty","$ol$events$Target","Disposable","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","push","dispatchEvent","event","isString","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","Object","keys","indexOf","splice","EventType$1","listen","thisArg","once","bind","originalListener","eventsKey","listenOnce","unlistenByKey","key","Observable","EventTarget","on","un","revision_","changed","EventType","getRevision","onInternal","len","onceInternal","ol_key","unInternal","unByKey","$ol$Observable","abstract","uidCounter_","getUid","obj","ol_uid","String","ObjectEvent","oldValue","$ol$Object","values","values_","setProperties","get","hasOwnProperty","getKeys","getProperties","assign","hasProperties","notify","eventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","CollectionEventType","Property","CollectionEvent","element","Collection","BaseObject","array","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","forEach","f","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","except","TileState","easeIn","t","Math","pow","easeOut","inAndOut","linear","$ol$Tile","tileCoord","state","interimTile","transition_","transition","transitionStarts_","interpolate","release","setState","getKey","getInterimTile","tile","getState","refreshInterimChain","getTileCoord","load","getAlpha","id","time","start","delta","inTransition","endTransition","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","SAFARI_BUG_237906","test","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","PASSIVE_EVENT_LISTENERS","passive","defineProperty","window","error","createCanvasContext2D","width","height","canvasPool","settings","canvas","shift","document","createElement","getContext","releaseCanvas","context","clearRect","outerWidth","offsetWidth","style","getComputedStyle","parseInt","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","insertBefore","appendChild","asImageLike","HTMLCanvasElement","HTMLVideoElement","asArrayLike","Uint8Array","Uint8ClampedArray","Float32Array","DataView","sharedContext","toArray","image","willReadFrequently","drawImage","getImageData","defaultSize","$ol$DataTile","Tile","loader_","loader","data_","error_","size_","size","getSize","imageData","getData","getError","then","catch","assert","assertion","errorCode","Feature","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","createStyleFunction","setId","styles","$ol$Feature","tmp_","create","reset","transform","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","d","e","setFromArray","coordinate","x","y","rotate","angle","cos","sin","scale","makeScale","translate","dx","dy","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","det","determinant","mat","transformStringDiv","toString","transformString","join","Relationship","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","buffer","dest","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","Infinity","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","approximatelyEquals","tolerance","abs","extendCoordinates","extendXY","extendRings","rings","min","max","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","resolution","rotation","x0","y0","x1","y1","x2","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","xs","ys","l","_boundingExtentXYs","wrapX","projection","projectionExtent","getExtent","canWrapX","worldWidth","floor","wrapAndSliceX","isFinite","unitByCode","METERS_PER_UNIT","radians","PI","degrees","ft","m","$ol$proj$Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection","Projection","units","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","atan","exp","EPSG4326Projection","cache","replace","add","transforms","destination","sourceCode","destinationCode","clamp","squaredSegmentDistance","squaredDistance","solveLinearSystem","maxRow","maxEl","r","absValue","j","coef","k","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","factor","round","ceil","padNumber","number","precision","numberString","decimal","compareVersions","v1","v2","s1","split","s2","n1","n2","closestOnCircle","circle","getRadius","sqrt","closestOnSegment","segment","along","degreesToStringHDMS","hemispheres","fractionDigits","normalizedDegrees","deg","sec","hdms","charAt","format","template","coordinate1","coordinate2","cosAngle","sinAngle","coord1","coord2","distance","squaredDistanceToSegment","toStringXY","worldsAway","getWorldsAway","sourceExtentWidth","DEFAULT_RADIUS","getDistance","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","getLengthInternal","getAreaInternal","bearing","lon1","dByR","lat","asin","levels","info","warn","none","level","args","console","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","pointResolution","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","jj","addCoordinateTransforms","forward","inverse","sourceProj","destProj","equivalent","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","transformExtent","userProjection","setUserProjection","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","sourceUnits","userUnits","fromUserResolution","createSafeCoordinateTransform","coord","transformed","sourceExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","transform2D","anchor","anchorX","anchorY","tmpTransform","$ol$geom$Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getSimplifiedGeometry","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","getClosestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","simplify","getType","intersectsExtent","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","getStrideForLayout","layout","transformGeom2D","simpleGeometry","getFlatCoordinates","getStride","$ol$geom$SimpleGeometry","Geometry","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","setLayout","nesting","getLayoutForStride","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","multiArrayMaxSquaredDelta","endss","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","radialDistance","snap","quantize","quantizeArray","quantizeMultiArray","simplifiedEndss","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","linearRing","twiceArea","linearRings","linearRingss","LinearRing","SimpleGeometry","maxDelta_","maxDeltaRevision_","linearRingArea","$ol$geom$LinearRing","Point","$ol$geom$Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","ret","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","reverseCoordinates","orientLinearRingsArray","inflateEnds","prevEndIndex","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","linearRingsArea","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","$ol$geom$Polygon","circular","sphereRadius","sphereOffset","fromExtent","fromCircle","sides","arrayLength","makeRegular","startAngle","GeolocationErrorType","GeolocationError","BaseEvent","$ol$Geolocation","position_","transform_","watchId_","handleProjectionChanged_","handleTrackingChanged_","setProjection","trackingOptions","setTrackingOptions","setTracking","tracking","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","position","coords","accuracy","altitude","altitudeAccuracy","heading","longitude","latitude","projectedPosition","speed","circularPolygon","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getPosition","getSpeed","$ol$ImageBase","pixelRatio","pixelRatio_","getImage","getPixelRatio","getResolution","ImageState","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","src","$ol$Image","ImageBase","crossOrigin","imageLoadFunction","src_","image_","context_","unlisten_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","setImage","$ol$ImageCanvas","canvas_","handleLoad_","$ol$ImageTile","tileLoadFunction","crossOrigin_","tileLoadFunction_","ctx","fillStyle","fillRect","getBlankImage","naturalWidth","naturalHeight","$ol$Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","Date","now","lastIndex","firstIndex","duration","getAngle","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","fromNamed","el","body","rgb","fromString","cacheSize","s","g","exec","hasAlpha","substr","startsWith","map","Number","normalize","fromStringInternal_","asArray","isStringColor","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","setSize","maxCacheSize","$ol$style$IconImageCache","shared","LayerProperty","$ol$layer$Base","background_","background","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getBackground","getClassName","getLayerState","managed","layer","getZIndex","getOpacity","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","ViewHint","ViewProperty","CENTER","RESOLUTION","ROTATION","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","result","createSnapToResolutions","resolutions","cappedMaxRes","capped","z","createSnapToPower","power","minZoomLevel","cappedZoomLevel","zoomLevel","createMinMaxResolution","createSnapToN","theta","createSnapToZero","animationCallback","returnValue","setTimeout","createCenterConstraint","smoothExtentConstraint","constrainOnlyCenter","multiWorld","centerNone","createResolutionConstraint","resolutionConstraint","zoomFactor","smoothResolutionConstraint","projExtent","constrainResolution","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","constraint","createRotationConstraint","enableRotation","constrainRotation","rotationNone","isNoopAnimation","animation","sourceCenter","targetCenter","coordinatesEqual","sourceResolution","targetResolution","sourceRotation","targetRotation","calculateCenterOn","rotX","rotY","$ol$View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","rotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","zoom","setZoom","oldPadding","getCenterInternal","newPadding","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","animateInternal","animationCount","series","complete","easing","getResolutionForZoom","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","rotateCoordinate","addCoordinate","currentResolution","w","h","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","viewState","nearest","baseLevel","fit","geometryOrExtent","polygonFromExtent","fitInternal","rotatedExtentForGeometry","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","inView","layerState","$ol$layer$Layer","BaseLayer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","render","setMap","handleSourcePropertyChange_","setSource","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","isVisible","view","frameState","View","layerExtent","getAttributions","attributions","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","setMapInternal","getMapInternal","RenderEventType","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","expireIconCache","iconImageCache","$ol$renderer$Map","map_","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","layerFilter","thisArg2","feature","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","getWrapX","order","distanceSq","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$ol$render$Event","inversePixelTransform","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","weight","variant","families","family","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","checkedFonts","measureFont","measureContext","textHeights","registerFont","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","border","display","left","measureAndCacheTextWidth","reduce","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","originX","originY","save","globalAlpha","setTransform","contextInstructions","label","executeLabelInstructions","restore","$ol$renderer$Composite","MapRenderer","fontChangeListenerKey_","redrawText","element_","container","getViewport","firstChild","children_","renderedVisible_","RenderEvent","declutterLayers","previousElement","layerIndex","sourceState","renderDeclutter","GroupEvent","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","$ol$layer$Group","$ol$MapEvent","$ol$MapBrowserEvent","MapEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","MapBrowserEventType","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","PointerEventType","$ol$MapBrowserEventHandler","Target","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","MapBrowserEvent","clearTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","MapEventType","MapProperty","DROP","$ol$structs$PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$ol$TileQueue","PriorityQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","$ol$control$Control","pointerEvents","target_","setTarget","getOverlayContainerStopEvent","mapEvent","getElementById","$ol$control$Attribution","Control","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","visibleAttributions","from","Set","getAllLayers","flatMap","getAttributionsCollapsible","setCollapsible","updateElement_","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$ol$control$Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","getView","contains","$ol$control$Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","defaults","controls","Zoom","zoomOptions","Rotate","rotateOptions","attribution","Attribution","attributionOptions","InteractionProperty","pan","zoomByDelta","$ol$interaction$Interaction","setActive","getActive","mapBrowserEvent","active","$ol$interaction$DoubleClickZoom","Interaction","delta_","stopEvent","browserEvent","shiftKey","centroid","$ol$interaction$Pointer","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","all","conditions","pass","altKeyOnly","altKey","metaKey","ctrlKey","altShiftKeysOnly","focus","targetElement","getTargetElement","activeElement","focusWithTabindex","hasAttribute","always","mouseActionButton","never","singleClick","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","$ol$interaction$DragPan","PointerInteraction","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroidFromPointers","scaleCoordinate","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","$ol$interaction$DragRotate","lastAngle_","$ol$render$Box","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","top","getOverlayContainer","setPixels","createOrUpdateGeometry","DragBoxEventType","DragBoxEvent","$ol$interaction$DragBox","box_","RenderBox","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$ol$interaction$DragZoom","DragBox","out_","out","KeyCode","$ol$interaction$KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","mapUnitsDelta","$ol$interaction$KeyboardZoom","$ol$interaction$MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$ol$interaction$PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","$ol$interaction$PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","interactions","Kinetic","altShiftDragRotate","DragRotate","doubleClickZoom","DoubleClickZoom","zoomDelta","zoomDuration","dragPan","DragPan","pinchRotate","PinchRotate","pinchZoom","PinchZoom","keyboard","KeyboardPan","KeyboardZoom","mouseWheelZoom","MouseWheelZoom","shiftDragZoom","DragZoom","num","hasArea","toSize","removeLayerMapProperty","Layer","setLayerMapProperty","$ol$Map","optionsInternal","keyboardEventTarget","layerGroup","overlays","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","defaultControls","defaultInteractions","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","TileQueue","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","ownerDocument","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","handlePostRender","tileQueue","viewHints","lowOnFrameBudget","unobserve","ShadowRoot","host","CompositeMapRenderer","MapBrowserEventHandler","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","mapId","renderTargets","nextExtent","equalsExtent","setLayerGroup","oldLayerGroup","computedStyle","parseFloat","getClientRects","oldSize","$ol$Overlay","insertFirst","autoPan","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPositioning","updatePixelPosition","performAutoPan","panIntoView","panIntoViewOptions","mapRect","getRect","overlayRect","myMargin","margin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","box","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","posX","posY","getOptions","$ol$structs$LRUCache","highWaterMark","count_","entries_","oldest_","newest_","expireCache","keep","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","getKeyZXY","fromKey","hash","withinExtentAndZ","tileRange","getFullTileRange","$ol$TileCache","LRUCache","pruneExceptNewestZ","TileRange","containsTileRange","$ol$TileRange","$ol$VectorRenderTile","urlTileCoord","getSourceTiles","executorGroups","declutterExecutorGroups","loadingSourceTiles","hitDetectionImageData","replayState_","sourceTiles","errorTileKeys","wantedResolution","wrappedTileCoord","hasContext","getReplayState","dirty","renderedRenderOrder","renderedResolution","renderedRevision","renderedTileResolution","renderedTileRevision","renderedTileZ","asColorLike","originalXHR","withCredentials","loadFeaturesXhr","url","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","addFeatures","jsonp","errback","callbackParam","script","cleanup","async","timer","head","ResponseError","response","ClientError","client","getJSON","JSON","parse","setRequestHeader","resolveUrl","base","URL","href","$ol$render$VectorContext","drawCustom","hitDetectionRenderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","strokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","$ol$render$canvas$Immediate","VectorContext","viewRotation","userTransform","transformRotation_","viewRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","alpha","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","lineTo","closePath","drawRings_","beginPath","arc","fill","stroke","getFill","getStroke","getText","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","getFlatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","lineCap","lineDash","setLineDash","lineDashOffset","lineJoin","miterLimit","textState","contextTextState","textAlign","textBaseline","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","imageSize","imagePixelRatio","imageAnchor","getAnchor","imageOrigin","getOrigin","getRotateWithView","imageScale","getScaleArray","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","acc","GEOMETRY_RENDERERS","builderGroup","declutterBuilderGroup","getImageState","imageBuilderGroup","declutterMode","getDeclutterMode","imageReplay","getBuilder","textBuilderGroup","textReplay","LineString","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","replayGroup","geometryRenderer","Circle","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","imageState","unlistenImageChange","listenImageChange","renderGeometry","renderFeatureInternal","getGeometries","getHitDetectionRenderer","getVectorContext","CanvasRenderingContext2D","canvasPixelRatio","multiplyTransform","CanvasImmediateRenderer","brokenDiagonalRendering_","drawTestTriangle","u1","u2","clip","verifyBrokenDiagonalRendering","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","calculateSourceExtentResolution","targetExtent","triangulation","sources","gutter","renderEdges","imageSmoothingEnabled","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","isBrokenDiagonalRendering","steps","ud","vd","step","ERROR_THRESHOLD","$ol$reproj$Triangulation","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","$ol$reproj$Tile","sourceTileGrid","targetTileGrid","getTileFunction","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","Triangulation","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","TileEventType","adaptAttributions","attributionLike","$ol$source$Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","getInterpolate","refresh","setAttributions","tmpTileCoord","$ol$tilegrid$TileGrid","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","getTileCoordForCoordAndZ","getTileCoordResolution","opt_direction","tileCoordIntersectsViewport","viewport","fullTileRanges","getForProjection","createForProjection","extentFromProjection","createForExtent","resolutionsFromExtent","TileGrid","createXYZ","xyzOptions","gridOptions","half","TileSourceEvent","$ol$source$Tile","Source","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","TileCache","tmpSize","tileOptions","zDirection","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","covered","getGutterForProjection","setKey","getOpaque","getTileGridForProjection","getTile","getTileGrid","getTilePixelRatio","getTilePixelSize","scaleSize","getTileCoordForTileUrlFunction","updateCacheSize","tileCount","useTile","createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","range","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","nullTileUrlFunction","expandUrl","urls","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","stop","UrlTile","TileSource","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","uid","tileState","setTileLoadFunction","setTileUrlFunction","$ol$source$UrlTile","defaultTileLoadFunction","imageTile","$ol$source$TileImage","tileClass","ImageTile","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","tileUrl","getTileInternal","newTile","ReprojTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","quadKey","digits","mask","$ol$source$BingMaps","TileImage","hidpi","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","fetch","json","handleImageryMetadataResponse","getApiKey","getImagerySet","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","resource","zoomMax","imageWidth","imageHeight","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","imageryProviders","imageryProvider","intersecting","coverageAreas","coverageArea","bbox","$ol$source$XYZ","quickselect","quickselectStep","defaultCompare","sd","swap","RBush","maxEntries","_maxEntries","_minEntries","_all","search","toBBox","nodesToSearch","child","childBBox","leaf","collides","insert","_build","_splitRoot","tmpNode","_insert","createNode","equalsFn","path","indexes","goingUp","findItem","_condense","compareMinX","compareMinY","toJSON","fromJSON","items","N","M","calcBBox","N2","N1","multiSelect","right2","right3","_chooseSubtree","targetNode","minEnlargement","bboxArea","enlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareNodeMinX","compareNodeMinY","_allDistMargin","leftBBox","rightBBox","bboxMargin","siblings","p","destNode","$ol$structs$RBush","rbush_","RBush_","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","concat","rbush","VectorEventType","VectorSourceEvent","$ol$source$Vector","format_","overlaps_","overlaps","url_","strategy_","strategy","allStrategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","featureChangeKeys","removed","setLoader","$ol$source$Cluster","VectorSource","interpolationRatio","geometryFunction","createCustomCluster_","createCluster","boundRefresh_","updateDistance","setDistance","setMinDistance","getMinDistance","cluster","mapDistance","clustered","neighbors","neighbor","searchCenter","$ol$reproj$DataTile","DataTile","reprojData_","reprojError_","reprojSize_","dataSources","tileData","arrayData","pixelSize","isFloat","pixelCount","DataType","tileDataR","bytesPerElement","BYTES_PER_ELEMENT","bytesPerPixel","bytesPerRow","byteLength","bandCount","packedLength","packedData","dataIndex","rowOffset","colCount","rowIndex","colIndex","dataType","targetWidth","targetHeight","dataR","dataU","reproj","dataSource","createImageData","putImageData","$ol$source$DataTile","tileGridForProjection_","tileCacheForProjection_","setTileSizes","getReprojTile_","reprojTilePixelRatio","textureSize","ReprojDataTile","sourceLoader","$ol$reproj$Image","getImageFunction","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","ImageSourceEventType","ImageSourceEvent","defaultImageLoadFunction","$ol$source$Image","reprojectedImage_","reprojectedRevision_","setResolutions","findNearestResolution","getImageInternal","ReprojImage","handleImageChange","appendParams","uri","params","keyParams","encodeURIComponent","qs","$ol$source$ImageArcGISRest","ImageSource","params_","imageSize_","renderedRevision_","ratio_","getParams","F","FORMAT","TRANSPARENT","halfWidth","halfHeight","imageResolution","getRequestUrl_","ImageWrapper","getImageLoadFunction","srid","modifiedUrl","setImageLoadFunction","updateParams","$ol$source$ImageCanvas","canvasFunction_","canvasFunction","canvasElement","ImageCanvas","$ol$source$ImageStatic","imageExtent_","imageExtent","getImageExtent","extentWidth","extentHeight","DEFAULT_VERSION","GETFEATUREINFO_IMAGE_SIZE","$ol$source$ImageWMS","v13_","updateV13_","serverType_","serverType","getFeatureInfoUrl","projectionObj","sourceProjectionObj","baseParams","SERVICE","VERSION","REQUEST","QUERY_LAYERS","getLegendUrl","LAYERS","mpu","viewExtent","requestExtent","dpi","version","ATTRIBUTION","$ol$source$OSM","XYZ","$ol$layer$BaseImage","$ol$renderer$Layer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","createLoadedTileFinder","getLayer","renderIfReadyAndVisible","loadImage","pixelContext","$ol$renderer$canvas$Layer","LayerRenderer","tempTransform","pixelTransform","containerReused","pixelContext_","col","row","useContainer","backgroundColor","layerClassName","firstElementChild","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","$ol$renderer$canvas$ImageLayer","CanvasLayerRenderer","imageLayer","viewResolution","imageSource","renderedExtent","imageMapWidth","imageMapHeight","viewCenter","canvasTransform","toTransformString","clipped","dw","dh","previousAlpha","$ol$layer$Image","BaseImageLayer","CanvasImageLayerRenderer","TileProperty","$ol$layer$BaseTile","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","$ol$renderer$canvas$TileLayer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileOrigin","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","clips","clipZs","currentClip","zs","reverse","currentZ","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","postRenderFunction","tileCallback","$ol$layer$Tile","BaseTileLayer","CanvasTileLayerRenderer","hasImageData","ImageData","_","newImageData","createMinion","operation","workerHasImageData","newWorkerImageData","buffers","meta","imageOps","numBuffers","numBytes","images","arrays","pixels","createWorker","config","onMessage","lines","lib","worker","Worker","Blob","Buffer","createObjectURL","Processor","threads","_imageOps","workers","_onWorkerMessage","minion","terminated","postMessage","terminate","createFauxWorker","_workers","_queue","_maxQueueLength","queue","_running","_dataLookup","_job","process","inputs","_enqueue","_dispatch","job","slices","_resolveJob","RasterEventType","RasterSourceEvent","RasterSource","processor_","operationType_","operationType","threads_","layers_","createLayer","createLayers","useResolutions_","requestedFrameState_","renderedImageCanvas_","iMax","sourceOrLayer","attributionGetter","sourceAttribution","setOperation","updateFrameState_","allSourcesReady_","processSources_","imageDatas","onWorkerComplete_","layerOrSource","TileLayer","ImageLayer","$ol$source$Raster","ATTRIBUTIONS","OSM_ATTRIBUTION","LayerConfig","terrain","toner","watercolor","ProviderConfig","$ol$source$Stamen","provider","providerConfig","layerConfig","$ol$source$TileArcGISRest","getKeyForParams_","tileExtent","$ol$source$TileDebug","strokeRect","$ol$source$TileJSON","tileJSON_","requestJSONP","handleTileJSONResponse","handleTileJSONError","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","epsg4326Projection","gridExtent","attributionExtent","$ol$source$TileWMS","transparent","bufferSize","CustomTile","preemptive","preemptive_","grid_","keys_","jsonp_","xRelative","yRelative","forDataAtCoordinate","request","loadInternal_","handleError_","$ol$source$UTFGrid","tileUrlFunction_","template_","getTemplate","forDataAtCoordinateAndResolution","grids","WMTSTileGrid","matrixIds_","matrixIds","getMatrixId","getMatrixIds","$ol$tilegrid$WMTS","createFromCapabilitiesMatrixSet","matrixSet","matrixLimits","switchOriginXY","elt","matrixAvailable","find","elt_ml","tileWidth","tileHeight","$ol$source$WMTS","requestEncoding","version_","dimensions_","dimensions","matrixSet_","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","tilematrixset","Service","Request","Version","Format","localContext","TileMatrix","TileCol","TileRow","XML_SCHEMA_INSTANCE_URI","createElementNS","namespaceURI","qualifiedName","getDocument","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","nextSibling","isDocument","getAttributeNS","xml","makeArrayExtender","valueReader","objectStack","makeArrayPusher","makeReplacer","makeObjectPropertyPusher","localName","makeObjectPropertySetter","makeChildAppender","nodeWriter","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","fixedNodeName","fixedNamespaceURI","newNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","structureNS","parseNode","parsersNS","nextElementSibling","parsers","parser","pushParseAndPop","pushSerializeAndPop","xmlSerializer_","document_","getXMLSerializer","XMLSerializer","implementation","createDocument","fromTransform","mat4","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","declutterMode_","getScale","getDisplacement","getHitDetectionImage","getImageSize","setDisplacement","setRotateWithView","setScale","$ol$style$Image","RegularShape","hitDetectionCanvas_","fill_","points","radius_","radius1","radius2_","radius2","stroke_","renderOptions_","getPoints","getRadius2","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","strokeWidth","r1","r2","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","maxRadius","createPath_","drawHitDetectionCanvas_","angle0","radiusC","$ol$style$RegularShape","CircleStyle","setRadius","$ol$style$Circle","Fill","color_","setColor","$ol$style$Fill","taintedTestContext","IconImage","hitDetectionImage_","imageState_","tainted_","initializeImage_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","$ol$style$IconImage","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","imgSize_","imgSize","iconImage_","getIconImage","offset_","offsetOrigin_","offsetOrigin","width_","height_","updateScaleFromWidthAndHeight","setAnchor","iconImageSize","setWidth","setHeight","widthScale","heightScale","$ol$style$Icon","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","$ol$style$Stroke","Style","geometryFunction_","defaultGeometryFunction","hitDetectionRenderer_","zIndex_","setRenderer","setHitDetectionRenderer","setText","toFunction","styleFunction","defaultStyles","createDefaultStyle","createEditingStyle","white","blue","$ol$style$Style","Text","font_","textAlign_","justify_","justify","repeat_","repeat","textBaseline_","maxAngle_","maxAngle","placement_","placement","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getPlacement","getRepeat","getMaxAngle","getOverflow","getJustify","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","$ol$style$Text","PaletteTexture$1","texture_","getTexture","gl","texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","UNSIGNED_BYTE","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","DYNAMIC_DRAW","CONTEXT_IDS","attributes","preserveDrawingBuffer","antialias","BufferUsage","getArrayClassForType","Uint32Array","WebGLArrayBuffer$1","usage","ofSize","fromArray","fromArrayBuffer","getUsage","ContextEventType","WebGLPostProcessingPass$1","gl_","webGlContext","scaleRatio_","scaleRatio","renderTargetTexture_","renderTargetTextureSize_","frameBuffer_","createFramebuffer","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","renderTargetProgram_","createProgram","attachShader","linkProgram","renderTargetVerticesBuffer_","createBuffer","bindBuffer","bufferData","STATIC_DRAW","renderTargetAttribLocation_","getAttribLocation","renderTargetUniformLocation_","getUniformLocation","renderTargetOpacityLocation_","renderTargetTextureLocation_","uniforms_","uniforms","location","getGL","init","drawingBufferWidth","drawingBufferHeight","bindFramebuffer","FRAMEBUFFER","getFrameBuffer","internalFormat","LINEAR","framebufferTexture2D","COLOR_ATTACHMENT0","nextPass","preCompose","postCompose","activeTexture","TEXTURE0","canvasId","getContextAttributes","clearColor","COLOR_BUFFER_BIT","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform2f","uniform1i","uniform1f","applyUniforms","drawArrays","TRIANGLES","textureSlot","uniform","uniform3f","uniform4f","DefaultUniform","AttributeType","UNSIGNED_SHORT","UNSIGNED_INT","canvasCache","getSharedCanvasCacheKey","uniqueCanvasCacheKeyCount","WebGLHelper","boundHandleWebGLContextLost_","handleWebGLContextLost","boundHandleWebGLContextRestored_","handleWebGLContextRestored","canvasCacheKey_","canvasCacheKey","getUniqueCanvasCacheKey","cacheItem","users","getCanvas","bufferCache_","extensionCache_","currentProgram_","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","uniformLocations_","attribLocations_","setUniforms","postProcessPasses_","postProcesses","WebGLPostProcessingPass","shaderCompileErrors_","canvasCacheKeyMatches","getExtension","bufferKey","bufferCache","webGlBuffer","flushBufferData","deleteBuffer","buf","bufferCacheEntry","isContextLost","loseContext","prepareDraw","disableAlphaBlend","ZERO","prepareDrawToRenderTarget","renderTarget","getFramebuffer","drawElements","elementType","numItems","offsetInBytes","finalizeDraw","applyFrameState","offsetScaleMatrix","resetTransform","scaleTransform","offsetRotateMatrix","rotateTransform","setUniformMatrixValue","setUniformFloatValue","setUniformFloatVec2","HTMLImageElement","prevValue","program","shader","getProgram","fragmentShaderSource","vertexShaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","getProgramParameter","LINK_STATUS","getAttributeLocation","makeProjectionTransform","uniform2fv","setUniformFloatVec4","uniform4fv","uniformMatrix4fv","enableAttributeArray_","attribName","enableAttributes","attr","getByteSizeFromType","computeAttributesStride","Uint16Array","WebGLLayerRenderer","inversePixelTransform_","postProcesses_","helper","removeHelper","dispatchPreComposeEvent","dispatchPostComposeEvent","incrementGroup","groupNumber","afterHelperCreated","prepareFrameInternal","WebGLLayerRenderer$1","Uniforms","ValueTypes","Operators","getValueType","stringify","valueArr","v","operator","getReturnType","isTypeUnique","valueType","numberToGlsl","arrayToGlsl","colorToGlsl","getStringNumberEquivalent","string","stringLiteralsMap","stringToGlsl","expressionToGlsl","typeHint","toGlsl","assertNumber","assertNumbers","assertString","assertBoolean","assertArgsCount","assertArgsMinCount","assertArgsMaxCount","assertArgsEven","assertUniqueInferredType","types","uniformNameForVariable","variableName","inFragmentShader","variables","PALETTE_TEXTURE_ARRAY","colors","numColors","palette","candidate","paletteTextures","paletteName","paletteTexture","PaletteTexture","GET_BAND_VALUE_FUNC","getEqualOperator","getDecisionOperator","arg","toStyle","flatStyle","prefix","iconSrc","iconImg","shapePoints","circleRadius","band","functions","ifBlocks","colorIndex","bandIndex","parsedArgs","interpolation","outputType","exponent","stop1","output1","stop2","fallback","assertArgsOdd","$ol$structs$LinkedList","first_","last_","head_","circular_","length_","insertItem","next","removeItem","firstItem","lastItem","nextItem","getNextItem","prevItem","getPrevItem","getCurrItem","setFirstItem","list","knownMapMediaTypes","knownVectorMediaTypes","getMapTileUrlTemplate","links","mediaType","tileUrlTemplate","fallbackUrlTemplate","link","rel","getVectorTileUrlTemplate","supportedMediaTypes","hrefLookup","supportedMediaType","parseTileMatrixSet","sourceInfo","tileMatrixSet","tileMatrixSetLimits","crs","backwards","matrices","tileMatrices","matrixLookup","matrix","limitLookup","limit","tileMatrix","pointOfOrigin","cellSize","matrixWidth","matrixHeight","tileMapWidth","minTileCol","maxTileCol","tileMapHeight","cornerOfOrigin","minTileRow","maxTileRow","intersectExtents","grid","urlTemplate","urlFunction","upsideDown","tileCol","tileRow","getTileSetInfo","tileSet","tileMatrixSetLink","tileMatrixSetDefinition","parseTileSetMetadata","$ol$source$OGCMapTile","handleTileSetInfo_","tileSetInfo","logError","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","$ol$render$canvas$Builder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","CanvasInstruction","endGeometry","finish","reverseHitDetectionInstructions","instruction","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$ol$render$canvas$ImageBuilder","CanvasBuilder","imagePixelRatio_","anchorX_","anchorY_","originX_","originY_","declutterImageWithText_","myBegin","sharedData","$ol$render$canvas$LineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$ol$render$canvas$PolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","$ol$render$canvas$TextBuilder","labels_","fillStates","strokeStates","textStates","textKey_","fillKey_","strokeKey_","geometryType","geometryWidths","beg","saveTextStates_","p0","p1","p2","p3","flatOffset","o","oo","cc","chunk","chunkBegin","drawChars_","strokeKey","textKey","fillKey","baseline","BATCH_CONSTRUCTORS","PolygonBuilder","Default","Builder","ImageBuilder","LineStringBuilder","TextBuilder","$ol$render$canvas$BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","substring","lineStringLength","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","line","$ol$render$canvas$Executor","alignFill_","coordinateCache_","renderedTransform_","widths_","createLabel","textIsArray","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","strokePadding","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","transformSetFromArray","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","part","execute","executeHitDetection","ORDER","circlePixelIndexArrayCache","getPixelIndexArray","maxDistanceSq","distances","pixelIndex","$ol$render$canvas$ExecutorGroup","allInstructions","renderBuffer","renderBuffer_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","Executor","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","idx","executor","builderTypes","HIT_DETECT_RESOLUTION","createHitDetectionImageData","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgContext","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","$ol$renderer$canvas$VectorLayer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","compositionContext_","renderWorlds","executorGroup","vectorSource","endWorld","world","setupCompositionContext_","compositionContext","releaseCompositionContext_","transformToString","lastIndexOf","animating","interacting","updateWhileAnimating","getUpdateWhileAnimating","updateWhileInteracting","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","defaultRenderOrder","loadExtents","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","getDeclutter","userExtent","getSquaredRenderTolerance","replayGroupInstructions","ExecutorGroup","$ol$renderer$canvas$VectorImageLayer","vectorRenderer_","CanvasVectorLayerRenderer","layerImageRatio_","getImageRatio","coordinateToVectorPixelTransform_","renderedPixelToCoordinateTransform_","vectorPixel","vectorRenderer","imageLayerState","imageFrameState","emptyImage","setCenterAndRadius","getRadiusSquared_","$ol$geom$Circle","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","cloneGeometries","geometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","clonedGeometries","$ol$geom$GeometryCollection","interpolatePoint","cumulativeLengths","lineStringCoordinateAtM","extrapolate","lo","hi","m0","lineStringsCoordinateAtM","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","getCoordinateAtM","getCoordinateAt","$ol$geom$LineString","lineStrings","appendLineString","multiLineString","getLineString","getLineStrings","midpoints","$ol$geom$MultiLineString","appendPoint","multiPoint","getPoint","$ol$geom$MultiPoint","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","thisLayout","polygons","thisEndss","appendPolygon","newEndss","multiPolygon","linearRingssArea","linearRingssCenter","getInteriorPoints","getPolygon","prevEnds","getPolygons","lastEnds","$ol$geom$MultiPolygon","RenderFeature","type_","flatCoordinates_","flatMidpoints_","properties_","midpoint","toGeometry","$ol$render$Feature","registered","register","proj4","projCodes","defs","def","projName","axis","to_meter","code1","proj1","code2","proj2","epsgLookup","ok","$ol$layer$BaseVector","declutter_","declutter","updateWhileAnimating_","updateWhileInteracting_","setRenderOrder","renderOrder","styleLike","toStyleFunction","$ol$layer$Vector","BaseVectorLayer","geoA","geoB","geoStack","fractionStack","fractions","geoM","fracA","fracB","fracM","maxIterations","meridian","lon","frac","parallel","lon2","DEFAULT_STROKE_STYLE","INTERVALS","$ol$layer$Graticule","VectorLayer","maxLines","targetSize","showLabels","lonLabelFormatter","latLabelFormatter","lonLabelPosition","latLabelPosition","lonLabelStyle","latLabelStyle","intervals","maxLat_","maxLon_","minLat_","minLon_","maxX_","maxY_","minX_","minY_","targetSize_","maxLines_","meridians_","parallels_","strokeStyle_","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","bottomLeft_","bottomRight_","topLeft_","topRight_","meridiansLabels_","parallelsLabels_","lonLabelFormatter_","latLabelFormatter_","lonLabelPosition_","latLabelPosition_","lonLabelStyleBase_","lonLabelStyle_","latLabelStyleBase_","latLabelStyle_","drawLabels_","intervals_","loaderFunction","strategyFunction","featurePool_","lineStyle_","loadedExtent_","realWorldExtent","renderExtent","equivalentProjection","updateProjectionInfo_","createGraticule_","featuresColl","poolIndex","addMeridian_","minLat","maxLat","getMeridian_","geom","addParallel_","minLon","maxLon","getParallel_","rotationCenter","rotationExtent","unrotatedWidth","unrotatedHeight","startWorld","labelsAtStart","vectorContext","textPoint","getMeridianPoint_","getParallelPoint_","getInterval_","validCenterP","centerLonLat","centerLon","centerLat","cnt","validExtentP","validExtent","clampedLat","clampedBottom","clampedTop","getMeridians","clampedLeft","clampedRight","getParallels","toLonLatTransform","lonLatCoordinates","worldExtentP","tmpArray4","WebGLRenderTarget$1","helper_","framebuffer_","dataCacheDirty_","updateSize_","clearCachedData","readAll","readPixels","readPixel","WebGLWorkerMessageType","earcut","holeIndices","dim","invSize","hasHoles","outerLen","outerNode","linkedList","triangles","steiner","getLeftmost","compareX","eliminateHole","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","filterPoints","again","ear","zOrder","prevZ","nextZ","q","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","ax","bx","cx","ay","by","cy","pointInTriangle","minZ","maxZ","locallyInside","isValidDiagonal","splitPolygon","hole","bridge","hx","hy","qx","mx","my","tanMin","sectorContainsSector","findHoleBridge","bridgeReverse","leftmost","py","intersectsPolygon","inside","middleInside","q1","q2","o1","sign","o2","o3","o4","onSegment","an","bp","sum","colorEncodeId","radix","divide","exports","earcutExports","default","deviation","polygonArea","trianglesArea","flatten","holes","holeIndex","WebGLPointsLayerRenderer$1","projectionMatrixTransform","sourceRevision_","verticesBuffer_","WebGLArrayBuffer","hitVerticesBuffer_","indicesBuffer_","vertexShader_","fragmentShader_","program_","hitDetectionEnabled_","hitFragmentShader","hitVertexShader","hitVertexShader_","hitFragmentShader_","hitProgram_","customAttributes","attribute","hitDetectionAttributes","currentTransform_","renderTransform_","invertRenderTransform_","renderInstructions_","hitRenderInstructions_","hitRenderTarget_","generateBuffersRun_","worker_","createWebGLWorker","received","projectionTransform","hitDetection","vertexBuffer","indexBuffer","makeInverseTransform","renderInstructions","generateBuffersRun","featureCache_","featureCount_","sourceListenKeys_","handleSourceFeatureAdded_","handleSourceFeatureChanged_","handleSourceFeatureDelete_","handleSourceFeatureClear_","WebGLRenderTarget","renderCount","translateTransform","renderHitDetection","viewNotMoving","sourceChanged","BaseVector","rebuildBuffers_","totalInstructionsCount","totalHitInstructionsCount","featureCache","tmpCoords","tmpColor","hitColor","renderIndex","hitIndex","featureUid","customAttributesCount","hitMessage","mult","colorDecodeId","DEFAULT_GRADIENT","$ol$layer$Heatmap","gradient","blur","gradient_","handleGradientChanged_","setGradient","setBlur","weightFunction_","getBlur","getGradient","createLinearGradient","addColorStop","createGradient","WebGLPointsLayerRenderer","u_size","u_blurSlope","u_gradientTexture","u_opacity","$ol$layer$VectorImage","imageRatio","imageRatio_","CanvasVectorImageLayerRenderer","DragAndDropEventType","DragAndDropEvent","file","$ol$interaction$DragAndDrop","readAsBuffer_","formats_","formatConstructors","dropListenKeys_","source_","handleResult_","formats","TextDecoder","tryReadFeatures_","registerListeners_","dropArea","handleDrop","handleStop","unregisterListeners_","files","dataTransfer","reader","FileReader","readAsArrayBuffer","readAsText","dropEffect","$ol$interaction$DragRotateAndZoom","lastMagnitude_","magnitude","angleDelta","DrawEventType","DrawEvent","getSquaredDistance","getCoordinate","getCumulativeSquaredDistance","endIndex","lowIndex","highIndex","lowWholeIndex","highWholeIndex","interpolateCoordinate","appendGeometryTraceTargets","targets","appendTraceTarget","polys","sharedUpdateInfo","ring","getPointSegmentRelationship","sharedRel","getDefaultStyleFunction","$ol$interaction$Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","pointerType_","freehand_","features_","snapTolerance_","snapTolerance","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryLayout_","geometryLayout","mode","squaredLength","squaredCoordinateDistance","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","geometryName","freehandCondition_","freehand","freehandCondition","traceCondition_","setTrace","trace","traceState_","traceSource_","traceSource","updateState_","getOverlay","move","addToDrawing_","startDrawing_","deactivateTrace_","toggleTraceState_","getTraceTargets","startPx","targetIndex","addOrRemoveTracedCoordinates_","previouslyForward","addTracedCoordinates_","removeTracedCoordinates_","fromIndex","toIndex","removeLastPoints_","appendCoordinates","updateTrace_","traceState","updatedTraceTarget","closestTargetDistance","newTargetIndex","newEndIndex","minSegmentDistance","coordinateIndex","newTarget","considerBothDirections","newCoordinate","forwardDistance","reverseDistance","getTraceTargetUpdate","oldTarget","tracing","startingToDraw","finishDrawing","atFinish_","abortDrawing","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","createOrUpdateCustomSketchLine_","sketchLineGeom","removeLastPoint","sketchFeature","abortDrawing_","newDrawing","ending","sketchFeatures","overlaySource","ExtentEventType","ExtentEvent","getDefaultExtentStyleFunction","getDefaultPointerStyleFunction","getPointHandler","fixedPoint","getEdgeHandler","fixedP1","fixedP2","$ol$interaction$Extent","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","vertexOverlay_","pointerStyle","snapToVertex_","pixelCoordinate","sortByDistance","getExtentInternal","segments","getSegments","closestSegment","vertex","vertexPixel","coordinateDistance","pixel1","pixel2","squaredDist1","squaredDist2","dist","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","vertexFeature","getOpposingPoint","x_","y_","readNumber","writeNumber","to5","differentNumber","$ol$interaction$Link","animationOptions","animationOptions_","replace_","prefix_","initial_","getParamName_","get_","set_","delete_","delete","oldMap","updateUrl_","handleChangeLayerGroup_","searchParams","history","replaceState","updateView","viewProperties","layersParam","initial","visibilities","pushState","tempSegment","ModifyEventType","ModifyEvent","compareIndexes","projectedDistanceToSegmentDataSquared","pointCoordinates","segmentData","distanceToCenterSquared","distanceToCircumference","closestOnSegmentData","$ol$interaction$Modify","boundHandleFeatureChange_","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","featuresBeingModified_","rBush_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","hitDetection_","handleSourceAdd_","handleSourceRemove_","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","snapToPointer_","snapToPointer","writer","handlePointerAtPixel_","willModifyFeatures_","ss","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","nodeToRemove","depth","centerSegmentData","circumferenceSegmentData","featureSegments","createOrUpdateVertexFeature_","removePoint","dragSegment","setGeometryCoordinates_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","insertVertex_","nodes","hitPointGeometry","bufferExtent","vertexSegments","geometryUid","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","dragSegments","segmentsByFeature","component","newIndex","deleted","SelectEventType","SelectEvent","selected","deselected","originalFeatureStyles","Select","boundAddFeature_","boundRemoveFeature_","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","getHitTolerance","setHitTolerance","restorePreviousStyle_","applySelectedStyle_","removeFeatureLayerAssociation_","$ol$interaction$Select","getFeatureFromEvent","$ol$interaction$Snap","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","GEOMETRY_SEGMENTERS_","segmentPointGeometry_","segmentLineStringGeometry_","segmentPolygonGeometry_","segmentMultiPointGeometry_","segmentMultiLineStringGeometry_","segmentMultiPolygonGeometry_","segmentGeometryCollectionGeometry_","segmentCircleGeometry_","feature_uid","segmenter","segmentsData","getFeatures_","snapTo","updateFeature_","featuresToUpdate","unlisten","unregister","currentMap","projectedCoordinate","segmentsLength","closestVertex","squaredPixelTolerance","getResult","tempVertexCoord","segmentStart","segmentEnd","TranslateEventType","TranslateEvent","startCoordinate","$ol$interaction$Translate","lastCoordinate_","startCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","flipXY","destOffset","$ol$format$Feature","defaultFeatureProjection","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","write","transformExtentWithOptions","getObject","$ol$format$JSONFeature","FeatureFormat","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","writeFeatureObject","writeFeaturesObject","writeGeometryObject","GEOMETRY_READERS","getGeometryLayout","paths","GEOMETRY_WRITERS","esriJSON","hasZM","getHasZM","hasZ","hasM","esriJSONPolygon","flatRing","outerRings","matched","outerRing","convertRings","geometryReader","geometryWriter","$ol$format$EsriJSON","JSONFeature","idField","esriJSONFeature","esriJSONFeatures","objectIdFieldName","wkid","objects","XMLFeature$1","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","readBoolean","readBooleanString","readDateTime","dateTime","readDecimal","readDecimalString","readPositiveInteger","readNonNegativeIntegerString","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","writeDecimalTextNode","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","GPX_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","TRK_SEQUENCE","TRK_SERIALIZERS","writeWptType","RTE_PARSERS","cmt","desc","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","layoutOptions","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","writeLink","RTEPT_TYPE_SEQUENCE","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","GEOMETRY_TYPE_TO_NODENAME","GPX_NODE_FACTORY","getAttribute","applyLayoutOptions","setAttributeNS","$ol$format$GPX","XMLFeature","readExtensions_","readExtensions","handleReadExtensions_","extensionsNode","featureReader","gpx","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","$ol$format$GeoJSON","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","$ol$format$TextFeature","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","B_RECORD_RE","H_RECORD_RE","HFDTE_RECORD_RE","NEWLINE_RE","$ol$format$IGC","TextFeature","altitudeMode_","altitudeMode","year","month","day","lastDateTime","hour","minute","second","UTC","GX_NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","insetPixels","PLACEMARK_PARSERS","ExtendedData","extendedDataParser","Region","regionParser","MultiGeometry","readMultiGeometry","readLineString","readLinearRing","readPoint","readPolygon","readStyle","StyleMap","styleMapValue","readStyleMapValue","placemarkObject","address","description","phoneNumber","styleUrl","readStyleURL","visibility","MultiTrack","GX_MULTITRACK_GEOMETRY_PARSERS","Track","readGxTrack","NETWORK_LINK_PARSERS","Link","readURI","REGION_PARSERS","LatLonAltBox","LAT_LON_ALT_BOX_PARSERS","regionObject","Lod","LOD_PARSERS","lodObject","KML_SEQUENCE","KML_SERIALIZERS","Document","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","Placemark","writePlacemark","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_FILL_STYLE","DEFAULT_NO_IMAGE_STYLE","DEFAULT_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","DEFAULT_TEXT_STYLE","DEFAULT_STYLE","TEXTAREA","DEFAULT_STYLE_ARRAY","scaleForSize","defaultIconUrlFunction","findStyle","styleValue","defaultStyle","sharedStyles","readColor","hexColor","readFlatCoordinates","re","baseURI","readScale","STYLE_MAP_PARSERS","Pair","pairObject","PAIR_PARSERS","ICON_STYLE_PARSERS","iconObject","ICON_PARSERS","hotSpot","xunits","yunits","LABEL_STYLE_PARSERS","LINE_STYLE_PARSERS","POLY_STYLE_PARSERS","outline","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","GX_TRACK_PARSERS","when","whens","gxTrackObject","GEOMETRY_FLAT_COORDINATES_PARSERS","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","extrude","tessellate","MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","setCommonGeometryProperties","FLAT_LINEAR_RINGS_PARSERS","innerBoundaryIs","innerBoundaryFlatLinearRings","INNER_BOUNDARY_IS_PARSERS","outerBoundaryIs","flatLinearRing","OUTER_BOUNDARY_IS_PARSERS","flatLinearRings","STYLE_PARSERS","IconStyle","styleObject","IconObject","drawIcon","iconUrlFunction_","resizeScale","LabelStyle","LineStyle","PolyStyle","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DATA_PARSERS","displayName","EXTENDED_DATA_PARSERS","Data","featureObject","SchemaData","SCHEMA_DATA_PARSERS","SimpleData","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","writeColorTextNode","rgba","abgr","hex","EXTENDEDDATA_NODE_SERIALIZERS","pair","DATA_NODE_FACTORY","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","icon","vec2","writeScaleTextNode","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","factory","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","namesAndValues","names","pointStyles","lineStyles","polyStyles","STYLE_SEQUENCE","STYLE_SERIALIZERS","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","styleArray","writeStyles_","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","POLY_STYLE_SEQUENCE","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","POLY_STYLE_SERIALIZERS","iconProperties","$ol$format$KML","defaultStyle_","extractStyles_","extractStyles","writeStyles","sharedStyles_","showPointNames_","showPointNames","iconUrlFunction","readDocumentOrFolder_","Folder","readPlacemark_","readSharedStyle_","readSharedStyleMap_","drawName","multiGeometryPoints","featureStyle","nameStyle","foundStyle","textOffset","createNameStyleFunction","createFeatureStyleFunction","styleUri","fs","readName","readNameFromDocument","readNameFromNode","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","kml","xmlnsUri","ieee754","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","LN2","pbf","Pbf","require$$0","ArrayBuffer","isView","Varint","Fixed64","Bytes","Fixed32","SHIFT_LEFT_32","SHIFT_RIGHT_32","utf8TextDecoder","readPackedEnd","readVarint","toNum","isSigned","makeRoomForExtraLength","startPos","extraLen","realloc","writePackedVarint","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","readInt32","destroy","readFields","readField","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","read","readDouble","readVarintRemainder","readVarint64","readSVarint","subarray","readUtf8TextDecoder","str","b3","b0","bytesPerSequence","readUtf8","readBytes","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","writeUtf8","writeBytes","writeRawMessage","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","layersPBFReader","layerPBFReader","featurePBFReader","readRawFeature","$ol$format$MVT","featureClass_","featureClass","layerName_","layerName","idProperty_","idProperty","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","ctor","PBF","pbfLayers","pbfLayer","WAY_PARSERS","nd","ndrefs","readTag","PARSERS","tags","NODE_PARSERS","way","ways","$ol$format$OSMXML","XML$1","readFromDocument","readFromNode","readHref","ServiceIdentification","SERVICE_IDENTIFICATION_PARSERS","ServiceProvider","SERVICE_PROVIDER_PARSERS","OperationsMetadata","OPERATIONS_METADATA_PARSERS","ADDRESS_PARSERS","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","ALLOWED_VALUES_PARSERS","Value","CONSTRAINT_PARSERS","AllowedValues","CONTACT_INFO_PARSERS","Phone","PHONE_PARSERS","Address","DCP_PARSERS","HTTP","HTTP_PARSERS","Get","REQUEST_METHOD_PARSERS","Post","OPERATION_PARSERS","DCP","Operation","Voice","Facsimile","Constraint","SERVICE_CONTACT_PARSERS","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","$ol$format$OWS","XML","owsObject","encodeDeltas","numbers","lastNumbers","encodeFloats","decodeDeltas","encoded","decodeFloats","encodeSignedIntegers","decodeSignedIntegers","encodeUnsignedIntegers","decodeUnsignedIntegers","encodeUnsignedInteger","current","$ol$format$Polyline","factor_","transformVertex","arcs","concatenateArcs","polyArray","ringCoords","indices","readFeaturesFromGeometryCollection","readFeatureFromGeometry","transformArc","$ol$format$TopoJSON","topoJSONTopology","transformArcs","topoJSONFeatures","objectName","GMLNS","ONLY_WHITESPACE_RE","GMLBase","featureType","featureNS","srsName","schemaLocation","FEATURE_COLLECTION_PARSERS","namespace","featureMember","readFeaturesInternal","featureMembers","defaultPrefix","ns","featureTypes","readFeatureElement","readGeometryOrExtent","GEOMETRY_PARSERS","readExtentElement","readGeometryElement","readFeatureElementInternal","asFeature","_content_","fid","readMultiPoint","MULTIPOINT_PARSERS","readMultiLineString","MULTILINESTRING_PARSERS","readMultiPolygon","MULTIPOLYGON_PARSERS","pointMemberParser","POINTMEMBER_PARSERS","lineStringMemberParser","LINESTRINGMEMBER_PARSERS","polygonMemberParser","POLYGONMEMBER_PARSERS","internalOptions","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","GMLBase$1","MULTIGEOMETRY_TO_MEMBER_NODENAME","MultiCurve","MultiSurface","GML2","containerSrs","coordsGroups","readBox","BOX_PARSERS_","innerBoundaryIsParser","outerBoundaryIsParser","GEOMETRY_NODE_FACTORY_","multiSurface","surface","multiCurve","writeFeatureElement","writeGeometryElement","writeCurveOrLineString","createCoordinatesNode_","writeCoordinates_","writeCurveSegments_","writeLineStringOrCurveMember","writeMultiCurveOrLineString","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","GEOMETRY_SERIALIZERS","getCoords_","writeSurfaceOrPolygon","RING_SERIALIZERS","RING_NODE_FACTORY_","patches","writeSurfacePatches_","exteriorWritten","writeRing","writeLinearRing","writePoint","writeMultiPoint","POINTMEMBER_SERIALIZERS","writePointMember","writeMultiSurfaceOrPolygon","SURFACEORPOLYGONMEMBER_SERIALIZERS","writeSurfaceOrPolygonMember","writeEnvelope","ENVELOPE_SERIALIZERS","Box","Curve","Surface","Envelope","curveMember","surfaceMember","lowerCorner","upperCorner","GML2$1","GML3","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve","MULTICURVE_PARSERS","readFlatCurveRing","readMultiSurface","MULTISURFACE_PARSERS","curveMemberParser","CURVEMEMBER_PARSERS","surfaceMemberParser","SURFACEMEMBER_PARSERS","readPatch","PATCHES_PARSERS","readSegment","SEGMENTS_PARSERS","readPolygonPatch","readLineStringSegment","interiorParser","exteriorParser","readSurface","SURFACE_PARSERS","readCurve","CURVE_PARSERS","readEnvelope","ENVELOPE_PARSERS","readFlatPos","readFlatPosList","contextDimension","writePos_","srsDimension","writePosList_","posList","writeFeatureMembers_","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","Ring","GML3$1","GML32","GML32$1","Filter$1","tagName_","getTagName","LogicalNary$1","Filter","And$1","LogicalNary","Bbox$1","boundedBy","member","TRANSACTION_SUMMARY_PARSERS","totalInserted","totalUpdated","totalDeleted","TRANSACTION_RESPONSE_PARSERS","TransactionSummary","readTransactionSummary","InsertResults","readInsertResults","QUERY_SERIALIZERS","PropertyName","TRANSACTION_SERIALIZERS","Insert","Update","writeUpdate","Delete","writeDelete","writeProperty","Native","writeNative","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","SCHEMA_LOCATIONS","GML_FORMATS","serializeTransactionRequest","OGC_FID_PARSERS","FeatureId","fidParser","INSERT_RESULTS_PARSERS","gmlVersion","writeOgcFidFilter","getTypeName","featurePrefix","typeName","nativeElement","vendorId","safeToIgnore","GETFEATURE_SERIALIZERS","Query","writeQuery","During","writeDuringFilter","And","writeLogicalFilter","Or","Not","writeNotFilter","BBOX","writeBboxFilter","Contains","writeSpatialFilter","Intersects","Within","DWithin","writeDWithinFilter","PropertyIsEqualTo","writeComparisonFilter","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","writeIsNullFilter","PropertyIsBetween","writeIsBetweenFilter","PropertyIsLike","writeIsLikeFilter","Disjoint","ResourceId","propertyNames","typeNameAttr","getFilterNS","writeFilterCondition","writePropertyName","unit","writeExpression","propertyName","timePeriod","writeTimeInstant","matchCase","writeLiteral","expression","lowerBoundary","upperBoundary","wildCard","singleChar","escapeChar","pattern","timeInstant","timePosition","writeGetFeature","$ol$format$WFS","featureType_","featureNS_","gmlFormat_","gmlFormat","schemaLocation_","getFeatureType","setFeatureType","featuresNS","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","handle","outputFormat","maxFeatures","resultType","viewParams","combineBboxAndFilter","completeFilter","bboxFilter","Bbox","bboxFilterFn","Function","andFilterFn","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","createTransactionRequest","nativeElements","$ol$format$WMSGetFeatureInfo","readFeatures_","layerElement","toRemove","layerFeatures","gmlFeatures","events","FullScreenEventType","isFullScreenSupported","requestFullscreen","fullscreenEnabled","isFullScreen","fullscreenElement","requestFullScreen","$ol$control$FullScreen","isInFullscreen_","boundHandleMapTargetChange_","handleMapTargetChange_","cssClassName_","documentListeners_","activeClassName_","activeClassName","inactiveClassName_","inactiveClassName","labelNode_","labelActive","labelActiveNode_","button_","setClassName_","handleFullScreen_","exitFullscreen","exitFullScreen","requestFullScreenWithKeys","handleFullScreenChange_","wasInFullscreen","fullscreen","PROJECTION","COORDINATE_FORMAT","$ol$control$MousePosition","coordinateFormat","setCoordinateFormat","renderOnMouseOut_","placeholder","placeholder_","renderedHTML_","mapProjection_","getCoordinateFormat","handleMouseMove","updateHTML_","handleMouseOut","html","MAX_RATIO","MIN_RATIO","$ol$control$OverviewMap","boundHandleRotationChanged_","handleRotationChanged_","viewExtent_","ovmapDiv_","view_","ovmap","Map","ovmap_","boxSizing","boxOverlay_","Overlay","scope","overlayBox","mousePosition","endMoving","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","updateBoxAfterOvmapIsRendered_","newView","validateExtent_","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","updateBox_","ovresolution","ovmapPostrenderKey_","getOverviewMap","UNITS_PROP","LEADING_DIGITS","DEFAULT_DPI","$ol$control$ScaleLine","bar","innerElement_","viewState_","minWidth_","minWidth","maxWidth_","maxWidth","renderedWidth_","handleUnitsChanged_","setUnits","scaleBar_","scaleBarSteps_","scaleBarText_","dpi_","setDpi","pointResolutionUnits","nominalCount","suffix","metersPerDegree","decimalCount","previousCount","previousWidth","previousDecimalCount","createScaleBar","resolutionScale","getScaleForResolution","mapScale","toLocaleString","stepWidth","scaleSteps","createMarker","cls","createStepText","isLast","lengthString","Direction","$ol$control$ZoomSlider","currentResolution_","direction_","heightLimit_","widthLimit_","startX_","startY_","thumbSize_","sliderInitialized_","thumbElement","containerElement","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","initSlider_","containerWidth","containerHeight","containerStyle","thumb","thumbStyle","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","drag","setThumbPosition_","getPositionForResolution_","amount","$ol$control$ZoomToExtent","handleZoomToExtent","ol","$ol$Collection","_ol_Collection$CollectionEvent","_ol_DataTile$asArrayLike","_ol_DataTile$asImageLike","_ol_DataTile$toArray","_ol_Feature$createStyleFunction","Geolocation","_ol_Geolocation$GeolocationError","_ol_Image$listenImage","_ol_Object$ObjectEvent","_ol_Observable$unByKey","_ol_TileQueue$getTilePriority","_ol_TileRange$createOrUpdate","VectorRenderTile","_ol_View$createCenterConstraint","_ol_View$createResolutionConstraint","_ol_View$createRotationConstraint","_ol_View$isNoopAnimation","_ol_array$ascending","_ol_array$binarySearch","_ol_array$equals","_ol_array$extend","_ol_array$isSorted","_ol_array$linearFindNearest","_ol_array$reverseSubArray","stableSort","compareFnc","asserts","_ol_asserts$assert","centerconstraint","_ol_centerconstraint$createExtent","_ol_centerconstraint$none","_ol_color$asArray","_ol_color$asString","_ol_color$fromString","_ol_color$isStringColor","_ol_color$normalize","_ol_color$toString","colorlike","_ol_colorlike$asColorLike","_ol_console$error","setLevel","_ol_console$warn","FullScreen","MousePosition","OverviewMap","ScaleLine","ZoomSlider","ZoomToExtent","_ol_control_defaults$defaults","_ol_coordinate$add","_ol_coordinate$closestOnCircle","_ol_coordinate$closestOnSegment","createStringXY","_ol_coordinate$degreesToStringHDMS","_ol_coordinate$distance","_ol_coordinate$equals","_ol_coordinate$format","_ol_coordinate$getWorldsAway","_ol_coordinate$rotate","_ol_coordinate$scale","_ol_coordinate$squaredDistance","_ol_coordinate$squaredDistanceToSegment","toStringHDMS","_ol_coordinate$toStringXY","_ol_coordinate$wrapX","css","_ol_css$CLASS_COLLAPSED","_ol_css$CLASS_CONTROL","_ol_css$CLASS_HIDDEN","_ol_css$CLASS_SELECTABLE","_ol_css$CLASS_UNSELECTABLE","_ol_css$CLASS_UNSUPPORTED","_ol_css$getFontParameters","dom","_ol_dom$createCanvasContext2D","_ol_dom$outerHeight","_ol_dom$outerWidth","_ol_dom$releaseCanvas","_ol_dom$removeChildren","_ol_dom$removeNode","_ol_dom$replaceChildren","_ol_dom$replaceNode","_ol_easing$easeIn","_ol_easing$easeOut","_ol_easing$inAndOut","_ol_easing$linear","upAndDown","_ol_events_Event$stopPropagation","_ol_events_condition$all","_ol_events_condition$altKeyOnly","_ol_events_condition$altShiftKeysOnly","_ol_events_condition$always","click","doubleClick","_ol_events_condition$focus","_ol_events_condition$focusWithTabindex","_ol_events_condition$mouseActionButton","_ol_events_condition$mouseOnly","_ol_events_condition$never","_ol_events_condition$noModifierKeys","penOnly","pointerEvt","platformModifierKeyOnly","pointerMove","_ol_events_condition$primaryAction","_ol_events_condition$shiftKeyOnly","_ol_events_condition$singleClick","_ol_events_condition$targetNotEditable","touchOnly","_ol_events$listen","_ol_events$listenOnce","_ol_events$unlistenByKey","_ol_extent$applyTransform","_ol_extent$approximatelyEquals","_ol_extent$boundingExtent","_ol_extent$buffer","_ol_extent$clone","_ol_extent$closestSquaredDistanceXY","_ol_extent$containsCoordinate","_ol_extent$containsExtent","_ol_extent$containsXY","_ol_extent$coordinateRelationship","_ol_extent$createEmpty","_ol_extent$createOrUpdate","_ol_extent$createOrUpdateEmpty","_ol_extent$createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","_ol_extent$createOrUpdateFromFlatCoordinates","createOrUpdateFromRings","_ol_extent$equals","_ol_extent$extend","_ol_extent$extendCoordinate","_ol_extent$extendCoordinates","_ol_extent$extendFlatCoordinates","_ol_extent$extendRings","_ol_extent$extendXY","_ol_extent$forEachCorner","_ol_extent$getArea","_ol_extent$getBottomLeft","_ol_extent$getBottomRight","_ol_extent$getCenter","_ol_extent$getCorner","getEnlargedArea","_ol_extent$getForViewAndSize","_ol_extent$getHeight","_ol_extent$getIntersection","getIntersectionArea","getMargin","_ol_extent$getRotatedViewport","_ol_extent$getTopLeft","_ol_extent$getTopRight","_ol_extent$getWidth","_ol_extent$intersects","_ol_extent$intersectsSegment","_ol_extent$isEmpty","_ol_extent$returnOrUpdate","_ol_extent$scaleFromCenter","_ol_extent$wrapAndSliceX","_ol_extent$wrapX","featureloader","_ol_featureloader$loadFeaturesXhr","setWithCredentials","xhrWithCredentials","_ol_featureloader$xhr","EsriJSON","_ol_format_Feature$transformExtentWithOptions","_ol_format_Feature$transformGeometryWithOptions","GPX","GeoJSON","IGC","KML","getDefaultFillStyle","getDefaultImageStyle","getDefaultStrokeStyle","getDefaultStyle","getDefaultStyleArray","getDefaultTextStyle","_ol_format_KML$readFlatCoordinates","MVT","OSMXML","OWS","Polyline","_ol_format_Polyline$decodeDeltas","_ol_format_Polyline$decodeFloats","_ol_format_Polyline$decodeSignedIntegers","_ol_format_Polyline$decodeUnsignedIntegers","_ol_format_Polyline$encodeDeltas","_ol_format_Polyline$encodeFloats","_ol_format_Polyline$encodeSignedIntegers","_ol_format_Polyline$encodeUnsignedInteger","_ol_format_Polyline$encodeUnsignedIntegers","TopoJSON","WFS","writeFilter","WMSGetFeatureInfo","xlink","_ol_format_xlink$readHref","xsd","_ol_format_xsd$readBoolean","_ol_format_xsd$readBooleanString","_ol_format_xsd$readDateTime","_ol_format_xsd$readDecimal","_ol_format_xsd$readDecimalString","_ol_format_xsd$readNonNegativeIntegerString","_ol_format_xsd$readPositiveInteger","_ol_format_xsd$readString","_ol_format_xsd$writeBooleanTextNode","_ol_format_xsd$writeCDATASection","_ol_format_xsd$writeDateTimeTextNode","_ol_format_xsd$writeDecimalTextNode","_ol_format_xsd$writeNonNegativeIntegerTextNode","_ol_format_xsd$writeStringTextNode","_ol_functions$FALSE","_ol_functions$TRUE","_ol_functions$VOID","_ol_functions$memoizeOne","_ol_functions$toPromise","_ol_geom_Polygon$circular","_ol_geom_Polygon$fromCircle","_ol_geom_Polygon$fromExtent","_ol_geom_Polygon$makeRegular","_ol_geom_SimpleGeometry$getStrideForLayout","_ol_geom_SimpleGeometry$transformGeom2D","_ol_geom_flat_area$linearRing","_ol_geom_flat_area$linearRings","_ol_geom_flat_area$linearRingss","_ol_geom_flat_center$linearRingss","closest","_ol_geom_flat_closest$arrayMaxSquaredDelta","_ol_geom_flat_closest$assignClosestArrayPoint","_ol_geom_flat_closest$assignClosestMultiArrayPoint","_ol_geom_flat_closest$assignClosestPoint","_ol_geom_flat_closest$maxSquaredDelta","_ol_geom_flat_closest$multiArrayMaxSquaredDelta","_ol_geom_flat_contains$linearRingContainsExtent","_ol_geom_flat_contains$linearRingContainsXY","_ol_geom_flat_contains$linearRingsContainsXY","_ol_geom_flat_contains$linearRingssContainsXY","deflate","_ol_geom_flat_deflate$deflateCoordinate","_ol_geom_flat_deflate$deflateCoordinates","_ol_geom_flat_deflate$deflateCoordinatesArray","_ol_geom_flat_deflate$deflateMultiCoordinatesArray","flip","_ol_geom_flat_flip$flipXY","geodesic","greatCircleArc","geoProjection","cosLat1","sinLat1","cosLat2","sinLat2","cosDeltaLon","sinDeltaLon","D","cosD","sinD","_ol_geom_flat_geodesic$meridian","_ol_geom_flat_geodesic$parallel","inflate","_ol_geom_flat_inflate$inflateCoordinates","_ol_geom_flat_inflate$inflateCoordinatesArray","_ol_geom_flat_inflate$inflateMultiCoordinatesArray","interiorpoint","_ol_geom_flat_interiorpoint$getInteriorPointOfArray","_ol_geom_flat_interiorpoint$getInteriorPointsOfMultiArray","_ol_geom_flat_interpolate$interpolatePoint","_ol_geom_flat_interpolate$lineStringCoordinateAtM","_ol_geom_flat_interpolate$lineStringsCoordinateAtM","intersectsextent","_ol_geom_flat_intersectsextent$intersectsLineString","_ol_geom_flat_intersectsextent$intersectsLineStringArray","_ol_geom_flat_intersectsextent$intersectsLinearRing","_ol_geom_flat_intersectsextent$intersectsLinearRingArray","_ol_geom_flat_intersectsextent$intersectsLinearRingMultiArray","_ol_geom_flat_length$lineStringLength","linearRingLength","perimeter","orient","_ol_geom_flat_orient$inflateEnds","_ol_geom_flat_orient$linearRingIsClockwise","_ol_geom_flat_orient$linearRingsAreOriented","_ol_geom_flat_orient$linearRingssAreOriented","_ol_geom_flat_orient$orientLinearRings","_ol_geom_flat_orient$orientLinearRingsArray","_ol_geom_flat_reverse$coordinates","_ol_geom_flat_segments$forEach","_ol_geom_flat_simplify$douglasPeucker","_ol_geom_flat_simplify$douglasPeuckerArray","douglasPeuckerMultiArray","_ol_geom_flat_simplify$quantize","_ol_geom_flat_simplify$quantizeArray","_ol_geom_flat_simplify$quantizeMultiArray","_ol_geom_flat_simplify$radialDistance","simplifyLineString","highQuality","_ol_geom_flat_simplify$snap","straightchunk","_ol_geom_flat_straightchunk$matchingChunk","textpath","_ol_geom_flat_textpath$drawTextOnPath","topology","lineStringIsClosed","lastCoord","_ol_geom_flat_transform$rotate","_ol_geom_flat_transform$scale","_ol_geom_flat_transform$transform2D","_ol_geom_flat_transform$translate","has","_ol_has$DEVICE_PIXEL_RATIO","_ol_has$FIREFOX","_ol_has$IMAGE_DECODE","_ol_has$MAC","_ol_has$PASSIVE_EVENT_LISTENERS","_ol_has$SAFARI","_ol_has$SAFARI_BUG_237906","_ol_has$WEBKIT","_ol_has$WORKER_OFFSCREEN_CANVAS","DragAndDrop","_ol_interaction_DragAndDrop$DragAndDropEvent","_ol_interaction_DragBox$DragBoxEvent","DragRotateAndZoom","Draw","_ol_interaction_Draw$DrawEvent","createBox","boxCoordinates","createRegularPolygon","internalAngle","Extent","_ol_interaction_Extent$ExtentEvent","_ol_interaction_Interaction$pan","_ol_interaction_Interaction$zoomByDelta","Modify","_ol_interaction_Modify$ModifyEvent","Pointer","_ol_interaction_Pointer$centroid","_ol_interaction_Select$SelectEvent","Snap","Translate","_ol_interaction_Translate$TranslateEvent","_ol_interaction_defaults$defaults","Base","BaseImage","BaseTile","Graticule","Group","_ol_layer_Group$GroupEvent","Heatmap","_ol_layer_Layer$inView","Vector","VectorImage","loadingstrategy","_ol_loadingstrategy$all","math","_ol_math$ceil","_ol_math$clamp","_ol_math$floor","_ol_math$lerp","_ol_math$modulo","_ol_math$round","_ol_math$solveLinearSystem","_ol_math$squaredDistance","_ol_math$squaredSegmentDistance","_ol_math$toDegrees","_ol_math$toFixed","_ol_math$toRadians","net","_ol_net$ClientError","_ol_net$ResponseError","_ol_net$getJSON","_ol_net$jsonp","overrideXHR","_ol_net$resolveUrl","restoreXHR","_ol_obj$clear","_ol_obj$isEmpty","Units","_ol_proj_Units$METERS_PER_UNIT","fromCode","_ol_proj$addCommon","_ol_proj$addCoordinateTransforms","_ol_proj$addEquivalentProjections","_ol_proj$addEquivalentTransforms","_ol_proj$addProjection","_ol_proj$addProjections","clearAllProjections","clearProj","clearTransformFuncs","clearUserProjection","_ol_proj$cloneTransform","_ol_proj$createProjection","_ol_proj$createSafeCoordinateTransform","_ol_proj$createTransformFromCoordinateTransform","_ol_proj$disableCoordinateWarning","epsg3857","_ol_proj_epsg3857$EXTENT","_ol_proj_epsg3857$HALF_SIZE","_ol_proj_epsg3857$MAX_SAFE_Y","_ol_proj_epsg3857$PROJECTIONS","_ol_proj_epsg3857$RADIUS","_ol_proj_epsg3857$WORLD_EXTENT","_ol_proj_epsg3857$fromEPSG4326","_ol_proj_epsg3857$toEPSG4326","epsg4326","_ol_proj_epsg4326$EXTENT","_ol_proj_epsg4326$METERS_PER_UNIT","_ol_proj_epsg4326$PROJECTIONS","_ol_proj_epsg4326$RADIUS","_ol_proj$equivalent","fromLonLat","_ol_proj$fromUserCoordinate","_ol_proj$fromUserExtent","_ol_proj$fromUserResolution","_ol_proj$get","_ol_proj$getPointResolution","_ol_proj$getTransform","_ol_proj$getTransformFromProjections","_ol_proj$getUserProjection","_ol_proj$identityTransform","fromEPSGCode","epsgCode","getEPSGLookup","isRegistered","_ol_proj_proj4$register","setEPSGLookup","_ol_proj_projections$add","_ol_proj_projections$clear","_ol_proj_projections$get","_ol_proj$setUserProjection","toLonLat","lonLat","_ol_proj$toUserCoordinate","_ol_proj$toUserExtent","_ol_proj$toUserResolution","_ol_proj$transform","_ol_proj$transformExtent","transformWithProjections","_ol_proj_transforms$add","_ol_proj_transforms$clear","_ol_proj_transforms$get","useGeographic","toFeature","_ol_render_Feature$toGeometry","BuilderGroup","_ol_render_canvas_ExecutorGroup$getPixelIndexArray","Immediate","_ol_render_canvas_Instruction$beginPathInstruction","_ol_render_canvas_Instruction$closePathInstruction","_ol_render_canvas_Instruction$fillInstruction","_ol_render_canvas_Instruction$strokeInstruction","_ol_render_canvas$checkedFonts","_ol_render_canvas$defaultFillStyle","_ol_render_canvas$defaultFont","_ol_render_canvas$defaultLineCap","_ol_render_canvas$defaultLineDash","defaultLineDashOffset","_ol_render_canvas$defaultLineJoin","defaultLineWidth","_ol_render_canvas$defaultMiterLimit","_ol_render_canvas$defaultPadding","_ol_render_canvas$defaultStrokeStyle","_ol_render_canvas$defaultTextAlign","_ol_render_canvas$defaultTextBaseline","_ol_render_canvas$drawImageOrLabel","_ol_render_canvas$getTextDimensions","hitdetect","_ol_render_canvas_hitdetect$HIT_DETECT_RESOLUTION","_ol_render_canvas_hitdetect$createHitDetectionImageData","_ol_render_canvas_hitdetect$hitDetect","_ol_render_canvas$measureAndCacheTextWidth","_ol_render_canvas$measureTextHeight","_ol_render_canvas$measureTextWidth","_ol_render_canvas$registerFont","rotateAtOffset","_ol_render_canvas$textHeights","getRenderPixel","_ol_render$getVectorContext","toContext","Composite","_ol_renderer_canvas_Layer$canvasPool","VectorImageLayer","vector","_ol_renderer_vector$defaultOrder","_ol_renderer_vector$getSquaredTolerance","_ol_renderer_vector$getTolerance","_ol_renderer_vector$renderFeature","_ol_reproj$calculateSourceExtentResolution","_ol_reproj$calculateSourceResolution","_ol_reproj$canvasPool","common","_ol_reproj_common$ERROR_THRESHOLD","_ol_reproj$render","resolutionconstraint","_ol_resolutionconstraint$createMinMaxResolution","_ol_resolutionconstraint$createSnapToPower","_ol_resolutionconstraint$createSnapToResolutions","rotationconstraint","_ol_rotationconstraint$createSnapToN","_ol_rotationconstraint$createSnapToZero","_ol_rotationconstraint$disable","_ol_rotationconstraint$none","_ol_size$buffer","_ol_size$hasArea","_ol_size$scale","_ol_size$toSize","BingMaps","_ol_source_BingMaps$quadKey","Cluster","_ol_source_Image$ImageSourceEvent","_ol_source_Image$defaultImageLoadFunction","ImageArcGISRest","ImageStatic","ImageWMS","OGCMapTile","OSM","_ol_source_OSM$ATTRIBUTION","Raster","_ol_source_Raster$Processor","_ol_source_Raster$RasterSourceEvent","_ol_source_Raster$newImageData","Stamen","_ol_source_Tile$TileSourceEvent","TileArcGISRest","TileDebug","TileJSON","TileWMS","UTFGrid","_ol_source_UTFGrid$CustomTile","_ol_source_Vector$VectorSourceEvent","WMTS","optionsFromCapabilities","wmtsCap","tileMatrixSets","findIndex","supportedCRS","matrixSetObj","projConfig","switchXY","selectedMatrixLimit","MinTileCol","MinTileRow","MaxTileCol","MatrixWidth","MaxTileRow","MatrixHeight","tileMatrixValue","Identifier","ScaleDenominator","TopLeftCorner","tileSpanX","TileWidth","tileSpanY","TileHeight","matrixSetExtent","wgs84BoundingBox","wgs84ProjectionExtent","wgs84MatrixSetExtent","gets","encodings","DEFAULT_WMS_VERSION","ogcTileUtil","_ol_source_ogcTileUtil$getMapTileUrlTemplate","_ol_source_ogcTileUtil$getTileSetInfo","_ol_source_ogcTileUtil$getVectorTileUrlTemplate","sourcesFromTileGrid","sourceCache","tileGridExtent","wantedSources","wms","_ol_source_wms$DEFAULT_VERSION","sphere","_ol_sphere$DEFAULT_RADIUS","_ol_sphere$getDistance","_ol_sphere$offset","_ol_string$compareVersions","_ol_string$padNumber","structs","LinkedList","_ol_structs_PriorityQueue$DROP","_ol_style_IconImage$get","_ol_style_IconImageCache$shared","_ol_style_Style$createDefaultStyle","_ol_style_Style$createEditingStyle","_ol_style_Style$toFunction","expressions","_ol_style_expressions$Operators","_ol_style_expressions$PALETTE_TEXTURE_ARRAY","_ol_style_expressions$arrayToGlsl","_ol_style_expressions$colorToGlsl","_ol_style_expressions$expressionToGlsl","_ol_style_expressions$getStringNumberEquivalent","_ol_style_expressions$getValueType","_ol_style_expressions$isTypeUnique","_ol_style_expressions$numberToGlsl","_ol_style_expressions$stringToGlsl","_ol_style_expressions$uniformNameForVariable","_ol_style_flat$toStyle","tilecoord","_ol_tilecoord$createOrUpdate","_ol_tilecoord$fromKey","getCacheKeyForTileKey","_ol_tilecoord$getKey","_ol_tilecoord$getKeyZXY","_ol_tilecoord$hash","_ol_tilecoord$withinExtentAndZ","_ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet","DEFAULT_MAX_ZOOM","_ol_tilegrid_common$DEFAULT_TILE_SIZE","_ol_tilegrid$createForExtent","_ol_tilegrid$createForProjection","_ol_tilegrid$createXYZ","_ol_tilegrid$extentFromProjection","_ol_tilegrid$getForProjection","_ol_tilegrid$wrapX","tileurlfunction","_ol_tileurlfunction$createFromTemplate","_ol_tileurlfunction$createFromTemplates","_ol_tileurlfunction$createFromTileUrlFunctions","_ol_tileurlfunction$expandUrl","_ol_tileurlfunction$nullTileUrlFunction","_ol_transform$apply","_ol_transform$compose","composeCssTransform","_ol_transform$create","_ol_transform$determinant","invert","_ol_transform$makeInverse","_ol_transform$makeScale","_ol_transform$multiply","_ol_transform$reset","_ol_transform$rotate","_ol_transform$scale","_ol_transform$set","_ol_transform$setFromArray","_ol_transform$toString","_ol_transform$translate","_ol_uri$appendParams","util","_ol_util$abstract","_ol_util$getUid","vec","_ol_vec_mat4$create","_ol_vec_mat4$fromTransform","_ol_xml$OBJECT_PROPERTY_NODE_FACTORY","_ol_xml$XML_SCHEMA_INSTANCE_URI","_ol_xml$createElementNS","_ol_xml$getAllTextContent","_ol_xml$getAllTextContent_","_ol_xml$getAttributeNS","_ol_xml$getDocument","_ol_xml$getXMLSerializer","_ol_xml$isDocument","_ol_xml$makeArrayExtender","_ol_xml$makeArrayPusher","_ol_xml$makeArraySerializer","_ol_xml$makeChildAppender","_ol_xml$makeObjectPropertyPusher","_ol_xml$makeObjectPropertySetter","_ol_xml$makeReplacer","_ol_xml$makeSequence","_ol_xml$makeSimpleNodeFactory","_ol_xml$makeStructureNS","_ol_xml$parse","_ol_xml$parseNode","_ol_xml$pushParseAndPop","_ol_xml$pushSerializeAndPop","registerDocument","registerXMLSerializer","xmlSerializer","_ol_xml$serialize"],"mappings":"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"}