{"version":3,"file":"ol.js","sources":["../ol/AssertionError.js","../ol/events/Event.js","../ol/ObjectEventType.js","../ol/Disposable.js","../ol/array.js","../ol/functions.js","../ol/obj.js","../ol/events/Target.js","../ol/events/EventType.js","../ol/events.js","../ol/Observable.js","../ol/util.js","../ol/Object.js","../ol/CollectionEventType.js","../ol/Collection.js","../ol/TileState.js","../ol/easing.js","../ol/Tile.js","../ol/has.js","../ol/dom.js","../ol/DataTile.js","../ol/asserts.js","../ol/Feature.js","../ol/transform.js","../ol/extent/Relationship.js","../ol/extent.js","../ol/proj/Units.js","../ol/proj/Projection.js","../ol/proj/epsg3857.js","../ol/proj/epsg4326.js","../ol/proj/projections.js","../ol/proj/transforms.js","../ol/math.js","../ol/string.js","../ol/coordinate.js","../ol/sphere.js","../ol/console.js","../ol/proj.js","../ol/geom/flat/transform.js","../ol/geom/Geometry.js","../ol/geom/SimpleGeometry.js","../ol/geom/flat/closest.js","../ol/geom/flat/deflate.js","../ol/geom/flat/simplify.js","../ol/geom/flat/inflate.js","../ol/geom/flat/area.js","../ol/geom/LinearRing.js","../ol/geom/Point.js","../ol/geom/flat/contains.js","../ol/geom/flat/interiorpoint.js","../ol/geom/flat/segments.js","../ol/geom/flat/intersectsextent.js","../ol/geom/flat/reverse.js","../ol/geom/flat/orient.js","../ol/geom/Polygon.js","../ol/Geolocation.js","../ol/ImageBase.js","../ol/ImageState.js","../ol/Image.js","../ol/ImageCanvas.js","../ol/ImageTile.js","../ol/Kinetic.js","../ol/color.js","../ol/style/IconImageCache.js","../ol/layer/Property.js","../ol/layer/Base.js","../ol/render/EventType.js","../ol/ViewHint.js","../ol/ViewProperty.js","../ol/tilegrid/common.js","../ol/centerconstraint.js","../ol/resolutionconstraint.js","../ol/rotationconstraint.js","../ol/View.js","../ol/layer/Layer.js","../ol/renderer/Map.js","../ol/render/Event.js","../ol/css.js","../ol/render/canvas.js","../ol/renderer/Composite.js","../ol/layer/Group.js","../ol/MapEvent.js","../ol/MapBrowserEvent.js","../ol/MapBrowserEventType.js","../ol/pointer/EventType.js","../ol/MapBrowserEventHandler.js","../ol/MapEventType.js","../ol/MapProperty.js","../ol/structs/PriorityQueue.js","../ol/TileQueue.js","../ol/control/Control.js","../ol/control/Attribution.js","../ol/control/Rotate.js","../ol/control/Zoom.js","../ol/control/defaults.js","../ol/interaction/Property.js","../ol/interaction/Interaction.js","../ol/interaction/DoubleClickZoom.js","../ol/interaction/Pointer.js","../ol/events/condition.js","../ol/interaction/DragPan.js","../ol/interaction/DragRotate.js","../ol/render/Box.js","../ol/interaction/DragBox.js","../ol/interaction/DragZoom.js","../ol/events/Key.js","../ol/interaction/KeyboardPan.js","../ol/interaction/KeyboardZoom.js","../ol/interaction/MouseWheelZoom.js","../ol/interaction/PinchRotate.js","../ol/interaction/PinchZoom.js","../ol/interaction/defaults.js","../ol/size.js","../ol/Map.js","../ol/Overlay.js","../ol/structs/LRUCache.js","../ol/tilecoord.js","../ol/TileCache.js","../ol/TileRange.js","../ol/VectorRenderTile.js","../ol/colorlike.js","../ol/featureloader.js","../ol/net.js","../ol/loadingstrategy.js","../ol/render/VectorContext.js","../ol/render/canvas/Immediate.js","../ol/renderer/vector.js","../ol/render.js","../ol/reproj.js","../ol/reproj/common.js","../ol/reproj/Triangulation.js","../ol/reproj/Tile.js","../ol/source/TileEventType.js","../ol/source/Source.js","../ol/tilegrid/TileGrid.js","../ol/tilegrid.js","../ol/source/Tile.js","../ol/tileurlfunction.js","../ol/source/UrlTile.js","../ol/source/TileImage.js","../ol/source/BingMaps.js","../ol/source/XYZ.js","../../node_modules/quickselect/index.js","../../node_modules/rbush/index.js","../ol/structs/RBush.js","../ol/source/VectorEventType.js","../ol/source/Vector.js","../ol/source/Cluster.js","../ol/reproj/DataTile.js","../ol/source/DataTile.js","../ol/reproj/Image.js","../ol/source/Image.js","../ol/uri.js","../ol/source/ImageArcGISRest.js","../ol/source/ImageCanvas.js","../ol/source/ImageStatic.js","../ol/source/wms.js","../ol/source/ImageWMS.js","../ol/source/OSM.js","../ol/layer/BaseImage.js","../ol/renderer/Layer.js","../ol/renderer/canvas/Layer.js","../ol/renderer/canvas/ImageLayer.js","../ol/layer/Image.js","../ol/layer/TileProperty.js","../ol/layer/BaseTile.js","../ol/renderer/canvas/TileLayer.js","../ol/layer/Tile.js","../ol/source/Raster.js","../ol/source/Stamen.js","../ol/source/TileArcGISRest.js","../ol/source/TileDebug.js","../ol/source/TileJSON.js","../ol/source/TileWMS.js","../ol/source/UTFGrid.js","../ol/tilegrid/WMTS.js","../ol/source/WMTS.js","../ol/xml.js","../ol/vec/mat4.js","../ol/style/Image.js","../ol/style/RegularShape.js","../ol/style/Circle.js","../ol/style/Fill.js","../ol/style/IconImage.js","../ol/style/Icon.js","../ol/style/Stroke.js","../ol/style/Style.js","../ol/style/Text.js","../ol/webgl/PaletteTexture.js","../ol/webgl.js","../ol/webgl/Buffer.js","../ol/webgl/ContextEventType.js","../ol/webgl/PostProcessingPass.js","../ol/webgl/Helper.js","../ol/renderer/webgl/Layer.js","../ol/renderer/webgl/TileLayerBase.js","../ol/renderer/webgl/TileLayer.js","../ol/style/expressions.js","../ol/style/flat.js","../ol/structs/LinkedList.js","../ol/source/ogcTileUtil.js","../ol/source/OGCMapTile.js","../ol/source/common.js","../ol/render/canvas/Instruction.js","../ol/render/canvas/Builder.js","../ol/render/canvas/ImageBuilder.js","../ol/render/canvas/LineStringBuilder.js","../ol/render/canvas/PolygonBuilder.js","../ol/geom/flat/linechunk.js","../ol/geom/flat/straightchunk.js","../ol/render/canvas/TextBuilder.js","../ol/render/canvas/BuilderGroup.js","../ol/geom/flat/textpath.js","../ol/geom/flat/length.js","../ol/render/canvas/Executor.js","../ol/render/canvas/ExecutorGroup.js","../ol/render/canvas/hitdetect.js","../ol/renderer/canvas/VectorLayer.js","../ol/renderer/canvas/VectorImageLayer.js","../ol/geom/Circle.js","../ol/geom/GeometryCollection.js","../ol/geom/flat/interpolate.js","../ol/geom/LineString.js","../ol/geom/MultiLineString.js","../ol/geom/MultiPoint.js","../ol/geom/flat/center.js","../ol/geom/MultiPolygon.js","../ol/render/Feature.js","../ol/proj/proj4.js","../ol/layer/BaseVector.js","../ol/layer/Vector.js","../ol/geom/flat/geodesic.js","../ol/layer/Graticule.js","../ol/webgl/RenderTarget.js","../ol/render/webgl/constants.js","../../node_modules/earcut/src/earcut.js","../ol/render/webgl/utils.js","../ol/renderer/webgl/PointsLayer.js","../ol/worker/webgl.js","../ol/layer/Heatmap.js","../ol/layer/VectorImage.js","../ol/interaction/DblClickDragZoom.js","../ol/interaction/DragAndDrop.js","../ol/interaction/DragRotateAndZoom.js","../ol/interaction/Draw.js","../ol/interaction/Extent.js","../ol/interaction/Link.js","../ol/interaction/Modify.js","../ol/interaction/Select.js","../ol/interaction/Snap.js","../ol/interaction/Translate.js","../ol/geom/flat/flip.js","../ol/format/Feature.js","../ol/format/JSONFeature.js","../ol/format/EsriJSON.js","../ol/format/XMLFeature.js","../ol/format/xsd.js","../ol/format/GPX.js","../ol/format/GeoJSON.js","../ol/format/TextFeature.js","../ol/format/IGC.js","../ol/format/KML.js","../../node_modules/ieee754/index.js","../../node_modules/pbf/index.js","../ol/format/MVT.js","../ol/format/OSMXML.js","../ol/format/XML.js","../ol/format/xlink.js","../ol/format/OWS.js","../ol/format/Polyline.js","../ol/format/TopoJSON.js","../ol/format/GMLBase.js","../ol/format/GML2.js","../ol/format/GML3.js","../ol/format/GML32.js","../ol/format/filter/Filter.js","../ol/format/filter/LogicalNary.js","../ol/format/filter/And.js","../ol/format/filter/Bbox.js","../ol/format/WFS.js","../ol/format/filter.js","../ol/format/WMSGetFeatureInfo.js","../ol/control/FullScreen.js","../ol/control/MousePosition.js","../ol/control/OverviewMap.js","../ol/control/ScaleLine.js","../ol/control/ZoomSlider.js","../ol/control/ZoomToExtent.js","../index.js","../ol/geom/flat/topology.js","../ol/source.js"],"sourcesContent":["/**\n * @module ol/AssertionError\n */\n\n/** @type {Object<number, string>} */\nconst messages = {\n  1: 'The view center is not defined',\n  2: 'The view resolution is not defined',\n  3: 'The view rotation is not defined',\n  4: '`image` and `src` cannot be provided at the same time',\n  5: '`imgSize` must be set when `image` is provided',\n  7: '`format` must be set when `url` is set',\n  8: 'Unknown `serverType` configured',\n  9: '`url` must be configured or set using `#setUrl()`',\n  10: 'The default `geometryFunction` can only handle `Point` geometries',\n  11: '`options.featureTypes` must be an Array',\n  12: '`options.geometryName` must also be provided when `options.bbox` is set',\n  13: 'Invalid corner',\n  14: 'Invalid color',\n  15: 'Tried to get a value for a key that does not exist in the cache',\n  16: 'Tried to set a value for a key that is used already',\n  17: '`resolutions` must be sorted in descending order',\n  18: 'Either `origin` or `origins` must be configured, never both',\n  19: 'Number of `tileSizes` and `resolutions` must be equal',\n  20: 'Number of `origins` and `resolutions` must be equal',\n  22: 'Either `tileSize` or `tileSizes` must be configured, never both',\n  24: 'Invalid extent or geometry provided as `geometry`',\n  25: 'Cannot fit empty extent provided as `geometry`',\n  26: 'Features must have an id set',\n  27: 'Features must have an id set',\n  28: '`renderMode` must be `\"hybrid\"` or `\"vector\"`',\n  30: 'The passed `feature` was already added to the source',\n  31: 'Tried to enqueue an `element` that was already added to the queue',\n  32: 'Transformation matrix cannot be inverted',\n  33: 'Invalid units',\n  34: 'Invalid geometry layout',\n  36: 'Unknown SRS type',\n  37: 'Unknown geometry type found',\n  38: '`styleMapValue` has an unknown type',\n  39: 'Unknown geometry type',\n  40: 'Expected `feature` to have a geometry',\n  41: 'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n  42: 'Question unknown, the answer is 42',\n  43: 'Expected `layers` to be an array or a `Collection`',\n  47: 'Expected `controls` to be an array or an `ol/Collection`',\n  48: 'Expected `interactions` to be an array or an `ol/Collection`',\n  49: 'Expected `overlays` to be an array or an `ol/Collection`',\n  50: '`options.featureTypes` should be an Array',\n  51: 'Either `url` or `tileJSON` options must be provided',\n  52: 'Unknown `serverType` configured',\n  53: 'Unknown `tierSizeCalculation` configured',\n  55: 'The {-y} placeholder requires a tile grid with extent',\n  56: 'mapBrowserEvent must originate from a pointer event',\n  57: 'At least 2 conditions are required',\n  59: 'Invalid command found in the PBF',\n  60: 'Missing or invalid `size`',\n  61: 'Cannot determine IIIF Image API version from provided image information JSON',\n  62: 'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n  64: 'Layer opacity must be a number',\n  66: '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`',\n  67: 'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both',\n  68: 'A VectorTile source can only be rendered if it has a projection compatible with the view projection',\n  69: '`width` or `height` cannot be provided together with `scale`',\n};\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const message = messages[code];\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @deprecated ol/AssertionError and error codes will be removed in v8.0\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '7.4.0';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true}\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, precision) {\n  const numberString =\n    precision !== undefined ? number.toFixed(precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/Geolocation\n */\nimport BaseEvent from './events/Event.js';\nimport BaseObject from './Object.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  identityTransform,\n} from './proj.js';\nimport {toRadians} from './math.js';\n\n/**\n * @enum {string}\n */\nconst Property = {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions',\n};\n\n/**\n * @enum string\n */\nconst GeolocationErrorType = {\n  /**\n   * Triggered when a `GeolocationPositionError` occurs.\n   * @event module:ol/Geolocation.GeolocationError#error\n   * @api\n   */\n  ERROR: 'error',\n};\n\n/**\n * @classdesc\n * Events emitted on [GeolocationPositionError](https://developer.mozilla.org/en-US/docs/Web/API/GeolocationPositionError).\n */\nexport class GeolocationError extends BaseEvent {\n  /**\n   * @param {GeolocationPositionError} error error object.\n   */\n  constructor(error) {\n    super(GeolocationErrorType.ERROR);\n\n    /**\n     * Code of the underlying `GeolocationPositionError`.\n     * @type {number}\n     * @api\n     */\n    this.code = error.code;\n\n    /**\n     * Message of the underlying `GeolocationPositionError`.\n     * @type {string}\n     * @api\n     */\n    this.message = error.message;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See https://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {import(\"./proj.js\").ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:accuracy'|'change:accuracyGeometry'|'change:altitude'|\n *    'change:altitudeAccuracy'|'change:heading'|'change:position'|'change:projection'|'change:speed'|'change:tracking'|\n *    'change:trackingOptions'} GeolocationObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<GeolocationObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'error', GeolocationError, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|GeolocationObjectEventTypes, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return>} GeolocationOnSignature\n */\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](https://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes and errors, register listeners for the generic\n * `change` event and the `error` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     const geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       console.log(geolocation.getPosition());\n *     });\n *     // listen to error\n *     geolocation.on('error', function(evt) {\n *       window.console.log(evt.message);\n *     });\n *\n * @fires GeolocationError\n * @api\n */\nclass Geolocation extends BaseObject {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GeolocationOnSignature<void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * The unprojected (EPSG:4326) device position.\n     * @private\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.position_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./proj.js\").TransformFunction}\n     */\n    this.transform_ = identityTransform;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.watchId_ = undefined;\n\n    this.addChangeListener(Property.PROJECTION, this.handleProjectionChanged_);\n    this.addChangeListener(Property.TRACKING, this.handleTrackingChanged_);\n\n    if (options.projection !== undefined) {\n      this.setProjection(options.projection);\n    }\n    if (options.trackingOptions !== undefined) {\n      this.setTrackingOptions(options.trackingOptions);\n    }\n\n    this.setTracking(options.tracking !== undefined ? options.tracking : false);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTracking(false);\n    super.disposeInternal();\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    const projection = this.getProjection();\n    if (projection) {\n      this.transform_ = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        projection\n      );\n      if (this.position_) {\n        this.set(Property.POSITION, this.transform_(this.position_));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleTrackingChanged_() {\n    if ('geolocation' in navigator) {\n      const tracking = this.getTracking();\n      if (tracking && this.watchId_ === undefined) {\n        this.watchId_ = navigator.geolocation.watchPosition(\n          this.positionChange_.bind(this),\n          this.positionError_.bind(this),\n          this.getTrackingOptions()\n        );\n      } else if (!tracking && this.watchId_ !== undefined) {\n        navigator.geolocation.clearWatch(this.watchId_);\n        this.watchId_ = undefined;\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPosition} position position event.\n   */\n  positionChange_(position) {\n    const coords = position.coords;\n    this.set(Property.ACCURACY, coords.accuracy);\n    this.set(\n      Property.ALTITUDE,\n      coords.altitude === null ? undefined : coords.altitude\n    );\n    this.set(\n      Property.ALTITUDE_ACCURACY,\n      coords.altitudeAccuracy === null ? undefined : coords.altitudeAccuracy\n    );\n    this.set(\n      Property.HEADING,\n      coords.heading === null ? undefined : toRadians(coords.heading)\n    );\n    if (!this.position_) {\n      this.position_ = [coords.longitude, coords.latitude];\n    } else {\n      this.position_[0] = coords.longitude;\n      this.position_[1] = coords.latitude;\n    }\n    const projectedPosition = this.transform_(this.position_);\n    this.set(Property.POSITION, projectedPosition.slice());\n    this.set(Property.SPEED, coords.speed === null ? undefined : coords.speed);\n    const geometry = circularPolygon(this.position_, coords.accuracy);\n    geometry.applyTransform(this.transform_);\n    this.set(Property.ACCURACY_GEOMETRY, geometry);\n    this.changed();\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPositionError} error error object.\n   */\n  positionError_(error) {\n    this.dispatchEvent(new GeolocationError(error));\n  }\n\n  /**\n   * Get the accuracy of the position in meters.\n   * @return {number|undefined} The accuracy of the position measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAccuracy() {\n    return /** @type {number|undefined} */ (this.get(Property.ACCURACY));\n  }\n\n  /**\n   * Get a geometry of the position accuracy.\n   * @return {?import(\"./geom/Polygon.js\").default} A geometry of the position accuracy.\n   * @observable\n   * @api\n   */\n  getAccuracyGeometry() {\n    return /** @type {?import(\"./geom/Polygon.js\").default} */ (\n      this.get(Property.ACCURACY_GEOMETRY) || null\n    );\n  }\n\n  /**\n   * Get the altitude associated with the position.\n   * @return {number|undefined} The altitude of the position in meters above mean\n   *     sea level.\n   * @observable\n   * @api\n   */\n  getAltitude() {\n    return /** @type {number|undefined} */ (this.get(Property.ALTITUDE));\n  }\n\n  /**\n   * Get the altitude accuracy of the position.\n   * @return {number|undefined} The accuracy of the altitude measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAltitudeAccuracy() {\n    return /** @type {number|undefined} */ (\n      this.get(Property.ALTITUDE_ACCURACY)\n    );\n  }\n\n  /**\n   * Get the heading as radians clockwise from North.\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n   * is set to `true` in the tracking options.\n   * @return {number|undefined} The heading of the device in radians from north.\n   * @observable\n   * @api\n   */\n  getHeading() {\n    return /** @type {number|undefined} */ (this.get(Property.HEADING));\n  }\n\n  /**\n   * Get the position of the device.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The current position of the device reported\n   *     in the current projection.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the projection associated with the position.\n   * @return {import(\"./proj/Projection.js\").default|undefined} The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"./proj/Projection.js\").default|undefined} */ (\n      this.get(Property.PROJECTION)\n    );\n  }\n\n  /**\n   * Get the speed in meters per second.\n   * @return {number|undefined} The instantaneous speed of the device in meters\n   *     per second.\n   * @observable\n   * @api\n   */\n  getSpeed() {\n    return /** @type {number|undefined} */ (this.get(Property.SPEED));\n  }\n\n  /**\n   * Determine if the device location is being tracked.\n   * @return {boolean} The device location is being tracked.\n   * @observable\n   * @api\n   */\n  getTracking() {\n    return /** @type {boolean} */ (this.get(Property.TRACKING));\n  }\n\n  /**\n   * Get the tracking options.\n   * See https://www.w3.org/TR/geolocation-API/#position-options.\n   * @return {PositionOptions|undefined} PositionOptions as defined by\n   *     the [HTML5 Geolocation spec\n   *     ](https://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  getTrackingOptions() {\n    return /** @type {PositionOptions|undefined} */ (\n      this.get(Property.TRACKING_OPTIONS)\n    );\n  }\n\n  /**\n   * Set the projection to use for transforming the coordinates.\n   * @param {import(\"./proj.js\").ProjectionLike} projection The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(Property.PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * Enable or disable tracking.\n   * @param {boolean} tracking Enable tracking.\n   * @observable\n   * @api\n   */\n  setTracking(tracking) {\n    this.set(Property.TRACKING, tracking);\n  }\n\n  /**\n   * Set the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @param {PositionOptions} options PositionOptions as defined by the\n   *     [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  setTrackingOptions(options) {\n    this.set(Property.TRACKING_OPTIONS, options);\n  }\n}\n\nexport default Geolocation;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   * @param {CanvasRenderingContext2D} [context] Canvas context. When provided, the image will be\n   *    drawn into the context's canvas, and `getImage()` will return the canvas once the image\n   *    has finished loading.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction,\n    context\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    if (\n      this.state == ImageState.LOADED &&\n      this.context_ &&\n      !(this.image_ instanceof HTMLCanvasElement)\n    ) {\n      const canvas = this.context_.canvas;\n      canvas.width = this.image_.width;\n      canvas.height = this.image_.height;\n      this.context_.drawImage(this.image_, 0, 0);\n      this.image_ = this.context_.canvas;\n    }\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nclass ImageCanvas extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, loader) {\n    const state = loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = loader !== undefined ? loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\nexport default ImageCanvas;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_();\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Executor groups for decluttering, by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.declutterExecutorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      const context = this.context_[key];\n      releaseCanvas(context);\n      canvasPool.push(context.canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {Function} [errback] Callback on error.\n * @param {string} [callbackParam] Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, errback, callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src =\n    url +\n    (url.includes('?') ? '&' : '?') +\n    (callbackParam || 'callback') +\n    '=' +\n    key;\n  const timer = setTimeout(function () {\n    cleanup();\n    if (errback) {\n      errback();\n    }\n  }, 10000);\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.head.appendChild(script);\n}\n\nexport class ResponseError extends Error {\n  /**\n   * @param {XMLHttpRequest} response The XHR object.\n   */\n  constructor(response) {\n    const message = 'Unexpected response status: ' + response.status;\n    super(message);\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ResponseError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.response = response;\n  }\n}\n\nexport class ClientError extends Error {\n  /**\n   * @param {XMLHttpRequest} client The XHR object.\n   */\n  constructor(client) {\n    super('Failed to issue request');\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ClientError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.client = client;\n  }\n}\n\n/**\n * @param {string} url The URL.\n * @return {Promise<Object>} A promise that resolves to the JSON response.\n */\nexport function getJSON(url) {\n  return new Promise(function (resolve, reject) {\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The load event.\n     */\n    function onLoad(event) {\n      const client = event.target;\n      // status will be 0 for file:// urls\n      if (!client.status || (client.status >= 200 && client.status < 300)) {\n        let data;\n        try {\n          data = JSON.parse(client.responseText);\n        } catch (err) {\n          const message = 'Error parsing response text as JSON: ' + err.message;\n          reject(new Error(message));\n          return;\n        }\n        resolve(data);\n        return;\n      }\n\n      reject(new ResponseError(client));\n    }\n\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The error event.\n     */\n    function onError(event) {\n      reject(new ClientError(event.target));\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener('load', onLoad);\n    client.addEventListener('error', onError);\n    client.open('GET', url);\n    client.setRequestHeader('Accept', 'application/json');\n    client.send();\n  });\n}\n\n/**\n * @param {string} base The base URL.\n * @param {string} url The potentially relative URL.\n * @return {string} The full URL.\n */\nexport function resolveUrl(base, url) {\n  if (url.includes('://')) {\n    return url;\n  }\n  return new URL(url, base).href;\n}\n\nlet originalXHR;\nexport function overrideXHR(xhr) {\n  if (typeof XMLHttpRequest !== 'undefined') {\n    originalXHR = XMLHttpRequest;\n  }\n  global.XMLHttpRequest = xhr;\n}\n\nexport function restoreXHR() {\n  global.XMLHttpRequest = originalXHR;\n}\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/render\n */\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply as multiplyTransform,\n  scale as scaleTransform,\n} from './transform.js';\nimport {getSquaredTolerance} from './renderer/vector.js';\nimport {getTransformFromProjections, getUserProjection} from './proj.js';\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render.js';\n * import Fill from 'ol/style/Fill.js';\n * import Polygon from 'ol/geom/Polygon.js';\n *\n * const canvas = document.createElement('canvas');\n * const render = toContext(\n *     canvas.getContext('2d'),\n *     {size: [100, 100]}\n * );\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]])\n * );\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions} [options] Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, options) {\n  const canvas = context.canvas;\n  options = options ? options : {};\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  const size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  const extent = [0, 0, canvas.width, canvas.height];\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @return {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n  if (!(event.context instanceof CanvasRenderingContext2D)) {\n    throw new Error('Only works for render events from Canvas 2D layers');\n  }\n\n  // canvas may be at a different pixel ratio than frameState.pixelRatio\n  const a = event.inversePixelTransform[0];\n  const b = event.inversePixelTransform[1];\n  const canvasPixelRatio = Math.sqrt(a * a + b * b);\n  const frameState = event.frameState;\n  const transform = multiplyTransform(\n    event.inversePixelTransform.slice(),\n    frameState.coordinateToPixelTransform\n  );\n  const squaredTolerance = getSquaredTolerance(\n    frameState.viewState.resolution,\n    canvasPixelRatio\n  );\n  let userTransform;\n  const userProjection = getUserProjection();\n  if (userProjection) {\n    userTransform = getTransformFromProjections(\n      userProjection,\n      frameState.viewState.projection\n    );\n  }\n\n  return new CanvasImmediateRenderer(\n    event.context,\n    canvasPixelRatio,\n    frameState.extent,\n    transform,\n    frameState.viewState.rotation,\n    squaredTolerance,\n    userTransform\n  );\n}\n\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @return {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n  return applyTransform(event.inversePixelTransform, pixel.slice(0));\n}\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.getInterpolate()\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/BingMaps\n */\n\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {createOrUpdate} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\n\n/**\n * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  const z = tileCoord[0];\n  const digits = new Array(z);\n  let mask = 1 << (z - 1);\n  let i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nconst TOS_ATTRIBUTION =\n  '<a class=\"ol-attribution-bing-tos\" ' +\n  'href=\"https://www.microsoft.com/maps/product/terms.html\" target=\"_blank\">' +\n  'Terms of Use</a>';\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at https://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources Resources.\n */\n\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nclass BingMaps extends TileImage {\n  /**\n   * @param {Options} options Bing Maps options.\n   */\n  constructor(options) {\n    const hidpi = options.hidpi !== undefined ? options.hidpi : false;\n\n    super({\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: options.interpolate,\n      opaque: true,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: hidpi ? 2 : 1,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = hidpi;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.apiKey_ = options.key;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.imagerySet_ = options.imagerySet;\n\n    const url =\n      'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n      this.imagerySet_ +\n      '?uriScheme=https&include=ImageryProviders&key=' +\n      this.apiKey_ +\n      '&c=' +\n      this.culture_;\n\n    fetch(url)\n      .then((response) => response.json())\n      .then((json) => this.handleImageryMetadataResponse(json));\n  }\n\n  /**\n   * Get the api key used for this source.\n   *\n   * @return {string} The api key.\n   * @api\n   */\n  getApiKey() {\n    return this.apiKey_;\n  }\n\n  /**\n   * Get the imagery set associated with this source.\n   *\n   * @return {string} The imagery set.\n   * @api\n   */\n  getImagerySet() {\n    return this.imagerySet_;\n  }\n\n  /**\n   * @param {BingMapsImageryMetadataResponse} response Response.\n   */\n  handleImageryMetadataResponse(response) {\n    if (\n      response.statusCode != 200 ||\n      response.statusDescription != 'OK' ||\n      response.authenticationResultCode != 'ValidCredentials' ||\n      response.resourceSets.length != 1 ||\n      response.resourceSets[0].resources.length != 1\n    ) {\n      this.setState('error');\n      return;\n    }\n\n    const resource = response.resourceSets[0].resources[0];\n    const maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n\n    const sourceProjection = this.getProjection();\n    const extent = extentFromProjection(sourceProjection);\n    const scale = this.hidpi_ ? 2 : 1;\n    const tileSize =\n      resource.imageWidth == resource.imageHeight\n        ? resource.imageWidth / scale\n        : [resource.imageWidth / scale, resource.imageHeight / scale];\n\n    const tileGrid = createXYZ({\n      extent: extent,\n      minZoom: resource.zoomMin,\n      maxZoom: maxZoom,\n      tileSize: tileSize,\n    });\n    this.tileGrid = tileGrid;\n\n    const culture = this.culture_;\n    const hidpi = this.hidpi_;\n    this.tileUrlFunction = createFromTileUrlFunctions(\n      resource.imageUrlSubdomains.map(function (subdomain) {\n        /** @type {import('../tilecoord.js').TileCoord} */\n        const quadKeyTileCoord = [0, 0, 0];\n        const imageUrl = resource.imageUrl\n          .replace('{subdomain}', subdomain)\n          .replace('{culture}', culture);\n        return (\n          /**\n           * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n           * @param {number} pixelRatio Pixel ratio.\n           * @param {import(\"../proj/Projection.js\").default} projection Projection.\n           * @return {string|undefined} Tile URL.\n           */\n          function (tileCoord, pixelRatio, projection) {\n            if (!tileCoord) {\n              return undefined;\n            }\n            createOrUpdate(\n              tileCoord[0],\n              tileCoord[1],\n              tileCoord[2],\n              quadKeyTileCoord\n            );\n            let url = imageUrl;\n            if (hidpi) {\n              url += '&dpi=d1&device=mobile';\n            }\n            return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\n          }\n        );\n      })\n    );\n\n    if (resource.imageryProviders) {\n      const transform = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        this.getProjection()\n      );\n\n      this.setAttributions((frameState) => {\n        const attributions = [];\n        const viewState = frameState.viewState;\n        const tileGrid = this.getTileGrid();\n        const z = tileGrid.getZForResolution(\n          viewState.resolution,\n          this.zDirection\n        );\n        const tileCoord = tileGrid.getTileCoordForCoordAndZ(\n          viewState.center,\n          z\n        );\n        const zoom = tileCoord[0];\n        resource.imageryProviders.map(function (imageryProvider) {\n          let intersecting = false;\n          const coverageAreas = imageryProvider.coverageAreas;\n          for (let i = 0, ii = coverageAreas.length; i < ii; ++i) {\n            const coverageArea = coverageAreas[i];\n            if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\n              const bbox = coverageArea.bbox;\n              const epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n              const extent = applyTransform(epsg4326Extent, transform);\n              if (intersects(extent, frameState.extent)) {\n                intersecting = true;\n                break;\n              }\n            }\n          }\n          if (intersecting) {\n            attributions.push(imageryProvider.attribution);\n          }\n        });\n\n        attributions.push(TOS_ATTRIBUTION);\n        return attributions;\n      });\n    }\n\n    this.setState('ready');\n  }\n}\n\nexport default BingMaps;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/source/Cluster\n */\n\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from './Vector.js';\nimport {add as addCoordinate, scale as scaleCoordinate} from '../coordinate.js';\nimport {assert} from '../asserts.js';\nimport {\n  buffer,\n  createEmpty,\n  createOrUpdateFromCoordinate,\n  getCenter,\n} from '../extent.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Distance in pixels within which features will\n * be clustered together.\n * @property {number} [minDistance=0] Minimum distance in pixels between clusters.\n * Will be capped at the configured distance.\n * By default no minimum distance is guaranteed. This config can be used to avoid\n * overlapping icons. As a tradoff, the cluster feature's position will no longer be\n * the center of all its features.\n * @property {function(Feature):Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Point~Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underlying source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {function(Point, Array<Feature>):Feature} [createCluster]\n * Function that takes the cluster's center {@link module:ol/geom/Point~Point} and an array\n * of {@link module:ol/Feature~Feature} included in this cluster. Must return a\n * {@link module:ol/Feature~Feature} that will be used to render. Default implementation is:\n * ```js\n * function(point, features) {\n *   return new Feature({\n *     geometry: point,\n *     features: features\n *   });\n * }\n * ```\n * @property {VectorSource} [source=null] Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n *\n * If the instance is disposed without also disposing the underlying\n * source `setSource(null)` has to be called to remove the listener reference\n * from the wrapped source.\n * @api\n */\nclass Cluster extends VectorSource {\n  /**\n   * @param {Options} options Cluster options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.resolution = undefined;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.distance = options.distance !== undefined ? options.distance : 20;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.minDistance = options.minDistance || 0;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.interpolationRatio = 0;\n\n    /**\n     * @type {Array<Feature>}\n     * @protected\n     */\n    this.features = [];\n\n    /**\n     * @param {Feature} feature Feature.\n     * @return {Point} Cluster calculation point.\n     * @protected\n     */\n    this.geometryFunction =\n      options.geometryFunction ||\n      function (feature) {\n        const geometry = /** @type {Point} */ (feature.getGeometry());\n        assert(geometry.getType() == 'Point', 10); // The default `geometryFunction` can only handle `Point` geometries\n        return geometry;\n      };\n\n    /**\n     * @type {function(Point, Array<Feature>):Feature}\n     * @private\n     */\n    this.createCustomCluster_ = options.createCluster;\n\n    /**\n     * @type {VectorSource|null}\n     * @protected\n     */\n    this.source = null;\n\n    /**\n     * @private\n     */\n    this.boundRefresh_ = this.refresh.bind(this);\n\n    this.updateDistance(this.distance, this.minDistance);\n    this.setSource(options.source || null);\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/VectorEventType~VectorEventType#removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    this.features.length = 0;\n    super.clear(fast);\n  }\n\n  /**\n   * Get the distance in pixels between clusters.\n   * @return {number} Distance.\n   * @api\n   */\n  getDistance() {\n    return this.distance;\n  }\n\n  /**\n   * Get a reference to the wrapped source.\n   * @return {VectorSource|null} Source.\n   * @api\n   */\n  getSource() {\n    return this.source;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    this.source.loadFeatures(extent, resolution, projection);\n    if (resolution !== this.resolution) {\n      this.resolution = resolution;\n      this.refresh();\n    }\n  }\n\n  /**\n   * Set the distance within which features will be clusterd together.\n   * @param {number} distance The distance in pixels.\n   * @api\n   */\n  setDistance(distance) {\n    this.updateDistance(distance, this.minDistance);\n  }\n\n  /**\n   * Set the minimum distance between clusters. Will be capped at the\n   * configured distance.\n   * @param {number} minDistance The minimum distance in pixels.\n   * @api\n   */\n  setMinDistance(minDistance) {\n    this.updateDistance(this.distance, minDistance);\n  }\n\n  /**\n   * The configured minimum distance between clusters.\n   * @return {number} The minimum distance in pixels.\n   * @api\n   */\n  getMinDistance() {\n    return this.minDistance;\n  }\n\n  /**\n   * Replace the wrapped source.\n   * @param {VectorSource|null} source The new source for this instance.\n   * @api\n   */\n  setSource(source) {\n    if (this.source) {\n      this.source.removeEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.source = source;\n    if (source) {\n      source.addEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.refresh();\n  }\n\n  /**\n   * Handle the source changing.\n   */\n  refresh() {\n    this.clear();\n    this.cluster();\n    this.addFeatures(this.features);\n  }\n\n  /**\n   * Update the distances and refresh the source if necessary.\n   * @param {number} distance The new distance.\n   * @param {number} minDistance The new minimum distance.\n   */\n  updateDistance(distance, minDistance) {\n    const ratio =\n      distance === 0 ? 0 : Math.min(minDistance, distance) / distance;\n    const changed =\n      distance !== this.distance || this.interpolationRatio !== ratio;\n    this.distance = distance;\n    this.minDistance = minDistance;\n    this.interpolationRatio = ratio;\n    if (changed) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  cluster() {\n    if (this.resolution === undefined || !this.source) {\n      return;\n    }\n    const extent = createEmpty();\n    const mapDistance = this.distance * this.resolution;\n    const features = this.source.getFeatures();\n\n    /** @type {Object<string, true>} */\n    const clustered = {};\n\n    for (let i = 0, ii = features.length; i < ii; i++) {\n      const feature = features[i];\n      if (!(getUid(feature) in clustered)) {\n        const geometry = this.geometryFunction(feature);\n        if (geometry) {\n          const coordinates = geometry.getCoordinates();\n          createOrUpdateFromCoordinate(coordinates, extent);\n          buffer(extent, mapDistance, extent);\n\n          const neighbors = this.source\n            .getFeaturesInExtent(extent)\n            .filter(function (neighbor) {\n              const uid = getUid(neighbor);\n              if (uid in clustered) {\n                return false;\n              }\n              clustered[uid] = true;\n              return true;\n            });\n          this.features.push(this.createCluster(neighbors, extent));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Feature>} features Features\n   * @param {import(\"../extent.js\").Extent} extent The searched extent for these features.\n   * @return {Feature} The cluster feature.\n   * @protected\n   */\n  createCluster(features, extent) {\n    const centroid = [0, 0];\n    for (let i = features.length - 1; i >= 0; --i) {\n      const geometry = this.geometryFunction(features[i]);\n      if (geometry) {\n        addCoordinate(centroid, geometry.getCoordinates());\n      } else {\n        features.splice(i, 1);\n      }\n    }\n    scaleCoordinate(centroid, 1 / features.length);\n    const searchCenter = getCenter(extent);\n    const ratio = this.interpolationRatio;\n    const geometry = new Point([\n      centroid[0] * (1 - ratio) + searchCenter[0] * ratio,\n      centroid[1] * (1 - ratio) + searchCenter[1] * ratio,\n    ]);\n    if (this.createCustomCluster_) {\n      return this.createCustomCluster_(geometry, features);\n    }\n    return new Feature({\n      geometry,\n      features,\n    });\n  }\n}\n\nexport default Cluster;\n","/**\n * @module ol/reproj/DataTile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport DataTile, {asArrayLike, asImageLike, toArray} from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D, releaseCanvas} from '../dom.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../DataTile.js\").default} TileGetter\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n * @property {import(\"../proj/Projection.js\").default} targetProj Target projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n * @property {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n * @property {import(\"../tilecoord.js\").TileCoord} [wrappedTileCoord] Coordinate of the tile wrapped in X.\n * @property {number} pixelRatio Pixel ratio.\n * @property {number} gutter Gutter of the source tiles.\n * @property {TileGetter} getTileFunction Function returning source tiles (z, x, y, pixelRatio).\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {number} [errorThreshold] Acceptable reprojection error (in px).\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected data tile.\n * See {@link module:ol/source/DataTile~DataTileSource}.\n *\n */\nclass ReprojDataTile extends DataTile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    super({\n      tileCoord: options.tileCoord,\n      loader: () => Promise.resolve(new Uint8Array(4)),\n      interpolate: options.interpolate,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter;\n\n    /**\n     * @type {import(\"../DataTile.js\").Data}\n     * @private\n     */\n    this.reprojData_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.reprojError_ = null;\n\n    /**\n     * @type {import('../size.js').Size}\n     * @private\n     */\n    this.reprojSize_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = options.sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = options.targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = options.wrappedTileCoord || options.tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<DataTile>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProj = options.sourceProj;\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = this.targetTileGrid_.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const targetProj = options.targetProj;\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      options.errorThreshold !== undefined\n        ? options.errorThreshold\n        : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = this.sourceTileGrid_.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = this.sourceTileGrid_.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n      const getTile = options.getTileFunction;\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTile(this.sourceZ_, srcX, srcY, this.pixelRatio_);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('../size.js').Size} Tile size.\n   */\n  getSize() {\n    return this.reprojSize_;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {import(\"../DataTile.js\").Data} Tile data.\n   */\n  getData() {\n    return this.reprojData_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   */\n  getError() {\n    return this.reprojError_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const dataSources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const size = tile.getSize();\n      const gutter = this.gutter_;\n      /**\n       * @type {import(\"../DataTile.js\").ArrayLike}\n       */\n      let tileData;\n      const arrayData = asArrayLike(tile.getData());\n      if (arrayData) {\n        tileData = arrayData;\n      } else {\n        tileData = toArray(asImageLike(tile.getData()));\n      }\n      const pixelSize = [size[0] + 2 * gutter, size[1] + 2 * gutter];\n      const isFloat = tileData instanceof Float32Array;\n      const pixelCount = pixelSize[0] * pixelSize[1];\n      const DataType = isFloat ? Float32Array : Uint8Array;\n      const tileDataR = new DataType(tileData.buffer);\n      const bytesPerElement = DataType.BYTES_PER_ELEMENT;\n      const bytesPerPixel = (bytesPerElement * tileDataR.length) / pixelCount;\n      const bytesPerRow = tileDataR.byteLength / pixelSize[1];\n      const bandCount = Math.floor(\n        bytesPerRow / bytesPerElement / pixelSize[0]\n      );\n      const packedLength = pixelCount * bandCount;\n      let packedData = tileDataR;\n      if (tileDataR.length !== packedLength) {\n        packedData = new DataType(packedLength);\n        let dataIndex = 0;\n        let rowOffset = 0;\n        const colCount = pixelSize[0] * bandCount;\n        for (let rowIndex = 0; rowIndex < pixelSize[1]; ++rowIndex) {\n          for (let colIndex = 0; colIndex < colCount; ++colIndex) {\n            packedData[dataIndex++] = tileDataR[rowOffset + colIndex];\n          }\n          rowOffset += bytesPerRow / bytesPerElement;\n        }\n      }\n      dataSources.push({\n        extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n        data: new Uint8Array(packedData.buffer),\n        dataType: DataType,\n        bytesPerPixel: bytesPerPixel,\n        pixelSize: pixelSize,\n      });\n    });\n    this.sourceTiles_.length = 0;\n\n    if (dataSources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const targetWidth = typeof size === 'number' ? size : size[0];\n      const targetHeight = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      let dataR, dataU;\n\n      const bytesPerPixel = dataSources[0].bytesPerPixel;\n\n      const reprojs = Math.ceil(bytesPerPixel / 3);\n      for (let reproj = reprojs - 1; reproj >= 0; --reproj) {\n        const sources = [];\n        for (let i = 0, len = dataSources.length; i < len; ++i) {\n          const dataSource = dataSources[i];\n          const buffer = dataSource.data;\n          const pixelSize = dataSource.pixelSize;\n          const width = pixelSize[0];\n          const height = pixelSize[1];\n          const context = createCanvasContext2D(width, height, canvasPool);\n          const imageData = context.createImageData(width, height);\n          const data = imageData.data;\n          let offset = reproj * 3;\n          for (let j = 0, len = data.length; j < len; j += 4) {\n            data[j] = buffer[offset];\n            data[j + 1] = buffer[offset + 1];\n            data[j + 2] = buffer[offset + 2];\n            data[j + 3] = 255;\n            offset += bytesPerPixel;\n          }\n          context.putImageData(imageData, 0, 0);\n          sources.push({\n            extent: dataSource.extent,\n            image: context.canvas,\n          });\n        }\n\n        const canvas = renderReprojected(\n          targetWidth,\n          targetHeight,\n          this.pixelRatio_,\n          sourceResolution,\n          this.sourceTileGrid_.getExtent(),\n          targetResolution,\n          targetExtent,\n          this.triangulation_,\n          sources,\n          this.gutter_,\n          false,\n          false\n        );\n\n        for (let i = 0, len = sources.length; i < len; ++i) {\n          const canvas = sources[i].image;\n          const context = canvas.getContext('2d');\n          releaseCanvas(context);\n          canvasPool.push(context.canvas);\n        }\n\n        const context = canvas.getContext('2d');\n        const imageData = context.getImageData(\n          0,\n          0,\n          canvas.width,\n          canvas.height\n        );\n\n        releaseCanvas(context);\n        canvasPool.push(canvas);\n\n        if (!dataR) {\n          dataU = new Uint8Array(\n            bytesPerPixel * imageData.width * imageData.height\n          );\n          dataR = new dataSources[0].dataType(dataU.buffer);\n        }\n\n        const data = imageData.data;\n        let offset = reproj * 3;\n        for (let i = 0, len = data.length; i < len; i += 4) {\n          if (data[i + 3] === 255) {\n            dataU[offset] = data[i];\n            dataU[offset + 1] = data[i + 1];\n            dataU[offset + 2] = data[i + 2];\n          } else {\n            dataU[offset] = 0;\n            dataU[offset + 1] = 0;\n            dataU[offset + 2] = 0;\n          }\n          offset += bytesPerPixel;\n        }\n      }\n\n      this.reprojData_ = dataR;\n      this.reprojSize_ = [\n        Math.round(targetWidth * this.pixelRatio_),\n        Math.round(targetHeight * this.pixelRatio_),\n      ];\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    let leftToLoad = 0;\n\n    this.sourcesListenerKeys_ = [];\n    this.sourceTiles_.forEach((tile) => {\n      const state = tile.getState();\n      if (state !== TileState.IDLE && state !== TileState.LOADING) {\n        return;\n      }\n      leftToLoad++;\n\n      const sourceListenKey = listen(\n        tile,\n        EventType.CHANGE,\n        function () {\n          const state = tile.getState();\n          if (\n            state == TileState.LOADED ||\n            state == TileState.ERROR ||\n            state == TileState.EMPTY\n          ) {\n            unlistenByKey(sourceListenKey);\n            leftToLoad--;\n            if (leftToLoad === 0) {\n              this.unlistenSources_();\n              this.reproject_();\n            }\n          }\n        },\n        this\n      );\n      this.sourcesListenerKeys_.push(sourceListenKey);\n    });\n\n    if (leftToLoad === 0) {\n      setTimeout(this.reproject_.bind(this), 0);\n    } else {\n      this.sourceTiles_.forEach(function (tile) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojDataTile;\n","/**\n * @module ol/source/DataTile\n */\nimport DataTile from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport ReprojDataTile from '../reproj/DataTile.js';\nimport TileCache from '../TileCache.js';\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {\n  createXYZ,\n  extentFromProjection,\n  getForProjection as getTileGridForProjection,\n} from '../tilegrid.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\nimport {toPromise} from '../functions.js';\nimport {toSize} from '../size.js';\n\n/**\n * Data tile loading function.  The function is called with z, x, and y tile coordinates and\n * returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * @typedef {function(number, number, number) : (import(\"../DataTile.js\").Data|Promise<import(\"../DataTile.js\").Data>)} Loader\n */\n\n/**\n * @typedef {Object} Options\n * @property {Loader} [loader] Data loader.  Called with z, x, and y tile coordinates.\n * Returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The pixel width and height of the source tiles.\n * This may be different than the rendered pixel size if a `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around data tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported data should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Tile projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"./Source.js\").State} [state] The source state.\n * @property {boolean} [wrapX=false] Render tiles beyond the antimeridian.\n * @property {number} [transition] Transition time when fading in new tiles (in milliseconds).\n * @property {number} [bandCount=4] Number of bands represented in the data.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * A source for typed array data tiles.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass DataTileSource extends TileSource {\n  /**\n   * @param {Options} options DataTile source options.\n   */\n  constructor(options) {\n    const projection =\n      options.projection === undefined ? 'EPSG:3857' : options.projection;\n\n    let tileGrid = options.tileGrid;\n    if (tileGrid === undefined && projection) {\n      tileGrid = createXYZ({\n        extent: extentFromProjection(projection),\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize,\n      });\n    }\n\n    super({\n      cacheSize: 0.1, // don't cache on the source\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: projection,\n      tileGrid: tileGrid,\n      opaque: options.opaque,\n      state: options.state,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {import('../size.js').Size|null}\n     */\n    this.tileSize_ = options.tileSize ? toSize(options.tileSize) : null;\n\n    /**\n     * @private\n     * @type {Array<import('../size.js').Size>|null}\n     */\n    this.tileSizes_ = null;\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n    /**\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    this.handleTileChange_ = this.handleTileChange_.bind(this);\n\n    /**\n     * @type {number}\n     */\n    this.bandCount = options.bandCount === undefined ? 4 : options.bandCount; // assume RGBA if undefined\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../TileCache.js\").default>}\n     */\n    this.tileCacheForProjection_ = {};\n  }\n\n  /**\n   * Set the source tile sizes.  The length of the array is expected to match the number of\n   * levels in the tile grid.\n   * @protected\n   * @param {Array<import('../size.js').Size>} tileSizes An array of tile sizes.\n   */\n  setTileSizes(tileSizes) {\n    this.tileSizes_ = tileSizes;\n  }\n\n  /**\n   * Get the source tile size at the given zoom level.  This may be different than the rendered tile\n   * size.\n   * @protected\n   * @param {number} z Tile zoom level.\n   * @return {import('../size.js').Size} The source tile size.\n   */\n  getTileSize(z) {\n    if (this.tileSizes_) {\n      return this.tileSizes_[z];\n    }\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    const tileGrid = this.getTileGrid();\n    return tileGrid ? toSize(tileGrid.getTileSize(z)) : [256, 256];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.gutter_;\n    }\n\n    return 0;\n  }\n\n  /**\n   * @param {Loader} loader The data loader.\n   * @protected\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} targetProj The output projection.\n   * @param {import(\"../proj/Projection.js\").default} sourceProj The input projection.\n   * @return {!DataTile} Tile.\n   */\n  getReprojTile_(z, x, y, targetProj, sourceProj) {\n    const cache = this.getTileCacheForProjection(targetProj);\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (cache.containsKey(tileCoordKey)) {\n      const tile = cache.get(tileCoordKey);\n      if (tile && tile.key == this.getKey()) {\n        return tile;\n      }\n    }\n\n    const tileGrid = this.getTileGrid();\n    const reprojTilePixelRatio = Math.max.apply(\n      null,\n      tileGrid.getResolutions().map((r, z) => {\n        const tileSize = toSize(tileGrid.getTileSize(z));\n        const textureSize = this.getTileSize(z);\n        return Math.max(\n          textureSize[0] / tileSize[0],\n          textureSize[1] / tileSize[1]\n        );\n      })\n    );\n\n    const sourceTileGrid = this.getTileGridForProjection(sourceProj);\n    const targetTileGrid = this.getTileGridForProjection(targetProj);\n    const tileCoord = [z, x, y];\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      targetProj\n    );\n\n    const options = Object.assign(\n      {\n        sourceProj,\n        sourceTileGrid,\n        targetProj,\n        targetTileGrid,\n        tileCoord,\n        wrappedTileCoord,\n        pixelRatio: reprojTilePixelRatio,\n        gutter: this.getGutterForProjection(sourceProj),\n        getTileFunction: (z, x, y, pixelRatio) =>\n          this.getTile(z, x, y, pixelRatio, sourceProj),\n      },\n      this.tileOptions\n    );\n    const newTile = new ReprojDataTile(options);\n    newTile.key = this.getKey();\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!DataTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      sourceProjection &&\n      projection &&\n      !equivalent(sourceProjection, projection)\n    ) {\n      return this.getReprojTile_(z, x, y, projection, sourceProjection);\n    }\n\n    const size = this.getTileSize(z);\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return this.tileCache.get(tileCoordKey);\n    }\n\n    const sourceLoader = this.loader_;\n\n    function loader() {\n      return toPromise(function () {\n        return sourceLoader(z, x, y);\n      });\n    }\n\n    const options = Object.assign(\n      {\n        tileCoord: [z, x, y],\n        loader: loader,\n        size: size,\n      },\n      this.tileOptions\n    );\n\n    const tile = new DataTile(options);\n    tile.key = this.getKey();\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange_);\n\n    this.tileCache.set(tileCoordKey, tile);\n    return tile;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   */\n  handleTileChange_(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection_)) {\n      this.tileGridForProjection_[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection_[projKey];\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection_)) {\n        this.tileGridForProjection_[projKey] = tilegrid;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection_)) {\n      this.tileCacheForProjection_[projKey] = new TileCache(0.1); // don't cache\n    }\n    return this.tileCacheForProjection_[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection_) {\n      const tileCache = this.tileCacheForProjection_[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection_) {\n      this.tileCacheForProjection_[id].clear();\n    }\n  }\n}\n\nexport default DataTileSource;\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {\n  getCenter,\n  getHeight,\n  getIntersection,\n  getWidth,\n  isEmpty,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageBase {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    interpolate\n  ) {\n    let maxSourceExtent = sourceProj.getExtent();\n    if (maxSourceExtent && sourceProj.canWrapX()) {\n      maxSourceExtent = maxSourceExtent.slice();\n      maxSourceExtent[0] = -Infinity;\n      maxSourceExtent[2] = Infinity;\n    }\n    let maxTargetExtent = targetProj.getExtent();\n    if (maxTargetExtent && targetProj.canWrapX()) {\n      maxTargetExtent = maxTargetExtent.slice();\n      maxTargetExtent[0] = -Infinity;\n      maxTargetExtent[2] = Infinity;\n    }\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = isEmpty(sourceExtent)\n      ? null\n      : getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../ImageBase.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        this.sourceImage_.getResolution(),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.interpolate_\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          function (e) {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n          this\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_)\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n","/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport ImageState from '../ImageState.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport {abstract} from '../util.js';\nimport {equals} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport {linearFindNearest} from '../array.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./Source.js\").State} [state] State.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n    });\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {Array<number>|null} resolutions Resolutions.\n   */\n  setResolutions(resolutions) {\n    this.resolutions_ = resolutions;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    const resolutions = this.getResolutions();\n    if (resolutions) {\n      const idx = linearFindNearest(resolutions, resolution, 0);\n      resolution = resolutions[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    }\n    if (this.reprojectedImage_) {\n      if (\n        this.reprojectedRevision_ == this.getRevision() &&\n        equivalent(this.reprojectedImage_.getProjection(), projection) &&\n        this.reprojectedImage_.getResolution() == resolution &&\n        equals(this.reprojectedImage_.getExtent(), extent)\n      ) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new ReprojImage(\n      sourceProjection,\n      projection,\n      extent,\n      resolution,\n      pixelRatio,\n      (extent, resolution, pixelRatio) =>\n        this.getImageInternal(extent, resolution, pixelRatio, sourceProjection),\n      this.getInterpolate()\n    );\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    let type;\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        type = ImageSourceEventType.IMAGELOADSTART;\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADEND;\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADERROR;\n        break;\n      default:\n        return;\n    }\n    if (this.hasListener(type)) {\n      this.dispatchEvent(new ImageSourceEvent(type, image));\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\nexport default ImageSource;\n","/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n","/**\n * @module ol/source/ImageArcGISRest\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageWrapper from '../Image.js';\nimport {appendParams} from '../uri.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, getHeight, getWidth} from '../extent.js';\nimport {createCanvasContext2D} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given\n * a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * The projection code must contain a numeric end portion separated by :\n * or the entire code must form a valid ArcGIS SpatialReference definition.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {Array<number>} [resolutions] Resolutions. If specified, requests will be made for\n * these resolutions only.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n */\n\n/**\n * @classdesc\n * Source for data from ArcGIS Rest services providing single, untiled images.\n * Useful when underlying map service has labels.\n *\n * If underlying map service is not using labels,\n * take advantage of ol image caching and use\n * {@link module:ol/source/TileArcGISRest~TileArcGISRest} data source.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageArcGISRest extends ImageSource {\n  /**\n   * @param {Options} [options] Image ArcGIS Rest Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D(1, 1);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n    pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n    const image = this.image_;\n    if (\n      image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), extent)\n    ) {\n      return image;\n    }\n\n    const params = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true,\n    };\n    Object.assign(params, this.params_);\n\n    extent = extent.slice();\n    const centerX = (extent[0] + extent[2]) / 2;\n    const centerY = (extent[1] + extent[3]) / 2;\n    if (this.ratio_ != 1) {\n      const halfWidth = (this.ratio_ * getWidth(extent)) / 2;\n      const halfHeight = (this.ratio_ * getHeight(extent)) / 2;\n      extent[0] = centerX - halfWidth;\n      extent[1] = centerY - halfHeight;\n      extent[2] = centerX + halfWidth;\n      extent[3] = centerY + halfHeight;\n    }\n\n    const imageResolution = resolution / pixelRatio;\n\n    // Compute an integer width and height.\n    const width = Math.ceil(getWidth(extent) / imageResolution);\n    const height = Math.ceil(getHeight(extent) / imageResolution);\n\n    // Modify the extent to match the integer width and height.\n    extent[0] = centerX - (imageResolution * width) / 2;\n    extent[2] = centerX + (imageResolution * width) / 2;\n    extent[1] = centerY - (imageResolution * height) / 2;\n    extent[3] = centerY + (imageResolution * height) / 2;\n\n    this.imageSize_[0] = width;\n    this.imageSize_[1] = height;\n\n    const url = this.getRequestUrl_(\n      extent,\n      this.imageSize_,\n      pixelRatio,\n      projection,\n      params\n    );\n\n    this.image_ = new ImageWrapper(\n      extent,\n      resolution,\n      pixelRatio,\n      url,\n      this.crossOrigin_,\n      this.imageLoadFunction_,\n      this.context_\n    );\n\n    this.renderedRevision_ = this.getRevision();\n\n    this.image_.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this)\n    );\n\n    return this.image_;\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  getRequestUrl_(extent, size, pixelRatio, projection, params) {\n    // ArcGIS Server only wants the numeric portion of the projection ID.\n    // (if there is no numeric portion the entire projection code must\n    // form a valid ArcGIS SpatialReference definition).\n    const srid = projection\n      .getCode()\n      .split(/:(?=\\d+$)/)\n      .pop();\n\n    params['SIZE'] = size[0] + ',' + size[1];\n    params['BBOX'] = extent.join(',');\n    params['BBOXSR'] = srid;\n    params['IMAGESR'] = srid;\n    params['DPI'] = Math.round(90 * pixelRatio);\n\n    const url = this.url_;\n\n    const modifiedUrl = url\n      .replace(/MapServer\\/?$/, 'MapServer/export')\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n    if (modifiedUrl == url) {\n      assert(false, 50); // `options.featureTypes` should be an Array\n    }\n    return appendParams(modifiedUrl, params);\n  }\n\n  /**\n   * Return the URL used for this ArcGIS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.image_ = null;\n    this.changed();\n  }\n}\n\nexport default ImageArcGISRest;\n","/**\n * @module ol/source/ImageCanvas\n */\n\nimport ImageCanvas from '../ImageCanvas.js';\nimport ImageSource from './Image.js';\nimport {\n  containsExtent,\n  getHeight,\n  getWidth,\n  scaleFromCenter,\n} from '../extent.js';\n\n/**\n * A function returning the canvas element (`{HTMLCanvasElement}`)\n * used by the source as an image. The arguments passed to the function are:\n * {@link module:ol/extent~Extent} the image extent, `{number}` the image resolution,\n * `{number}` the pixel ratio of the map, {@link module:ol/size~Size} the image size,\n * and {@link module:ol/proj/Projection~Projection} the image projection. The canvas returned by\n * this function is cached by the source. The this keyword inside the function\n * references the {@link module:ol/source/ImageCanvas~ImageCanvasSource}.\n *\n * @typedef {function(this:import(\"../ImageCanvas.js\").default, import(\"../extent.js\").Extent, number,\n *     number, import(\"../size.js\").Size, import(\"../proj/Projection.js\").default): HTMLCanvasElement} FunctionType\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {FunctionType} [canvasFunction] Canvas function.\n * The function returning the canvas element used by the source\n * as an image. The arguments passed to the function are: {@link import(\"../extent.js\").Extent} the\n * image extent, `{number}` the image resolution, `{number}` the pixel ratio of the map,\n * {@link import(\"../size.js\").Size} the image size, and {@link import(\"../proj/Projection.js\").default} the image\n * projection. The canvas returned by this function is cached by the source. If\n * the value returned by the function is later changed then\n * `changed` should be called on the source for the source to\n * invalidate the current cached image. See: {@link module:ol/Observable~Observable#changed}\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. 1 means canvases are the size of the map viewport, 2 means twice the\n * width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, new canvases will be created for these resolutions\n * @property {import(\"./Source.js\").State} [state] Source state.\n */\n\n/**\n * @classdesc\n * Base class for image sources where a canvas element is the image.\n * @api\n */\nclass ImageCanvasSource extends ImageSource {\n  /**\n   * @param {Options} [options] ImageCanvas options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n      state: options.state,\n    });\n\n    /**\n     * @private\n     * @type {FunctionType}\n     */\n    this.canvasFunction_ = options.canvasFunction;\n\n    /**\n     * @private\n     * @type {import(\"../ImageCanvas.js\").default}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n\n    let canvas = this.canvas_;\n    if (\n      canvas &&\n      this.renderedRevision_ == this.getRevision() &&\n      canvas.getResolution() == resolution &&\n      canvas.getPixelRatio() == pixelRatio &&\n      containsExtent(canvas.getExtent(), extent)\n    ) {\n      return canvas;\n    }\n\n    extent = extent.slice();\n    scaleFromCenter(extent, this.ratio_);\n    const width = getWidth(extent) / resolution;\n    const height = getHeight(extent) / resolution;\n    const size = [width * pixelRatio, height * pixelRatio];\n\n    const canvasElement = this.canvasFunction_.call(\n      this,\n      extent,\n      resolution,\n      pixelRatio,\n      size,\n      projection\n    );\n    if (canvasElement) {\n      canvas = new ImageCanvas(extent, resolution, pixelRatio, canvasElement);\n    }\n    this.canvas_ = canvas;\n    this.renderedRevision_ = this.getRevision();\n\n    return canvas;\n  }\n}\n\nexport default ImageCanvasSource;\n","/**\n * @module ol/source/ImageStatic\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getHeight, getWidth, intersects} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"../size.js\").Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nclass Static extends ImageSource {\n  /**\n   * @param {Options} options ImageStatic options.\n   */\n  constructor(options) {\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const /** @type {import(\"../Image.js\").LoadFunction} */ imageLoadFunction =\n        options.imageLoadFunction !== undefined\n          ? options.imageLoadFunction\n          : defaultImageLoadFunction;\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: getProjection(options.projection),\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.imageExtent_ = options.imageExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = new ImageWrapper(\n      this.imageExtent_,\n      undefined,\n      1,\n      this.url_,\n      crossOrigin,\n      imageLoadFunction,\n      createCanvasContext2D(1, 1)\n    );\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.imageSize_ = options.imageSize ? options.imageSize : null;\n\n    this.image_.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this)\n    );\n  }\n\n  /**\n   * Returns the image extent\n   * @return {import(\"../extent.js\").Extent} image extent.\n   * @api\n   */\n  getImageExtent() {\n    return this.imageExtent_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (intersects(extent, this.image_.getExtent())) {\n      return this.image_;\n    }\n    return null;\n  }\n\n  /**\n   * Return the URL used for this image source.\n   * @return {string} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   */\n  handleImageChange(evt) {\n    if (this.image_.getState() == ImageState.LOADED) {\n      const imageExtent = this.image_.getExtent();\n      const image = this.image_.getImage();\n      let imageWidth, imageHeight;\n      if (this.imageSize_) {\n        imageWidth = this.imageSize_[0];\n        imageHeight = this.imageSize_[1];\n      } else {\n        imageWidth = image.width;\n        imageHeight = image.height;\n      }\n      const extentWidth = getWidth(imageExtent);\n      const extentHeight = getHeight(imageExtent);\n      const xResolution = extentWidth / imageWidth;\n      const yResolution = extentHeight / imageHeight;\n      let targetWidth = imageWidth;\n      let targetHeight = imageHeight;\n      if (xResolution > yResolution) {\n        targetWidth = Math.round(extentWidth / yResolution);\n      } else {\n        targetHeight = Math.round(extentHeight / xResolution);\n      }\n      if (targetWidth !== imageWidth || targetHeight !== imageHeight) {\n        const context = createCanvasContext2D(targetWidth, targetHeight);\n        if (!this.getInterpolate()) {\n          context.imageSmoothingEnabled = false;\n        }\n        const canvas = context.canvas;\n        context.drawImage(\n          image,\n          0,\n          0,\n          imageWidth,\n          imageHeight,\n          0,\n          0,\n          canvas.width,\n          canvas.height\n        );\n        this.image_.setImage(canvas);\n      }\n    }\n    super.handleImageChange(evt);\n  }\n}\n\nexport default Static;\n","/**\n * @module ol/source/wms\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_VERSION = '1.3.0';\n\n/**\n * @api\n * @typedef {'carmentaserver' | 'geoserver' | 'mapserver' | 'qgis'} ServerType\n * Set the server type to use implementation-specific parameters beyond the WMS specification.\n *  - `'carmentaserver'`: HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n *  - `'geoserver'`: HiDPI support for [GeoServer](https://geoserver.org/)\n *  - `'mapserver'`: HiDPI support for [MapServer](https://mapserver.org/)\n *  - `'qgis'`: HiDPI support for [QGIS](https://qgis.org/)\n */\n","/**\n * @module ol/source/ImageWMS\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageWrapper from '../Image.js';\nimport {DEFAULT_VERSION} from './wms.js';\nimport {appendParams} from '../uri.js';\nimport {assert} from '../asserts.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {ceil, floor, round} from '../math.js';\nimport {compareVersions} from '../string.js';\nimport {\n  containsExtent,\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n} from '../extent.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {get as getProjection, transform} from '../proj.js';\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 4;\n\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nconst GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} [url] WMS service URL.\n */\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageWMS extends ImageSource {\n  /**\n   * @param {Options} [options] ImageWMS options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D(1, 1);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = Object.assign({}, options.params);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n    this.updateV13_();\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      resolution = calculateSourceResolution(\n        sourceProjectionObj,\n        projectionObj,\n        coordinate,\n        resolution\n      );\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const extent = getForViewAndSize(\n      coordinate,\n      resolution,\n      0,\n      GETFEATUREINFO_IMAGE_SIZE\n    );\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    Object.assign(baseParams, this.params_, params);\n\n    const x = floor((coordinate[0] - extent[0]) / resolution, DECIMALS);\n    const y = floor((extent[3] - coordinate[1]) / resolution, DECIMALS);\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      extent,\n      GETFEATUREINFO_IMAGE_SIZE,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    Object.assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.url_), baseParams);\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const imageResolution = resolution / pixelRatio;\n\n    const center = getCenter(extent);\n    const viewWidth = ceil(getWidth(extent) / imageResolution, DECIMALS);\n    const viewHeight = ceil(getHeight(extent) / imageResolution, DECIMALS);\n    const viewExtent = getForViewAndSize(center, imageResolution, 0, [\n      viewWidth,\n      viewHeight,\n    ]);\n    const requestWidth = ceil(\n      (this.ratio_ * getWidth(extent)) / imageResolution,\n      DECIMALS\n    );\n    const requestHeight = ceil(\n      (this.ratio_ * getHeight(extent)) / imageResolution,\n      DECIMALS\n    );\n    const requestExtent = getForViewAndSize(center, imageResolution, 0, [\n      requestWidth,\n      requestHeight,\n    ]);\n\n    const image = this.image_;\n    if (\n      image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)\n    ) {\n      return image;\n    }\n\n    const params = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n    };\n    Object.assign(params, this.params_);\n\n    this.imageSize_[0] = round(\n      getWidth(requestExtent) / imageResolution,\n      DECIMALS\n    );\n    this.imageSize_[1] = round(\n      getHeight(requestExtent) / imageResolution,\n      DECIMALS\n    );\n\n    const url = this.getRequestUrl_(\n      requestExtent,\n      this.imageSize_,\n      pixelRatio,\n      projection,\n      params\n    );\n\n    this.image_ = new ImageWrapper(\n      requestExtent,\n      resolution,\n      pixelRatio,\n      url,\n      this.crossOrigin_,\n      this.imageLoadFunction_,\n      this.context_\n    );\n\n    this.renderedRevision_ = this.getRevision();\n\n    this.image_.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this)\n    );\n\n    return this.image_;\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  getRequestUrl_(extent, size, pixelRatio, projection, params) {\n    assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case 'geoserver':\n          const dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case 'mapserver':\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case 'carmentaserver':\n        case 'qgis':\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default: // Unknown `serverType` configured\n          assert(false, 8);\n          break;\n      }\n    }\n\n    params['WIDTH'] = size[0];\n    params['HEIGHT'] = size[1];\n\n    const axisOrientation = projection.getAxisOrientation();\n    let bbox;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      bbox = [extent[1], extent[0], extent[3], extent[2]];\n    } else {\n      bbox = extent;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    return appendParams(/** @type {string} */ (this.url_), params);\n  }\n\n  /**\n   * Return the URL used for this WMS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.updateV13_();\n    this.image_ = null;\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n}\n\nexport default ImageWMS;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return this.image_ ? this.image_.getImage() : null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection)\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image_ = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image_ = null;\n          }\n        }\n      } else {\n        this.image_ = null;\n      }\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image_.getExtent();\n    const img = this.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth)\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight)\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scale =\n      (pixelRatio * imageResolution) / (viewResolution * imagePixelRatio);\n\n    const extent = frameState.extent;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.context;\n    const canvas = context.canvas;\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = this.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scale,\n      scale,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolution,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolution\n    );\n\n    this.renderedResolution = (imageResolution * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      let previousAlpha;\n      if (opacity !== 1) {\n        previousAlpha = context.globalAlpha;\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.globalAlpha = previousAlpha;\n      }\n    }\n    this.postRender(context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/source/Raster\n */\nimport Disposable from '../Disposable.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport ImageLayer from '../layer/Image.js';\nimport ImageSource from './Image.js';\nimport Source from './Source.js';\nimport TileLayer from '../layer/Tile.js';\nimport TileQueue from '../TileQueue.js';\nimport TileSource from './Tile.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {create as createTransform} from '../transform.js';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport {getUid} from '../util.js';\n\nlet hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet context;\n\n/**\n * @param {Uint8ClampedArray} data Image data.\n * @param {number} width Number of columns.\n * @param {number} height Number of rows.\n * @return {ImageData} Image data.\n */\nexport function newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  }\n\n  if (!context) {\n    context = document.createElement('canvas').getContext('2d');\n  }\n  const imageData = context.createImageData(width, height);\n  imageData.data.set(data);\n  return imageData;\n}\n\n/**\n * @typedef {Object} MinionData\n * @property {Array<ArrayBuffer>} buffers Array of buffers.\n * @property {Object} meta Operation metadata.\n * @property {boolean} imageOps The operation is an image operation.\n * @property {number} width The width of the image.\n * @property {number} height The height of the image.\n */\n\n/* istanbul ignore next */\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(MinionData):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  let workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    }\n    return {data: data, width: width, height: height};\n  }\n\n  return function (data) {\n    // bracket notation for minification support\n    const buffers = data['buffers'];\n    const meta = data['meta'];\n    const imageOps = data['imageOps'];\n    const width = data['width'];\n    const height = data['height'];\n\n    const numBuffers = buffers.length;\n    const numBytes = buffers[0].byteLength;\n\n    if (imageOps) {\n      const images = new Array(numBuffers);\n      for (let b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n          new Uint8ClampedArray(buffers[b]),\n          width,\n          height\n        );\n      }\n      const output = operation(images, meta).data;\n      return output.buffer;\n    }\n\n    const output = new Uint8ClampedArray(numBytes);\n    const arrays = new Array(numBuffers);\n    const pixels = new Array(numBuffers);\n    for (let b = 0; b < numBuffers; ++b) {\n      arrays[b] = new Uint8ClampedArray(buffers[b]);\n      pixels[b] = [0, 0, 0, 0];\n    }\n    for (let i = 0; i < numBytes; i += 4) {\n      for (let j = 0; j < numBuffers; ++j) {\n        const array = arrays[j];\n        pixels[j][0] = array[i];\n        pixels[j][1] = array[i + 1];\n        pixels[j][2] = array[i + 2];\n        pixels[j][3] = array[i + 3];\n      }\n      const pixel = operation(pixels, meta);\n      output[i] = pixel[0];\n      output[i + 1] = pixel[1];\n      output[i + 2] = pixel[2];\n      output[i + 3] = pixel[3];\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {ProcessorOptions} config Processor options.\n * @param {function(MessageEvent): void} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  const lib = Object.keys(config.lib || {}).map(function (name) {\n    return 'const ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  const lines = lib.concat([\n    'const __minion__ = (' + createMinion.toString() + ')(',\n    config.operation.toString(),\n    ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  const buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});',\n  ]);\n\n  const worker = new Worker(\n    typeof Blob === 'undefined'\n      ? 'data:text/javascript;base64,' +\n        Buffer.from(lines.join('\\n'), 'binary').toString('base64')\n      : URL.createObjectURL(new Blob(lines, {type: 'text/javascript'}))\n  );\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * @typedef {Object} FauxMessageEvent\n * @property {Object} data Message data.\n */\n\n/**\n * Create a faux worker for running operations.\n * @param {ProcessorOptions} config Configuration.\n * @param {function(FauxMessageEvent): void} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  const minion = createMinion(config.operation);\n  let terminated = false;\n  return {\n    postMessage: function (data) {\n      setTimeout(function () {\n        if (terminated) {\n          return;\n        }\n        onMessage({data: {buffer: minion(data), meta: data['meta']}});\n      }, 0);\n    },\n    terminate: function () {\n      terminated = true;\n    },\n  };\n}\n\n/**\n * @typedef {function(Error, ImageData, (Object|Array<Object>)): void} JobCallback\n */\n\n/**\n * @typedef {Object} Job\n * @property {Object} meta Job metadata.\n * @property {Array<ImageData>} inputs Array of input data.\n * @property {JobCallback} callback Called when the job is complete.\n */\n\n/**\n * @typedef {Object} ProcessorOptions\n * @property {number} threads Number of workers to spawn.\n * @property {Operation} operation The operation.\n * @property {Object<string, Function>} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} queue The number of queued jobs to allow.\n * @property {boolean} [imageOps=false] Pass all the image data to the operation instead of a single pixel.\n */\n\n/**\n * @classdesc\n * A processor runs pixel or image operations in workers.\n */\nexport class Processor extends Disposable {\n  /**\n   * @param {ProcessorOptions} config Configuration.\n   */\n  constructor(config) {\n    super();\n\n    this._imageOps = !!config.imageOps;\n    let threads;\n    if (config.threads === 0) {\n      threads = 0;\n    } else if (this._imageOps) {\n      threads = 1;\n    } else {\n      threads = config.threads || 1;\n    }\n\n    /**\n     * @type {Array<Worker>}\n     */\n    const workers = new Array(threads);\n    if (threads) {\n      for (let i = 0; i < threads; ++i) {\n        workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n      }\n    } else {\n      workers[0] = createFauxWorker(\n        config,\n        this._onWorkerMessage.bind(this, 0)\n      );\n    }\n    this._workers = workers;\n\n    /**\n     * @type {Array<Job>}\n     * @private\n     */\n    this._queue = [];\n\n    this._maxQueueLength = config.queue || Infinity;\n    this._running = 0;\n\n    /**\n     * @type {Object<number, any>}\n     * @private\n     */\n    this._dataLookup = {};\n\n    /**\n     * @type {Job}\n     * @private\n     */\n    this._job = null;\n  }\n\n  /**\n   * Run operation on input data.\n   * @param {Array<ImageData>} inputs Array of image data.\n   * @param {Object} meta A user data object.  This is passed to all operations\n   *     and must be serializable.\n   * @param {function(Error, ImageData, Object): void} callback Called when work\n   *     completes.  The first argument is any error.  The second is the ImageData\n   *     generated by operations.  The third is the user data object.\n   */\n  process(inputs, meta, callback) {\n    this._enqueue({\n      inputs: inputs,\n      meta: meta,\n      callback: callback,\n    });\n    this._dispatch();\n  }\n\n  /**\n   * Add a job to the queue.\n   * @param {Job} job The job.\n   */\n  _enqueue(job) {\n    this._queue.push(job);\n    while (this._queue.length > this._maxQueueLength) {\n      this._queue.shift().callback(null, null);\n    }\n  }\n\n  /**\n   * Dispatch a job.\n   */\n  _dispatch() {\n    if (this._running || this._queue.length === 0) {\n      return;\n    }\n\n    const job = this._queue.shift();\n    this._job = job;\n    const width = job.inputs[0].width;\n    const height = job.inputs[0].height;\n    const buffers = job.inputs.map(function (input) {\n      return input.data.buffer;\n    });\n    const threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage(\n        {\n          buffers: buffers,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        buffers\n      );\n      return;\n    }\n\n    const length = job.inputs[0].data.length;\n    const segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (let i = 0; i < threads; ++i) {\n      const offset = i * segmentLength;\n      const slices = [];\n      for (let j = 0, jj = buffers.length; j < jj; ++j) {\n        slices.push(buffers[j].slice(offset, offset + segmentLength));\n      }\n      this._workers[i].postMessage(\n        {\n          buffers: slices,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        slices\n      );\n    }\n  }\n\n  /**\n   * Handle messages from the worker.\n   * @param {number} index The worker index.\n   * @param {MessageEvent} event The message event.\n   */\n  _onWorkerMessage(index, event) {\n    if (this.disposed) {\n      return;\n    }\n    this._dataLookup[index] = event.data;\n    --this._running;\n    if (this._running === 0) {\n      this._resolveJob();\n    }\n  }\n\n  /**\n   * Resolve a job.  If there are no more worker threads, the processor callback\n   * will be called.\n   */\n  _resolveJob() {\n    const job = this._job;\n    const threads = this._workers.length;\n    let data, meta;\n    if (threads === 1) {\n      data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n      meta = this._dataLookup[0]['meta'];\n    } else {\n      const length = job.inputs[0].data.length;\n      data = new Uint8ClampedArray(length);\n      meta = new Array(threads);\n      const segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (let i = 0; i < threads; ++i) {\n        const buffer = this._dataLookup[i]['buffer'];\n        const offset = i * segmentLength;\n        data.set(new Uint8ClampedArray(buffer), offset);\n        meta[i] = this._dataLookup[i]['meta'];\n      }\n    }\n    this._job = null;\n    this._dataLookup = {};\n    job.callback(\n      null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height),\n      meta\n    );\n    this._dispatch();\n  }\n\n  /**\n   * Terminate all workers associated with the processor.\n   */\n  disposeInternal() {\n    for (let i = 0; i < this._workers.length; ++i) {\n      this._workers[i].terminate();\n    }\n    this._workers.length = 0;\n  }\n}\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData)\n * and should return a single\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData).\n * The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n\n/**\n * @enum {string}\n */\nconst RasterEventType = {\n  /**\n   * Triggered before operations are run.  Listeners will receive an event object with\n   * a `data` property that can be used to make data available to operations.\n   * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.  Listeners will receive an event object with\n   * a `data` property.  If more than one thread is used, `data` will be an array of\n   * objects.  If a single thread is used, `data` will be a single object.\n   * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations',\n};\n\n/**\n * @typedef {'pixel' | 'image'} RasterOperationType\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n */\n\n/**\n * @typedef {import(\"./Image.js\").ImageSourceEventTypes|'beforeoperations'|'afteroperations'} RasterSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster~RasterSource} instances are instances of this\n * type.\n */\nexport class RasterSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Object|Array<Object>} data An object made available to operations.  For \"afteroperations\" evenets\n   * this will be an array of objects if more than one thread is used.\n   */\n  constructor(type, frameState, data) {\n    super(type);\n\n    /**\n     * The raster extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n * @property {Array<number>|null} [resolutions] Resolutions. If specified, raster operations will only\n * be run at the given resolutions.  By default, the resolutions of the first source with resolutions\n * specified will be used, if any. Set to `null` to use any view resolution instead.\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Image.js\").ImageSourceEventTypes, import(\"./Image.js\").ImageSourceEvent, Return> &\n *   import(\"../Observable\").OnSignature<RasterSourceEventTypes, RasterSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |RasterSourceEventTypes, Return>} RasterSourceOnSignature\n */\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nclass RasterSource extends ImageSource {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      projection: null,\n    });\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {RasterSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Processor}\n     */\n    this.processor_ = null;\n\n    /**\n     * @private\n     * @type {RasterOperationType}\n     */\n    this.operationType_ =\n      options.operationType !== undefined ? options.operationType : 'pixel';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array<import(\"../layer/Layer.js\").default>}\n     */\n    this.layers_ = createLayers(options.sources);\n\n    const changed = this.changed.bind(this);\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      this.layers_[i].addEventListener(EventType.CHANGE, changed);\n    }\n\n    /** @type {boolean} */\n    this.useResolutions_ = options.resolutions !== null;\n\n    /**\n     * @private\n     * @type {import(\"../TileQueue.js\").default}\n     */\n    this.tileQueue_ = new TileQueue(function () {\n      return 1;\n    }, this.changed.bind(this));\n\n    /**\n     * The most recently requested frame state.\n     * @type {import(\"../Map.js\").FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {import(\"../ImageCanvas.js\").default}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      declutterTree: null,\n      extent: null,\n      index: 0,\n      layerIndex: 0,\n      layerStatesArray: getLayerStatesArray(this.layers_),\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {import(\"../View.js\").State} */ ({\n        rotation: 0,\n      }),\n      viewHints: [],\n      wantedTiles: {},\n      mapId: getUid(this),\n      renderTargets: {},\n    };\n\n    this.setAttributions(function (frameState) {\n      const attributions = [];\n      for (\n        let index = 0, iMax = options.sources.length;\n        index < iMax;\n        ++index\n      ) {\n        const sourceOrLayer = options.sources[index];\n        const source =\n          sourceOrLayer instanceof Source\n            ? sourceOrLayer\n            : sourceOrLayer.getSource();\n        if (!source) {\n          continue;\n        }\n        const attributionGetter = source.getAttributions();\n        if (typeof attributionGetter === 'function') {\n          const sourceAttribution = attributionGetter(frameState);\n          attributions.push.apply(attributions, sourceAttribution);\n        }\n      }\n      return attributions.length !== 0 ? attributions : null;\n    });\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n  }\n\n  /**\n   * Set the operation.\n   * @param {Operation} operation New operation.\n   * @param {Object} [lib] Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  setOperation(operation, lib) {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n\n    this.processor_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === 'image',\n      queue: 1,\n      lib: lib,\n      threads: this.threads_,\n    });\n    this.changed();\n  }\n\n  /**\n   * Update the stored frame state.\n   * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n   * @return {import(\"../Map.js\").FrameState} The updated frame state.\n   * @private\n   */\n  updateFrameState_(extent, resolution, projection) {\n    const frameState = /** @type {import(\"../Map.js\").FrameState} */ (\n      Object.assign({}, this.frameState_)\n    );\n\n    frameState.viewState = /** @type {import(\"../View.js\").State} */ (\n      Object.assign({}, frameState.viewState)\n    );\n\n    const center = getCenter(extent);\n\n    frameState.size[0] = Math.ceil(getWidth(extent) / resolution);\n    frameState.size[1] = Math.ceil(getHeight(extent) / resolution);\n    frameState.extent = [\n      center[0] - (frameState.size[0] * resolution) / 2,\n      center[1] - (frameState.size[1] * resolution) / 2,\n      center[0] + (frameState.size[0] * resolution) / 2,\n      center[1] + (frameState.size[1] * resolution) / 2,\n    ];\n    frameState.time = Date.now();\n\n    const viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  }\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  allSourcesReady_() {\n    let ready = true;\n    let source;\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      source = this.layers_[i].getSource();\n      if (!source || source.getState() !== 'ready') {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n    const frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      const renderedResolution = this.renderedImageCanvas_.getResolution();\n      const renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (\n        resolution !== renderedResolution ||\n        !equals(frameState.extent, renderedExtent)\n      ) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (\n      !this.renderedImageCanvas_ ||\n      this.getRevision() !== this.renderedRevision_\n    ) {\n      this.processSources_();\n    }\n\n    frameState.tileQueue.loadMoreTiles(16, 16);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  }\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  processSources_() {\n    const frameState = this.requestedFrameState_;\n    const len = this.layers_.length;\n    const imageDatas = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      frameState.layerIndex = i;\n      frameState.renderTargets = {};\n      const imageData = getImageData(this.layers_[i], frameState);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    const data = {};\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data)\n    );\n    this.processor_.process(\n      imageDatas,\n      data,\n      this.onWorkerComplete_.bind(this, frameState)\n    );\n  }\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object|Array<Object>} data The user data (or an array if more than one thread).\n   * @private\n   */\n  onWorkerComplete_(frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    if (\n      resolution !== this.requestedFrameState_.viewState.resolution ||\n      !equals(extent, this.requestedFrameState_.extent)\n    ) {\n      return;\n    }\n\n    let context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      const width = Math.round(getWidth(extent) / resolution);\n      const height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(\n        extent,\n        resolution,\n        1,\n        context.canvas\n      );\n    }\n    context.putImageData(output, 0, 0);\n\n    this.changed();\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data)\n    );\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    if (!this.useResolutions_) {\n      return null;\n    }\n    let resolutions = super.getResolutions();\n    if (!resolutions) {\n      for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n        const source = this.layers_[i].getSource();\n        resolutions = source.getResolutions(projection);\n        if (resolutions) {\n          break;\n        }\n      }\n    }\n    return resolutions;\n  }\n\n  disposeInternal() {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n    super.disposeInternal();\n  }\n}\n\n/**\n * Clean up and unregister the worker.\n * @function\n * @api\n */\nRasterSource.prototype.dispose;\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nlet sharedContext = null;\n\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState) {\n  const renderer = layer.getRenderer();\n  if (!renderer) {\n    throw new Error('Unsupported layer type: ' + layer);\n  }\n\n  if (!renderer.prepareFrame(frameState)) {\n    return null;\n  }\n  const width = frameState.size[0];\n  const height = frameState.size[1];\n  if (width === 0 || height === 0) {\n    return null;\n  }\n  const container = renderer.renderFrame(frameState, null);\n  let element;\n  if (container instanceof HTMLCanvasElement) {\n    element = container;\n  } else {\n    if (container) {\n      element = container.firstElementChild;\n    }\n    if (!(element instanceof HTMLCanvasElement)) {\n      throw new Error('Unsupported rendered element: ' + element);\n    }\n    if (element.width === width && element.height === height) {\n      const context = element.getContext('2d');\n      return context.getImageData(0, 0, width, height);\n    }\n  }\n\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height, undefined, {\n      willReadFrequently: true,\n    });\n  } else {\n    const canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height, undefined, {\n        willReadFrequently: true,\n      });\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  sharedContext.drawImage(element, 0, 0, width, height);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n  return layers.map(function (layer) {\n    return layer.getLayerState();\n  });\n}\n\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n  const len = sources.length;\n  const layers = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    layers[i] = createLayer(sources[i]);\n  }\n  return layers;\n}\n\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n  // @type {import(\"../layer/Layer.js\").default}\n  let layer;\n  if (layerOrSource instanceof Source) {\n    if (layerOrSource instanceof TileSource) {\n      layer = new TileLayer({source: layerOrSource});\n    } else if (layerOrSource instanceof ImageSource) {\n      layer = new ImageLayer({source: layerOrSource});\n    }\n  } else {\n    layer = layerOrSource;\n  }\n  return layer;\n}\n\nexport default RasterSource;\n","/**\n * @module ol/source/Stamen\n */\n\nimport XYZ from './XYZ.js';\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from './OSM.js';\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst ATTRIBUTIONS = [\n  'Map tiles by <a href=\"https://stamen.com/\" target=\"_blank\">Stamen Design</a>, ' +\n    'under <a href=\"https://creativecommons.org/licenses/by/3.0/\" target=\"_blank\">CC BY' +\n    ' 3.0</a>.',\n  OSM_ATTRIBUTION,\n];\n\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nconst LayerConfig = {\n  'terrain': {\n    extension: 'png',\n    opaque: true,\n  },\n  'terrain-background': {\n    extension: 'png',\n    opaque: true,\n  },\n  'terrain-labels': {\n    extension: 'png',\n    opaque: false,\n  },\n  'terrain-lines': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-background': {\n    extension: 'png',\n    opaque: true,\n  },\n  'toner': {\n    extension: 'png',\n    opaque: true,\n  },\n  'toner-hybrid': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-labels': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-lines': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-lite': {\n    extension: 'png',\n    opaque: true,\n  },\n  'watercolor': {\n    extension: 'jpg',\n    opaque: true,\n  },\n};\n\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number}>}\n */\nconst ProviderConfig = {\n  'terrain': {\n    minZoom: 0,\n    maxZoom: 18,\n  },\n  'toner': {\n    minZoom: 0,\n    maxZoom: 20,\n  },\n  'watercolor': {\n    minZoom: 0,\n    maxZoom: 18,\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {string} layer Layer name.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n * @api\n */\nclass Stamen extends XYZ {\n  /**\n   * @param {Options} options Stamen options.\n   */\n  constructor(options) {\n    const i = options.layer.indexOf('-');\n    const provider = i == -1 ? options.layer : options.layer.slice(0, i);\n    const providerConfig = ProviderConfig[provider];\n\n    const layerConfig = LayerConfig[options.layer];\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' +\n          options.layer +\n          '/{z}/{x}/{y}.' +\n          layerConfig.extension;\n\n    super({\n      attributions: ATTRIBUTIONS,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: options.interpolate,\n      maxZoom:\n        options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n      minZoom:\n        options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n      opaque: layerConfig.opaque,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default Stamen;\n","/**\n * @module ol/source/TileArcGISRest\n */\n\nimport TileImage from './TileImage.js';\nimport {appendParams} from '../uri.js';\nimport {createEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\n * default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`,\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\n * override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * The projection code must contain a numeric end portion separated by :\n * or the entire code must form a valid ArcGIS SpatialReference definition.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\n * The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\n * url should include /MapServer or /ImageServer.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\n * transition, pass `transition: 0`.\n * @property {Array<string>} [urls] ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\n * Service supports multiple urls for export requests.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from ArcGIS Rest services. Map and Image\n * Services are supported.\n *\n * For cached ArcGIS services, better performance is available using the\n * {@link module:ol/source/XYZ~XYZ} data source.\n * @api\n */\nclass TileArcGISRest extends TileImage {\n  /**\n   * @param {Options} [options] Tile ArcGIS Rest options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(\n    tileCoord,\n    tileSize,\n    tileExtent,\n    pixelRatio,\n    projection,\n    params\n  ) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    // ArcGIS Server only wants the numeric portion of the projection ID.\n    // (if there is no numeric portion the entire projection code must\n    // form a valid ArcGIS SpatialReference definition).\n    const srid = projection\n      .getCode()\n      .split(/:(?=\\d+$)/)\n      .pop();\n\n    params['SIZE'] = tileSize[0] + ',' + tileSize[1];\n    params['BBOX'] = tileExtent.join(',');\n    params['BBOXSR'] = srid;\n    params['IMAGESR'] = srid;\n    params['DPI'] = Math.round(\n      params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio\n    );\n\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n\n    const modifiedUrl = url\n      .replace(/MapServer\\/?$/, 'MapServer/export')\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n    return appendParams(modifiedUrl, params);\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.hidpi_ ? pixelRatio : 1;\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && !this.hidpi_) {\n      pixelRatio = 1;\n    }\n\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    // Apply default params and override with user specified values.\n    const baseParams = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true,\n    };\n    Object.assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams\n    );\n  }\n}\n\nexport default TileArcGISRest;\n","/**\n * @module ol/source/TileDebug\n */\n\nimport XYZ from './XYZ.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Optional projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Set to `1` when debugging `VectorTile` sources with a default configuration.\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n * @property {string} [template='z:{z} x:{x} y:{y}'] Template for labeling the tiles.\n * Should include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n */\n\n/**\n * @classdesc\n * A pseudo tile source, which does not fetch tiles from a server, but renders\n * a grid outline for the tile grid/projection along with the coordinates for\n * each tile. See examples/canvas-tiles for an example.\n * @api\n */\nclass TileDebug extends XYZ {\n  /**\n   * @param {Options} [options] Debug tile options.\n   */\n  constructor(options) {\n    /**\n     * @type {Options}\n     */\n    options = options || {};\n\n    super({\n      opaque: false,\n      projection: options.projection,\n      tileGrid: options.tileGrid,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      zDirection: options.zDirection,\n      url: options.template || 'z:{z} x:{x} y:{y}',\n      tileLoadFunction: (tile, text) => {\n        const z = tile.getTileCoord()[0];\n        const tileSize = toSize(this.tileGrid.getTileSize(z));\n        const context = createCanvasContext2D(tileSize[0], tileSize[1]);\n\n        context.strokeStyle = 'grey';\n        context.strokeRect(0.5, 0.5, tileSize[0] + 0.5, tileSize[1] + 0.5);\n\n        context.fillStyle = 'grey';\n        context.strokeStyle = 'white';\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.font = '24px sans-serif';\n        context.lineWidth = 4;\n        context.strokeText(text, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n        context.fillText(text, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n\n        /** @type {import(\"../ImageTile.js\").default} */ (tile).setImage(\n          context.canvas\n        );\n      },\n    });\n  }\n}\n\nexport default TileDebug;\n","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See https://mapbox.com/developers/api/.\n */\n\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {assert} from '../asserts.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Note: `tileSize` and other non-standard TileJSON properties are currently ignored.\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nclass TileJSON extends TileImage {\n  /**\n   * @param {Options} options TileJSON options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @type {Config}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     * @private\n     */\n    this.tileSize_ = options.tileSize;\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this)\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {Config} */ (JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * @return {Config} The tilejson object.\n   * @api\n   */\n  getTileJSON() {\n    return this.tileJSON_;\n  }\n\n  /**\n   * @protected\n   * @param {Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n      tileSize: this.tileSize_,\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n\n    if (tileJSON['attribution'] && !this.getAttributions()) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState('ready');\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n}\n\nexport default TileJSON;\n","/**\n * @module ol/source/TileWMS\n */\n\nimport TileImage from './TileImage.js';\nimport {DEFAULT_VERSION} from './wms.js';\nimport {appendParams} from '../uri.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {buffer as bufferSize, scale as scaleSize, toSize} from '../size.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {compareVersions} from '../string.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport {modulo} from '../math.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See https://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nclass TileWMS extends TileImage {\n  /**\n   * @param {Options} [options] Tile WMS options.\n   */\n  constructor(options) {\n    options = options ? options : /** @type {Options} */ ({});\n\n    const params = Object.assign({}, options.params);\n\n    const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: !transparent,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projectionObj);\n    }\n\n    const z = tileGrid.getZForResolution(resolution, this.zDirection);\n    const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    let tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      tileResolution = calculateSourceResolution(\n        sourceProjectionObj,\n        projectionObj,\n        coordinate,\n        tileResolution\n      );\n      tileExtent = transformExtent(\n        tileExtent,\n        projectionObj,\n        sourceProjectionObj\n      );\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    Object.assign(baseParams, this.params_, params);\n\n    const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n    const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.urls[0] === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    Object.assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.urls[0]), baseParams);\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(\n    tileCoord,\n    tileSize,\n    tileExtent,\n    pixelRatio,\n    projection,\n    params\n  ) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    params['WIDTH'] = tileSize[0];\n    params['HEIGHT'] = tileSize[1];\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case 'geoserver':\n          const dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case 'mapserver':\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case 'carmentaserver':\n        case 'qgis':\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default: // Unknown `serverType` configured\n          assert(false, 52);\n          break;\n      }\n    }\n\n    const axisOrientation = projection.getAxisOrientation();\n    const bbox = tileExtent;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      let tmp;\n      tmp = tileExtent[0];\n      bbox[0] = tileExtent[1];\n      bbox[1] = tmp;\n      tmp = tileExtent[2];\n      bbox[2] = tileExtent[3];\n      bbox[3] = tmp;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n    return appendParams(url, params);\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return !this.hidpi_ || this.serverType_ === undefined ? 1 : pixelRatio;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n    };\n    Object.assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams\n    );\n  }\n}\n\nexport default TileWMS;\n","/**\n * @module ol/source/UTFGrid\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileSource from './Tile.js';\nimport TileState from '../TileState.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {assert} from '../asserts.js';\nimport {createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {listenOnce} from '../events.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @typedef {Object} UTFGridJSON\n * @property {Array<string>} grid The grid.\n * @property {Array<string>} keys The keys.\n * @property {Object<string, Object>} [data] Optional data.\n */\n\nexport class CustomTile extends Tile {\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {import(\"../extent.js\").Extent} extent Extent of the tile.\n   * @param {boolean} preemptive Load the tile when visible (before it's needed).\n   * @param {boolean} jsonp Load the tile as a script.\n   */\n  constructor(tileCoord, state, src, extent, preemptive, jsonp) {\n    super(tileCoord, state);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = preemptive;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.grid_ = null;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.keys_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Object>|undefined}\n     */\n    this.data_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = jsonp;\n  }\n\n  /**\n   * Get the image element for this tile.\n   * @return {HTMLImageElement} Image.\n   */\n  getImage() {\n    return null;\n  }\n\n  /**\n   * Synchronously returns data at given coordinate (if available).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {*} The data.\n   */\n  getData(coordinate) {\n    if (!this.grid_ || !this.keys_) {\n      return null;\n    }\n    const xRelative =\n      (coordinate[0] - this.extent_[0]) / (this.extent_[2] - this.extent_[0]);\n    const yRelative =\n      (coordinate[1] - this.extent_[1]) / (this.extent_[3] - this.extent_[1]);\n\n    const row = this.grid_[Math.floor((1 - yRelative) * this.grid_.length)];\n\n    if (typeof row !== 'string') {\n      return null;\n    }\n\n    let code = row.charCodeAt(Math.floor(xRelative * row.length));\n    if (code >= 93) {\n      code--;\n    }\n    if (code >= 35) {\n      code--;\n    }\n    code -= 32;\n\n    let data = null;\n    if (code in this.keys_) {\n      const id = this.keys_[code];\n      if (this.data_ && id in this.data_) {\n        data = this.data_[id];\n      } else {\n        data = id;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate (or `null` if not yet loaded).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(*): void} callback Callback.\n   * @param {boolean} [request] If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   */\n  forDataAtCoordinate(coordinate, callback, request) {\n    if (this.state == TileState.EMPTY && request === true) {\n      this.state = TileState.IDLE;\n      listenOnce(\n        this,\n        EventType.CHANGE,\n        function (e) {\n          callback(this.getData(coordinate));\n        },\n        this\n      );\n      this.loadInternal_();\n    } else {\n      if (request === true) {\n        setTimeout(() => {\n          callback(this.getData(coordinate));\n        }, 0);\n      } else {\n        callback(this.getData(coordinate));\n      }\n    }\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.src_;\n  }\n\n  /**\n   * @private\n   */\n  handleError_() {\n    this.state = TileState.ERROR;\n    this.changed();\n  }\n\n  /**\n   * @param {!UTFGridJSON} json UTFGrid data.\n   * @private\n   */\n  handleLoad_(json) {\n    this.grid_ = json['grid'];\n    this.keys_ = json['keys'];\n    this.data_ = json['data'];\n\n    this.state = TileState.LOADED;\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  loadInternal_() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      if (this.jsonp_) {\n        requestJSONP(\n          this.src_,\n          this.handleLoad_.bind(this),\n          this.handleError_.bind(this)\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', this.src_);\n        client.send();\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {!UTFGridJSON} */ (\n          JSON.parse(client.responseText)\n        );\n      } catch (err) {\n        this.handleError_();\n        return;\n      }\n      this.handleLoad_(response);\n    } else {\n      this.handleError_();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleError_();\n  }\n\n  /**\n   */\n  load() {\n    if (this.preemptive_) {\n      this.loadInternal_();\n    } else {\n      this.setState(TileState.EMPTY);\n    }\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [preemptive=true]\n * If `true` the UTFGrid source loads the tiles based on their \"visibility\".\n * This improves the speed of response, but increases traffic.\n * Note that if set to `false` (lazy loading), you need to pass `true` as\n * `request` to the `forDataAtCoordinateAndResolution` method otherwise no\n * data will ever be loaded.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {import(\"./TileJSON.js\").Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {string} [url] TileJSON endpoint that provides the configuration for this source.\n * Request will be made through JSONP. If not provided, `tileJSON` must be configured.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for UTFGrid interaction data loaded from TileJSON format.\n * @api\n */\nclass UTFGrid extends TileSource {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super({\n      projection: getProjection('EPSG:3857'),\n      state: 'loading',\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ =\n      options.preemptive !== undefined ? options.preemptive : true;\n\n    /**\n     * @private\n     * @type {!import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction_ = nullTileUrlFunction;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.template_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = options.jsonp || false;\n\n    if (options.url) {\n      if (this.jsonp_) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this)\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {import(\"./TileJSON.js\").Config} */ (\n          JSON.parse(client.responseText)\n        );\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * Return the template from TileJSON.\n   * @return {string|undefined} The template from TileJSON.\n   * @api\n   */\n  getTemplate() {\n    return this.template_;\n  }\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate and resolution (or `null` if not yet loaded or\n   * in case of an error).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {function(*): void} callback Callback.\n   * @param {boolean} [request] If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   * @api\n   */\n  forDataAtCoordinateAndResolution(coordinate, resolution, callback, request) {\n    if (this.tileGrid) {\n      const z = this.tileGrid.getZForResolution(resolution, this.zDirection);\n      const tileCoord = this.tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = /** @type {!CustomTile} */ (\n        this.getTile(\n          tileCoord[0],\n          tileCoord[1],\n          tileCoord[2],\n          1,\n          this.getProjection()\n        )\n      );\n      tile.forDataAtCoordinate(coordinate, callback, request);\n    } else {\n      if (request === true) {\n        setTimeout(function () {\n          callback(null);\n        }, 0);\n      } else {\n        callback(null);\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n\n  /**\n   * TODO: very similar to ol/source/TileJSON#handleTileJSONResponse\n   * @protected\n   * @param {import(\"./TileJSON.js\").Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n    });\n    this.tileGrid = tileGrid;\n\n    this.template_ = tileJSON['template'];\n\n    const grids = tileJSON['grids'];\n    if (!grids) {\n      this.setState('error');\n      return;\n    }\n\n    this.tileUrlFunction_ = createFromTemplates(grids, tileGrid);\n\n    if (tileJSON['attribution'] !== undefined) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n\n    this.setState('ready');\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!CustomTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return this.tileCache.get(tileCoordKey);\n    }\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = this.tileUrlFunction_(urlTileCoord, pixelRatio, projection);\n    const tile = new CustomTile(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.tileGrid.getTileCoordExtent(tileCoord),\n      this.preemptive_,\n      this.jsonp_\n    );\n    this.tileCache.set(tileCoordKey, tile);\n    return tile;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UTFGrid;\n","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport TileGrid from './TileGrid.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile~TileSource} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes,\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent} [extent] An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>} [matrixLimits] An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(\n  matrixSet,\n  extent,\n  matrixLimits\n) {\n  /** @type {!Array<number>} */\n  const resolutions = [];\n  /** @type {!Array<string>} */\n  const matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  const origins = [];\n  /** @type {!Array<number|import(\"../size.js\").Size>} */\n  const tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const sizes = [];\n\n  matrixLimits = matrixLimits !== undefined ? matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function (a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function (elt) {\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = matrixLimits.find(function (elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (!elt[identifierPropName].includes(':')) {\n          return (\n            matrixSet[identifierPropName] + ':' + elt[identifierPropName] ===\n            elt_ml[matrixIdsPropName]\n          );\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution =\n        (elt[scaleDenominatorPropName] * 0.28e-3) / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([\n          elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0],\n        ]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(\n        tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight]\n      );\n      sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes,\n  });\n}\n","/**\n * @module ol/source/WMTS\n */\n\nimport TileImage from './TileImage.js';\nimport {appendParams} from '../uri.js';\nimport {containsExtent} from '../extent.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {createFromTileUrlFunctions, expandUrl} from '../tileurlfunction.js';\nimport {equivalent, get as getProjection, transformExtent} from '../proj.js';\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @typedef {'KVP' | 'REST'} RequestEncoding\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {RequestEncoding} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nclass WMTS extends TileImage {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    // TODO: add support for TileMatrixLimits\n\n    const requestEncoding =\n      options.requestEncoding !== undefined ? options.requestEncoding : 'KVP';\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    const tileGrid = options.tileGrid;\n\n    let urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ =\n      options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {RequestEncoding}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      );\n    }\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @param {Array<string>} urls URLs.\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    this.setTileUrlFunction(\n      createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      ),\n      key\n    );\n  }\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  getDimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  getMatrixSet() {\n    return this.matrixSet_;\n  }\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {RequestEncoding} Request encoding.\n   * @api\n   */\n  getRequestEncoding() {\n    return this.requestEncoding_;\n  }\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  getVersion() {\n    return this.version_;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  getKeyForDimensions_() {\n    const res = this.urls ? this.urls.slice(0) : [];\n    for (const key in this.dimensions_) {\n      res.push(key + '-' + this.dimensions_[key]);\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  updateDimensions(dimensions) {\n    Object.assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  }\n\n  /**\n   * @param {string} template Template.\n   * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n   */\n  createFromWMTSTemplate(template) {\n    const requestEncoding = this.requestEncoding_;\n\n    // context property names are lower case to allow for a case insensitive\n    // replacement as some services use different naming conventions\n    const context = {\n      'layer': this.layer_,\n      'style': this.style_,\n      'tilematrixset': this.matrixSet_,\n    };\n\n    if (requestEncoding == 'KVP') {\n      Object.assign(context, {\n        'Service': 'WMTS',\n        'Request': 'GetTile',\n        'Version': this.version_,\n        'Format': this.format_,\n      });\n    }\n\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n\n    template =\n      requestEncoding == 'KVP'\n        ? appendParams(template, context)\n        : template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return p.toLowerCase() in context ? context[p.toLowerCase()] : m;\n          });\n\n    const tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (\n      this.tileGrid\n    );\n    const dimensions = this.dimensions_;\n\n    return (\n      /**\n       * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {import(\"../proj/Projection.js\").default} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        }\n        const localContext = {\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n          'TileCol': tileCoord[1],\n          'TileRow': tileCoord[2],\n        };\n        Object.assign(localContext, dimensions);\n        let url = template;\n        if (requestEncoding == 'KVP') {\n          url = appendParams(url, localContext);\n        } else {\n          url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return localContext[p];\n          });\n        }\n        return url;\n      }\n    );\n  }\n}\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {Options|null} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = layers.find(function (elt) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (!l) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        const tileMatrixSet = tileMatrixSets.find(function (el) {\n          return el['Identifier'] == elt['TileMatrixSet'];\n        });\n        const supportedCRS = tileMatrixSet['SupportedCRS'];\n        const proj1 = getProjection(supportedCRS);\n        const proj2 = getProjection(config['projection']);\n        if (proj1 && proj2) {\n          return equivalent(proj1, proj2);\n        }\n        return supportedCRS == config['projection'];\n      });\n    } else {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        return elt['TileMatrixSet'] == config['matrixSet'];\n      });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet =\n    /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits =\n    /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = l['Style'].findIndex(function (elt) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    }\n    return elt['isDefault'];\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function (elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = matrixSets.find(function (elt) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  let wrapX = false;\n  const switchXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  let matrix = matrixSetObj.TileMatrix[0];\n\n  // create default matrixLimit\n  let selectedMatrixLimit = {\n    MinTileCol: 0,\n    MinTileRow: 0,\n    // subtract one to end up at tile top left\n    MaxTileCol: matrix.MatrixWidth - 1,\n    MaxTileRow: matrix.MatrixHeight - 1,\n  };\n\n  //in case of matrix limits, use matrix limits to calculate extent\n  if (matrixLimits) {\n    selectedMatrixLimit = matrixLimits[matrixLimits.length - 1];\n    const m = matrixSetObj.TileMatrix.find(\n      (tileMatrixValue) =>\n        tileMatrixValue.Identifier === selectedMatrixLimit.TileMatrix ||\n        matrixSetObj.Identifier + ':' + tileMatrixValue.Identifier ===\n          selectedMatrixLimit.TileMatrix\n    );\n    if (m) {\n      matrix = m;\n    }\n  }\n\n  const resolution =\n    (matrix.ScaleDenominator * 0.00028) / projection.getMetersPerUnit(); // WMTS 1.0.0: standardized rendering pixel size\n  const origin = switchXY\n    ? [matrix.TopLeftCorner[1], matrix.TopLeftCorner[0]]\n    : matrix.TopLeftCorner;\n  const tileSpanX = matrix.TileWidth * resolution;\n  const tileSpanY = matrix.TileHeight * resolution;\n  let matrixSetExtent = matrixSetObj['BoundingBox'];\n  if (matrixSetExtent && switchXY) {\n    matrixSetExtent = [\n      matrixSetExtent[1],\n      matrixSetExtent[0],\n      matrixSetExtent[3],\n      matrixSetExtent[2],\n    ];\n  }\n  let extent = [\n    origin[0] + tileSpanX * selectedMatrixLimit.MinTileCol,\n    // add one to get proper bottom/right coordinate\n    origin[1] - tileSpanY * (1 + selectedMatrixLimit.MaxTileRow),\n    origin[0] + tileSpanX * (1 + selectedMatrixLimit.MaxTileCol),\n    origin[1] - tileSpanY * selectedMatrixLimit.MinTileRow,\n  ];\n\n  if (\n    matrixSetExtent !== undefined &&\n    !containsExtent(matrixSetExtent, extent)\n  ) {\n    const wgs84BoundingBox = l['WGS84BoundingBox'];\n    const wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    extent = matrixSetExtent;\n    if (wgs84BoundingBox) {\n      wrapX =\n        wgs84BoundingBox[0] === wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] === wgs84ProjectionExtent[2];\n    } else {\n      const wgs84MatrixSetExtent = transformExtent(\n        matrixSetExtent,\n        matrixSetObj['SupportedCRS'],\n        'EPSG:4326'\n      );\n      // Ignore slight deviation from the correct x limits\n      wrapX =\n        wgs84MatrixSetExtent[0] - 1e-10 <= wgs84ProjectionExtent[0] &&\n        wgs84MatrixSetExtent[2] + 1e-10 >= wgs84ProjectionExtent[2];\n    }\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(\n    matrixSetObj,\n    extent,\n    matrixLimits\n  );\n\n  /** @type {!Array<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if (\n    'OperationsMetadata' in wmtsCap &&\n    'GetTile' in wmtsCap['OperationsMetadata']\n  ) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = gets[i]['Constraint'].find(function (element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === 'KVP') {\n          if (encodings.includes('KVP')) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = 'KVP';\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = 'REST';\n    l['ResourceURL'].forEach(function (element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin'],\n  };\n}\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml.makeChildAppender} or\n * {@link module:ol/xml.makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Element} node Node.\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        let array;\n        if (name in object) {\n          array = object[name];\n        } else {\n          array = [];\n          object[name] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        object[name] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, thisArg) {\n  return function (node, value, objectStack) {\n    nodeWriter.call(\n      thisArg !== undefined ? thisArg : this,\n      node,\n      value,\n      objectStack\n    );\n    const parent = /** @type {NodeStackItem} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml.serialize}. This can be used by the parent writer to have the\n * `nodeWriter` called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, thisArg) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `keys` passed to\n * {@link module:ol/xml.serialize} or {@link module:ol/xml.pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [fixedNodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [fixedNamespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(fixedNodeName, fixedNamespaceURI) {\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [newNodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, newNodeName) {\n      const context = /** @type {NodeStackItem} */ (\n        objectStack[objectStack.length - 1]\n      );\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = newNodeName;\n      }\n\n      const namespaceURI =\n        fixedNamespaceURI !== undefined ? fixedNamespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, structureNS) {\n  structureNS = structureNS !== undefined ? structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, thisArg) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(thisArg, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, thisArg) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, thisArg);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg\n) {\n  const length = (keys !== undefined ? keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        thisArg !== undefined ? thisArg : this,\n        value,\n        objectStack,\n        keys !== undefined ? keys[i] : undefined\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          thisArg,\n          node,\n          value,\n          objectStack\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg\n) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, keys, thisArg);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n","/**\n * @module ol/vec/mat4\n */\n\n/**\n * @return {Array<number>} \"4x4 matrix representing a 3D identity transform.\"\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} \"2D transformation matrix as flattened 4x4 matrix.\"\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not.\n * The provided `imgSize` needs to match the actual size of the image.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    // `width` or `height` cannot be provided together with `scale`\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      69\n    );\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (\n          image instanceof HTMLCanvasElement ||\n          (image.src && image.complete)\n        ) {\n          width = image.width;\n          height = image.height;\n        } else {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    const clone = new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    return clone;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/webgl/PaletteTexture\n */\n\nclass PaletteTexture {\n  /**\n   * @param {string} name The name of the texture.\n   * @param {Uint8Array} data The texture data.\n   */\n  constructor(name, data) {\n    this.name = name;\n    this.data = data;\n\n    /**\n     * @type {WebGLTexture}\n     * @private\n     */\n    this.texture_ = null;\n  }\n\n  /**\n   * @param {WebGLRenderingContext} gl Rendering context.\n   * @return {WebGLTexture} The texture.\n   */\n  getTexture(gl) {\n    if (!this.texture_) {\n      const texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,\n        gl.RGBA,\n        this.data.length / 4,\n        1,\n        0,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data\n      );\n      this.texture_ = texture;\n    }\n    return this.texture_;\n  }\n}\n\nexport default PaletteTexture;\n","/**\n * @module ol/webgl\n */\n\nimport {SAFARI_BUG_237906} from './has.js';\n\n/**\n * Constants taken from goog.webgl\n */\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STREAM_DRAW = 0x88e0;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STATIC_DRAW = 0x88e4;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const DYNAMIC_DRAW = 0x88e8;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n/** end of goog.webgl constants\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object} [attributes] Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, attributes) {\n  attributes = Object.assign(\n    {\n      preserveDrawingBuffer: true,\n      antialias: SAFARI_BUG_237906 ? false : true, // https://bugs.webkit.org/show_bug.cgi?id=237906\n    },\n    attributes\n  );\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n/**\n * @type {Array<string>}\n */\nlet supportedExtensions;\n\n/**\n * @return {Array<string>} List of supported WebGL extensions.\n */\nexport function getSupportedExtensions() {\n  if (!supportedExtensions) {\n    const canvas = document.createElement('canvas');\n    const gl = getContext(canvas);\n    if (gl) {\n      supportedExtensions = gl.getSupportedExtensions();\n    }\n  }\n  return supportedExtensions;\n}\n","/**\n * @module ol/webgl/Buffer\n */\nimport {\n  ARRAY_BUFFER,\n  DYNAMIC_DRAW,\n  ELEMENT_ARRAY_BUFFER,\n  STATIC_DRAW,\n  STREAM_DRAW,\n} from '../webgl.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Used to describe the intended usage for the data: `STATIC_DRAW`, `STREAM_DRAW`\n * or `DYNAMIC_DRAW`.\n * @enum {number}\n */\nexport const BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW,\n};\n\n/**\n * @classdesc\n * Object used to store an array of data as well as usage information for that data.\n * Stores typed arrays internally, either Float32Array or Uint16/32Array depending on\n * the buffer type (ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER) and available extensions.\n *\n * To populate the array, you can either use:\n * * A size using `#ofSize(buffer)`\n * * An `ArrayBuffer` object using `#fromArrayBuffer(buffer)`\n * * A plain array using `#fromArray(array)`\n *\n * Note:\n * See the documentation of [WebGLRenderingContext.bufferData](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData)\n * for more info on buffer usage.\n * @api\n */\nclass WebGLArrayBuffer {\n  /**\n   * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n   * @param {number} [usage] Intended usage, either `STATIC_DRAW`, `STREAM_DRAW` or `DYNAMIC_DRAW`.\n   * Default is `DYNAMIC_DRAW`.\n   */\n  constructor(type, usage) {\n    /**\n     * @private\n     * @type {Float32Array|Uint32Array}\n     */\n    this.array = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.type = type;\n\n    assert(type === ARRAY_BUFFER || type === ELEMENT_ARRAY_BUFFER, 62);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.usage = usage !== undefined ? usage : BufferUsage.STATIC_DRAW;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size (all values will be zeroes).\n   * @param {number} size Array size\n   * @return {WebGLArrayBuffer} This\n   */\n  ofSize(size) {\n    this.array = new (getArrayClassForType(this.type))(size);\n    return this;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size.\n   * @param {Array<number>} array Numerical array\n   * @return {WebGLArrayBuffer} This\n   */\n  fromArray(array) {\n    this.array = getArrayClassForType(this.type).from(array);\n    return this;\n  }\n\n  /**\n   * Populates the buffer with a raw binary array buffer.\n   * @param {ArrayBuffer} buffer Raw binary buffer to populate the array with. Note that this buffer must have been\n   * initialized for the same typed array class.\n   * @return {WebGLArrayBuffer} This\n   */\n  fromArrayBuffer(buffer) {\n    this.array = new (getArrayClassForType(this.type))(buffer);\n    return this;\n  }\n\n  /**\n   * @return {number} Buffer type.\n   */\n  getType() {\n    return this.type;\n  }\n\n  /**\n   * Will return null if the buffer was not initialized\n   * @return {Float32Array|Uint32Array} Array.\n   */\n  getArray() {\n    return this.array;\n  }\n\n  /**\n   * @return {number} Usage.\n   */\n  getUsage() {\n    return this.usage;\n  }\n\n  /**\n   * Will return 0 if the buffer is not initialized\n   * @return {number} Array size\n   */\n  getSize() {\n    return this.array ? this.array.length : 0;\n  }\n}\n\n/**\n * Returns a typed array constructor based on the given buffer type\n * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n * @return {Float32ArrayConstructor|Uint32ArrayConstructor} The typed array class to use for this buffer.\n */\nexport function getArrayClassForType(type) {\n  switch (type) {\n    case ARRAY_BUFFER:\n      return Float32Array;\n    case ELEMENT_ARRAY_BUFFER:\n      return Uint32Array;\n    default:\n      return Float32Array;\n  }\n}\n\nexport default WebGLArrayBuffer;\n","/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored',\n};\n","/**\n * @module ol/webgl/PostProcessingPass\n */\n\nimport {getUid} from '../util.js';\n\nconst DEFAULT_VERTEX_SHADER = `\n  precision mediump float;\n  \n  attribute vec2 a_position;\n  varying vec2 v_texCoord;\n  varying vec2 v_screenCoord;\n  \n  uniform vec2 u_screenSize;\n   \n  void main() {\n    v_texCoord = a_position * 0.5 + 0.5;\n    v_screenCoord = v_texCoord * u_screenSize;\n    gl_Position = vec4(a_position, 0.0, 1.0);\n  }\n`;\n\nconst DEFAULT_FRAGMENT_SHADER = `\n  precision mediump float;\n   \n  uniform sampler2D u_image;\n  uniform float u_opacity;\n   \n  varying vec2 v_texCoord;\n   \n  void main() {\n    gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n  }\n`;\n\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {WebGLUniformLocation} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\n * premultiplied.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *   uniform float u_opacity;\n *\n *   varying vec2 v_texCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n *   }\n *   ```\n *\n * @api\n */\nclass WebGLPostProcessingPass {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    this.gl_ = options.webGlContext;\n    const gl = this.gl_;\n\n    this.scaleRatio_ = options.scaleRatio || 1;\n\n    this.renderTargetTexture_ = gl.createTexture();\n    this.renderTargetTextureSize_ = null;\n\n    this.frameBuffer_ = gl.createFramebuffer();\n\n    // compile the program for the frame buffer\n    // TODO: make compilation errors show up\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(\n      vertexShader,\n      options.vertexShader || DEFAULT_VERTEX_SHADER\n    );\n    gl.compileShader(vertexShader);\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(\n      fragmentShader,\n      options.fragmentShader || DEFAULT_FRAGMENT_SHADER\n    );\n    gl.compileShader(fragmentShader);\n    this.renderTargetProgram_ = gl.createProgram();\n    gl.attachShader(this.renderTargetProgram_, vertexShader);\n    gl.attachShader(this.renderTargetProgram_, fragmentShader);\n    gl.linkProgram(this.renderTargetProgram_);\n\n    // bind the vertices buffer for the frame buffer\n    this.renderTargetVerticesBuffer_ = gl.createBuffer();\n    const verticesArray = [-1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1];\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(verticesArray),\n      gl.STATIC_DRAW\n    );\n\n    this.renderTargetAttribLocation_ = gl.getAttribLocation(\n      this.renderTargetProgram_,\n      'a_position'\n    );\n    this.renderTargetUniformLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_screenSize'\n    );\n    this.renderTargetOpacityLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_opacity'\n    );\n    this.renderTargetTextureLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_image'\n    );\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    options.uniforms &&\n      Object.keys(options.uniforms).forEach((name) => {\n        this.uniforms_.push({\n          value: options.uniforms[name],\n          location: gl.getUniformLocation(this.renderTargetProgram_, name),\n        });\n      });\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   * @api\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Initialize the render target texture of the post process, make sure it is at the\n   * right size and bind it as a render target for the next draw calls.\n   * The last step to be initialized will be the one where the primitives are rendered.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @api\n   */\n  init(frameState) {\n    const gl = this.getGL();\n    const textureSize = [\n      gl.drawingBufferWidth * this.scaleRatio_,\n      gl.drawingBufferHeight * this.scaleRatio_,\n    ];\n\n    // rendering goes to my buffer\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n    gl.viewport(0, 0, textureSize[0], textureSize[1]);\n\n    // if size has changed: adjust canvas & render target texture\n    if (\n      !this.renderTargetTextureSize_ ||\n      this.renderTargetTextureSize_[0] !== textureSize[0] ||\n      this.renderTargetTextureSize_[1] !== textureSize[1]\n    ) {\n      this.renderTargetTextureSize_ = textureSize;\n\n      // create a new texture\n      const level = 0;\n      const internalFormat = gl.RGBA;\n      const border = 0;\n      const format = gl.RGBA;\n      const type = gl.UNSIGNED_BYTE;\n      const data = null;\n      gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        textureSize[0],\n        textureSize[1],\n        border,\n        format,\n        type,\n        data\n      );\n\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n      // bind the texture to the framebuffer\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        this.renderTargetTexture_,\n        0\n      );\n    }\n  }\n\n  /**\n   * Render to the next postprocessing pass (or to the canvas if final pass).\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   * @api\n   */\n  apply(frameState, nextPass, preCompose, postCompose) {\n    const gl = this.getGL();\n    const size = frameState.size;\n\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER,\n      nextPass ? nextPass.getFrameBuffer() : null\n    );\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n\n    if (!nextPass) {\n      // clear the canvas if we are the first to render to it\n      // and preserveDrawingBuffer is true\n      const canvasId = getUid(gl.canvas);\n      if (!frameState.renderTargets[canvasId]) {\n        const attributes = gl.getContextAttributes();\n        if (attributes && attributes.preserveDrawingBuffer) {\n          gl.clearColor(0.0, 0.0, 0.0, 0.0);\n          gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n\n        frameState.renderTargets[canvasId] = true;\n      }\n    }\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n\n    gl.useProgram(this.renderTargetProgram_);\n    gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n    gl.vertexAttribPointer(\n      this.renderTargetAttribLocation_,\n      2,\n      gl.FLOAT,\n      false,\n      0,\n      0\n    );\n    gl.uniform2f(this.renderTargetUniformLocation_, size[0], size[1]);\n    gl.uniform1i(this.renderTargetTextureLocation_, 0);\n\n    const opacity = frameState.layerStatesArray[frameState.layerIndex].opacity;\n    gl.uniform1f(this.renderTargetOpacityLocation_, opacity);\n\n    this.applyUniforms(frameState);\n\n    if (preCompose) {\n      preCompose(gl, frameState);\n    }\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n    if (postCompose) {\n      postCompose(gl, frameState);\n    }\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer\n   * @api\n   */\n  getFrameBuffer() {\n    return this.frameBuffer_;\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 1;\n    this.uniforms_.forEach(function (uniform) {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.texture = gl.createTexture();\n        }\n        gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        if (value instanceof ImageData) {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            value.width,\n            value.height,\n            0,\n            gl.UNSIGNED_BYTE,\n            new Uint8Array(value.data)\n          );\n        } else {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value\n          );\n        }\n\n        // fill texture slots\n        gl.uniform1i(uniform.location, textureSlot++);\n      } else if (Array.isArray(value)) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(uniform.location, value[0], value[1]);\n            return;\n          case 3:\n            gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n            return;\n          case 4:\n            gl.uniform4f(\n              uniform.location,\n              value[0],\n              value[1],\n              value[2],\n              value[3]\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(uniform.location, value);\n      }\n    });\n  }\n}\n\nexport default WebGLPostProcessingPass;\n","/**\n * @module ol/webgl/Helper\n */\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport Disposable from '../Disposable.js';\nimport WebGLPostProcessingPass from './PostProcessingPass.js';\nimport {\n  FLOAT,\n  UNSIGNED_BYTE,\n  UNSIGNED_INT,\n  UNSIGNED_SHORT,\n  getContext,\n} from '../webgl.js';\nimport {clear} from '../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n} from '../transform.js';\nimport {create, fromTransform} from '../vec/mat4.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer Buffer.\n * @property {WebGLBuffer} webGlBuffer WebGlBuffer.\n */\n\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport const ShaderType = {\n  FRAGMENT_SHADER: 0x8b30,\n  VERTEX_SHADER: 0x8b31,\n};\n\n/**\n * Names of uniforms made available to all shaders.\n * Please note: changing these *will* break custom shaders!\n * @enum {string}\n */\nexport const DefaultUniform = {\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  OFFSET_SCALE_MATRIX: 'u_offsetScaleMatrix',\n  OFFSET_ROTATION_MATRIX: 'u_offsetRotateMatrix',\n  TIME: 'u_time',\n  ZOOM: 'u_zoom',\n  RESOLUTION: 'u_resolution',\n  VIEWPORT_SIZE_PX: 'u_viewportSizePx',\n  PIXEL_RATIO: 'u_pixelRatio',\n};\n\n/**\n * Attribute types, either `UNSIGNED_BYTE`, `UNSIGNED_SHORT`, `UNSIGNED_INT` or `FLOAT`\n * Note: an attribute stored in a `Float32Array` should be of type `FLOAT`.\n * @enum {number}\n */\nexport const AttributeType = {\n  UNSIGNED_BYTE: UNSIGNED_BYTE,\n  UNSIGNED_SHORT: UNSIGNED_SHORT,\n  UNSIGNED_INT: UNSIGNED_INT,\n  FLOAT: FLOAT,\n};\n\n/**\n * Description of an attribute in a buffer\n * @typedef {Object} AttributeDescription\n * @property {string} name Attribute name to use in shaders\n * @property {number} size Number of components per attributes\n * @property {AttributeType} [type] Attribute type, i.e. number of bytes used to store the value. This is\n * determined by the class of typed array which the buffer uses (eg. `Float32Array` for a `FLOAT` attribute).\n * Default is `FLOAT`.\n */\n\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|import(\"../transform\").Transform} UniformLiteralValue\n */\n\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../Map.js\").FrameState):UniformLiteralValue} UniformValue\n */\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n * @property {string} [canvasCacheKey] The cache key for the canvas.\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue} [value] Value\n * @property {UniformValue} [prevValue] The previous value.\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @typedef {Object} CanvasCacheItem\n * @property {HTMLCanvasElement} canvas Canvas element.\n * @property {number} users The count of users of this canvas.\n */\n\n/**\n * @type {Object<string,CanvasCacheItem>}\n */\nconst canvasCache = {};\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {string} The shared cache key.\n */\nfunction getSharedCanvasCacheKey(key) {\n  return 'shared/' + key;\n}\n\nlet uniqueCanvasCacheKeyCount = 0;\n\n/**\n * @return {string} The unique cache key.\n */\nfunction getUniqueCanvasCacheKey() {\n  const key = 'unique/' + uniqueCanvasCacheKeyCount;\n  uniqueCanvasCacheKeyCount += 1;\n  return key;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {HTMLCanvasElement} The canvas.\n */\nfunction getCanvas(key) {\n  let cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    const canvas = document.createElement('canvas');\n    canvas.style.position = 'absolute';\n    canvas.style.left = '0';\n    cacheItem = {users: 0, canvas};\n    canvasCache[key] = cacheItem;\n  }\n\n  cacheItem.users += 1;\n  return cacheItem.canvas;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n */\nfunction releaseCanvas(key) {\n  const cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    return;\n  }\n\n  cacheItem.users -= 1;\n  if (cacheItem.users > 0) {\n    return;\n  }\n\n  const canvas = cacheItem.canvas;\n  const gl = getContext(canvas);\n  const extension = gl.getExtension('WEBGL_lose_context');\n  if (extension) {\n    extension.loseContext();\n  }\n\n  delete canvasCache[key];\n}\n\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls; note how a frameState is required to set up a program,\n *   // as several default uniforms are computed from it (projection matrix, zoom level, etc.)\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   const program = this.context.getProgram(fragmentShader, vertexShader);\n *   helper.useProgram(this.program, frameState);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   helper.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   const verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   const indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   helper.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   helper.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Specify the attribute names with\n *   {@link module:ol/webgl/Helper~WebGLHelper#enableAttributes} (see code snippet below).\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   helper.enableAttributes([\n *     {\n *        name: 'a_position',\n *        size: 2\n *     },\n *     {\n *       name: 'a_offset',\n *       size: 2\n *     },\n *     {\n *       name: 'a_texCoord',\n *       size: 2\n *     }\n *   ])\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   helper.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   helper.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   helper.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n */\nclass WebGLHelper extends Disposable {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n    options = options || {};\n\n    /** @private */\n    this.boundHandleWebGLContextLost_ = this.handleWebGLContextLost.bind(this);\n\n    /** @private */\n    this.boundHandleWebGLContextRestored_ =\n      this.handleWebGLContextRestored.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.canvasCacheKey_ = options.canvasCacheKey\n      ? getSharedCanvasCacheKey(options.canvasCacheKey)\n      : getUniqueCanvasCacheKey();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = getCanvas(this.canvasCacheKey_);\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = getContext(this.canvas_);\n\n    /**\n     * @private\n     * @type {!Object<string, BufferCacheEntry>}\n     */\n    this.bufferCache_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object>}\n     */\n    this.extensionCache_ = {};\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.currentProgram_ = null;\n\n    this.canvas_.addEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    this.canvas_.addEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetRotateMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetScaleMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, WebGLUniformLocation>>}\n     */\n    this.uniformLocationsByProgram_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.attribLocationsByProgram_ = {};\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass.\n     * If the uniform is a texture, the WebGL Texture object will be stored here.\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    if (options.uniforms) {\n      this.setUniforms(options.uniforms);\n    }\n\n    /**\n     * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n     * options. If no post process was given, a default one is used (so as not to have to make an exception to\n     * the frame buffer logic).\n     * @type {Array<WebGLPostProcessingPass>}\n     * @private\n     */\n    this.postProcessPasses_ = options.postProcesses\n      ? options.postProcesses.map(\n          (options) =>\n            new WebGLPostProcessingPass({\n              webGlContext: this.gl_,\n              scaleRatio: options.scaleRatio,\n              vertexShader: options.vertexShader,\n              fragmentShader: options.fragmentShader,\n              uniforms: options.uniforms,\n            })\n        )\n      : [new WebGLPostProcessingPass({webGlContext: this.gl_})];\n\n    /**\n     * @type {string|null}\n     * @private\n     */\n    this.shaderCompileErrors_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.startTime_ = Date.now();\n  }\n\n  /**\n   * @param {Object<string, UniformValue>} uniforms Uniform definitions.\n   */\n  setUniforms(uniforms) {\n    this.uniforms_ = [];\n    for (const name in uniforms) {\n      this.uniforms_.push({\n        name: name,\n        value: uniforms[name],\n      });\n    }\n  }\n\n  /**\n   * @param {string} canvasCacheKey The canvas cache key.\n   * @return {boolean} The provided key matches the one this helper was constructed with.\n   */\n  canvasCacheKeyMatches(canvasCacheKey) {\n    return this.canvasCacheKey_ === getSharedCanvasCacheKey(canvasCacheKey);\n  }\n\n  /**\n   * Get a WebGL extension.  If the extension is not supported, null is returned.\n   * Extensions are cached after they are enabled for the first time.\n   * @param {string} name The extension name.\n   * @return {Object|null} The extension or null if not supported.\n   */\n  getExtension(name) {\n    if (name in this.extensionCache_) {\n      return this.extensionCache_[name];\n    }\n    const extension = this.gl_.getExtension(name);\n    this.extensionCache_[name] = extension;\n    return extension;\n  }\n\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  bindBuffer(buffer) {\n    const gl = this.gl_;\n    const bufferKey = getUid(buffer);\n    let bufferCache = this.bufferCache_[bufferKey];\n    if (!bufferCache) {\n      const webGlBuffer = gl.createBuffer();\n      bufferCache = {\n        buffer: buffer,\n        webGlBuffer: webGlBuffer,\n      };\n      this.bufferCache_[bufferKey] = bufferCache;\n    }\n    gl.bindBuffer(buffer.getType(), bufferCache.webGlBuffer);\n  }\n\n  /**\n   * Update the data contained in the buffer array; this is required for the\n   * new data to be rendered\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  flushBufferData(buffer) {\n    const gl = this.gl_;\n    this.bindBuffer(buffer);\n    gl.bufferData(buffer.getType(), buffer.getArray(), buffer.getUsage());\n  }\n\n  /**\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\n   */\n  deleteBuffer(buf) {\n    const gl = this.gl_;\n    const bufferKey = getUid(buf);\n    const bufferCacheEntry = this.bufferCache_[bufferKey];\n    if (bufferCacheEntry && !gl.isContextLost()) {\n      gl.deleteBuffer(bufferCacheEntry.webGlBuffer);\n    }\n    delete this.bufferCache_[bufferKey];\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.canvas_.removeEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    this.canvas_.removeEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n\n    releaseCanvas(this.canvasCacheKey_);\n\n    delete this.gl_;\n    delete this.canvas_;\n  }\n\n  /**\n   * Clear the buffer & set the viewport to draw.\n   * Post process passes will be initialized here, the first one being bound as a render target for\n   * subsequent draw calls.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   */\n  prepareDraw(frameState, disableAlphaBlend) {\n    const gl = this.gl_;\n    const canvas = this.getCanvas();\n    const size = frameState.size;\n    const pixelRatio = frameState.pixelRatio;\n\n    if (\n      canvas.width !== size[0] * pixelRatio ||\n      canvas.height !== size[1] * pixelRatio\n    ) {\n      canvas.width = size[0] * pixelRatio;\n      canvas.height = size[1] * pixelRatio;\n      canvas.style.width = size[0] + 'px';\n      canvas.style.height = size[1] + 'px';\n    }\n\n    // loop backwards in post processes list\n    for (let i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n      this.postProcessPasses_[i].init(frameState);\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n  }\n\n  /**\n   * Prepare a program to use a texture.\n   * @param {WebGLTexture} texture The texture.\n   * @param {number} slot The texture slot.\n   * @param {string} uniformName The corresponding uniform name.\n   */\n  bindTexture(texture, slot, uniformName) {\n    const gl = this.gl_;\n    gl.activeTexture(gl.TEXTURE0 + slot);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.uniform1i(this.getUniformLocation(uniformName), slot);\n  }\n\n  /**\n   * Clear the render target & bind it for future draw operations.\n   * This is similar to `prepareDraw`, only post processes will not be applied.\n   * Note: the whole viewport will be drawn to the render target, regardless of its size.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {import(\"./RenderTarget.js\").default} renderTarget Render target to draw to\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   */\n  prepareDrawToRenderTarget(frameState, renderTarget, disableAlphaBlend) {\n    const gl = this.gl_;\n    const size = renderTarget.getSize();\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget.getFramebuffer());\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.bindTexture(gl.TEXTURE_2D, renderTarget.getTexture());\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n  }\n\n  /**\n   * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   */\n  drawElements(start, end) {\n    const gl = this.gl_;\n    this.getExtension('OES_element_index_uint');\n\n    const elementType = gl.UNSIGNED_INT;\n    const elementSize = 4;\n\n    const numItems = end - start;\n    const offsetInBytes = start * elementSize;\n    gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n  }\n\n  /**\n   * Apply the successive post process passes which will eventually render to the actual canvas.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   */\n  finalizeDraw(frameState, preCompose, postCompose) {\n    // apply post processes using the next one as target\n    for (let i = 0, ii = this.postProcessPasses_.length; i < ii; i++) {\n      if (i === ii - 1) {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          null,\n          preCompose,\n          postCompose\n        );\n      } else {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          this.postProcessPasses_[i + 1]\n        );\n      }\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getCanvas() {\n    return this.canvas_;\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyFrameState(frameState) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n    scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n\n    const offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n    if (rotation !== 0) {\n      rotateTransform(offsetRotateMatrix, -rotation);\n    }\n\n    this.setUniformMatrixValue(\n      DefaultUniform.OFFSET_SCALE_MATRIX,\n      fromTransform(this.tmpMat4_, offsetScaleMatrix)\n    );\n    this.setUniformMatrixValue(\n      DefaultUniform.OFFSET_ROTATION_MATRIX,\n      fromTransform(this.tmpMat4_, offsetRotateMatrix)\n    );\n\n    this.setUniformFloatValue(\n      DefaultUniform.TIME,\n      (Date.now() - this.startTime_) * 0.001\n    );\n    this.setUniformFloatValue(DefaultUniform.ZOOM, frameState.viewState.zoom);\n    this.setUniformFloatValue(\n      DefaultUniform.RESOLUTION,\n      frameState.viewState.resolution\n    );\n    this.setUniformFloatValue(DefaultUniform.PIXEL_RATIO, pixelRatio);\n    this.setUniformFloatVec2(DefaultUniform.VIEWPORT_SIZE_PX, [\n      size[0],\n      size[1],\n    ]);\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyUniforms(frameState) {\n    const gl = this.gl_;\n\n    let value;\n    let textureSlot = 0;\n    this.uniforms_.forEach((uniform) => {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (\n        value instanceof HTMLCanvasElement ||\n        value instanceof HTMLImageElement ||\n        value instanceof ImageData\n      ) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.prevValue = undefined;\n          uniform.texture = gl.createTexture();\n        }\n        gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        const imageReady =\n          !(value instanceof HTMLImageElement) ||\n          /** @type {HTMLImageElement} */ (value).complete;\n        if (imageReady && uniform.prevValue !== value) {\n          uniform.prevValue = value;\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value\n          );\n        }\n\n        // fill texture slots by increasing index\n        gl.uniform1i(this.getUniformLocation(uniform.name), textureSlot++);\n      } else if (Array.isArray(value) && value.length === 6) {\n        this.setUniformMatrixValue(\n          uniform.name,\n          fromTransform(this.tmpMat4_, value)\n        );\n      } else if (Array.isArray(value) && value.length <= 4) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1]\n            );\n            return;\n          case 3:\n            gl.uniform3f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n              value[2]\n            );\n            return;\n          case 4:\n            gl.uniform4f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n              value[2],\n              value[3]\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(this.getUniformLocation(uniform.name), value);\n      }\n    });\n  }\n\n  /**\n   * Set up a program for use. The program will be set as the current one. Then, the uniforms used\n   * in the program will be set based on the current frame state and the helper configuration.\n   * @param {WebGLProgram} program Program.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  useProgram(program, frameState) {\n    const gl = this.gl_;\n    gl.useProgram(program);\n    this.currentProgram_ = program;\n    this.applyFrameState(frameState);\n    this.applyUniforms(frameState);\n  }\n\n  /**\n   * Will attempt to compile a vertex or fragment shader based on source\n   * On error, the shader will be returned but\n   * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n   * Use `gl.getShaderInfoLog(shader)` to have details\n   * @param {string} source Shader source\n   * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n   * @return {WebGLShader} Shader object\n   */\n  compileShader(source, type) {\n    const gl = this.gl_;\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    return shader;\n  }\n\n  /**\n   * Create a program for a vertex and fragment shader.  Throws if shader compilation fails.\n   * @param {string} fragmentShaderSource Fragment shader source.\n   * @param {string} vertexShaderSource Vertex shader source.\n   * @return {WebGLProgram} Program\n   */\n  getProgram(fragmentShaderSource, vertexShaderSource) {\n    const gl = this.gl_;\n\n    const fragmentShader = this.compileShader(\n      fragmentShaderSource,\n      gl.FRAGMENT_SHADER\n    );\n\n    const vertexShader = this.compileShader(\n      vertexShaderSource,\n      gl.VERTEX_SHADER\n    );\n\n    const program = gl.createProgram();\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      const message = `Fragment shader compilation failed: ${gl.getShaderInfoLog(\n        fragmentShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(fragmentShader);\n\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      const message = `Vertex shader compilation failed: ${gl.getShaderInfoLog(\n        vertexShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(vertexShader);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      const message = `GL program linking failed: ${gl.getProgramInfoLog(\n        program\n      )}`;\n      throw new Error(message);\n    }\n\n    return program;\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Uniform name\n   * @return {WebGLUniformLocation} uniformLocation\n   */\n  getUniformLocation(name) {\n    const programUid = getUid(this.currentProgram_);\n    if (this.uniformLocationsByProgram_[programUid] === undefined) {\n      this.uniformLocationsByProgram_[programUid] = {};\n    }\n    if (this.uniformLocationsByProgram_[programUid][name] === undefined) {\n      this.uniformLocationsByProgram_[programUid][name] =\n        this.gl_.getUniformLocation(this.currentProgram_, name);\n    }\n    return this.uniformLocationsByProgram_[programUid][name];\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Attribute name\n   * @return {number} attribLocation\n   */\n  getAttributeLocation(name) {\n    const programUid = getUid(this.currentProgram_);\n    if (this.attribLocationsByProgram_[programUid] === undefined) {\n      this.attribLocationsByProgram_[programUid] = {};\n    }\n    if (this.attribLocationsByProgram_[programUid][name] === undefined) {\n      this.attribLocationsByProgram_[programUid][name] =\n        this.gl_.getAttribLocation(this.currentProgram_, name);\n    }\n    return this.attribLocationsByProgram_[programUid][name];\n  }\n\n  /**\n   * Sets the given transform to apply the rotation/translation/scaling of the given frame state.\n   * The resulting transform can be used to convert world space coordinates to view coordinates in the [-1, 1] range.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../transform\").Transform} transform Transform to update.\n   * @return {import(\"../transform\").Transform} The updated transform object.\n   */\n  makeProjectionTransform(frameState, transform) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const resolution = frameState.viewState.resolution;\n    const center = frameState.viewState.center;\n    composeTransform(\n      transform,\n      0,\n      0,\n      2 / (resolution * size[0]),\n      2 / (resolution * size[1]),\n      -rotation,\n      -center[0],\n      -center[1]\n    );\n    return transform;\n  }\n\n  /**\n   * Give a value for a standard float uniform\n   * @param {string} uniform Uniform name\n   * @param {number} value Value\n   */\n  setUniformFloatValue(uniform, value) {\n    this.gl_.uniform1f(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec2 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec2(uniform, value) {\n    this.gl_.uniform2fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec4(uniform, value) {\n    this.gl_.uniform4fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a standard matrix4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Matrix value\n   */\n  setUniformMatrixValue(uniform, value) {\n    this.gl_.uniformMatrix4fv(this.getUniformLocation(uniform), false, value);\n  }\n\n  /**\n   * Will set the currently bound buffer to an attribute of the shader program. Used by `#enableAttributes`\n   * internally.\n   * @param {string} attribName Attribute name\n   * @param {number} size Number of components per attributes\n   * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n   * @param {number} stride Stride in bytes (0 means attribs are packed)\n   * @param {number} offset Offset in bytes\n   * @private\n   */\n  enableAttributeArray_(attribName, size, type, stride, offset) {\n    const location = this.getAttributeLocation(attribName);\n    // the attribute has not been found in the shaders; do not enable it\n    if (location < 0) {\n      return;\n    }\n    this.gl_.enableVertexAttribArray(location);\n    this.gl_.vertexAttribPointer(location, size, type, false, stride, offset);\n  }\n\n  /**\n   * Will enable the following attributes to be read from the currently bound buffer,\n   * i.e. tell the GPU where to read the different attributes in the buffer. An error in the\n   * size/type/order of attributes will most likely break the rendering and throw a WebGL exception.\n   * @param {Array<AttributeDescription>} attributes Ordered list of attributes to read from the buffer\n   */\n  enableAttributes(attributes) {\n    const stride = computeAttributesStride(attributes);\n    let offset = 0;\n    for (let i = 0; i < attributes.length; i++) {\n      const attr = attributes[i];\n      this.enableAttributeArray_(\n        attr.name,\n        attr.size,\n        attr.type || FLOAT,\n        stride,\n        offset\n      );\n      offset += attr.size * getByteSizeFromType(attr.type);\n    }\n  }\n\n  /**\n   * WebGL context was lost\n   * @private\n   */\n  handleWebGLContextLost() {\n    clear(this.bufferCache_);\n    this.currentProgram_ = null;\n  }\n\n  /**\n   * WebGL context was restored\n   * @private\n   */\n  handleWebGLContextRestored() {}\n\n  /**\n   * Will create or reuse a given webgl texture and apply the given size. If no image data\n   * specified, the texture will be empty, otherwise image data will be used and the `size`\n   * parameter will be ignored.\n   * Note: wrap parameters are set to clamp to edge, min filter is set to linear.\n   * @param {Array<number>} size Expected size of the texture\n   * @param {ImageData|HTMLImageElement|HTMLCanvasElement} [data] Image data/object to bind to the texture\n   * @param {WebGLTexture} [texture] Existing texture to reuse\n   * @return {WebGLTexture} The generated texture\n   */\n  createTexture(size, data, texture) {\n    const gl = this.gl_;\n    texture = texture || gl.createTexture();\n\n    // set params & size\n    const level = 0;\n    const internalFormat = gl.RGBA;\n    const border = 0;\n    const format = gl.RGBA;\n    const type = gl.UNSIGNED_BYTE;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    if (data) {\n      gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, format, type, data);\n    } else {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        size[0],\n        size[1],\n        border,\n        format,\n        type,\n        null\n      );\n    }\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    return texture;\n  }\n}\n\n/**\n * Compute a stride in bytes based on a list of attributes\n * @param {Array<AttributeDescription>} attributes Ordered list of attributes\n * @return {number} Stride, ie amount of values for each vertex in the vertex buffer\n */\nexport function computeAttributesStride(attributes) {\n  let stride = 0;\n  for (let i = 0; i < attributes.length; i++) {\n    const attr = attributes[i];\n    stride += attr.size * getByteSizeFromType(attr.type);\n  }\n  return stride;\n}\n\n/**\n * Computes the size in byte of an attribute type.\n * @param {AttributeType} type Attribute type\n * @return {number} The size in bytes\n */\nfunction getByteSizeFromType(type) {\n  switch (type) {\n    case AttributeType.UNSIGNED_BYTE:\n      return Uint8Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_SHORT:\n      return Uint16Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_INT:\n      return Uint32Array.BYTES_PER_ELEMENT;\n    case AttributeType.FLOAT:\n    default:\n      return Float32Array.BYTES_PER_ELEMENT;\n  }\n}\n\nexport default WebGLHelper;\n","/**\n * @module ol/renderer/webgl/Layer\n */\nimport LayerProperty from '../../layer/Property.js';\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLHelper from '../../webgl/Helper.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * Base WebGL renderer class.\n * Holds all logic related to data manipulation & some common rendering logic\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass WebGLLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(layer, options) {\n    super(layer);\n\n    options = options || {};\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform is only\n     * set before dispatching rendering events.\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @private\n     */\n    this.postProcesses_ = options.postProcesses;\n\n    /**\n     * @private\n     */\n    this.uniforms_ = options.uniforms;\n\n    /**\n     * @type {WebGLHelper}\n     * @protected\n     */\n    this.helper;\n\n    layer.addChangeListener(LayerProperty.MAP, this.removeHelper.bind(this));\n\n    this.dispatchPreComposeEvent = this.dispatchPreComposeEvent.bind(this);\n    this.dispatchPostComposeEvent = this.dispatchPostComposeEvent.bind(this);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPreComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.PRECOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.PRECOMPOSE,\n        undefined,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPostComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.POSTCOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.POSTCOMPOSE,\n        undefined,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * Reset options (only handles uniforms).\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    this.uniforms_ = options.uniforms;\n    if (this.helper) {\n      this.helper.setUniforms(this.uniforms_);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  removeHelper() {\n    if (this.helper) {\n      this.helper.dispose();\n      delete this.helper;\n    }\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    if (this.getLayer().getRenderSource()) {\n      let incrementGroup = true;\n      let groupNumber = -1;\n      let className;\n      for (let i = 0, ii = frameState.layerStatesArray.length; i < ii; i++) {\n        const layer = frameState.layerStatesArray[i].layer;\n        const renderer = layer.getRenderer();\n        if (!(renderer instanceof WebGLLayerRenderer)) {\n          incrementGroup = true;\n          continue;\n        }\n        const layerClassName = layer.getClassName();\n        if (incrementGroup || layerClassName !== className) {\n          groupNumber += 1;\n          incrementGroup = false;\n        }\n        className = layerClassName;\n        if (renderer === this) {\n          break;\n        }\n      }\n\n      const canvasCacheKey =\n        'map/' + frameState.mapId + '/group/' + groupNumber;\n\n      if (!this.helper || !this.helper.canvasCacheKeyMatches(canvasCacheKey)) {\n        this.removeHelper();\n\n        this.helper = new WebGLHelper({\n          postProcesses: this.postProcesses_,\n          uniforms: this.uniforms_,\n          canvasCacheKey: canvasCacheKey,\n        });\n\n        if (className) {\n          this.helper.getCanvas().className = className;\n        }\n\n        this.afterHelperCreated();\n      }\n    }\n\n    return this.prepareFrameInternal(frameState);\n  }\n\n  /**\n   * @protected\n   */\n  afterHelperCreated() {}\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @protected\n   */\n  prepareFrameInternal(frameState) {\n    return true;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.removeHelper();\n    super.disposeInternal();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      composeTransform(\n        this.inversePixelTransform_,\n        0,\n        0,\n        frameState.pixelRatio,\n        -frameState.pixelRatio,\n        0,\n        0,\n        -frameState.size[1]\n      );\n\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform_,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n}\n\nexport default WebGLLayerRenderer;\n","/**\n * @module ol/renderer/webgl/TileLayerBase\n */\nimport LRUCache from '../../structs/LRUCache.js';\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport {abstract, getUid} from '../../util.js';\nimport {ascending} from '../../array.js';\nimport {create as createMat4} from '../../vec/mat4.js';\nimport {\n  createOrUpdate as createTileCoord,\n  getKey as getTileCoordKey,\n} from '../../tilecoord.js';\nimport {\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getIntersection, isEmpty} from '../../extent.js';\nimport {toSize} from '../../size.js';\n\nexport const Uniforms = {\n  TILE_TRANSFORM: 'u_tileTransform',\n  TRANSITION_ALPHA: 'u_transitionAlpha',\n  DEPTH: 'u_depth',\n  RENDER_EXTENT: 'u_renderExtent', // intersection of layer, source, and view extent\n  RESOLUTION: 'u_resolution',\n  ZOOM: 'u_zoom',\n  GLOBAL_ALPHA: 'u_globalAlpha',\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  SCREEN_TO_WORLD_MATRIX: 'u_screenToWorldMatrix',\n};\n\n/**\n * @type {Object<string, boolean>}\n */\nconst empty = {};\n\n/**\n * Transform a zoom level into a depth value ranging from -1 to 1.\n * @param {number} z A zoom level.\n * @return {number} A depth value.\n */\nfunction depthForZ(z) {\n  return 2 * (1 - 1 / (z + 1)) - 1;\n}\n\n/**\n * @typedef {import(\"../../webgl/BaseTileRepresentation.js\").default<import(\"../../Tile.js\").default>} AbstractTileRepresentation\n */\n/**\n * @typedef {Object} TileRepresentationLookup\n * @property {Set<string>} tileIds The set of tile ids in the lookup.\n * @property {Object<number, Set<AbstractTileRepresentation>>} representationsByZ Tile representations by zoom level.\n */\n\n/**\n * @return {TileRepresentationLookup} A new tile representation lookup.\n */\nexport function newTileRepresentationLookup() {\n  return {tileIds: new Set(), representationsByZ: {}};\n}\n\n/**\n * Check if a tile is already in the tile representation lookup.\n * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of tile representations by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @return {boolean} The tile is already in the lookup.\n */\nfunction lookupHasTile(tileRepresentationLookup, tile) {\n  return tileRepresentationLookup.tileIds.has(getUid(tile));\n}\n\n/**\n * Add a tile representation to the lookup.\n * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of tile representations by zoom level.\n * @param {AbstractTileRepresentation} tileRepresentation A tile representation.\n * @param {number} z The zoom level.\n */\nfunction addTileRepresentationToLookup(\n  tileRepresentationLookup,\n  tileRepresentation,\n  z\n) {\n  const representationsByZ = tileRepresentationLookup.representationsByZ;\n  if (!(z in representationsByZ)) {\n    representationsByZ[z] = new Set();\n  }\n  representationsByZ[z].add(tileRepresentation);\n  tileRepresentationLookup.tileIds.add(getUid(tileRepresentation.tile));\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection)\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\nexport function getCacheKey(source, tileCoord) {\n  return `${source.getKey()},${getTileCoordKey(tileCoord)}`;\n}\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, import(\"../../webgl/Helper\").UniformValue>} [uniforms] Additional uniforms\n * made available to shaders.\n * @property {number} [cacheSize=512] The tile representation cache size.\n * @property {Array<import('./Layer.js').PostProcessesOptions>} [postProcesses] Post-processes definitions.\n */\n\n/**\n * @typedef {import(\"../../layer/BaseTile.js\").default} BaseLayerType\n */\n\n/**\n * @classdesc\n * Base WebGL renderer for tile layers.\n * @template {BaseLayerType} LayerType\n * @template {import(\"../../Tile.js\").default} TileType\n * @template {import(\"../../webgl/BaseTileRepresentation.js\").default<TileType>} TileRepresentation\n * @extends {WebGLLayerRenderer<LayerType>}\n */\nclass WebGLBaseTileLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} options Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer, {\n      uniforms: options.uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * This transform converts representation coordinates to screen coordinates.\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.tileTransform_ = createTransform();\n\n    /**\n     * @type {Array<number>}\n     * @protected\n     */\n    this.tempMat4 = createMat4();\n\n    /**\n     * @type {import(\"../../TileRange.js\").default}\n     * @private\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    /**\n     * @type {import(\"../../size.js\").Size}\n     * @private\n     */\n    this.tempSize_ = [0, 0];\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<TileRepresentation>}\n     * @protected\n     */\n    this.tileRepresentationCache = new LRUCache(cacheSize);\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.projection_ = undefined;\n  }\n\n  /**\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    super.reset({\n      uniforms: options.uniforms,\n    });\n  }\n\n  /**\n   * @param {TileType} tile Tile.\n   * @return {boolean} Tile is drawable.\n   * @private\n   */\n  isDrawableTile_(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrameInternal(frameState) {\n    if (!this.projection_) {\n      this.projection_ = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.projection_) {\n      this.clearCache();\n      this.projection_ = frameState.viewState.projection;\n    }\n\n    const layer = this.getLayer();\n    const source = layer.getRenderSource();\n    if (!source) {\n      return false;\n    }\n\n    if (isEmpty(getRenderExtent(frameState, frameState.extent))) {\n      return false;\n    }\n    return source.getState() === 'ready';\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../../webgl/BaseTileRepresentation.js\").TileRepresentationOptions<TileType>} options tile representation options\n   * @return {TileRepresentation} A new tile representation\n   * @protected\n   */\n  createTileRepresentation(options) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileRepresentationLookup} tileRepresentationLookup The zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(\n    frameState,\n    extent,\n    initialZ,\n    tileRepresentationLookup,\n    preload\n  ) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const gutter = tileSource.getGutterForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileRepresentationCache = this.tileRepresentationCache;\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0)\n        ),\n        tileSource.zDirection\n      )\n    );\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n          const cacheKey = getCacheKey(tileSource, tileCoord);\n\n          /** @type {TileRepresentation} */\n          let tileRepresentation;\n\n          /** @type {TileType} */\n          let tile;\n\n          if (tileRepresentationCache.containsKey(cacheKey)) {\n            tileRepresentation = tileRepresentationCache.get(cacheKey);\n            tile = tileRepresentation.tile;\n          }\n          if (\n            !tileRepresentation ||\n            tileRepresentation.tile.key !== tileSource.getKey()\n          ) {\n            tile = tileSource.getTile(\n              z,\n              x,\n              y,\n              frameState.pixelRatio,\n              viewState.projection\n            );\n          }\n\n          if (lookupHasTile(tileRepresentationLookup, tile)) {\n            continue;\n          }\n\n          if (!tileRepresentation) {\n            tileRepresentation = this.createTileRepresentation({\n              tile: tile,\n              grid: tileGrid,\n              helper: this.helper,\n              gutter: gutter,\n            });\n            tileRepresentationCache.set(cacheKey, tileRepresentation);\n          } else {\n            if (this.isDrawableTile_(tile)) {\n              tileRepresentation.setTile(tile);\n            } else {\n              const interimTile = /** @type {TileType} */ (\n                tile.getInterimTile()\n              );\n              tileRepresentation.setTile(interimTile);\n            }\n          }\n\n          addTileRepresentationToLookup(\n            tileRepresentationLookup,\n            tileRepresentation,\n            z\n          );\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} tilesWithAlpha True if at least one of the rendered tiles has alpha\n   * @protected\n   */\n  beforeTilesRender(frameState, tilesWithAlpha) {\n    this.helper.prepareDraw(this.frameState, !tilesWithAlpha);\n  }\n\n  /**\n   * @param {TileRepresentation} tileRepresentation Tile representation\n   * @param {import(\"../../transform.js\").Transform} tileTransform Tile transform\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state\n   * @param {import(\"../../extent.js\").Extent} renderExtent Render extent\n   * @param {number} tileResolution Tile resolution\n   * @param {import(\"../../size.js\").Size} tileSize Tile size\n   * @param {import(\"../../coordinate.js\").Coordinate} tileOrigin Tile origin\n   * @param {import(\"../../extent.js\").Extent} tileExtent tile Extent\n   * @param {number} depth Depth\n   * @param {number} gutter Gutter\n   * @param {number} alpha Alpha\n   * @protected\n   */\n  renderTile(\n    tileRepresentation,\n    tileTransform,\n    frameState,\n    renderExtent,\n    tileResolution,\n    tileSize,\n    tileOrigin,\n    tileExtent,\n    depth,\n    gutter,\n    alpha\n  ) {}\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    this.frameState = frameState;\n    this.renderComplete = true;\n    const gl = this.helper.getGL();\n    this.preRender(gl, frameState);\n\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const gutter = tileSource.getGutterForProjection(viewState.projection);\n    const extent = getRenderExtent(frameState, frameState.extent);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection\n    );\n\n    /**\n     * @type {TileRepresentationLookup}\n     */\n    const tileRepresentationLookup = newTileRepresentationLookup();\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(\n        frameState,\n        nextExtent,\n        targetZ,\n        tileRepresentationLookup,\n        preload\n      );\n    }\n\n    this.enqueueTiles(frameState, extent, z, tileRepresentationLookup, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          extent,\n          z - 1,\n          tileRepresentationLookup,\n          preload - 1\n        );\n      }, 0);\n    }\n\n    /**\n     * A lookup of alpha values for tiles at the target rendering resolution\n     * for tiles that are in transition.  If a tile coord key is absent from\n     * this lookup, the tile should be rendered at alpha 1.\n     * @type {Object<string, number>}\n     */\n    const alphaLookup = {};\n\n    const uid = getUid(this);\n    const time = frameState.time;\n    let blend = false;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tileRepresentation of tileRepresentationLookup\n      .representationsByZ[z]) {\n      const tile = tileRepresentation.tile;\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tile.getState() === TileState.EMPTY\n      ) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileRepresentation.loaded) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n        blend = true;\n        const tileCoordKey = getTileCoordKey(tileCoord);\n        alphaLookup[tileCoordKey] = alpha;\n      }\n      this.renderComplete = false;\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tileRepresentationLookup\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tileRepresentationLookup\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    this.beforeTilesRender(frameState, blend);\n\n    const representationsByZ = tileRepresentationLookup.representationsByZ;\n    const zs = Object.keys(representationsByZ).map(Number).sort(ascending);\n\n    for (let j = 0, jj = zs.length; j < jj; ++j) {\n      const tileZ = zs[j];\n      for (const tileRepresentation of representationsByZ[tileZ]) {\n        if (!tileRepresentation.loaded) {\n          continue;\n        }\n        const tile = tileRepresentation.tile;\n        const tileCoord = tile.tileCoord;\n        const tileCoordKey = getTileCoordKey(tileCoord);\n        const alpha =\n          tileCoordKey in alphaLookup ? alphaLookup[tileCoordKey] : 1;\n\n        if (alpha < 1) {\n          frameState.animate = true;\n        }\n\n        const tileResolution = tileGrid.getResolution(tileZ);\n        const tileSize = toSize(tileGrid.getTileSize(tileZ), this.tempSize_);\n        const tileOrigin = tileGrid.getOrigin(tileZ);\n        const tileExtent = tileGrid.getTileCoordExtent(tileCoord);\n        const depth = depthForZ(tileZ);\n\n        const viewState = frameState.viewState;\n        const centerX = viewState.center[0];\n        const centerY = viewState.center[1];\n\n        const tileWidthWithGutter = tileSize[0] + 2 * gutter;\n        const tileHeightWithGutter = tileSize[1] + 2 * gutter;\n\n        const aspectRatio = tileWidthWithGutter / tileHeightWithGutter;\n\n        const centerI =\n          (centerX - tileOrigin[0]) / (tileSize[0] * tileResolution);\n        const centerJ =\n          (tileOrigin[1] - centerY) / (tileSize[1] * tileResolution);\n\n        const tileScale = viewState.resolution / tileResolution;\n\n        const tileCenterI = tileCoord[1];\n        const tileCenterJ = tileCoord[2];\n\n        resetTransform(this.tileTransform_);\n        scaleTransform(\n          this.tileTransform_,\n          2 / ((frameState.size[0] * tileScale) / tileWidthWithGutter),\n          -2 / ((frameState.size[1] * tileScale) / tileWidthWithGutter)\n        );\n        rotateTransform(this.tileTransform_, viewState.rotation);\n        scaleTransform(this.tileTransform_, 1, 1 / aspectRatio);\n        translateTransform(\n          this.tileTransform_,\n          (tileSize[0] * (tileCenterI - centerI) - gutter) /\n            tileWidthWithGutter,\n          (tileSize[1] * (tileCenterJ - centerJ) - gutter) /\n            tileHeightWithGutter\n        );\n\n        this.renderTile(\n          /** @type {TileRepresentation} */ (tileRepresentation),\n          this.tileTransform_,\n          frameState,\n          extent,\n          tileResolution,\n          tileSize,\n          tileOrigin,\n          tileExtent,\n          depth,\n          gutter,\n          alpha\n        );\n      }\n    }\n\n    this.helper.finalizeDraw(\n      frameState,\n      this.dispatchPreComposeEvent,\n      this.dispatchPostComposeEvent\n    );\n\n    const canvas = this.helper.getCanvas();\n\n    const tileRepresentationCache = this.tileRepresentationCache;\n    while (tileRepresentationCache.canExpireCache()) {\n      const tileRepresentation = tileRepresentationCache.pop();\n      tileRepresentation.dispose();\n    }\n\n    // TODO: let the renderers manage their own cache instead of managing the source cache\n    /**\n     * Here we unconditionally expire the source cache since the renderer maintains\n     * its own cache.\n     * @param {import(\"../../Map.js\").default} map Map.\n     * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n     */\n    const postRenderFunction = function (map, frameState) {\n      tileSource.updateCacheSize(0.1, frameState.viewState.projection);\n      tileSource.expireCache(frameState.viewState.projection, empty);\n    };\n\n    frameState.postRenderFunctions.push(postRenderFunction);\n\n    this.postRender(gl, frameState);\n    return canvas;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile representation lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of\n   * tile representations by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tileRepresentationLookup) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileRepresentationCache = this.tileRepresentationCache;\n    const source = this.getLayer().getRenderSource();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(source, [altZ, x, y]);\n        let loaded = false;\n        if (tileRepresentationCache.containsKey(cacheKey)) {\n          const tileRepresentation = tileRepresentationCache.get(cacheKey);\n          if (\n            tileRepresentation.loaded &&\n            !lookupHasTile(tileRepresentationLookup, tileRepresentation.tile)\n          ) {\n            addTileRepresentationToLookup(\n              tileRepresentationLookup,\n              tileRepresentation,\n              altZ\n            );\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  clearCache() {\n    const tileRepresentationCache = this.tileRepresentationCache;\n    tileRepresentationCache.forEach((tileRepresentation) =>\n      tileRepresentation.dispose()\n    );\n    tileRepresentationCache.clear();\n  }\n\n  removeHelper() {\n    if (this.helper) {\n      this.clearCache();\n    }\n\n    super.removeHelper();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    super.disposeInternal();\n    delete this.frameState;\n  }\n}\n\nexport default WebGLBaseTileLayerRenderer;\n","/**\n * @module ol/renderer/webgl/TileLayer\n */\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileState from '../../TileState.js';\nimport TileTexture from '../../webgl/TileTexture.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLBaseTileLayerRenderer, {\n  Uniforms as BaseUniforms,\n  getCacheKey,\n} from './TileLayerBase.js';\nimport {AttributeType} from '../../webgl/Helper.js';\nimport {ELEMENT_ARRAY_BUFFER, STATIC_DRAW} from '../../webgl.js';\nimport {apply as applyTransform} from '../../transform.js';\nimport {\n  boundingExtent,\n  containsCoordinate,\n  getIntersection,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {fromTransform as mat4FromTransform} from '../../vec/mat4.js';\nimport {toSize} from '../../size.js';\n\nexport const Uniforms = {\n  ...BaseUniforms,\n  TILE_TEXTURE_ARRAY: 'u_tileTextures',\n  TEXTURE_PIXEL_WIDTH: 'u_texturePixelWidth',\n  TEXTURE_PIXEL_HEIGHT: 'u_texturePixelHeight',\n  TEXTURE_RESOLUTION: 'u_textureResolution', // map units per texture pixel\n  TEXTURE_ORIGIN_X: 'u_textureOriginX', // map x coordinate of left edge of texture\n  TEXTURE_ORIGIN_Y: 'u_textureOriginY', // map y coordinate of top edge of texture\n};\n\nexport const Attributes = {\n  TEXTURE_COORD: 'a_textureCoord',\n};\n\n/**\n * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n */\nconst attributeDescriptions = [\n  {\n    name: Attributes.TEXTURE_COORD,\n    size: 2,\n    type: AttributeType.FLOAT,\n  },\n];\n\n/**\n * @typedef {Object} Options\n * @property {string} vertexShader Vertex shader source.\n * @property {string} fragmentShader Fragment shader source.\n * @property {Object<string, import(\"../../webgl/Helper\").UniformValue>} [uniforms] Additional uniforms\n * made available to shaders.\n * @property {Array<import(\"../../webgl/PaletteTexture.js\").default>} [paletteTextures] Palette textures.\n * @property {number} [cacheSize=512] The texture cache size.\n */\n\n/**\n * @typedef {import(\"../../layer/WebGLTile.js\").default} LayerType\n */\n/**\n * @typedef {import(\"../../webgl/TileTexture.js\").TileType} TileTextureType\n */\n/**\n * @typedef {import(\"../../webgl/TileTexture.js\").default} TileTextureRepresentation\n */\n\n/**\n * @classdesc\n * WebGL renderer for tile layers.\n * @extends {WebGLBaseTileLayerRenderer<LayerType, TileTextureType, TileTextureRepresentation>}\n * @api\n */\nclass WebGLTileLayerRenderer extends WebGLBaseTileLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} options Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer, options);\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.program_;\n\n    /**\n     * @private\n     */\n    this.vertexShader_ = options.vertexShader;\n\n    /**\n     * @private\n     */\n    this.fragmentShader_ = options.fragmentShader;\n\n    /**\n     * Tiles are rendered as a quad with the following structure:\n     *\n     *  [P3]---------[P2]\n     *   |`           |\n     *   |  `     B   |\n     *   |    `       |\n     *   |      `     |\n     *   |   A    `   |\n     *   |          ` |\n     *  [P0]---------[P1]\n     *\n     * Triangle A: P0, P1, P3\n     * Triangle B: P1, P2, P3\n     *\n     * @private\n     */\n    this.indices_ = new WebGLArrayBuffer(ELEMENT_ARRAY_BUFFER, STATIC_DRAW);\n    this.indices_.fromArray([0, 1, 3, 1, 2, 3]);\n\n    /**\n     * @type {Array<import(\"../../webgl/PaletteTexture.js\").default>}\n     * @private\n     */\n    this.paletteTextures_ = options.paletteTextures || [];\n  }\n\n  /**\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    super.reset(options);\n\n    this.vertexShader_ = options.vertexShader;\n    this.fragmentShader_ = options.fragmentShader;\n\n    if (this.helper) {\n      this.program_ = this.helper.getProgram(\n        this.fragmentShader_,\n        this.vertexShader_\n      );\n    }\n  }\n\n  afterHelperCreated() {\n    this.program_ = this.helper.getProgram(\n      this.fragmentShader_,\n      this.vertexShader_\n    );\n    this.helper.flushBufferData(this.indices_);\n  }\n\n  createTileRepresentation(options) {\n    return new TileTexture(options);\n  }\n\n  beforeTilesRender(frameState, tilesWithAlpha) {\n    super.beforeTilesRender(frameState, tilesWithAlpha);\n    this.helper.useProgram(this.program_, frameState);\n  }\n\n  renderTile(\n    tileTexture,\n    tileTransform,\n    frameState,\n    renderExtent,\n    tileResolution,\n    tileSize,\n    tileOrigin,\n    tileExtent,\n    depth,\n    gutter,\n    alpha\n  ) {\n    const gl = this.helper.getGL();\n    this.helper.bindBuffer(tileTexture.coords);\n    this.helper.bindBuffer(this.indices_);\n    this.helper.enableAttributes(attributeDescriptions);\n\n    let textureSlot = 0;\n    while (textureSlot < tileTexture.textures.length) {\n      const uniformName = `${Uniforms.TILE_TEXTURE_ARRAY}[${textureSlot}]`;\n      this.helper.bindTexture(\n        tileTexture.textures[textureSlot],\n        textureSlot,\n        uniformName\n      );\n      ++textureSlot;\n    }\n\n    for (\n      let paletteIndex = 0;\n      paletteIndex < this.paletteTextures_.length;\n      ++paletteIndex\n    ) {\n      const paletteTexture = this.paletteTextures_[paletteIndex];\n      const texture = paletteTexture.getTexture(gl);\n      this.helper.bindTexture(texture, textureSlot, paletteTexture.name);\n      ++textureSlot;\n    }\n\n    const viewState = frameState.viewState;\n\n    const tileWidthWithGutter = tileSize[0] + 2 * gutter;\n    const tileHeightWithGutter = tileSize[1] + 2 * gutter;\n\n    const tile = tileTexture.tile;\n    const tileCoord = tile.tileCoord;\n\n    const tileCenterI = tileCoord[1];\n    const tileCenterJ = tileCoord[2];\n\n    this.helper.setUniformMatrixValue(\n      Uniforms.TILE_TRANSFORM,\n      mat4FromTransform(this.tempMat4, tileTransform)\n    );\n\n    this.helper.setUniformFloatValue(Uniforms.TRANSITION_ALPHA, alpha);\n    this.helper.setUniformFloatValue(Uniforms.DEPTH, depth);\n\n    let gutterExtent = renderExtent;\n    if (gutter > 0) {\n      gutterExtent = tileExtent;\n      getIntersection(gutterExtent, renderExtent, gutterExtent);\n    }\n    this.helper.setUniformFloatVec4(Uniforms.RENDER_EXTENT, gutterExtent);\n\n    this.helper.setUniformFloatValue(Uniforms.RESOLUTION, viewState.resolution);\n    this.helper.setUniformFloatValue(Uniforms.ZOOM, viewState.zoom);\n\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_PIXEL_WIDTH,\n      tileWidthWithGutter\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_PIXEL_HEIGHT,\n      tileHeightWithGutter\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_RESOLUTION,\n      tileResolution\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_ORIGIN_X,\n      tileOrigin[0] +\n        tileCenterI * tileSize[0] * tileResolution -\n        gutter * tileResolution\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_ORIGIN_Y,\n      tileOrigin[1] -\n        tileCenterJ * tileSize[1] * tileResolution +\n        gutter * tileResolution\n    );\n\n    this.helper.drawElements(0, this.indices_.getSize());\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView} Data at the pixel location.\n   */\n  getData(pixel) {\n    const gl = this.helper.getGL();\n    if (!gl) {\n      return null;\n    }\n\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const viewState = frameState.viewState;\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (\n        !containsCoordinate(\n          fromUserExtent(layerExtent, viewState.projection),\n          coordinate\n        )\n      ) {\n        return null;\n      }\n    }\n\n    // determine last source suitable for rendering at coordinate\n    const sources = layer.getSources(\n      boundingExtent([coordinate]),\n      viewState.resolution\n    );\n    let i, source, tileGrid;\n    for (i = sources.length - 1; i >= 0; --i) {\n      source = sources[i];\n      if (source.getState() === 'ready') {\n        tileGrid = source.getTileGridForProjection(viewState.projection);\n        if (source.getWrapX()) {\n          break;\n        }\n        const gridExtent = tileGrid.getExtent();\n        if (!gridExtent || containsCoordinate(gridExtent, coordinate)) {\n          break;\n        }\n      }\n    }\n    if (i < 0) {\n      return null;\n    }\n\n    const tileTextureCache = this.tileRepresentationCache;\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const cacheKey = getCacheKey(source, tileCoord);\n      if (!tileTextureCache.containsKey(cacheKey)) {\n        continue;\n      }\n      const tileTexture = tileTextureCache.get(cacheKey);\n      const tile = tileTexture.tile;\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tile.getState() === TileState.EMPTY\n      ) {\n        return null;\n      }\n      if (!tileTexture.loaded) {\n        continue;\n      }\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col =\n        (coordinate[0] - tileOrigin[0]) / tileResolution -\n        tileCoord[1] * tileSize[0];\n\n      const row =\n        (tileOrigin[1] - coordinate[1]) / tileResolution -\n        tileCoord[2] * tileSize[1];\n\n      return tileTexture.getPixelData(col, row);\n    }\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    const helper = this.helper;\n    if (helper) {\n      const gl = helper.getGL();\n      gl.deleteProgram(this.program_);\n      delete this.program_;\n      helper.deleteBuffer(this.indices_);\n    }\n    super.disposeInternal();\n    delete this.indices_;\n  }\n}\n\nexport default WebGLTileLayerRenderer;\n","/**\n * Operators and utilities used for style expressions\n * @module ol/style/expressions\n */\n\nimport PaletteTexture from '../webgl/PaletteTexture.js';\nimport {Uniforms} from '../renderer/webgl/TileLayer.js';\nimport {asArray, fromString, isStringColor} from '../color.js';\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expressions.js\").ExpressionValue} arguments.\n *\n * The following operators can be used:\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels.\n *   * `['get', 'attributeName', typeHint]` fetches a feature property value, similar to `feature.get('attributeName')`\n *     A type hint can optionally be specified, in case the resulting expression contains a type ambiguity which\n *     will make it invalid. Type hints can be one of: 'string', 'color', 'number', 'boolean', 'number[]'\n *   * `['resolution']` returns the current resolution\n *   * `['time']` returns the time in seconds since the creation of the layer\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` returns the current zoom level\n *\n * * Math operators:\n *   * `['*', value1, value2]` multiplies `value1` by `value2` (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2]` adds `value1` and `value2`\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4.\n *   * `['color', red, green, blue, alpha]` creates a `color` value from `number` values; the `alpha` parameter is\n *     optional; if not specified, it will be set to 1.\n *     Note: `red`, `green` and `blue` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range).\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\n/**\n * Possible inferred types from a given value or expression.\n * Note: these are binary flags.\n * @enum {number}\n */\nexport const ValueTypes = {\n  NUMBER: 0b00001,\n  STRING: 0b00010,\n  COLOR: 0b00100,\n  BOOLEAN: 0b01000,\n  NUMBER_ARRAY: 0b10000,\n  ANY: 0b11111,\n  NONE: 0,\n};\n\n/**\n * @param {string} typeHint Type hint\n * @return {ValueTypes} Resulting value type (will be a single type)\n */\nfunction getTypeFromHint(typeHint) {\n  switch (typeHint) {\n    case 'string':\n      return ValueTypes.STRING;\n    case 'color':\n      return ValueTypes.COLOR;\n    case 'number':\n      return ValueTypes.NUMBER;\n    case 'boolean':\n      return ValueTypes.BOOLEAN;\n    case 'number[]':\n      return ValueTypes.NUMBER_ARRAY;\n    default:\n      throw new Error(`Unrecognized type hint: ${typeHint}`);\n  }\n}\n\n/**\n * An operator declaration must contain two methods: `getReturnType` which returns a type based on\n * the operator arguments, and `toGlsl` which returns a GLSL-compatible string.\n * Note: both methods can process arguments recursively.\n * @typedef {Object} Operator\n * @property {function(Array<ExpressionValue>): ValueTypes|number} getReturnType Returns one or several types\n * @property {function(ParsingContext, Array<ExpressionValue>, ValueTypes): string} toGlsl Returns a GLSL-compatible string\n * given a parsing context, an array of arguments and an expected type.\n * Note: the expected type can be a combination such as ValueTypes.NUMBER | ValueTypes.STRING or ValueTypes.ANY for instance\n */\n\n/**\n * Operator declarations\n * @type {Object<string, Operator>}\n */\nexport const Operators = {};\n\n/**\n * Returns the possible types for a given value (each type being a binary flag)\n * To test a value use e.g. `getValueType(v) & ValueTypes.BOOLEAN`\n * @param {ExpressionValue} value Value\n * @return {ValueTypes|number} Type or types inferred from the value\n */\nexport function getValueType(value) {\n  if (typeof value === 'number') {\n    return ValueTypes.NUMBER;\n  }\n  if (typeof value === 'boolean') {\n    return ValueTypes.BOOLEAN;\n  }\n  if (typeof value === 'string') {\n    if (isStringColor(value)) {\n      return ValueTypes.COLOR | ValueTypes.STRING;\n    }\n    return ValueTypes.STRING;\n  }\n  if (!Array.isArray(value)) {\n    throw new Error(`Unhandled value type: ${JSON.stringify(value)}`);\n  }\n  const valueArr = /** @type {Array<*>} */ (value);\n  const onlyNumbers = valueArr.every(function (v) {\n    return typeof v === 'number';\n  });\n  if (onlyNumbers) {\n    if (valueArr.length === 3 || valueArr.length === 4) {\n      return ValueTypes.COLOR | ValueTypes.NUMBER_ARRAY;\n    }\n    return ValueTypes.NUMBER_ARRAY;\n  }\n  if (typeof valueArr[0] !== 'string') {\n    throw new Error(\n      `Expected an expression operator but received: ${JSON.stringify(\n        valueArr\n      )}`\n    );\n  }\n  const operator = Operators[valueArr[0]];\n  if (operator === undefined) {\n    throw new Error(\n      `Unrecognized expression operator: ${JSON.stringify(valueArr)}`\n    );\n  }\n  return operator.getReturnType(valueArr.slice(1));\n}\n\n/**\n * Checks if only one value type is enabled in the input number.\n * @param {ValueTypes|number} valueType Number containing value type binary flags\n * @return {boolean} True if only one type flag is enabled, false if zero or multiple\n */\nexport function isTypeUnique(valueType) {\n  return Math.log2(valueType) % 1 === 0;\n}\n\n/**\n * Print types as a readable string\n * @param {ValueTypes|number} valueType Number containing value type binary flags\n * @return {string} Types\n */\nfunction printTypes(valueType) {\n  const result = [];\n  if ((valueType & ValueTypes.NUMBER) > 0) {\n    result.push('number');\n  }\n  if ((valueType & ValueTypes.COLOR) > 0) {\n    result.push('color');\n  }\n  if ((valueType & ValueTypes.BOOLEAN) > 0) {\n    result.push('boolean');\n  }\n  if ((valueType & ValueTypes.NUMBER_ARRAY) > 0) {\n    result.push('number[]');\n  }\n  if ((valueType & ValueTypes.STRING) > 0) {\n    result.push('string');\n  }\n  return result.length > 0 ? result.join(', ') : '(no type)';\n}\n\n/**\n * @typedef {Object} ParsingContextExternal\n * @property {string} name Name, unprefixed\n * @property {ValueTypes} type One of the value types constants\n */\n\n/**\n * Context available during the parsing of an expression.\n * @typedef {Object} ParsingContext\n * @property {boolean} [inFragmentShader] If false, means the expression output should be made for a vertex shader\n * @property {Array<ParsingContextExternal>} variables External variables used in the expression\n * @property {Array<ParsingContextExternal>} attributes External attributes used in the expression\n * @property {Object<string, number>} stringLiteralsMap This object maps all encountered string values to a number\n * @property {Object<string, string>} functions Lookup of functions used by the style.\n * @property {number} [bandCount] Number of bands per pixel.\n * @property {Array<PaletteTexture>} [paletteTextures] List of palettes used by the style.\n * @property {import(\"../style/literal\").LiteralStyle} style The style being parsed\n */\n\n/**\n * Will return the number as a float with a dot separator, which is required by GLSL.\n * @param {number} v Numerical value.\n * @return {string} The value as string.\n */\nexport function numberToGlsl(v) {\n  const s = v.toString();\n  return s.includes('.') ? s : s + '.0';\n}\n\n/**\n * Will return the number array as a float with a dot separator, concatenated with ', '.\n * @param {Array<number>} array Numerical values array.\n * @return {string} The array as a vector, e. g.: `vec3(1.0, 2.0, 3.0)`.\n */\nexport function arrayToGlsl(array) {\n  if (array.length < 2 || array.length > 4) {\n    throw new Error(\n      '`formatArray` can only output `vec2`, `vec3` or `vec4` arrays.'\n    );\n  }\n  return `vec${array.length}(${array.map(numberToGlsl).join(', ')})`;\n}\n\n/**\n * Will normalize and converts to string a `vec4` color array compatible with GLSL.\n * @param {string|import(\"../color.js\").Color} color Color either in string format or [r, g, b, a] array format,\n * with RGB components in the 0..255 range and the alpha component in the 0..1 range.\n * Note that the final array will always have 4 components.\n * @return {string} The color expressed in the `vec4(1.0, 1.0, 1.0, 1.0)` form.\n */\nexport function colorToGlsl(color) {\n  const array = asArray(color);\n  const alpha = array.length > 3 ? array[3] : 1;\n  // all components are premultiplied with alpha value\n  return arrayToGlsl([\n    (array[0] / 255) * alpha,\n    (array[1] / 255) * alpha,\n    (array[2] / 255) * alpha,\n    alpha,\n  ]);\n}\n\n/**\n * Returns a stable equivalent number for the string literal.\n * @param {ParsingContext} context Parsing context\n * @param {string} string String literal value\n * @return {number} Number equivalent\n */\nexport function getStringNumberEquivalent(context, string) {\n  if (context.stringLiteralsMap[string] === undefined) {\n    context.stringLiteralsMap[string] = Object.keys(\n      context.stringLiteralsMap\n    ).length;\n  }\n  return context.stringLiteralsMap[string];\n}\n\n/**\n * Returns a stable equivalent number for the string literal, for use in shaders. This number is then\n * converted to be a GLSL-compatible string.\n * @param {ParsingContext} context Parsing context\n * @param {string} string String literal value\n * @return {string} GLSL-compatible string containing a number\n */\nexport function stringToGlsl(context, string) {\n  return numberToGlsl(getStringNumberEquivalent(context, string));\n}\n\n/**\n * Recursively parses a style expression and outputs a GLSL-compatible string. Takes in a parsing context that\n * will be read and modified during the parsing operation.\n * @param {ParsingContext} context Parsing context\n * @param {ExpressionValue} value Value\n * @param {ValueTypes|number} [expectedType] Expected final type (can be several types combined)\n * If omitted, defaults to ValueTypes.NUMBER\n * @return {string} GLSL-compatible output\n */\nexport function expressionToGlsl(context, value, expectedType) {\n  const returnType =\n    expectedType !== undefined ? expectedType : ValueTypes.NUMBER;\n  // operator\n  if (Array.isArray(value) && typeof value[0] === 'string') {\n    const operator = Operators[value[0]];\n    if (operator === undefined) {\n      throw new Error(\n        `Unrecognized expression operator: ${JSON.stringify(value)}`\n      );\n    }\n    return operator.toGlsl(context, value.slice(1), returnType);\n  }\n\n  const possibleType = getValueType(value) & returnType;\n  assertNotEmptyType(value, possibleType, '');\n\n  if ((possibleType & ValueTypes.NUMBER) > 0) {\n    return numberToGlsl(/** @type {number} */ (value));\n  }\n\n  if ((possibleType & ValueTypes.BOOLEAN) > 0) {\n    return value.toString();\n  }\n\n  if ((possibleType & ValueTypes.STRING) > 0) {\n    return stringToGlsl(context, value.toString());\n  }\n\n  if ((possibleType & ValueTypes.COLOR) > 0) {\n    return colorToGlsl(/** @type {Array<number> | string} */ (value));\n  }\n\n  if ((possibleType & ValueTypes.NUMBER_ARRAY) > 0) {\n    return arrayToGlsl(/** @type {Array<number>} */ (value));\n  }\n\n  throw new Error(\n    `Unexpected expression ${value} (expected type ${printTypes(returnType)})`\n  );\n}\n\nfunction assertNumber(value) {\n  if ((getValueType(value) & ValueTypes.NUMBER) === 0) {\n    throw new Error(\n      `A numeric value was expected, got ${JSON.stringify(value)} instead`\n    );\n  }\n}\nfunction assertNumbers(values) {\n  for (let i = 0; i < values.length; i++) {\n    assertNumber(values[i]);\n  }\n}\nfunction assertString(value) {\n  if ((getValueType(value) & ValueTypes.STRING) === 0) {\n    throw new Error(\n      `A string value was expected, got ${JSON.stringify(value)} instead`\n    );\n  }\n}\nfunction assertBoolean(value) {\n  if ((getValueType(value) & ValueTypes.BOOLEAN) === 0) {\n    throw new Error(\n      `A boolean value was expected, got ${JSON.stringify(value)} instead`\n    );\n  }\n}\nfunction assertArgsCount(args, count) {\n  if (args.length !== count) {\n    throw new Error(\n      `Exactly ${count} arguments were expected, got ${args.length} instead`\n    );\n  }\n}\nfunction assertArgsMinCount(args, count) {\n  if (args.length < count) {\n    throw new Error(\n      `At least ${count} arguments were expected, got ${args.length} instead`\n    );\n  }\n}\nfunction assertArgsMaxCount(args, count) {\n  if (args.length > count) {\n    throw new Error(\n      `At most ${count} arguments were expected, got ${args.length} instead`\n    );\n  }\n}\nfunction assertArgsEven(args) {\n  if (args.length % 2 !== 0) {\n    throw new Error(\n      `An even amount of arguments was expected, got ${JSON.stringify(\n        args\n      )} instead`\n    );\n  }\n}\nfunction assertArgsOdd(args) {\n  if (args.length % 2 === 0) {\n    throw new Error(\n      `An odd amount of arguments was expected, got ${JSON.stringify(\n        args\n      )} instead`\n    );\n  }\n}\nfunction assertNotEmptyType(args, types, descriptor) {\n  if (types === ValueTypes.NONE) {\n    throw new Error(\n      `No matching type was found for the following expression ${descriptor}: ${JSON.stringify(\n        args\n      )}`\n    );\n  }\n}\nfunction assertSingleType(args, types, descriptor) {\n  assertNotEmptyType(args, types, descriptor);\n  if (!isTypeUnique(types)) {\n    throw new Error(\n      `Expected to have a unique type for the following expression ${descriptor}: ${JSON.stringify(\n        args\n      )}\nGot the following types instead: ${printTypes(types)}`\n    );\n  }\n}\nfunction assertOfType(args, types, expectedTypes, descriptor) {\n  if ((types & expectedTypes) === ValueTypes.NONE) {\n    throw new Error(\n      `Expected the ${descriptor} type of the following expression: ${JSON.stringify(\n        args\n      )} to be of the following types: ${printTypes(expectedTypes)}\nGot these types instead: ${printTypes(types)}`\n    );\n  }\n}\n\nOperators['get'] = {\n  getReturnType: function (args) {\n    if (args.length === 2) {\n      const hint = args[1];\n      return getTypeFromHint(/** @type {string} */ (hint));\n    }\n    return ValueTypes.ANY;\n  },\n  toGlsl: function (context, args, expectedType) {\n    assertArgsMinCount(args, 1);\n    assertArgsMaxCount(args, 2);\n    assertString(args[0]);\n    const outputType = expectedType & Operators['get'].getReturnType(args);\n    assertSingleType(['get', ...args], outputType, '');\n    const name = args[0].toString();\n    const existing = context.attributes.find((a) => a.name === name);\n    if (!existing) {\n      context.attributes.push({\n        name: name,\n        type: outputType,\n      });\n    } else if (outputType !== existing.type) {\n      throw new Error(\n        `The following attribute was used in different places with incompatible types: ${name}\nTypes were: ${printTypes(existing.type)} and ${printTypes(outputType)}`\n      );\n    }\n    const prefix = context.inFragmentShader ? 'v_' : 'a_';\n    return prefix + name;\n  },\n};\n\n/**\n * Get the uniform name given a variable name.\n * @param {string} variableName The variable name.\n * @return {string} The uniform name.\n */\nexport function uniformNameForVariable(variableName) {\n  return 'u_var_' + variableName;\n}\n\nOperators['var'] = {\n  getReturnType: function () {\n    return ValueTypes.ANY;\n  },\n  toGlsl: function (context, args, expectedType) {\n    assertArgsCount(args, 1);\n    assertString(args[0]);\n    const name = args[0].toString();\n    if (\n      !context.style.variables ||\n      context.style.variables[name] === undefined\n    ) {\n      throw new Error(\n        `The following variable is missing from the style: ${name}`\n      );\n    }\n    const initialValue = context.style.variables[name];\n    const outputType = expectedType & getValueType(initialValue);\n    assertSingleType(['var', ...args], outputType, '');\n    const existing = context.variables.find((a) => a.name === name);\n    if (!existing) {\n      context.variables.push({\n        name: name,\n        type: outputType,\n      });\n    } else if (outputType !== existing.type) {\n      throw new Error(\n        `The following variable was used in different places with incompatible types: ${name}\nTypes were: ${printTypes(existing.type)} and ${printTypes(outputType)}`\n      );\n    }\n    return uniformNameForVariable(name);\n  },\n};\n\nexport const PALETTE_TEXTURE_ARRAY = 'u_paletteTextures';\n\n// ['palette', index, colors]\nOperators['palette'] = {\n  getReturnType: function () {\n    return ValueTypes.COLOR;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumber(args[0]);\n    const index = expressionToGlsl(context, args[0]);\n    const colors = args[1];\n    if (!Array.isArray(colors)) {\n      throw new Error('The second argument of palette must be an array');\n    }\n    const numColors = colors.length;\n    const palette = new Uint8Array(numColors * 4);\n    for (let i = 0; i < numColors; i++) {\n      const candidate = colors[i];\n      /**\n       * @type {import('../color.js').Color}\n       */\n      let color;\n      if (typeof candidate === 'string') {\n        color = fromString(candidate);\n      } else {\n        if (!Array.isArray(candidate)) {\n          throw new Error(\n            'The second argument of palette must be an array of strings or colors'\n          );\n        }\n        const length = candidate.length;\n        if (length === 4) {\n          color = candidate;\n        } else {\n          if (length !== 3) {\n            throw new Error(\n              `Expected palette color to have 3 or 4 values, got ${length}`\n            );\n          }\n          color = [candidate[0], candidate[1], candidate[2], 1];\n        }\n      }\n      const offset = i * 4;\n      palette[offset] = color[0];\n      palette[offset + 1] = color[1];\n      palette[offset + 2] = color[2];\n      palette[offset + 3] = color[3] * 255;\n    }\n    if (!context.paletteTextures) {\n      context.paletteTextures = [];\n    }\n    const paletteName = `${PALETTE_TEXTURE_ARRAY}[${context.paletteTextures.length}]`;\n    const paletteTexture = new PaletteTexture(paletteName, palette);\n    context.paletteTextures.push(paletteTexture);\n    return `texture2D(${paletteName}, vec2((${index} + 0.5) / ${numColors}.0, 0.5))`;\n  },\n};\n\nconst GET_BAND_VALUE_FUNC = 'getBandValue';\n\nOperators['band'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 1);\n    assertArgsMaxCount(args, 3);\n    const band = args[0];\n\n    if (!(GET_BAND_VALUE_FUNC in context.functions)) {\n      let ifBlocks = '';\n      const bandCount = context.bandCount || 1;\n      for (let i = 0; i < bandCount; i++) {\n        const colorIndex = Math.floor(i / 4);\n        let bandIndex = i % 4;\n        if (i === bandCount - 1 && bandIndex === 1) {\n          // LUMINANCE_ALPHA - band 1 assigned to rgb and band 2 assigned to alpha\n          bandIndex = 3;\n        }\n        const textureName = `${Uniforms.TILE_TEXTURE_ARRAY}[${colorIndex}]`;\n        ifBlocks += `\n          if (band == ${i + 1}.0) {\n            return texture2D(${textureName}, v_textureCoord + vec2(dx, dy))[${bandIndex}];\n          }\n        `;\n      }\n\n      context.functions[GET_BAND_VALUE_FUNC] = `\n        float getBandValue(float band, float xOffset, float yOffset) {\n          float dx = xOffset / ${Uniforms.TEXTURE_PIXEL_WIDTH};\n          float dy = yOffset / ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n          ${ifBlocks}\n        }\n      `;\n    }\n\n    const bandExpression = expressionToGlsl(context, band);\n    const xOffsetExpression = expressionToGlsl(context, args[1] || 0);\n    const yOffsetExpression = expressionToGlsl(context, args[2] || 0);\n    return `${GET_BAND_VALUE_FUNC}(${bandExpression}, ${xOffsetExpression}, ${yOffsetExpression})`;\n  },\n};\n\nOperators['time'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 0);\n    return 'u_time';\n  },\n};\n\nOperators['zoom'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 0);\n    return 'u_zoom';\n  },\n};\n\nOperators['resolution'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 0);\n    return 'u_resolution';\n  },\n};\n\nOperators['*'] = {\n  getReturnType: function (args) {\n    let outputType = ValueTypes.NUMBER | ValueTypes.COLOR;\n    for (let i = 0; i < args.length; i++) {\n      outputType = outputType & getValueType(args[i]);\n    }\n    return outputType;\n  },\n  toGlsl: function (context, args, expectedType) {\n    assertArgsMinCount(args, 2);\n    let outputType = expectedType;\n    for (let i = 0; i < args.length; i++) {\n      outputType = outputType & getValueType(args[i]);\n    }\n    assertOfType(\n      args,\n      outputType,\n      ValueTypes.NUMBER | ValueTypes.COLOR,\n      'output'\n    );\n    return `(${args\n      .map((arg) => expressionToGlsl(context, arg, outputType))\n      .join(' * ')})`;\n  },\n};\n\nOperators['/'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} / ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['+'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 2);\n    assertNumbers(args);\n    return `(${args.map((arg) => expressionToGlsl(context, arg)).join(' + ')})`;\n  },\n};\n\nOperators['-'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} - ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['clamp'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 3);\n    assertNumbers(args);\n    const min = expressionToGlsl(context, args[1]);\n    const max = expressionToGlsl(context, args[2]);\n    return `clamp(${expressionToGlsl(context, args[0])}, ${min}, ${max})`;\n  },\n};\n\nOperators['%'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `mod(${expressionToGlsl(context, args[0])}, ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['^'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `pow(${expressionToGlsl(context, args[0])}, ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['abs'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `abs(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['floor'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `floor(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['round'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `floor(${expressionToGlsl(context, args[0])} + 0.5)`;\n  },\n};\n\nOperators['ceil'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `ceil(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['sin'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `sin(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['cos'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `cos(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['atan'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 1);\n    assertArgsMaxCount(args, 2);\n    assertNumbers(args);\n    return args.length === 2\n      ? `atan(${expressionToGlsl(context, args[0])}, ${expressionToGlsl(\n          context,\n          args[1]\n        )})`\n      : `atan(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['>'] = {\n  getReturnType: function () {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} > ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['>='] = {\n  getReturnType: function () {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} >= ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['<'] = {\n  getReturnType: function () {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} < ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['<='] = {\n  getReturnType: function () {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} <= ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nfunction getEqualOperator(operator) {\n  return {\n    getReturnType: function () {\n      return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n      assertArgsCount(args, 2);\n\n      // find common type\n      let type = ValueTypes.ANY;\n      for (let i = 0; i < args.length; i++) {\n        type &= getValueType(args[i]);\n      }\n      if (type === ValueTypes.NONE) {\n        throw new Error(\n          `All arguments should be of compatible type, got ${JSON.stringify(\n            args\n          )} instead`\n        );\n      }\n\n      // Since it's not possible to have color types here, we can leave it out\n      // This fixes issues in case the value type is ambiguously detected as a color (e.g. the string 'red')\n      type &= ~ValueTypes.COLOR;\n\n      return `(${expressionToGlsl(\n        context,\n        args[0],\n        type\n      )} ${operator} ${expressionToGlsl(context, args[1], type)})`;\n    },\n  };\n}\n\nOperators['=='] = getEqualOperator('==');\n\nOperators['!='] = getEqualOperator('!=');\n\nOperators['!'] = {\n  getReturnType: function () {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertBoolean(args[0]);\n    return `(!${expressionToGlsl(context, args[0], ValueTypes.BOOLEAN)})`;\n  },\n};\n\nfunction getDecisionOperator(operator) {\n  return {\n    getReturnType: function () {\n      return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n      assertArgsMinCount(args, 2);\n      for (let i = 0; i < args.length; i++) {\n        assertBoolean(args[i]);\n      }\n      let result = args\n        .map((arg) => expressionToGlsl(context, arg, ValueTypes.BOOLEAN))\n        .join(` ${operator} `);\n      result = `(${result})`;\n      return result;\n    },\n  };\n}\n\nOperators['all'] = getDecisionOperator('&&');\n\nOperators['any'] = getDecisionOperator('||');\n\nOperators['between'] = {\n  getReturnType: function () {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 3);\n    assertNumbers(args);\n    const min = expressionToGlsl(context, args[1]);\n    const max = expressionToGlsl(context, args[2]);\n    const value = expressionToGlsl(context, args[0]);\n    return `(${value} >= ${min} && ${value} <= ${max})`;\n  },\n};\n\nOperators['array'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER_ARRAY;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 2);\n    assertArgsMaxCount(args, 4);\n    assertNumbers(args);\n    const parsedArgs = args.map(function (val) {\n      return expressionToGlsl(context, val);\n    });\n    return `vec${args.length}(${parsedArgs.join(', ')})`;\n  },\n};\n\nOperators['color'] = {\n  getReturnType: function () {\n    return ValueTypes.COLOR;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 3);\n    assertArgsMaxCount(args, 4);\n    assertNumbers(args);\n    const parsedArgs = args\n      .slice(0, 3)\n      .map((val) => `${expressionToGlsl(context, val)} / 255.0`);\n    if (args.length === 3) {\n      return `vec4(${parsedArgs.join(', ')}, 1.0)`;\n    }\n    const alpha = expressionToGlsl(context, args[3]);\n    return `(${alpha} * vec4(${parsedArgs.join(', ')}, 1.0))`;\n  },\n};\n\nOperators['interpolate'] = {\n  getReturnType: function (args) {\n    let type = ValueTypes.COLOR | ValueTypes.NUMBER;\n    for (let i = 3; i < args.length; i += 2) {\n      type = type & getValueType(args[i]);\n    }\n    return type;\n  },\n  toGlsl: function (context, args, expectedType) {\n    assertArgsEven(args);\n    assertArgsMinCount(args, 6);\n\n    // validate interpolation type\n    const type = args[0];\n    let interpolation;\n    switch (type[0]) {\n      case 'linear':\n        interpolation = 1;\n        break;\n      case 'exponential':\n        interpolation = type[1];\n        break;\n      default:\n        interpolation = null;\n    }\n    if (!interpolation) {\n      throw new Error(\n        `Invalid interpolation type for \"interpolate\" operator, received: ${JSON.stringify(\n          type\n        )}`\n      );\n    }\n\n    // compute input/output types\n    const inputType = ValueTypes.NUMBER;\n    const outputType =\n      Operators['interpolate'].getReturnType(args) & expectedType;\n    assertSingleType(['interpolate', ...args], outputType, 'output');\n\n    const input = expressionToGlsl(context, args[1], inputType);\n    const exponent = numberToGlsl(interpolation);\n\n    let result = '';\n    for (let i = 2; i < args.length - 2; i += 2) {\n      const stop1 = expressionToGlsl(context, args[i], inputType);\n      const output1 =\n        result || expressionToGlsl(context, args[i + 1], outputType);\n      const stop2 = expressionToGlsl(context, args[i + 2], inputType);\n      const output2 = expressionToGlsl(context, args[i + 3], outputType);\n      result = `mix(${output1}, ${output2}, pow(clamp((${input} - ${stop1}) / (${stop2} - ${stop1}), 0.0, 1.0), ${exponent}))`;\n    }\n    return result;\n  },\n};\n\nOperators['match'] = {\n  getReturnType: function (args) {\n    let type = ValueTypes.ANY;\n    for (let i = 2; i < args.length; i += 2) {\n      type = type & getValueType(args[i]);\n    }\n    type = type & getValueType(args[args.length - 1]);\n    return type;\n  },\n  toGlsl: function (context, args, expectedType) {\n    assertArgsEven(args);\n    assertArgsMinCount(args, 4);\n\n    let inputType = getValueType(args[0]);\n    for (let i = 1; i < args.length - 1; i += 2) {\n      inputType = inputType & getValueType(args[i]);\n    }\n    assertOfType(\n      ['match', ...args],\n      inputType,\n      ValueTypes.STRING | ValueTypes.NUMBER | ValueTypes.BOOLEAN,\n      'input'\n    );\n    inputType =\n      (ValueTypes.STRING | ValueTypes.NUMBER | ValueTypes.BOOLEAN) & inputType;\n\n    const outputType = Operators['match'].getReturnType(args) & expectedType;\n    assertSingleType(['match', ...args], outputType, 'output');\n\n    const input = expressionToGlsl(context, args[0], inputType);\n    const fallback = expressionToGlsl(\n      context,\n      args[args.length - 1],\n      outputType\n    );\n    let result = null;\n    for (let i = args.length - 3; i >= 1; i -= 2) {\n      const match = expressionToGlsl(context, args[i], inputType);\n      const output = expressionToGlsl(context, args[i + 1], outputType);\n      result = `(${input} == ${match} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  },\n};\n\nOperators['case'] = {\n  getReturnType: function (args) {\n    let type = ValueTypes.ANY;\n    for (let i = 1; i < args.length; i += 2) {\n      type = type & getValueType(args[i]);\n    }\n    type = type & getValueType(args[args.length - 1]);\n    return type;\n  },\n  toGlsl: function (context, args, expectedType) {\n    assertArgsOdd(args);\n    assertArgsMinCount(args, 3);\n\n    const outputType = Operators['case'].getReturnType(args) & expectedType;\n    assertSingleType(['case', ...args], outputType, 'output');\n    for (let i = 0; i < args.length - 1; i += 2) {\n      assertBoolean(args[i]);\n    }\n\n    const fallback = expressionToGlsl(\n      context,\n      args[args.length - 1],\n      outputType\n    );\n    let result = null;\n    for (let i = args.length - 3; i >= 0; i -= 2) {\n      const condition = expressionToGlsl(context, args[i], ValueTypes.BOOLEAN);\n      const output = expressionToGlsl(context, args[i + 1], outputType);\n      result = `(${condition} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  },\n};\n","/**\n * @module ol/style/flat\n */\n\nimport Circle from '../style/Circle.js';\nimport Fill from './Fill.js';\nimport Icon from './Icon.js';\nimport RegularShape from './RegularShape.js';\nimport Stroke from './Stroke.js';\nimport Style from './Style.js';\nimport Text from './Text.js';\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [stroke-color] The stroke color.\n * @property {number} [stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [stroke-line-dash] Line dash pattern.\n * @property {number} [stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [stroke-miter-limit=10] Miter limit.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {string|Array<string>} [text-value] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [text-font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./Text.js\").TextPlacement} [text-placement='point'] Text placement.\n * @property {number} [text-repeat] Repeat interval in pixels. When set, the text will be repeated at this interval. Only available when\n * `text-placement` is set to `'line'`. Overrides `text-align`.\n * @property {number|import(\"../size.js\").Size} [text-scale] Scale.\n * @property {boolean} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {number} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {CanvasTextAlign} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `text-placement: 'point'`. For `text-placement: 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {import('./Text.js').TextJustify} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `text-placement: 'line'`.\n * @property {CanvasTextBaseline} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {Array<number>} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-stroke-line-dash] Line dash pattern.\n * @property {number} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-stroke-width] Stroke pixel width.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-background-stroke-line-dash] Line dash pattern.\n * @property {number} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-background-stroke-width] Stroke pixel width.\n */\n\n/**\n * Icon style properties applied to point features.  One of `icon-src` or `icon-img` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {HTMLImageElement|HTMLCanvasElement} [icon-img] Image object for the icon. If the `icon-src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `icon-img-size` option.\n * @property {import(\"../size.js\").Size} [icon-img-size] Image size in pixels. Only required if `icon-img` is set and `icon-src` is not.\n * The provided size needs to match the actual size of the image.\n * @property {Array<number>} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [icon-opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [icon-scale=1] Scale.\n * @property {number} [icon-width] Width of the icon. If not specified, the actual image width will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-height] Height of the icon. If not specified, the actual image height will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-stroke-color] The stroke color.\n * @property {number} [shape-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [shape-stroke-line-dash] Line dash pattern.\n * @property {number} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [shape-displacement=[0,0]] Displacement of the shape\n * @property {number} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-stroke-color] The stroke color.\n * @property {number} [circle-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [circle-stroke-line-dash] Line dash pattern.\n * @property {number} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [circle-stroke-miter-limit=10] Miter limit.\n * @property {Array<number>} [circle-displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {number} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @return {import(\"./Style.js\").default} A style instance.\n */\nexport function toStyle(flatStyle) {\n  const style = new Style({\n    fill: getFill(flatStyle, ''),\n    stroke: getStroke(flatStyle, ''),\n    text: getText(flatStyle),\n    image: getImage(flatStyle),\n  });\n\n  return style;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Fill|undefined} The fill (if any).\n */\nfunction getFill(flatStyle, prefix) {\n  const color = flatStyle[prefix + 'fill-color'];\n  if (!color) {\n    return;\n  }\n\n  return new Fill({color: color});\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Stroke|undefined} The stroke (if any).\n */\nfunction getStroke(flatStyle, prefix) {\n  const width = flatStyle[prefix + 'stroke-width'];\n  const color = flatStyle[prefix + 'stroke-color'];\n  if (!width && !color) {\n    return;\n  }\n\n  return new Stroke({\n    width: width,\n    color: color,\n    lineCap: flatStyle[prefix + 'stroke-line-cap'],\n    lineJoin: flatStyle[prefix + 'stroke-line-join'],\n    lineDash: flatStyle[prefix + 'stroke-line-dash'],\n    lineDashOffset: flatStyle[prefix + 'stroke-line-dash-offset'],\n    miterLimit: flatStyle[prefix + 'stroke-miter-limit'],\n  });\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {Text|undefined} The text (if any).\n */\nfunction getText(flatStyle) {\n  const value = flatStyle['text-value'];\n  if (!value) {\n    return;\n  }\n\n  const text = new Text({\n    text: value,\n    font: flatStyle['text-font'],\n    maxAngle: flatStyle['text-max-angle'],\n    offsetX: flatStyle['text-offset-x'],\n    offsetY: flatStyle['text-offset-y'],\n    overflow: flatStyle['text-overflow'],\n    placement: flatStyle['text-placement'],\n    repeat: flatStyle['text-repeat'],\n    scale: flatStyle['text-scale'],\n    rotateWithView: flatStyle['text-rotate-with-view'],\n    rotation: flatStyle['text-rotation'],\n    textAlign: flatStyle['text-align'],\n    justify: flatStyle['text-justify'],\n    textBaseline: flatStyle['text-baseline'],\n    padding: flatStyle['text-padding'],\n    fill: getFill(flatStyle, 'text-'),\n    backgroundFill: getFill(flatStyle, 'text-background-'),\n    stroke: getStroke(flatStyle, 'text-'),\n    backgroundStroke: getStroke(flatStyle, 'text-background-'),\n  });\n\n  return text;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {import(\"./Image.js\").default|undefined} The image (if any).\n */\nfunction getImage(flatStyle) {\n  const iconSrc = flatStyle['icon-src'];\n  const iconImg = flatStyle['icon-img'];\n  if (iconSrc || iconImg) {\n    const icon = new Icon({\n      src: iconSrc,\n      img: iconImg,\n      imgSize: flatStyle['icon-img-size'],\n      anchor: flatStyle['icon-anchor'],\n      anchorOrigin: flatStyle['icon-anchor-origin'],\n      anchorXUnits: flatStyle['icon-anchor-x-units'],\n      anchorYUnits: flatStyle['icon-anchor-y-units'],\n      color: flatStyle['icon-color'],\n      crossOrigin: flatStyle['icon-cross-origin'],\n      offset: flatStyle['icon-offset'],\n      displacement: flatStyle['icon-displacement'],\n      opacity: flatStyle['icon-opacity'],\n      scale: flatStyle['icon-scale'],\n      width: flatStyle['icon-width'],\n      height: flatStyle['icon-height'],\n      rotation: flatStyle['icon-rotation'],\n      rotateWithView: flatStyle['icon-rotate-with-view'],\n      size: flatStyle['icon-size'],\n      declutterMode: flatStyle['icon-declutter-mode'],\n    });\n    return icon;\n  }\n\n  const shapePoints = flatStyle['shape-points'];\n  if (shapePoints) {\n    const prefix = 'shape-';\n    const shape = new RegularShape({\n      points: shapePoints,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      radius: flatStyle['shape-radius'],\n      radius1: flatStyle['shape-radius1'],\n      radius2: flatStyle['shape-radius2'],\n      angle: flatStyle['shape-angle'],\n      displacement: flatStyle['shape-displacement'],\n      rotation: flatStyle['shape-rotation'],\n      rotateWithView: flatStyle['shape-rotate-with-view'],\n      scale: flatStyle['shape-scale'],\n      declutterMode: flatStyle['shape-declutter-mode'],\n    });\n\n    return shape;\n  }\n\n  const circleRadius = flatStyle['circle-radius'];\n  if (circleRadius) {\n    const prefix = 'circle-';\n    const circle = new Circle({\n      radius: circleRadius,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      displacement: flatStyle['circle-displacement'],\n      scale: flatStyle['circle-scale'],\n      rotation: flatStyle['circle-rotation'],\n      rotateWithView: flatStyle['circle-rotate-with-view'],\n      declutterMode: flatStyle['circle-declutter-mode'],\n    });\n\n    return circle;\n  }\n\n  return;\n}\n","/**\n * @module ol/structs/LinkedList\n */\n\n/**\n * @typedef {Object} Item\n * @property {Item} [prev] Previous.\n * @property {Item} [next] Next.\n * @property {?} data Data.\n */\n\n/**\n * @classdesc\n * Creates an empty linked list structure.\n */\nclass LinkedList {\n  /**\n   * @param {boolean} [circular] The last item is connected to the first one,\n   * and the first item to the last one. Default is true.\n   */\n  constructor(circular) {\n    /**\n     * @private\n     * @type {Item|undefined}\n     */\n    this.first_;\n\n    /**\n     * @private\n     * @type {Item|undefined}\n     */\n    this.last_;\n\n    /**\n     * @private\n     * @type {Item|undefined}\n     */\n    this.head_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.circular_ = circular === undefined ? true : circular;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.length_ = 0;\n  }\n\n  /**\n   * Inserts an item into the linked list right after the current one.\n   *\n   * @param {?} data Item data.\n   */\n  insertItem(data) {\n    /** @type {Item} */\n    const item = {\n      prev: undefined,\n      next: undefined,\n      data: data,\n    };\n\n    const head = this.head_;\n\n    //Initialize the list.\n    if (!head) {\n      this.first_ = item;\n      this.last_ = item;\n      if (this.circular_) {\n        item.next = item;\n        item.prev = item;\n      }\n    } else {\n      //Link the new item to the adjacent ones.\n      const next = head.next;\n      item.prev = head;\n      item.next = next;\n      head.next = item;\n      if (next) {\n        next.prev = item;\n      }\n\n      if (head === this.last_) {\n        this.last_ = item;\n      }\n    }\n    this.head_ = item;\n    this.length_++;\n  }\n\n  /**\n   * Removes the current item from the list. Sets the cursor to the next item,\n   * if possible.\n   */\n  removeItem() {\n    const head = this.head_;\n    if (head) {\n      const next = head.next;\n      const prev = head.prev;\n      if (next) {\n        next.prev = prev;\n      }\n      if (prev) {\n        prev.next = next;\n      }\n      this.head_ = next || prev;\n\n      if (this.first_ === this.last_) {\n        this.head_ = undefined;\n        this.first_ = undefined;\n        this.last_ = undefined;\n      } else if (this.first_ === head) {\n        this.first_ = this.head_;\n      } else if (this.last_ === head) {\n        this.last_ = prev ? this.head_.prev : this.head_;\n      }\n      this.length_--;\n    }\n  }\n\n  /**\n   * Sets the cursor to the first item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  firstItem() {\n    this.head_ = this.first_;\n    if (this.head_) {\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the cursor to the last item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  lastItem() {\n    this.head_ = this.last_;\n    if (this.head_) {\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the cursor to the next item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  nextItem() {\n    if (this.head_ && this.head_.next) {\n      this.head_ = this.head_.next;\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the next item's data without moving the cursor.\n   *\n   * @return {?} Item data.\n   */\n  getNextItem() {\n    if (this.head_ && this.head_.next) {\n      return this.head_.next.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the cursor to the previous item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  prevItem() {\n    if (this.head_ && this.head_.prev) {\n      this.head_ = this.head_.prev;\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the previous item's data without moving the cursor.\n   *\n   * @return {?} Item data.\n   */\n  getPrevItem() {\n    if (this.head_ && this.head_.prev) {\n      return this.head_.prev.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the current item's data.\n   *\n   * @return {?} Item data.\n   */\n  getCurrItem() {\n    if (this.head_) {\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the first item of the list. This only works for circular lists, and sets\n   * the last item accordingly.\n   */\n  setFirstItem() {\n    if (this.circular_ && this.head_) {\n      this.first_ = this.head_;\n      this.last_ = this.head_.prev;\n    }\n  }\n\n  /**\n   * Concatenates two lists.\n   * @param {LinkedList} list List to merge into the current list.\n   */\n  concat(list) {\n    if (list.head_) {\n      if (this.head_) {\n        const end = this.head_.next;\n        this.head_.next = list.first_;\n        list.first_.prev = this.head_;\n        end.prev = list.last_;\n        list.last_.next = end;\n        this.length_ += list.length_;\n      } else {\n        this.head_ = list.head_;\n        this.first_ = list.first_;\n        this.last_ = list.last_;\n        this.length_ = list.length_;\n      }\n      list.head_ = undefined;\n      list.first_ = undefined;\n      list.last_ = undefined;\n      list.length_ = 0;\n    }\n  }\n\n  /**\n   * Returns the current length of the list.\n   *\n   * @return {number} Length.\n   */\n  getLength() {\n    return this.length_;\n  }\n}\n\nexport default LinkedList;\n","/**\n * @module ol/source/ogcTileUtil\n */\n\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport {getJSON, resolveUrl} from '../net.js';\nimport {get as getProjection} from '../proj.js';\nimport {getIntersection as intersectExtents} from '../extent.js';\n\n/**\n * See https://ogcapi.ogc.org/tiles/.\n */\n\n/**\n * @typedef {'map' | 'vector'} TileType\n */\n\n/**\n * @typedef {'topLeft' | 'bottomLeft'} CornerOfOrigin\n */\n\n/**\n * @typedef {Object} TileSet\n * @property {TileType} dataType Type of data represented in the tileset.\n * @property {string} [tileMatrixSetDefinition] Reference to a tile matrix set definition.\n * @property {TileMatrixSet} [tileMatrixSet] Tile matrix set definition.\n * @property {Array<TileMatrixSetLimit>} [tileMatrixSetLimits] Tile matrix set limits.\n * @property {Array<Link>} links Tileset links.\n */\n\n/**\n * @typedef {Object} Link\n * @property {string} rel The link rel attribute.\n * @property {string} href The link URL.\n * @property {string} type The link type.\n */\n\n/**\n * @typedef {Object} TileMatrixSetLimit\n * @property {string} tileMatrix The tile matrix id.\n * @property {number} minTileRow The minimum tile row.\n * @property {number} maxTileRow The maximum tile row.\n * @property {number} minTileCol The minimum tile column.\n * @property {number} maxTileCol The maximum tile column.\n */\n\n/**\n * @typedef {Object} TileMatrixSet\n * @property {string} id The tile matrix set identifier.\n * @property {string} crs The coordinate reference system.\n * @property {Array<TileMatrix>} tileMatrices Array of tile matrices.\n */\n\n/**\n * @typedef {Object} TileMatrix\n * @property {string} id The tile matrix identifier.\n * @property {number} cellSize The pixel resolution (map units per pixel).\n * @property {Array<number>} pointOfOrigin The map location of the matrix origin.\n * @property {CornerOfOrigin} [cornerOfOrigin='topLeft'] The corner of the matrix that represents the origin ('topLeft' or 'bottomLeft').\n * @property {number} matrixWidth The number of columns.\n * @property {number} matrixHeight The number of rows.\n * @property {number} tileWidth The pixel width of a tile.\n * @property {number} tileHeight The pixel height of a tile.\n */\n\n/**\n * @type {Object<string, boolean>}\n */\nconst knownMapMediaTypes = {\n  'image/png': true,\n  'image/jpeg': true,\n  'image/gif': true,\n  'image/webp': true,\n};\n\n/**\n * @type {Object<string, boolean>}\n */\nconst knownVectorMediaTypes = {\n  'application/vnd.mapbox-vector-tile': true,\n  'application/geo+json': true,\n};\n\n/**\n * @typedef {Object} TileSetInfo\n * @property {string} urlTemplate The tile URL template.\n * @property {import(\"../tilegrid/TileGrid.js\").default} grid The tile grid.\n * @property {import(\"../Tile.js\").UrlFunction} urlFunction The tile URL function.\n */\n\n/**\n * @typedef {Object} SourceInfo\n * @property {string} url The tile set URL.\n * @property {string} mediaType The preferred tile media type.\n * @property {Array<string>} [supportedMediaTypes] The supported media types.\n * @property {import(\"../proj/Projection.js\").default} projection The source projection.\n * @property {Object} [context] Optional context for constructing the URL.\n */\n\n/**\n * @param {Array<Link>} links Tileset links.\n * @param {string} [mediaType] The preferred media type.\n * @return {string} The tile URL template.\n */\nexport function getMapTileUrlTemplate(links, mediaType) {\n  let tileUrlTemplate;\n  let fallbackUrlTemplate;\n  for (let i = 0; i < links.length; ++i) {\n    const link = links[i];\n    if (link.rel === 'item') {\n      if (link.type === mediaType) {\n        tileUrlTemplate = link.href;\n        break;\n      }\n      if (knownMapMediaTypes[link.type]) {\n        fallbackUrlTemplate = link.href;\n      } else if (!fallbackUrlTemplate && link.type.startsWith('image/')) {\n        fallbackUrlTemplate = link.href;\n      }\n    }\n  }\n\n  if (!tileUrlTemplate) {\n    if (fallbackUrlTemplate) {\n      tileUrlTemplate = fallbackUrlTemplate;\n    } else {\n      throw new Error('Could not find \"item\" link');\n    }\n  }\n\n  return tileUrlTemplate;\n}\n\n/**\n * @param {Array<Link>} links Tileset links.\n * @param {string} [mediaType] The preferred media type.\n * @param {Array<string>} [supportedMediaTypes] The media types supported by the parser.\n * @return {string} The tile URL template.\n */\nexport function getVectorTileUrlTemplate(\n  links,\n  mediaType,\n  supportedMediaTypes\n) {\n  let tileUrlTemplate;\n  let fallbackUrlTemplate;\n\n  /**\n   * Lookup of URL by media type.\n   * @type {Object<string, string>}\n   */\n  const hrefLookup = {};\n\n  for (let i = 0; i < links.length; ++i) {\n    const link = links[i];\n    hrefLookup[link.type] = link.href;\n    if (link.rel === 'item') {\n      if (link.type === mediaType) {\n        tileUrlTemplate = link.href;\n        break;\n      }\n      if (knownVectorMediaTypes[link.type]) {\n        fallbackUrlTemplate = link.href;\n      }\n    }\n  }\n\n  if (!tileUrlTemplate && supportedMediaTypes) {\n    for (let i = 0; i < supportedMediaTypes.length; ++i) {\n      const supportedMediaType = supportedMediaTypes[i];\n      if (hrefLookup[supportedMediaType]) {\n        tileUrlTemplate = hrefLookup[supportedMediaType];\n        break;\n      }\n    }\n  }\n\n  if (!tileUrlTemplate) {\n    if (fallbackUrlTemplate) {\n      tileUrlTemplate = fallbackUrlTemplate;\n    } else {\n      throw new Error('Could not find \"item\" link');\n    }\n  }\n\n  return tileUrlTemplate;\n}\n\n/**\n * @param {SourceInfo} sourceInfo The source info.\n * @param {TileMatrixSet} tileMatrixSet Tile matrix set.\n * @param {string} tileUrlTemplate Tile URL template.\n * @param {Array<TileMatrixSetLimit>} [tileMatrixSetLimits] Tile matrix set limits.\n * @return {TileSetInfo} Tile set info.\n */\nfunction parseTileMatrixSet(\n  sourceInfo,\n  tileMatrixSet,\n  tileUrlTemplate,\n  tileMatrixSetLimits\n) {\n  let projection = sourceInfo.projection;\n  if (!projection) {\n    projection = getProjection(tileMatrixSet.crs);\n    if (!projection) {\n      throw new Error(`Unsupported CRS: ${tileMatrixSet.crs}`);\n    }\n  }\n  const backwards = projection.getAxisOrientation().substr(0, 2) !== 'en';\n\n  const matrices = tileMatrixSet.tileMatrices;\n\n  /**\n   * @type {Object<string, TileMatrix>}\n   */\n  const matrixLookup = {};\n  for (let i = 0; i < matrices.length; ++i) {\n    const matrix = matrices[i];\n    matrixLookup[matrix.id] = matrix;\n  }\n\n  /**\n   * @type {Object<string, TileMatrixSetLimit>}\n   */\n  const limitLookup = {};\n\n  /**\n   * @type {Array<string>}\n   */\n  const matrixIds = [];\n\n  if (tileMatrixSetLimits) {\n    for (let i = 0; i < tileMatrixSetLimits.length; ++i) {\n      const limit = tileMatrixSetLimits[i];\n      const id = limit.tileMatrix;\n      matrixIds.push(id);\n      limitLookup[id] = limit;\n    }\n  } else {\n    for (let i = 0; i < matrices.length; ++i) {\n      const id = matrices[i].id;\n      matrixIds.push(id);\n    }\n  }\n\n  const length = matrixIds.length;\n  const origins = new Array(length);\n  const resolutions = new Array(length);\n  const sizes = new Array(length);\n  const tileSizes = new Array(length);\n  const extent = [-Infinity, -Infinity, Infinity, Infinity];\n\n  for (let i = 0; i < length; ++i) {\n    const id = matrixIds[i];\n    const matrix = matrixLookup[id];\n    const origin = matrix.pointOfOrigin;\n    if (backwards) {\n      origins[i] = [origin[1], origin[0]];\n    } else {\n      origins[i] = origin;\n    }\n    resolutions[i] = matrix.cellSize;\n    sizes[i] = [matrix.matrixWidth, matrix.matrixHeight];\n    tileSizes[i] = [matrix.tileWidth, matrix.tileHeight];\n    const limit = limitLookup[id];\n    if (limit) {\n      const tileMapWidth = matrix.cellSize * matrix.tileWidth;\n      const minX = origins[i][0] + limit.minTileCol * tileMapWidth;\n      const maxX = origins[i][0] + (limit.maxTileCol + 1) * tileMapWidth;\n\n      const tileMapHeight = matrix.cellSize * matrix.tileHeight;\n      const upsideDown = matrix.cornerOfOrigin === 'bottomLeft';\n\n      let minY;\n      let maxY;\n      if (upsideDown) {\n        minY = origins[i][1] + limit.minTileRow * tileMapHeight;\n        maxY = origins[i][1] + (limit.maxTileRow + 1) * tileMapHeight;\n      } else {\n        minY = origins[i][1] - (limit.maxTileRow + 1) * tileMapHeight;\n        maxY = origins[i][1] - limit.minTileRow * tileMapHeight;\n      }\n\n      intersectExtents(extent, [minX, minY, maxX, maxY], extent);\n    }\n  }\n\n  const tileGrid = new TileGrid({\n    origins: origins,\n    resolutions: resolutions,\n    sizes: sizes,\n    tileSizes: tileSizes,\n    extent: tileMatrixSetLimits ? extent : undefined,\n  });\n\n  const context = sourceInfo.context;\n  const base = sourceInfo.url;\n\n  function tileUrlFunction(tileCoord, pixelRatio, projection) {\n    if (!tileCoord) {\n      return undefined;\n    }\n\n    const id = matrixIds[tileCoord[0]];\n    const matrix = matrixLookup[id];\n    const upsideDown = matrix.cornerOfOrigin === 'bottomLeft';\n\n    const localContext = {\n      tileMatrix: id,\n      tileCol: tileCoord[1],\n      tileRow: upsideDown ? -tileCoord[2] - 1 : tileCoord[2],\n    };\n\n    if (tileMatrixSetLimits) {\n      const limit = limitLookup[matrix.id];\n      if (\n        localContext.tileCol < limit.minTileCol ||\n        localContext.tileCol > limit.maxTileCol ||\n        localContext.tileRow < limit.minTileRow ||\n        localContext.tileRow > limit.maxTileRow\n      ) {\n        return undefined;\n      }\n    }\n\n    Object.assign(localContext, context);\n\n    const url = tileUrlTemplate.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n      return localContext[p];\n    });\n\n    return resolveUrl(base, url);\n  }\n\n  return {\n    grid: tileGrid,\n    urlTemplate: tileUrlTemplate,\n    urlFunction: tileUrlFunction,\n  };\n}\n\n/**\n * @param {SourceInfo} sourceInfo The source info.\n * @param {TileSet} tileSet Tile set.\n * @return {TileSetInfo|Promise<TileSetInfo>} Tile set info.\n */\nfunction parseTileSetMetadata(sourceInfo, tileSet) {\n  const tileMatrixSetLimits = tileSet.tileMatrixSetLimits;\n  let tileUrlTemplate;\n\n  if (tileSet.dataType === 'map') {\n    tileUrlTemplate = getMapTileUrlTemplate(\n      tileSet.links,\n      sourceInfo.mediaType\n    );\n  } else if (tileSet.dataType === 'vector') {\n    tileUrlTemplate = getVectorTileUrlTemplate(\n      tileSet.links,\n      sourceInfo.mediaType,\n      sourceInfo.supportedMediaTypes\n    );\n  } else {\n    throw new Error('Expected tileset data type to be \"map\" or \"vector\"');\n  }\n\n  if (tileSet.tileMatrixSet) {\n    return parseTileMatrixSet(\n      sourceInfo,\n      tileSet.tileMatrixSet,\n      tileUrlTemplate,\n      tileMatrixSetLimits\n    );\n  }\n\n  const tileMatrixSetLink = tileSet.links.find(\n    (link) =>\n      link.rel === 'http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme'\n  );\n  if (!tileMatrixSetLink) {\n    throw new Error(\n      'Expected http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme link or tileMatrixSet'\n    );\n  }\n  const tileMatrixSetDefinition = tileMatrixSetLink.href;\n\n  const url = resolveUrl(sourceInfo.url, tileMatrixSetDefinition);\n  return getJSON(url).then(function (tileMatrixSet) {\n    return parseTileMatrixSet(\n      sourceInfo,\n      tileMatrixSet,\n      tileUrlTemplate,\n      tileMatrixSetLimits\n    );\n  });\n}\n\n/**\n * @param {SourceInfo} sourceInfo Source info.\n * @return {Promise<TileSetInfo>} Tile set info.\n */\nexport function getTileSetInfo(sourceInfo) {\n  return getJSON(sourceInfo.url).then(function (tileSet) {\n    return parseTileSetMetadata(sourceInfo, tileSet);\n  });\n}\n","/**\n * @module ol/source/OGCMapTile\n */\nimport TileImage from './TileImage.js';\nimport {getTileSetInfo} from './ogcTileUtil.js';\nimport {error as logError} from '../console.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} url URL to the OGC Map Tileset endpoint.\n * @property {Object} [context] A lookup of values to use in the tile URL template.  The `{tileMatrix}`\n * (zoom level), `{tileRow}`, and `{tileCol}` variables in the URL will always be provided by the source.\n * @property {string} [mediaType] The content type for the tiles (e.g. \"image/png\").  If not provided,\n * the source will try to find a link with rel=\"item\" that uses a supported image type.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. By default, the projection\n * will be derived from the `crs` of the `tileMatrixSet`.  You can override this by supplying\n * a projection to the constructor.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will be ignored if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(tile, src) {\n *   tile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n/**\n * @classdesc\n * Layer source for map tiles from an [OGC API - Tiles](https://ogcapi.ogc.org/tiles/) service that provides \"map\" type tiles.\n * The service must conform to at least the core (http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/core)\n * and tileset (http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/tileset) conformance classes.\n * @api\n */\nclass OGCMapTile extends TileImage {\n  /**\n   * @param {Options} options OGC map tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n    });\n\n    const sourceInfo = {\n      url: options.url,\n      projection: this.getProjection(),\n      mediaType: options.mediaType,\n      context: options.context || null,\n    };\n\n    getTileSetInfo(sourceInfo)\n      .then(this.handleTileSetInfo_.bind(this))\n      .catch(this.handleError_.bind(this));\n  }\n\n  /**\n   * @param {import(\"./ogcTileUtil.js\").TileSetInfo} tileSetInfo Tile set info.\n   * @private\n   */\n  handleTileSetInfo_(tileSetInfo) {\n    this.tileGrid = tileSetInfo.grid;\n    this.setTileUrlFunction(tileSetInfo.urlFunction, tileSetInfo.urlTemplate);\n    this.setState('ready');\n  }\n\n  /**\n   * @private\n   * @param {Error} error The error.\n   */\n  handleError_(error) {\n    logError(error);\n    this.setState('error');\n  }\n}\n\nexport default OGCMapTile;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/renderer/canvas/VectorImageLayer\n */\nimport CanvasImageLayerRenderer from './ImageLayer.js';\nimport CanvasVectorLayerRenderer from './VectorLayer.js';\nimport EventType from '../../events/EventType.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport ImageState from '../../ImageState.js';\nimport RBush from 'rbush';\nimport ViewHint from '../../ViewHint.js';\nimport {apply, compose, create} from '../../transform.js';\nimport {getHeight, getWidth, isEmpty, scaleFromCenter} from '../../extent.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasVectorImageLayerRenderer extends CanvasImageLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorImage.js\").default} layer Vector image layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = new CanvasVectorLayerRenderer(layer);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.layerImageRatio_ = layer.getImageRatio();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToVectorPixelTransform_ = create();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.vectorRenderer_.dispose();\n    super.disposeInternal();\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.vectorRenderer_) {\n      return Promise.resolve([]);\n    }\n    const vectorPixel = apply(\n      this.coordinateToVectorPixelTransform_,\n      apply(this.renderedPixelToCoordinateTransform_, pixel.slice())\n    );\n    return this.vectorRenderer_.getFeatures(vectorPixel);\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    this.vectorRenderer_.handleFontsChanged();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const hints = frameState.viewHints;\n    const vectorRenderer = this.vectorRenderer_;\n    let renderedExtent = frameState.extent;\n    if (this.layerImageRatio_ !== 1) {\n      renderedExtent = renderedExtent.slice(0);\n      scaleFromCenter(renderedExtent, this.layerImageRatio_);\n    }\n    const width = getWidth(renderedExtent) / viewResolution;\n    const height = getHeight(renderedExtent) / viewResolution;\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      vectorRenderer.useContainer(null, null);\n      const context = vectorRenderer.context;\n      const layerState = frameState.layerStatesArray[frameState.layerIndex];\n      context.globalAlpha = layerState.opacity;\n      const imageLayerState = Object.assign({}, layerState, {opacity: 1});\n      const imageFrameState = /** @type {import(\"../../Map.js\").FrameState} */ (\n        Object.assign({}, frameState, {\n          declutterTree: new RBush(9),\n          extent: renderedExtent,\n          size: [width, height],\n          viewState: /** @type {import(\"../../View.js\").State} */ (\n            Object.assign({}, frameState.viewState, {\n              rotation: 0,\n            })\n          ),\n          layerStatesArray: [imageLayerState],\n          layerIndex: 0,\n        })\n      );\n      let emptyImage = true;\n      const image = new ImageCanvas(\n        renderedExtent,\n        viewResolution,\n        pixelRatio,\n        context.canvas,\n        function (callback) {\n          if (\n            vectorRenderer.prepareFrame(imageFrameState) &&\n            vectorRenderer.replayGroupChanged\n          ) {\n            vectorRenderer.clipping = false;\n            if (vectorRenderer.renderFrame(imageFrameState, null)) {\n              vectorRenderer.renderDeclutter(imageFrameState);\n              emptyImage = false;\n            }\n            callback();\n          }\n        }\n      );\n\n      image.addEventListener(EventType.CHANGE, () => {\n        if (image.getState() !== ImageState.LOADED) {\n          return;\n        }\n        this.image_ = emptyImage ? null : image;\n        const imageResolution = image.getResolution();\n        const imagePixelRatio = image.getPixelRatio();\n        const renderedResolution =\n          (imageResolution * pixelRatio) / imagePixelRatio;\n        this.renderedResolution = renderedResolution;\n        this.coordinateToVectorPixelTransform_ = compose(\n          this.coordinateToVectorPixelTransform_,\n          width / 2,\n          height / 2,\n          1 / renderedResolution,\n          -1 / renderedResolution,\n          0,\n          -viewState.center[0],\n          -viewState.center[1]\n        );\n      });\n      image.load();\n    }\n\n    if (this.image_) {\n      this.renderedPixelToCoordinateTransform_ =\n        frameState.pixelToCoordinateTransform.slice();\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   */\n  preRender() {}\n\n  /**\n   */\n  postRender() {}\n\n  /**\n   */\n  renderDeclutter() {}\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(\n        coordinate,\n        frameState,\n        hitTolerance,\n        callback,\n        matches\n      );\n    }\n    return super.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      callback,\n      matches\n    );\n  }\n}\n\nexport default CanvasVectorImageLayerRenderer;\n","/**\n * @module ol/geom/Circle\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `layout` and no\n   *     `radius` are also accepted.\n   * @param {number} [radius] Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(center, radius, layout) {\n    super();\n    if (layout !== undefined && radius === undefined) {\n      this.setFlatCoordinates(layout, center);\n    } else {\n      radius = radius ? radius : 0;\n      this.setCenterAndRadius(center, radius, layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Circle';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, layout) {\n    this.setLayout(layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  getCoordinates() {\n    return null;\n  }\n\n  setCoordinates(coordinates, layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center)\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [geometries] Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries ? geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      let thisLayout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          thisLayout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout = thisLayout;\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|Array<Array<number>>}\n     */\n    this.ends_ = ends;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<number>} */ (this.ends_),\n        2,\n        flatCenter,\n        0\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2,\n        flatCenters\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return 2;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {import(\"../geom/Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_\n      );\n    }\n  }\n  /**\n   * @return {Array<number>|Array<Array<number>>} Ends or endss.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n}\n\nRenderFeature.prototype.getEndss = RenderFeature.prototype.getEnds;\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds())\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = /** @type {Array<number>} */ (renderFeature.getEnds());\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/proj/proj4\n */\nimport Projection from './Projection.js';\nimport {\n  addCoordinateTransforms,\n  addEquivalentProjections,\n  addProjection,\n  createSafeCoordinateTransform,\n  get,\n} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\n\n/**\n * @type {import(\"proj4\")|null}\n */\nlet registered = null;\n\n/**\n * @return {boolean} Proj4 has been registered.\n */\nexport function isRegistered() {\n  return !!registered;\n}\n\n/**\n * Unsets the shared proj4 previously set with register.\n */\nexport function unregister() {\n  registered = null;\n}\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers. Requires proj4 >= 2.8.0.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {import(\"proj4\")} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  registered = proj4;\n\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      let units = /** @type {import(\"./Units.js\").Units} */ (def.units);\n      if (!units && def.projName === 'longlat') {\n        units = 'degrees';\n      }\n      addProjection(\n        new Projection({\n          code: code,\n          axisOrientation: def.axis,\n          metersPerUnit: def.to_meter,\n          units,\n        })\n      );\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(\n            proj1,\n            proj2,\n            createSafeCoordinateTransform(proj1, proj2, transform.forward),\n            createSafeCoordinateTransform(proj2, proj1, transform.inverse)\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {number} code The EPSG code.\n * @return {Promise<string>} The proj4 definition.\n */\nlet epsgLookup = async function (code) {\n  const response = await fetch(`https://epsg.io/${code}.proj4`);\n  if (!response.ok) {\n    throw new Error(`Unexpected response from epsg.io: ${response.status}`);\n  }\n  return response.text();\n};\n\n/**\n * Set the lookup function for getting proj4 definitions given an EPSG code.\n * By default, the {@link module:ol/proj/proj4.fromEPSGCode} function uses the\n * epsg.io website for proj4 definitions.  This can be changed by providing a\n * different lookup function.\n *\n * @param {function(number):Promise<string>} func The lookup function.\n * @api\n */\nexport function setEPSGLookup(func) {\n  epsgLookup = func;\n}\n\n/**\n * Get the current EPSG lookup function.\n *\n * @return {function(number):Promise<string>} The EPSG lookup function.\n */\nexport function getEPSGLookup() {\n  return epsgLookup;\n}\n\n/**\n * Get a projection from an EPSG code.  This function fetches the projection\n * definition from the epsg.io website, registers this definition for use with\n * proj4, and returns a configured projection.  You must call import proj4 and\n * call {@link module:ol/proj/proj4.register} before using this function.\n *\n * If the projection definition is already registered with proj4, it will not\n * be fetched again (so it is ok to call this function multiple times with the\n * same code).\n *\n * @param {number|string} code The EPSG code (e.g. 4326 or 'EPSG:4326').\n * @return {Promise<Projection>} The projection.\n * @api\n */\nexport async function fromEPSGCode(code) {\n  if (typeof code === 'string') {\n    code = parseInt(code.split(':').pop(), 10);\n  }\n\n  const proj4 = registered;\n  if (!proj4) {\n    throw new Error('Proj4 must be registered first with register(proj4)');\n  }\n\n  const epsgCode = 'EPSG:' + code;\n  if (proj4.defs(epsgCode)) {\n    return get(epsgCode);\n  }\n\n  proj4.defs(epsgCode, await epsgLookup(code));\n  register(proj4);\n\n  return get(epsgCode);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {toStyle} from '../style/flat.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleLike|null}\n     */\n    let styleLike;\n\n    if (style === undefined) {\n      styleLike = createDefaultStyle;\n    } else if (style === null) {\n      styleLike = null;\n    } else if (typeof style === 'function') {\n      styleLike = style;\n    } else if (style instanceof Style) {\n      styleLike = style;\n    } else if (Array.isArray(style)) {\n      const len = style.length;\n\n      /**\n       * @type {Array<Style>}\n       */\n      const styles = new Array(len);\n\n      for (let i = 0; i < len; ++i) {\n        const s = style[i];\n        if (s instanceof Style) {\n          styles[i] = s;\n        } else {\n          styles[i] = toStyle(s);\n        }\n      }\n      styleLike = styles;\n    } else {\n      styleLike = toStyle(style);\n    }\n\n    this.style_ = styleLike;\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/geom/flat/geodesic\n */\nimport {get as getProjection, getTransform} from '../../proj.js';\nimport {squaredSegmentDistance, toDegrees, toRadians} from '../../math.js';\n\n/**\n * @param {function(number): import(\"../../coordinate.js\").Coordinate} interpolate Interpolate function.\n * @param {import(\"../../proj.js\").TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n  // FIXME reduce garbage generation\n  // FIXME optimize stack operations\n\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n\n  let geoA = interpolate(0);\n  let geoB = interpolate(1);\n\n  let a = transform(geoA);\n  let b = transform(geoB);\n\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const geoStack = [geoB, geoA];\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const stack = [b, a];\n  /** @type {Array<number>} */\n  const fractionStack = [1, 0];\n\n  /** @type {!Object<string, boolean>} */\n  const fractions = {};\n\n  let maxIterations = 1e5;\n  let geoM, m, fracA, fracB, fracM, key;\n\n  while (--maxIterations > 0 && fractionStack.length > 0) {\n    // Pop the a coordinate off the stack\n    fracA = fractionStack.pop();\n    geoA = geoStack.pop();\n    a = stack.pop();\n    // Add the a coordinate if it has not been added yet\n    key = fracA.toString();\n    if (!(key in fractions)) {\n      flatCoordinates.push(a[0], a[1]);\n      fractions[key] = true;\n    }\n    // Pop the b coordinate off the stack\n    fracB = fractionStack.pop();\n    geoB = geoStack.pop();\n    b = stack.pop();\n    // Find the m point between the a and b coordinates\n    fracM = (fracA + fracB) / 2;\n    geoM = interpolate(fracM);\n    m = transform(geoM);\n    if (\n      squaredSegmentDistance(m[0], m[1], a[0], a[1], b[0], b[1]) <\n      squaredTolerance\n    ) {\n      // If the m point is sufficiently close to the straight line, then we\n      // discard it.  Just use the b coordinate and move on to the next line\n      // segment.\n      flatCoordinates.push(b[0], b[1]);\n      key = fracB.toString();\n      fractions[key] = true;\n    } else {\n      // Otherwise, we need to subdivide the current line segment.  Split it\n      // into two and push the two line segments onto the stack.\n      fractionStack.push(fracB, fracM, fracM, fracA);\n      stack.push(b, m, m, a);\n      geoStack.push(geoB, geoM, geoM, geoA);\n    }\n  }\n\n  return flatCoordinates;\n}\n\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function greatCircleArc(\n  lon1,\n  lat1,\n  lon2,\n  lat2,\n  projection,\n  squaredTolerance\n) {\n  const geoProjection = getProjection('EPSG:4326');\n\n  const cosLat1 = Math.cos(toRadians(lat1));\n  const sinLat1 = Math.sin(toRadians(lat1));\n  const cosLat2 = Math.cos(toRadians(lat2));\n  const sinLat2 = Math.sin(toRadians(lat2));\n  const cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n  const sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n  const d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      if (1 <= d) {\n        return [lon2, lat2];\n      }\n      const D = frac * Math.acos(d);\n      const cosD = Math.cos(D);\n      const sinD = Math.sin(D);\n      const y = sinDeltaLon * cosLat2;\n      const x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n      const theta = Math.atan2(y, x);\n      const lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n      const lon =\n        toRadians(lon1) +\n        Math.atan2(\n          Math.sin(theta) * sinD * cosLat1,\n          cosD - sinLat1 * Math.sin(lat)\n        );\n      return [toDegrees(lon), toDegrees(lat)];\n    },\n    getTransform(geoProjection, projection),\n    squaredTolerance\n  );\n}\n\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon, lat1 + (lat2 - lat1) * frac];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance\n  );\n}\n\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon1 + (lon2 - lon1) * frac, lat];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance\n  );\n}\n","/**\n * @module ol/layer/Graticule\n */\nimport Collection from '../Collection.js';\nimport EventType from '../render/EventType.js';\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport VectorLayer from './Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  applyTransform,\n  approximatelyEquals,\n  containsCoordinate,\n  containsExtent,\n  equals,\n  getCenter,\n  getIntersection,\n  getWidth,\n  intersects,\n  isEmpty,\n  wrapX as wrapExtentX,\n} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {degreesToStringHDMS} from '../coordinate.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n} from '../proj.js';\nimport {getVectorContext} from '../render.js';\nimport {meridian, parallel} from '../geom/flat/geodesic.js';\n\n/**\n * @type {Stroke}\n * @private\n * @const\n */\nconst DEFAULT_STROKE_STYLE = new Stroke({\n  color: 'rgba(0,0,0,0.2)',\n});\n\n/**\n * @type {Array<number>}\n * @private\n */\nconst INTERVALS = [\n  90,\n  45,\n  30,\n  20,\n  10,\n  5,\n  2,\n  1,\n  30 / 60,\n  20 / 60,\n  10 / 60,\n  5 / 60,\n  2 / 60,\n  1 / 60,\n  30 / 3600,\n  20 / 3600,\n  10 / 3600,\n  5 / 3600,\n  2 / 3600,\n  1 / 3600,\n];\n\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {Point} geom Geometry.\n * @property {string} text Text.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {Stroke} [strokeStyle] The\n * stroke style to use for drawing the graticule. If not provided, the following stroke will be used:\n * ```js\n * new Stroke({\n *   color: 'rgba(0, 0, 0, 0.2)' // a not fully opaque black\n * });\n * ```\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n * @property {Array<number>} [intervals=[90, 45, 30, 20, 10, 5, 2, 1, 30/60, 20/60, 10/60, 5/60, 2/60, 1/60, 30/3600, 20/3600, 10/3600, 5/3600, 2/3600, 1/3600]]\n * Intervals (in degrees) for the graticule. Example to limit graticules to 30 and 10 degrees intervals:\n * ```js\n * [30, 10]\n * ```\n * @property {boolean} [wrapX=true] Whether to repeat the graticule horizontally.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer that renders a grid for a coordinate system (currently only EPSG:4326 is supported).\n * Note that the view projection must define both extent and worldExtent.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {VectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nclass Graticule extends VectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign(\n      {\n        updateWhileAnimating: true,\n        updateWhileInteracting: true,\n        renderBuffer: 0,\n      },\n      options\n    );\n\n    delete baseOptions.maxLines;\n    delete baseOptions.strokeStyle;\n    delete baseOptions.targetSize;\n    delete baseOptions.showLabels;\n    delete baseOptions.lonLabelFormatter;\n    delete baseOptions.latLabelFormatter;\n    delete baseOptions.lonLabelPosition;\n    delete baseOptions.latLabelPosition;\n    delete baseOptions.lonLabelStyle;\n    delete baseOptions.latLabelStyle;\n    delete baseOptions.intervals;\n    super(baseOptions);\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLat_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLon_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLat_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLon_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxX_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxY_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minX_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minY_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.targetSize_ =\n      options.targetSize !== undefined ? options.targetSize : 100;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.meridians_ = [];\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.parallels_ = [];\n\n    /**\n     * @type {Stroke}\n     * @private\n     */\n    this.strokeStyle_ =\n      options.strokeStyle !== undefined\n        ? options.strokeStyle\n        : DEFAULT_STROKE_STYLE;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.fromLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.toLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.projectionCenterLonLat_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomRight_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topRight_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.meridiansLabels_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.parallelsLabels_ = null;\n\n    if (options.showLabels) {\n      /**\n       * @type {null|function(number):string}\n       * @private\n       */\n      this.lonLabelFormatter_ =\n        options.lonLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'EW')\n          : options.lonLabelFormatter;\n\n      /**\n       * @type {function(number):string}\n       * @private\n       */\n      this.latLabelFormatter_ =\n        options.latLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'NS')\n          : options.latLabelFormatter;\n\n      /**\n       * Longitude label position in fractions (0..1) of view extent. 0 means\n       * bottom, 1 means top.\n       * @type {number}\n       * @private\n       */\n      this.lonLabelPosition_ =\n        options.lonLabelPosition == undefined ? 0 : options.lonLabelPosition;\n\n      /**\n       * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n       * means right.\n       * @type {number}\n       * @private\n       */\n      this.latLabelPosition_ =\n        options.latLabelPosition == undefined ? 1 : options.latLabelPosition;\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.lonLabelStyleBase_ = new Style({\n        text:\n          options.lonLabelStyle !== undefined\n            ? options.lonLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textBaseline: 'bottom',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.lonLabelStyle_ = (feature) => {\n        const label = feature.get('graticule_label');\n        this.lonLabelStyleBase_.getText().setText(label);\n        return this.lonLabelStyleBase_;\n      };\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.latLabelStyleBase_ = new Style({\n        text:\n          options.latLabelStyle !== undefined\n            ? options.latLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textAlign: 'right',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.latLabelStyle_ = (feature) => {\n        const label = feature.get('graticule_label');\n        this.latLabelStyleBase_.getText().setText(label);\n        return this.latLabelStyleBase_;\n      };\n\n      this.meridiansLabels_ = [];\n      this.parallelsLabels_ = [];\n\n      this.addEventListener(EventType.POSTRENDER, this.drawLabels_.bind(this));\n    }\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.intervals_ =\n      options.intervals !== undefined ? options.intervals : INTERVALS;\n\n    // use a source with a custom loader for lines & text\n    this.setSource(\n      new VectorSource({\n        loader: this.loaderFunction.bind(this),\n        strategy: this.strategyFunction.bind(this),\n        features: new Collection(),\n        overlaps: false,\n        useSpatialIndex: false,\n        wrapX: options.wrapX,\n      })\n    );\n\n    /**\n     * feature pool to use when updating graticule\n     * @type {Array<Feature>}\n     * @private\n     */\n    this.featurePool_ = [];\n\n    /**\n     * @type {Style}\n     * @private\n     */\n    this.lineStyle_ = new Style({\n      stroke: this.strokeStyle_,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.loadedExtent_ = null;\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.renderedResolution_ = null;\n\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Strategy function for loading features based on the view's extent and\n   * resolution.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @return {Array<import(\"../extent.js\").Extent>} Extents.\n   */\n  strategyFunction(extent, resolution) {\n    // extents may be passed in different worlds, to avoid endless loop we use only one\n    let realWorldExtent = extent.slice();\n    if (this.projection_ && this.getSource().getWrapX()) {\n      wrapExtentX(realWorldExtent, this.projection_);\n    }\n    if (this.loadedExtent_) {\n      if (\n        approximatelyEquals(this.loadedExtent_, realWorldExtent, resolution)\n      ) {\n        // make sure result is exactly equal to previous extent\n        realWorldExtent = this.loadedExtent_.slice();\n      } else {\n        // we should not keep track of loaded extents\n        this.getSource().removeLoadedExtent(this.loadedExtent_);\n      }\n    }\n    return [realWorldExtent];\n  }\n\n  /**\n   * Update geometries in the source based on current view\n   * @param {import(\"../extent\").Extent} extent Extent\n   * @param {number} resolution Resolution\n   * @param {import(\"../proj/Projection.js\").default} projection Projection\n   */\n  loaderFunction(extent, resolution, projection) {\n    this.loadedExtent_ = extent;\n    const source = this.getSource();\n\n    // only consider the intersection between our own extent & the requested one\n    const layerExtent = this.getExtent() || [\n      -Infinity,\n      -Infinity,\n      Infinity,\n      Infinity,\n    ];\n    const renderExtent = getIntersection(layerExtent, extent);\n\n    if (\n      this.renderedExtent_ &&\n      equals(this.renderedExtent_, renderExtent) &&\n      this.renderedResolution_ === resolution\n    ) {\n      return;\n    }\n    this.renderedExtent_ = renderExtent;\n    this.renderedResolution_ = resolution;\n\n    // bail out if nothing to render\n    if (isEmpty(renderExtent)) {\n      return;\n    }\n\n    // update projection info\n    const center = getCenter(renderExtent);\n    const squaredTolerance = (resolution * resolution) / 4;\n\n    const updateProjectionInfo =\n      !this.projection_ || !equivalentProjection(this.projection_, projection);\n\n    if (updateProjectionInfo) {\n      this.updateProjectionInfo_(projection);\n    }\n\n    this.createGraticule_(renderExtent, center, resolution, squaredTolerance);\n\n    // first make sure we have enough features in the pool\n    let featureCount = this.meridians_.length + this.parallels_.length;\n    if (this.meridiansLabels_) {\n      featureCount += this.meridians_.length;\n    }\n    if (this.parallelsLabels_) {\n      featureCount += this.parallels_.length;\n    }\n\n    let feature;\n    while (featureCount > this.featurePool_.length) {\n      feature = new Feature();\n      this.featurePool_.push(feature);\n    }\n\n    const featuresColl = source.getFeaturesCollection();\n    featuresColl.clear();\n    let poolIndex = 0;\n\n    // add features for the lines & labels\n    let i, l;\n    for (i = 0, l = this.meridians_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.meridians_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n    for (i = 0, l = this.parallels_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.parallels_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, index) {\n    const lineString = this.getMeridian_(\n      lon,\n      minLat,\n      maxLat,\n      squaredTolerance,\n      index\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.meridiansLabels_) {\n        const text = this.lonLabelFormatter_(lon);\n        if (index in this.meridiansLabels_) {\n          this.meridiansLabels_[index].text = text;\n        } else {\n          this.meridiansLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.meridians_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addParallel_(lat, minLon, maxLon, squaredTolerance, extent, index) {\n    const lineString = this.getParallel_(\n      lat,\n      minLon,\n      maxLon,\n      squaredTolerance,\n      index\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.parallelsLabels_) {\n        const text = this.latLabelFormatter_(lat);\n        if (index in this.parallelsLabels_) {\n          this.parallelsLabels_[index].text = text;\n        } else {\n          this.parallelsLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.parallels_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {import(\"../render/Event.js\").default} event Render event.\n   * @private\n   */\n  drawLabels_(event) {\n    const rotation = event.frameState.viewState.rotation;\n    const resolution = event.frameState.viewState.resolution;\n    const size = event.frameState.size;\n    const extent = event.frameState.extent;\n    const rotationCenter = getCenter(extent);\n    let rotationExtent = extent;\n    if (rotation) {\n      const unrotatedWidth = size[0] * resolution;\n      const unrotatedHeight = size[1] * resolution;\n      rotationExtent = [\n        rotationCenter[0] - unrotatedWidth / 2,\n        rotationCenter[1] - unrotatedHeight / 2,\n        rotationCenter[0] + unrotatedWidth / 2,\n        rotationCenter[1] + unrotatedHeight / 2,\n      ];\n    }\n\n    let startWorld = 0;\n    let endWorld = 0;\n    let labelsAtStart = this.latLabelPosition_ < 0.5;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      startWorld = Math.floor((extent[0] - projectionExtent[0]) / worldWidth);\n      endWorld = Math.ceil((extent[2] - projectionExtent[2]) / worldWidth);\n      const inverted = Math.abs(rotation) > Math.PI / 2;\n      labelsAtStart = labelsAtStart !== inverted;\n    }\n    const vectorContext = getVectorContext(event);\n\n    for (let world = startWorld; world <= endWorld; ++world) {\n      let poolIndex = this.meridians_.length + this.parallels_.length;\n      let feature, index, l, textPoint;\n\n      if (this.meridiansLabels_) {\n        for (index = 0, l = this.meridiansLabels_.length; index < l; ++index) {\n          const lineString = this.meridians_[index];\n          if (!rotation && world === 0) {\n            textPoint = this.getMeridianPoint_(lineString, extent, index);\n          } else {\n            const clone = lineString.clone();\n            clone.translate(world * worldWidth, 0);\n            clone.rotate(-rotation, rotationCenter);\n            textPoint = this.getMeridianPoint_(clone, rotationExtent, index);\n            textPoint.rotate(rotation, rotationCenter);\n          }\n          feature = this.featurePool_[poolIndex++];\n          feature.setGeometry(textPoint);\n          feature.set('graticule_label', this.meridiansLabels_[index].text);\n          vectorContext.drawFeature(feature, this.lonLabelStyle_(feature));\n        }\n      }\n      if (this.parallelsLabels_) {\n        if (\n          (world === startWorld && labelsAtStart) ||\n          (world === endWorld && !labelsAtStart)\n        ) {\n          for (index = 0, l = this.parallels_.length; index < l; ++index) {\n            const lineString = this.parallels_[index];\n            if (!rotation && world === 0) {\n              textPoint = this.getParallelPoint_(lineString, extent, index);\n            } else {\n              const clone = lineString.clone();\n              clone.translate(world * worldWidth, 0);\n              clone.rotate(-rotation, rotationCenter);\n              textPoint = this.getParallelPoint_(clone, rotationExtent, index);\n              textPoint.rotate(rotation, rotationCenter);\n            }\n            feature = this.featurePool_[poolIndex++];\n            feature.setGeometry(textPoint);\n            feature.set('graticule_label', this.parallelsLabels_[index].text);\n            vectorContext.drawFeature(feature, this.latLabelStyle_(feature));\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @private\n   */\n  createGraticule_(extent, center, resolution, squaredTolerance) {\n    const interval = this.getInterval_(resolution);\n    if (interval == -1) {\n      this.meridians_.length = 0;\n      this.parallels_.length = 0;\n      if (this.meridiansLabels_) {\n        this.meridiansLabels_.length = 0;\n      }\n      if (this.parallelsLabels_) {\n        this.parallelsLabels_.length = 0;\n      }\n      return;\n    }\n\n    let wrapX = false;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      if (getWidth(extent) >= worldWidth) {\n        extent[0] = projectionExtent[0];\n        extent[2] = projectionExtent[2];\n      } else {\n        wrapX = true;\n      }\n    }\n\n    // Constrain the center to fit into the extent available to the graticule\n\n    const validCenterP = [\n      clamp(center[0], this.minX_, this.maxX_),\n      clamp(center[1], this.minY_, this.maxY_),\n    ];\n\n    // Transform the center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    const centerLonLat = this.toLonLatTransform_(validCenterP);\n    if (isNaN(centerLonLat[1])) {\n      centerLonLat[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n    let centerLon = clamp(centerLonLat[0], this.minLon_, this.maxLon_);\n    let centerLat = clamp(centerLonLat[1], this.minLat_, this.maxLat_);\n    const maxLines = this.maxLines_;\n    let cnt, idx, lat, lon;\n\n    // Limit the extent to fit into the extent available to the graticule\n\n    let validExtentP = extent;\n    if (!wrapX) {\n      validExtentP = [\n        clamp(extent[0], this.minX_, this.maxX_),\n        clamp(extent[1], this.minY_, this.maxY_),\n        clamp(extent[2], this.minX_, this.maxX_),\n        clamp(extent[3], this.minY_, this.maxY_),\n      ];\n    }\n\n    // Transform the extent to get the lon lat ranges for the edges of the extent\n\n    const validExtent = applyTransform(\n      validExtentP,\n      this.toLonLatTransform_,\n      undefined,\n      8\n    );\n\n    let maxLat = validExtent[3];\n    let maxLon = validExtent[2];\n    let minLat = validExtent[1];\n    let minLon = validExtent[0];\n\n    if (!wrapX) {\n      // Check if extremities of the world extent lie inside the extent\n      // (for example the pole in a polar projection)\n      // and extend the extent as appropriate\n\n      if (containsCoordinate(validExtentP, this.bottomLeft_)) {\n        minLon = this.minLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.bottomRight_)) {\n        maxLon = this.maxLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topLeft_)) {\n        minLon = this.minLon_;\n        maxLat = this.maxLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topRight_)) {\n        maxLon = this.maxLon_;\n        maxLat = this.maxLat_;\n      }\n\n      // The transformed center may also extend the lon lat ranges used for rendering\n\n      maxLat = clamp(maxLat, centerLat, this.maxLat_);\n      maxLon = clamp(maxLon, centerLon, this.maxLon_);\n      minLat = clamp(minLat, this.minLat_, centerLat);\n      minLon = clamp(minLon, this.minLon_, centerLon);\n    }\n\n    // Create meridians\n\n    centerLon = Math.floor(centerLon / interval) * interval;\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon -= interval) >= minLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    } else {\n      while (lon != this.minLon_ && cnt++ < maxLines) {\n        lon = Math.max(lon - interval, this.minLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    }\n\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon += interval) <= maxLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    } else {\n      while (lon != this.maxLon_ && cnt++ < maxLines) {\n        lon = Math.min(lon + interval, this.maxLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    }\n\n    this.meridians_.length = idx;\n    if (this.meridiansLabels_) {\n      this.meridiansLabels_.length = idx;\n    }\n\n    // Create parallels\n\n    centerLat = Math.floor(centerLat / interval) * interval;\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    while (lat != this.minLat_ && cnt++ < maxLines) {\n      lat = Math.max(lat - interval, this.minLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx\n      );\n    }\n\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    cnt = 0;\n    while (lat != this.maxLat_ && cnt++ < maxLines) {\n      lat = Math.min(lat + interval, this.maxLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx\n      );\n    }\n\n    this.parallels_.length = idx;\n    if (this.parallelsLabels_) {\n      this.parallelsLabels_.length = idx;\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @return {number} The interval in degrees.\n   * @private\n   */\n  getInterval_(resolution) {\n    const centerLon = this.projectionCenterLonLat_[0];\n    const centerLat = this.projectionCenterLonLat_[1];\n    let interval = -1;\n    const target = Math.pow(this.targetSize_ * resolution, 2);\n    /** @type {Array<number>} **/\n    const p1 = [];\n    /** @type {Array<number>} **/\n    const p2 = [];\n    for (let i = 0, ii = this.intervals_.length; i < ii; ++i) {\n      const delta = clamp(this.intervals_[i] / 2, 0, 90);\n      // Don't attempt to transform latitudes beyond the poles!\n      const clampedLat = clamp(centerLat, -90 + delta, 90 - delta);\n      p1[0] = centerLon - delta;\n      p1[1] = clampedLat - delta;\n      p2[0] = centerLon + delta;\n      p2[1] = clampedLat + delta;\n      this.fromLonLatTransform_(p1, p1);\n      this.fromLonLatTransform_(p2, p2);\n      const dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n      if (dist <= target) {\n        break;\n      }\n      interval = this.intervals_[i];\n    }\n    return interval;\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The meridian line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getMeridian_(lon, minLat, maxLat, squaredTolerance, index) {\n    const flatCoordinates = meridian(\n      lon,\n      minLat,\n      maxLat,\n      this.projection_,\n      squaredTolerance\n    );\n    let lineString = this.meridians_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n      this.meridians_[index] = lineString;\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Meridian\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Meridian point.\n   * @private\n   */\n  getMeridianPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let bottom = 1;\n    let top = flatCoordinates.length - 1;\n    if (flatCoordinates[bottom] > flatCoordinates[top]) {\n      bottom = top;\n      top = 1;\n    }\n    const clampedBottom = Math.max(extent[1], flatCoordinates[bottom]);\n    const clampedTop = Math.min(extent[3], flatCoordinates[top]);\n    const lat = clamp(\n      extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\n      clampedBottom,\n      clampedTop\n    );\n    const coordinate0 =\n      flatCoordinates[bottom - 1] +\n      ((flatCoordinates[top - 1] - flatCoordinates[bottom - 1]) *\n        (lat - flatCoordinates[bottom])) /\n        (flatCoordinates[top] - flatCoordinates[bottom]);\n    const coordinate = [coordinate0, lat];\n    const point = this.meridiansLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of meridians.  Meridians are lines of equal longitude.\n   * @return {Array<LineString>} The meridians.\n   * @api\n   */\n  getMeridians() {\n    return this.meridians_;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The parallel line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getParallel_(lat, minLon, maxLon, squaredTolerance, index) {\n    const flatCoordinates = parallel(\n      lat,\n      minLon,\n      maxLon,\n      this.projection_,\n      squaredTolerance\n    );\n    let lineString = this.parallels_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Parallels.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Parallel point.\n   * @private\n   */\n  getParallelPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let left = 0;\n    let right = flatCoordinates.length - 2;\n    if (flatCoordinates[left] > flatCoordinates[right]) {\n      left = right;\n      right = 0;\n    }\n    const clampedLeft = Math.max(extent[0], flatCoordinates[left]);\n    const clampedRight = Math.min(extent[2], flatCoordinates[right]);\n    const lon = clamp(\n      extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\n      clampedLeft,\n      clampedRight\n    );\n    const coordinate1 =\n      flatCoordinates[left + 1] +\n      ((flatCoordinates[right + 1] - flatCoordinates[left + 1]) *\n        (lon - flatCoordinates[left])) /\n        (flatCoordinates[right] - flatCoordinates[left]);\n    const coordinate = [lon, coordinate1];\n    const point = this.parallelsLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of parallels.  Parallels are lines of equal latitude.\n   * @return {Array<LineString>} The parallels.\n   * @api\n   */\n  getParallels() {\n    return this.parallels_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateProjectionInfo_(projection) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const worldExtent = projection.getWorldExtent();\n\n    this.maxLat_ = worldExtent[3];\n    this.maxLon_ = worldExtent[2];\n    this.minLat_ = worldExtent[1];\n    this.minLon_ = worldExtent[0];\n\n    // If the world extent crosses the dateline define a custom transform to\n    // return longitudes which wrap the dateline\n\n    const toLonLatTransform = getTransform(projection, epsg4326Projection);\n    if (this.minLon_ < this.maxLon_) {\n      this.toLonLatTransform_ = toLonLatTransform;\n    } else {\n      const split = this.minLon_ + this.maxLon_ / 2;\n      this.maxLon_ += 360;\n      this.toLonLatTransform_ = function (coordinates, output, dimension) {\n        dimension = dimension || 2;\n        const lonLatCoordinates = toLonLatTransform(\n          coordinates,\n          output,\n          dimension\n        );\n        for (let i = 0, l = lonLatCoordinates.length; i < l; i += dimension) {\n          if (lonLatCoordinates[i] < split) {\n            lonLatCoordinates[i] += 360;\n          }\n        }\n        return lonLatCoordinates;\n      };\n    }\n\n    // Transform the extent to get the limits of the view projection extent\n    // which should be available to the graticule\n\n    this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n    const worldExtentP = applyTransform(\n      [this.minLon_, this.minLat_, this.maxLon_, this.maxLat_],\n      this.fromLonLatTransform_,\n      undefined,\n      8\n    );\n\n    this.minX_ = worldExtentP[0];\n    this.maxX_ = worldExtentP[2];\n    this.minY_ = worldExtentP[1];\n    this.maxY_ = worldExtentP[3];\n\n    // Determine the view projection coordinates of the extremities of the world extent\n    // as these may lie inside a view extent (for example the pole in a polar projection)\n\n    this.bottomLeft_ = this.fromLonLatTransform_([this.minLon_, this.minLat_]);\n    this.bottomRight_ = this.fromLonLatTransform_([this.maxLon_, this.minLat_]);\n    this.topLeft_ = this.fromLonLatTransform_([this.minLon_, this.maxLat_]);\n    this.topRight_ = this.fromLonLatTransform_([this.maxLon_, this.maxLat_]);\n\n    // Transform the projection center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    this.projectionCenterLonLat_ = this.toLonLatTransform_(\n      getCenter(projection.getExtent())\n    );\n    if (isNaN(this.projectionCenterLonLat_[1])) {\n      this.projectionCenterLonLat_[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n\n    this.projection_ = projection;\n  }\n}\n\nexport default Graticule;\n","/**\n * A wrapper class to simplify rendering to a texture instead of the final canvas\n * @module ol/webgl/RenderTarget\n */\nimport {equals} from '../array.js';\n\n// for pixel color reading\nconst tmpArray4 = new Uint8Array(4);\n\n/**\n * @classdesc\n * This class is a wrapper around the association of both a `WebGLTexture` and a `WebGLFramebuffer` instances,\n * simplifying initialization and binding for rendering.\n * @api\n */\nclass WebGLRenderTarget {\n  /**\n   * @param {import(\"./Helper.js\").default} helper WebGL helper; mandatory.\n   * @param {Array<number>} [size] Expected size of the render target texture; note: this can be changed later on.\n   */\n  constructor(helper, size) {\n    /**\n     * @private\n     * @type {import(\"./Helper.js\").default}\n     */\n    this.helper_ = helper;\n    const gl = helper.getGL();\n\n    /**\n     * @private\n     * @type {WebGLTexture}\n     */\n    this.texture_ = gl.createTexture();\n\n    /**\n     * @private\n     * @type {WebGLFramebuffer}\n     */\n    this.framebuffer_ = gl.createFramebuffer();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.size_ = size || [1, 1];\n\n    /**\n     * @type {Uint8Array}\n     * @private\n     */\n    this.data_ = new Uint8Array(0);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dataCacheDirty_ = true;\n\n    this.updateSize_();\n  }\n\n  /**\n   * Changes the size of the render target texture. Note: will do nothing if the size\n   * is already the same.\n   * @param {Array<number>} size Expected size of the render target texture\n   * @api\n   */\n  setSize(size) {\n    if (equals(size, this.size_)) {\n      return;\n    }\n    this.size_[0] = size[0];\n    this.size_[1] = size[1];\n    this.updateSize_();\n  }\n\n  /**\n   * Returns the size of the render target texture\n   * @return {Array<number>} Size of the render target texture\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * This will cause following calls to `#readAll` or `#readPixel` to download the content of the\n   * render target into memory, which is an expensive operation.\n   * This content will be kept in cache but should be cleared after each new render.\n   * @api\n   */\n  clearCachedData() {\n    this.dataCacheDirty_ = true;\n  }\n\n  /**\n   * Returns the full content of the frame buffer as a series of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * @return {Uint8Array} Integer array of color values\n   * @api\n   */\n  readAll() {\n    if (this.dataCacheDirty_) {\n      const size = this.size_;\n      const gl = this.helper_.getGL();\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n      gl.readPixels(\n        0,\n        0,\n        size[0],\n        size[1],\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data_\n      );\n      this.dataCacheDirty_ = false;\n    }\n    return this.data_;\n  }\n\n  /**\n   * Reads one pixel of the frame buffer as an array of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * If x and/or y are outside of existing data, an array filled with 0 is returned.\n   * @param {number} x Pixel coordinate\n   * @param {number} y Pixel coordinate\n   * @return {Uint8Array} Integer array with one color value (4 components)\n   * @api\n   */\n  readPixel(x, y) {\n    if (x < 0 || y < 0 || x > this.size_[0] || y >= this.size_[1]) {\n      tmpArray4[0] = 0;\n      tmpArray4[1] = 0;\n      tmpArray4[2] = 0;\n      tmpArray4[3] = 0;\n      return tmpArray4;\n    }\n\n    this.readAll();\n    const index =\n      Math.floor(x) + (this.size_[1] - Math.floor(y) - 1) * this.size_[0];\n    tmpArray4[0] = this.data_[index * 4];\n    tmpArray4[1] = this.data_[index * 4 + 1];\n    tmpArray4[2] = this.data_[index * 4 + 2];\n    tmpArray4[3] = this.data_[index * 4 + 3];\n    return tmpArray4;\n  }\n\n  /**\n   * @return {WebGLTexture} Texture to render to\n   */\n  getTexture() {\n    return this.texture_;\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer of the render target\n   */\n  getFramebuffer() {\n    return this.framebuffer_;\n  }\n\n  /**\n   * @private\n   */\n  updateSize_() {\n    const size = this.size_;\n    const gl = this.helper_.getGL();\n\n    this.texture_ = this.helper_.createTexture(size, null, this.texture_);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture_,\n      0\n    );\n\n    this.data_ = new Uint8Array(size[0] * size[1] * 4);\n  }\n}\n\nexport default WebGLRenderTarget;\n","/**\n * @module ol/render/webgl/constants\n */\n\n/**\n * @enum {string}\n */\nexport const WebGLWorkerMessageType = {\n  GENERATE_POLYGON_BUFFERS: 'GENERATE_POLYGON_BUFFERS',\n  GENERATE_POINT_BUFFERS: 'GENERATE_POINT_BUFFERS',\n  GENERATE_LINE_STRING_BUFFERS: 'GENERATE_LINE_STRING_BUFFERS',\n};\n\n/**\n * @typedef {Object} WebGLWorkerGenerateBuffersMessage\n * This message will trigger the generation of a vertex and an index buffer based on the given render instructions.\n * When the buffers are generated, the worked will send a message of the same type to the main thread, with\n * the generated buffers in it.\n * Note that any addition properties present in the message *will* be sent back to the main thread.\n * @property {number} id Message id; will be used both in request and response as a means of identification\n * @property {WebGLWorkerMessageType} type Message type\n * @property {ArrayBuffer} renderInstructions Polygon render instructions raw binary buffer.\n * @property {number} [customAttributesSize] Amount of custom attributes count in the polygon render instructions.\n * @property {ArrayBuffer} [vertexBuffer] Vertices array raw binary buffer (sent by the worker).\n * @property {ArrayBuffer} [indexBuffer] Indices array raw binary buffer (sent by the worker).\n * @property {import(\"../../transform\").Transform} [renderInstructionsTransform] Transformation matrix used to project the instructions coordinates\n */\n","'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 32767 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim | 0);\n            triangles.push(ear.i / dim | 0);\n            triangles.push(next.i / dim | 0);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    var p = c.next;\n    while (p !== a) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(x0, y0, minX, minY, invSize),\n        maxZ = zOrder(x1, y1, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim | 0);\n            triangles.push(p.i / dim | 0);\n            triangles.push(b.i / dim | 0);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\n                earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    var bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n\n    var bridgeReverse = splitPolygon(bridge, hole);\n\n    // filter collinear points around the cuts\n    filterPoints(bridgeReverse, bridgeReverse.next);\n    return filterPoints(bridge, bridge.next);\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                m = p.x < p.next.x ? p : p.next;\n                if (x === hx) return m; // hole touches outer segment; pick leftmost endpoint\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === 0) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = (x - minX) * invSize | 0;\n    y = (y - minY) * invSize | 0;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) >= (ax - px) * (cy - py) &&\n           (ax - px) * (by - py) >= (bx - px) * (ay - py) &&\n           (bx - px) * (cy - py) >= (cx - px) * (by - py);\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = 0;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","/**\n * @module ol/render/webgl/utils\n */\nimport earcut from 'earcut';\nimport {apply as applyTransform} from '../../transform.js';\nimport {clamp} from '../../math.js';\n\nconst tmpArray_ = [];\n\n/**\n * An object holding positions both in an index and a vertex buffer.\n * @typedef {Object} BufferPositions\n * @property {number} vertexPosition Position in the vertex buffer\n * @property {number} indexPosition Position in the index buffer\n */\nconst bufferPositions_ = {vertexPosition: 0, indexPosition: 0};\n\nfunction writePointVertex(buffer, pos, x, y, index) {\n  buffer[pos + 0] = x;\n  buffer[pos + 1] = y;\n  buffer[pos + 2] = index;\n}\n\n/**\n * Pushes a quad (two triangles) based on a point geometry\n * @param {Float32Array} instructions Array of render instructions for points.\n * @param {number} elementIndex Index from which render instructions will be read.\n * @param {Float32Array} vertexBuffer Buffer in the form of a typed array.\n * @param {Uint32Array} indexBuffer Buffer in the form of a typed array.\n * @param {number} customAttributesSize Amount of custom attributes for each element.\n * @param {BufferPositions} [bufferPositions] Buffer write positions; if not specified, positions will be set at 0.\n * @return {BufferPositions} New buffer positions where to write next\n * @property {number} vertexPosition New position in the vertex buffer where future writes should start.\n * @property {number} indexPosition New position in the index buffer where future writes should start.\n * @private\n */\nexport function writePointFeatureToBuffers(\n  instructions,\n  elementIndex,\n  vertexBuffer,\n  indexBuffer,\n  customAttributesSize,\n  bufferPositions\n) {\n  // This is for x, y and index\n  const baseVertexAttrsCount = 3;\n  const baseInstructionsCount = 2;\n  const stride = baseVertexAttrsCount + customAttributesSize;\n\n  const x = instructions[elementIndex + 0];\n  const y = instructions[elementIndex + 1];\n\n  // read custom numerical attributes on the feature\n  const customAttrs = tmpArray_;\n  customAttrs.length = customAttributesSize;\n  for (let i = 0; i < customAttrs.length; i++) {\n    customAttrs[i] = instructions[elementIndex + baseInstructionsCount + i];\n  }\n\n  let vPos = bufferPositions ? bufferPositions.vertexPosition : 0;\n  let iPos = bufferPositions ? bufferPositions.indexPosition : 0;\n  const baseIndex = vPos / stride;\n\n  // push vertices for each of the four quad corners (first standard then custom attributes)\n  writePointVertex(vertexBuffer, vPos, x, y, 0);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 1);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 2);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 3);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  indexBuffer[iPos++] = baseIndex;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 3;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 2;\n  indexBuffer[iPos++] = baseIndex + 3;\n\n  bufferPositions_.vertexPosition = vPos;\n  bufferPositions_.indexPosition = iPos;\n\n  return bufferPositions_;\n}\n\n/**\n * Pushes a single quad to form a line segment; also includes a computation for the join angles with previous and next\n * segment, in order to be able to offset the vertices correctly in the shader\n * @param {Float32Array} instructions Array of render instructions for lines.\n * @param {number} segmentStartIndex Index of the segment start point from which render instructions will be read.\n * @param {number} segmentEndIndex Index of the segment start point from which render instructions will be read.\n * @param {number|null} beforeSegmentIndex Index of the point right before the segment (null if none, e.g this is a line start)\n * @param {number|null} afterSegmentIndex Index of the point right after the segment (null if none, e.g this is a line end)\n * @param {Array<number>} vertexArray Array containing vertices.\n * @param {Array<number>} indexArray Array containing indices.\n * @param {Array<number>} customAttributes Array of custom attributes value\n * @param {import('../../transform.js').Transform} instructionsTransform Transform matrix used to project coordinates in instructions\n * @param {import('../../transform.js').Transform} invertInstructionsTransform Transform matrix used to project coordinates in instructions\n * @private\n */\nexport function writeLineSegmentToBuffers(\n  instructions,\n  segmentStartIndex,\n  segmentEndIndex,\n  beforeSegmentIndex,\n  afterSegmentIndex,\n  vertexArray,\n  indexArray,\n  customAttributes,\n  instructionsTransform,\n  invertInstructionsTransform\n) {\n  // compute the stride to determine how many vertices were already pushed\n  const baseVertexAttrsCount = 5; // base attributes: x0, y0, x1, y1, params (vertex number [0-3], join angle 1, join angle 2)\n  const stride = baseVertexAttrsCount + customAttributes.length;\n  const baseIndex = vertexArray.length / stride;\n\n  // The segment is composed of two positions called P0[x0, y0] and P1[x1, y1]\n  // Depending on whether there are points before and after the segment, its final shape\n  // will be different\n  const p0 = [\n    instructions[segmentStartIndex + 0],\n    instructions[segmentStartIndex + 1],\n  ];\n  const p1 = [instructions[segmentEndIndex], instructions[segmentEndIndex + 1]];\n\n  // to compute offsets from the line center we need to reproject\n  // coordinates back in world units and compute the length of the segment\n  const p0world = applyTransform(invertInstructionsTransform, [...p0]);\n  const p1world = applyTransform(invertInstructionsTransform, [...p1]);\n\n  function computeVertexParameters(vertexNumber, joinAngle1, joinAngle2) {\n    const shift = 10000;\n    const anglePrecision = 1500;\n    return (\n      Math.round(joinAngle1 * anglePrecision) +\n      Math.round(joinAngle2 * anglePrecision) * shift +\n      vertexNumber * shift * shift\n    );\n  }\n\n  // compute the angle between p0pA and p0pB\n  // returns a value in [0, 2PI]\n  function angleBetween(p0, pA, pB) {\n    const lenA = Math.sqrt(\n      (pA[0] - p0[0]) * (pA[0] - p0[0]) + (pA[1] - p0[1]) * (pA[1] - p0[1])\n    );\n    const tangentA = [(pA[0] - p0[0]) / lenA, (pA[1] - p0[1]) / lenA];\n    const orthoA = [-tangentA[1], tangentA[0]];\n    const lenB = Math.sqrt(\n      (pB[0] - p0[0]) * (pB[0] - p0[0]) + (pB[1] - p0[1]) * (pB[1] - p0[1])\n    );\n    const tangentB = [(pB[0] - p0[0]) / lenB, (pB[1] - p0[1]) / lenB];\n\n    // this angle can be clockwise or anticlockwise; hence the computation afterwards\n    const angle =\n      lenA === 0 || lenB === 0\n        ? 0\n        : Math.acos(\n            clamp(tangentB[0] * tangentA[0] + tangentB[1] * tangentA[1], -1, 1)\n          );\n    const isClockwise = tangentB[0] * orthoA[0] + tangentB[1] * orthoA[1] > 0;\n    return !isClockwise ? Math.PI * 2 - angle : angle;\n  }\n\n  const joinBefore = beforeSegmentIndex !== null;\n  const joinAfter = afterSegmentIndex !== null;\n\n  let angle0 = 0;\n  let angle1 = 0;\n\n  // add vertices and adapt offsets for P0 in case of join\n  if (joinBefore) {\n    // B for before\n    const pB = [\n      instructions[beforeSegmentIndex],\n      instructions[beforeSegmentIndex + 1],\n    ];\n    const pBworld = applyTransform(invertInstructionsTransform, [...pB]);\n    angle0 = angleBetween(p0world, p1world, pBworld);\n  }\n  // adapt offsets for P1 in case of join\n  if (joinAfter) {\n    // A for after\n    const pA = [\n      instructions[afterSegmentIndex],\n      instructions[afterSegmentIndex + 1],\n    ];\n    const pAworld = applyTransform(invertInstructionsTransform, [...pA]);\n    angle1 = angleBetween(p1world, p0world, pAworld);\n  }\n\n  // add main segment triangles\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    computeVertexParameters(0, angle0, angle1)\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    computeVertexParameters(1, angle0, angle1)\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    computeVertexParameters(2, angle0, angle1)\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    computeVertexParameters(3, angle0, angle1)\n  );\n  vertexArray.push(...customAttributes);\n\n  indexArray.push(\n    baseIndex,\n    baseIndex + 1,\n    baseIndex + 2,\n    baseIndex + 1,\n    baseIndex + 3,\n    baseIndex + 2\n  );\n}\n\n/**\n * Pushes several triangles to form a polygon, including holes\n * @param {Float32Array} instructions Array of render instructions for lines.\n * @param {number} polygonStartIndex Index of the polygon start point from which render instructions will be read.\n * @param {Array<number>} vertexArray Array containing vertices.\n * @param {Array<number>} indexArray Array containing indices.\n * @param {number} customAttributesSize Amount of custom attributes for each element.\n * @return {number} Next polygon instructions index\n * @private\n */\nexport function writePolygonTrianglesToBuffers(\n  instructions,\n  polygonStartIndex,\n  vertexArray,\n  indexArray,\n  customAttributesSize\n) {\n  const instructionsPerVertex = 2; // x, y\n  const attributesPerVertex = 2 + customAttributesSize;\n  let instructionsIndex = polygonStartIndex;\n  const customAttributes = instructions.slice(\n    instructionsIndex,\n    instructionsIndex + customAttributesSize\n  );\n  instructionsIndex += customAttributesSize;\n  const ringsCount = instructions[instructionsIndex++];\n  let verticesCount = 0;\n  const holes = new Array(ringsCount - 1);\n  for (let i = 0; i < ringsCount; i++) {\n    verticesCount += instructions[instructionsIndex++];\n    if (i < ringsCount - 1) {\n      holes[i] = verticesCount;\n    }\n  }\n  const flatCoords = instructions.slice(\n    instructionsIndex,\n    instructionsIndex + verticesCount * instructionsPerVertex\n  );\n\n  // pushing to vertices and indices!! this is where the magic happens\n  const result = earcut(flatCoords, holes, instructionsPerVertex);\n  for (let i = 0; i < result.length; i++) {\n    indexArray.push(result[i] + vertexArray.length / attributesPerVertex);\n  }\n  for (let i = 0; i < flatCoords.length; i += 2) {\n    vertexArray.push(flatCoords[i], flatCoords[i + 1], ...customAttributes);\n  }\n\n  return instructionsIndex + verticesCount * instructionsPerVertex;\n}\n\n/**\n * Returns a texture of 1x1 pixel, white\n * @private\n * @return {ImageData} Image data.\n */\nexport function getBlankImageData() {\n  const canvas = document.createElement('canvas');\n  const image = canvas.getContext('2d').createImageData(1, 1);\n  image.data[0] = 255;\n  image.data[1] = 255;\n  image.data[2] = 255;\n  image.data[3] = 255;\n  return image;\n}\n\n/**\n * Generates a color array based on a numerical id\n * Note: the range for each component is 0 to 1 with 256 steps\n * @param {number} id Id\n * @param {Array<number>} [array] Reusable array\n * @return {Array<number>} Color array containing the encoded id\n */\nexport function colorEncodeId(id, array) {\n  array = array || [];\n  const radix = 256;\n  const divide = radix - 1;\n  array[0] = Math.floor(id / radix / radix / radix) / divide;\n  array[1] = (Math.floor(id / radix / radix) % radix) / divide;\n  array[2] = (Math.floor(id / radix) % radix) / divide;\n  array[3] = (id % radix) / divide;\n  return array;\n}\n\n/**\n * Reads an id from a color-encoded array\n * Note: the expected range for each component is 0 to 1 with 256 steps.\n * @param {Array<number>} color Color array containing the encoded id\n * @return {number} Decoded id\n */\nexport function colorDecodeId(color) {\n  let id = 0;\n  const radix = 256;\n  const mult = radix - 1;\n  id += Math.round(color[0] * radix * radix * radix * mult);\n  id += Math.round(color[1] * radix * radix * mult);\n  id += Math.round(color[2] * radix * mult);\n  id += Math.round(color[3] * mult);\n  return id;\n}\n","/**\n * @module ol/renderer/webgl/PointsLayer\n */\nimport BaseVector from '../../layer/BaseVector.js';\nimport VectorEventType from '../../source/VectorEventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport WebGLRenderTarget from '../../webgl/RenderTarget.js';\nimport {ARRAY_BUFFER, DYNAMIC_DRAW, ELEMENT_ARRAY_BUFFER} from '../../webgl.js';\nimport {AttributeType, DefaultUniform} from '../../webgl/Helper.js';\nimport {WebGLWorkerMessageType} from '../../render/webgl/constants.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  makeInverse as makeInverseTransform,\n  multiply as multiplyTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {assert} from '../../asserts.js';\nimport {buffer, createEmpty, equals, getWidth} from '../../extent.js';\nimport {colorDecodeId, colorEncodeId} from '../../render/webgl/utils.js';\nimport {create as createWebGLWorker} from '../../worker/webgl.js';\nimport {getUid} from '../../util.js';\nimport {listen, unlistenByKey} from '../../events.js';\n\n/**\n * @typedef {Object} CustomAttribute A description of a custom attribute to be passed on to the GPU, with a value different\n * for each feature.\n * @property {string} name Attribute name.\n * @property {function(import(\"../../Feature\").default, Object<string, *>):number} callback This callback computes the numerical value of the\n * attribute for a given feature (properties are available as 2nd arg for quicker access).\n */\n\n/**\n * @typedef {Object} FeatureCacheItem Object that holds a reference to a feature, its geometry and properties. Used to optimize\n * rebuildBuffers by accessing these objects quicker.\n * @property {import(\"../../Feature\").default} feature Feature\n * @property {Object<string, *>} properties Feature properties\n * @property {import(\"../../geom\").Geometry} geometry Feature geometry\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the canvas element.\n * @property {Array<CustomAttribute>} [attributes] These attributes will be read from the features in the source and then\n * passed to the GPU. The `name` property of each attribute will serve as its identifier:\n *  * In the vertex shader as an `attribute` by prefixing it with `a_`\n *  * In the fragment shader as a `varying` by prefixing it with `v_`\n * Please note that these can only be numerical values.\n * @property {string} vertexShader Vertex shader source, mandatory.\n * @property {string} fragmentShader Fragment shader source, mandatory.\n * @property {string} [hitVertexShader] Vertex shader source for hit detection rendering.\n * @property {string} [hitFragmentShader] Fragment shader source for hit detection rendering.\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * Please note that `u_texture` is reserved for the main texture slot and `u_opacity` is reserved for the layer opacity.\n * @property {Array<import(\"./Layer\").PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * WebGL vector renderer optimized for points.\n * All features will be rendered as quads (two triangles forming a square). New data will be flushed to the GPU\n * every time the vector source changes.\n *\n * You need to provide vertex and fragment shaders for rendering. This can be done using\n * {@link module:ol/webgl/ShaderBuilder~ShaderBuilder} utilities. These shaders shall expect a `a_position` attribute\n * containing the screen-space projected center of the quad, as well as a `a_index` attribute\n * whose value (0, 1, 2 or 3) indicates which quad vertex is currently getting processed (see structure below).\n *\n * To include variable attributes in the shaders, you need to declare them using the `attributes` property of\n * the options object like so:\n * ```js\n * new WebGLPointsLayerRenderer(layer, {\n *   attributes: [\n *     {\n *       name: 'size',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *     {\n *       name: 'weight',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *   ],\n *   vertexShader:\n *     // shader using attribute a_weight and a_size\n *   fragmentShader:\n *     // shader using varying v_weight and v_size\n * ```\n *\n * To enable hit detection, you must as well provide dedicated shaders using the `hitVertexShader`\n * and `hitFragmentShader` properties. These shall expect the `a_hitColor` attribute to contain\n * the final color that will have to be output for hit detection to work.\n *\n * The following uniform is used for the main texture: `u_texture`.\n * The following uniform is used for the layer opacity: `u_opacity`.\n *\n * Please note that the main shader output should have premultiplied alpha, otherwise visual anomalies may occur.\n *\n * Points are rendered as quads with the following structure:\n *\n * ```\n *   (u0, v1)      (u1, v1)\n *  [3]----------[2]\n *   |`           |\n *   |  `         |\n *   |    `       |\n *   |      `     |\n *   |        `   |\n *   |          ` |\n *  [0]----------[1]\n *   (u0, v0)      (u1, v0)\n *  ```\n *\n * This uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\n *\n * @api\n */\nclass WebGLPointsLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n   * @param {Options} options Options.\n   */\n  constructor(layer, options) {\n    const uniforms = options.uniforms || {};\n    const projectionMatrixTransform = createTransform();\n    uniforms[DefaultUniform.PROJECTION_MATRIX] = projectionMatrixTransform;\n\n    super(layer, {\n      uniforms: uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    this.sourceRevision_ = -1;\n\n    this.verticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n    this.hitVerticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n    this.indicesBuffer_ = new WebGLArrayBuffer(\n      ELEMENT_ARRAY_BUFFER,\n      DYNAMIC_DRAW\n    );\n\n    /**\n     * @private\n     */\n    this.vertexShader_ = options.vertexShader;\n\n    /**\n     * @private\n     */\n    this.fragmentShader_ = options.fragmentShader;\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.program_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hitDetectionEnabled_ =\n      options.hitFragmentShader && options.hitVertexShader ? true : false;\n\n    /**\n     * @private\n     */\n    this.hitVertexShader_ = options.hitVertexShader;\n\n    /**\n     * @private\n     */\n    this.hitFragmentShader_ = options.hitFragmentShader;\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.hitProgram_;\n\n    const customAttributes = options.attributes\n      ? options.attributes.map(function (attribute) {\n          return {\n            name: 'a_' + attribute.name,\n            size: 1,\n            type: AttributeType.FLOAT,\n          };\n        })\n      : [];\n\n    /**\n     * A list of attributes used by the renderer. By default only the position and\n     * index of the vertex (0 to 3) are required.\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     */\n    this.attributes = [\n      {\n        name: 'a_position',\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_index',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ].concat(customAttributes);\n\n    /**\n     * A list of attributes used for hit detection.\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     */\n    this.hitDetectionAttributes = [\n      {\n        name: 'a_position',\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_index',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_hitColor',\n        size: 4,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_featureUid',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ].concat(customAttributes);\n\n    this.customAttributes = options.attributes ? options.attributes : [];\n\n    this.previousExtent_ = createEmpty();\n\n    /**\n     * This transform is updated on every frame and is the composition of:\n     * - invert of the world->screen transform that was used when rebuilding buffers (see `this.renderTransform_`)\n     * - current world->screen transform\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.currentTransform_ = projectionMatrixTransform;\n\n    /**\n     * This transform is updated when buffers are rebuilt and converts world space coordinates to screen space\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.renderTransform_ = createTransform();\n\n    /**\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.invertRenderTransform_ = createTransform();\n\n    /**\n     * @type {Float32Array}\n     * @private\n     */\n    this.renderInstructions_ = new Float32Array(0);\n\n    /**\n     * These instructions are used for hit detection\n     * @type {Float32Array}\n     * @private\n     */\n    this.hitRenderInstructions_ = new Float32Array(0);\n\n    /**\n     * @type {WebGLRenderTarget}\n     * @private\n     */\n    this.hitRenderTarget_;\n\n    /**\n     * Keep track of latest message sent to worker\n     * @type {number}\n     * @private\n     */\n    this.lastSentId = 0;\n\n    /**\n     * @private\n     */\n    this.worker_ = createWebGLWorker();\n\n    this.worker_.addEventListener(\n      'message',\n      /**\n       * @param {*} event Event.\n       */\n      (event) => {\n        const received = event.data;\n        if (received.type === WebGLWorkerMessageType.GENERATE_POINT_BUFFERS) {\n          const projectionTransform = received.projectionTransform;\n          if (received.hitDetection) {\n            this.hitVerticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n            this.helper.flushBufferData(this.hitVerticesBuffer_);\n          } else {\n            this.verticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n            this.helper.flushBufferData(this.verticesBuffer_);\n          }\n          this.indicesBuffer_.fromArrayBuffer(received.indexBuffer);\n          this.helper.flushBufferData(this.indicesBuffer_);\n\n          this.renderTransform_ = projectionTransform;\n          makeInverseTransform(\n            this.invertRenderTransform_,\n            this.renderTransform_\n          );\n          if (received.hitDetection) {\n            this.hitRenderInstructions_ = new Float32Array(\n              event.data.renderInstructions\n            );\n          } else {\n            this.renderInstructions_ = new Float32Array(\n              event.data.renderInstructions\n            );\n            if (received.id === this.lastSentId) {\n              this.ready = true;\n            }\n          }\n\n          this.getLayer().changed();\n        }\n      }\n    );\n\n    /**\n     * This object will be updated when the source changes. Key is uid.\n     * @type {Object<string, FeatureCacheItem>}\n     * @private\n     */\n    this.featureCache_ = {};\n\n    /**\n     * Amount of features in the cache.\n     * @type {number}\n     * @private\n     */\n    this.featureCount_ = 0;\n\n    const source = this.getLayer().getSource();\n    this.sourceListenKeys_ = [\n      listen(\n        source,\n        VectorEventType.ADDFEATURE,\n        this.handleSourceFeatureAdded_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.CHANGEFEATURE,\n        this.handleSourceFeatureChanged_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceFeatureDelete_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.CLEAR,\n        this.handleSourceFeatureClear_,\n        this\n      ),\n    ];\n    source.forEachFeature((feature) => {\n      this.featureCache_[getUid(feature)] = {\n        feature: feature,\n        properties: feature.getProperties(),\n        geometry: feature.getGeometry(),\n      };\n      this.featureCount_++;\n    });\n  }\n\n  afterHelperCreated() {\n    this.program_ = this.helper.getProgram(\n      this.fragmentShader_,\n      this.vertexShader_\n    );\n\n    if (this.hitDetectionEnabled_) {\n      this.hitProgram_ = this.helper.getProgram(\n        this.hitFragmentShader_,\n        this.hitVertexShader_\n      );\n\n      this.hitRenderTarget_ = new WebGLRenderTarget(this.helper);\n    }\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureAdded_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n    this.featureCount_++;\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureChanged_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureDelete_(event) {\n    const feature = event.feature;\n    delete this.featureCache_[getUid(feature)];\n    this.featureCount_--;\n  }\n\n  /**\n   * @private\n   */\n  handleSourceFeatureClear_() {\n    this.featureCache_ = {};\n    this.featureCount_ = 0;\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    const gl = this.helper.getGL();\n    this.preRender(gl, frameState);\n\n    const projection = frameState.viewState.projection;\n    const layer = this.getLayer();\n    const vectorSource = layer.getSource();\n    // FIXME fix hit detection isn't reliable when rendering multiple worlds\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const projectionExtent = projection.getExtent();\n\n    const extent = frameState.extent;\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n\n    const startWorld = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n\n    let world = startWorld;\n    const renderCount = this.indicesBuffer_.getSize();\n\n    do {\n      // apply the current projection transform with the invert of the one used to fill buffers\n      this.helper.makeProjectionTransform(frameState, this.currentTransform_);\n      translateTransform(this.currentTransform_, world * worldWidth, 0);\n      multiplyTransform(this.currentTransform_, this.invertRenderTransform_);\n      this.helper.applyUniforms(frameState);\n\n      this.helper.drawElements(0, renderCount);\n    } while (++world < endWorld);\n\n    this.helper.finalizeDraw(\n      frameState,\n      this.dispatchPreComposeEvent,\n      this.dispatchPostComposeEvent\n    );\n    const canvas = this.helper.getCanvas();\n\n    if (this.hitDetectionEnabled_) {\n      this.renderHitDetection(frameState, startWorld, endWorld, worldWidth);\n      this.hitRenderTarget_.clearCachedData();\n    }\n\n    this.postRender(gl, frameState);\n\n    return canvas;\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrameInternal(frameState) {\n    const layer = this.getLayer();\n    const vectorSource = layer.getSource();\n    const viewState = frameState.viewState;\n    const viewNotMoving =\n      !frameState.viewHints[ViewHint.ANIMATING] &&\n      !frameState.viewHints[ViewHint.INTERACTING];\n    const extentChanged = !equals(this.previousExtent_, frameState.extent);\n    const sourceChanged = this.sourceRevision_ < vectorSource.getRevision();\n\n    if (sourceChanged) {\n      this.sourceRevision_ = vectorSource.getRevision();\n    }\n\n    if (viewNotMoving && (extentChanged || sourceChanged)) {\n      const projection = viewState.projection;\n      const resolution = viewState.resolution;\n\n      const renderBuffer =\n        layer instanceof BaseVector ? layer.getRenderBuffer() : 0;\n      const extent = buffer(frameState.extent, renderBuffer * resolution);\n      vectorSource.loadFeatures(extent, resolution, projection);\n\n      this.rebuildBuffers_(frameState);\n      this.previousExtent_ = frameState.extent.slice();\n    }\n\n    this.helper.useProgram(this.program_, frameState);\n    this.helper.prepareDraw(frameState);\n\n    // write new data\n    this.helper.bindBuffer(this.verticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n    this.helper.enableAttributes(this.attributes);\n\n    return true;\n  }\n\n  /**\n   * Rebuild internal webgl buffers based on current view extent; costly, should not be called too much\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  rebuildBuffers_(frameState) {\n    // saves the projection transform for the current frame state\n    const projectionTransform = createTransform();\n    this.helper.makeProjectionTransform(frameState, projectionTransform);\n\n    // here we anticipate the amount of render instructions that we well generate\n    // this can be done since we know that for normal render we only have x, y as base instructions,\n    // and x, y, r, g, b, a and featureUid for hit render instructions\n    // and we also know the amount of custom attributes to append to these\n    const totalInstructionsCount =\n      (2 + this.customAttributes.length) * this.featureCount_;\n    if (\n      !this.renderInstructions_ ||\n      this.renderInstructions_.length !== totalInstructionsCount\n    ) {\n      this.renderInstructions_ = new Float32Array(totalInstructionsCount);\n    }\n    if (this.hitDetectionEnabled_) {\n      const totalHitInstructionsCount =\n        (7 + this.customAttributes.length) * this.featureCount_;\n      if (\n        !this.hitRenderInstructions_ ||\n        this.hitRenderInstructions_.length !== totalHitInstructionsCount\n      ) {\n        this.hitRenderInstructions_ = new Float32Array(\n          totalHitInstructionsCount\n        );\n      }\n    }\n\n    // loop on features to fill the buffer\n    let featureCache, geometry;\n    const tmpCoords = [];\n    const tmpColor = [];\n    let renderIndex = 0;\n    let hitIndex = 0;\n    let hitColor;\n    for (const featureUid in this.featureCache_) {\n      featureCache = this.featureCache_[featureUid];\n      geometry = /** @type {import(\"../../geom\").Point} */ (\n        featureCache.geometry\n      );\n      if (!geometry || geometry.getType() !== 'Point') {\n        continue;\n      }\n\n      tmpCoords[0] = geometry.getFlatCoordinates()[0];\n      tmpCoords[1] = geometry.getFlatCoordinates()[1];\n      applyTransform(projectionTransform, tmpCoords);\n\n      hitColor = colorEncodeId(hitIndex + 6, tmpColor);\n\n      this.renderInstructions_[renderIndex++] = tmpCoords[0];\n      this.renderInstructions_[renderIndex++] = tmpCoords[1];\n\n      // for hit detection, the feature uid is saved in the opacity value\n      // and the index of the opacity value is encoded in the color values\n      if (this.hitDetectionEnabled_) {\n        this.hitRenderInstructions_[hitIndex++] = tmpCoords[0];\n        this.hitRenderInstructions_[hitIndex++] = tmpCoords[1];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[0];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[1];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[2];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[3];\n        this.hitRenderInstructions_[hitIndex++] = Number(featureUid);\n      }\n\n      // pushing custom attributes\n      let value;\n      for (let j = 0; j < this.customAttributes.length; j++) {\n        value = this.customAttributes[j].callback(\n          featureCache.feature,\n          featureCache.properties\n        );\n        this.renderInstructions_[renderIndex++] = value;\n        if (this.hitDetectionEnabled_) {\n          this.hitRenderInstructions_[hitIndex++] = value;\n        }\n      }\n    }\n\n    /** @type {import('../../render/webgl/constants.js').WebGLWorkerGenerateBuffersMessage} */\n    const message = {\n      id: ++this.lastSentId,\n      type: WebGLWorkerMessageType.GENERATE_POINT_BUFFERS,\n      renderInstructions: this.renderInstructions_.buffer,\n      customAttributesSize: this.customAttributes.length,\n    };\n    // additional properties will be sent back as-is by the worker\n    message['projectionTransform'] = projectionTransform;\n    this.ready = false;\n    this.worker_.postMessage(message, [this.renderInstructions_.buffer]);\n    this.renderInstructions_ = null;\n\n    /** @type {import('../../render/webgl/constants.js').WebGLWorkerGenerateBuffersMessage} */\n    if (this.hitDetectionEnabled_) {\n      const hitMessage = {\n        id: 0,\n        type: WebGLWorkerMessageType.GENERATE_POINT_BUFFERS,\n        renderInstructions: this.hitRenderInstructions_.buffer,\n        customAttributesSize: 5 + this.customAttributes.length,\n      };\n      hitMessage['projectionTransform'] = projectionTransform;\n      hitMessage['hitDetection'] = true;\n      this.worker_.postMessage(hitMessage, [\n        this.hitRenderInstructions_.buffer,\n      ]);\n      this.hitRenderInstructions_ = null;\n    }\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    assert(this.hitDetectionEnabled_, 66);\n    if (!this.hitRenderInstructions_) {\n      return undefined;\n    }\n\n    const pixel = applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice()\n    );\n\n    const data = this.hitRenderTarget_.readPixel(pixel[0] / 2, pixel[1] / 2);\n    const color = [data[0] / 255, data[1] / 255, data[2] / 255, data[3] / 255];\n    const index = colorDecodeId(color);\n    const opacity = this.hitRenderInstructions_[index];\n    const uid = Math.floor(opacity).toString();\n\n    const source = this.getLayer().getSource();\n    const feature = source.getFeatureByUid(uid);\n    if (feature) {\n      return callback(feature, this.getLayer(), null);\n    }\n    return undefined;\n  }\n\n  /**\n   * Render the hit detection data to the corresponding render target\n   * @param {import(\"../../Map.js\").FrameState} frameState current frame state\n   * @param {number} startWorld the world to render in the first iteration\n   * @param {number} endWorld the last world to render\n   * @param {number} worldWidth the width of the worlds being rendered\n   */\n  renderHitDetection(frameState, startWorld, endWorld, worldWidth) {\n    // skip render entirely if vertex buffers not ready/generated yet\n    if (!this.hitVerticesBuffer_.getSize()) {\n      return;\n    }\n\n    let world = startWorld;\n\n    this.hitRenderTarget_.setSize([\n      Math.floor(frameState.size[0] / 2),\n      Math.floor(frameState.size[1] / 2),\n    ]);\n\n    this.helper.useProgram(this.hitProgram_, frameState);\n    this.helper.prepareDrawToRenderTarget(\n      frameState,\n      this.hitRenderTarget_,\n      true\n    );\n\n    this.helper.bindBuffer(this.hitVerticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n    this.helper.enableAttributes(this.hitDetectionAttributes);\n\n    do {\n      this.helper.makeProjectionTransform(frameState, this.currentTransform_);\n      translateTransform(this.currentTransform_, world * worldWidth, 0);\n      multiplyTransform(this.currentTransform_, this.invertRenderTransform_);\n      this.helper.applyUniforms(frameState);\n\n      const renderCount = this.indicesBuffer_.getSize();\n      this.helper.drawElements(0, renderCount);\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.worker_.terminate();\n    this.layer_ = null;\n    this.sourceListenKeys_.forEach(function (key) {\n      unlistenByKey(key);\n    });\n    this.sourceListenKeys_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default WebGLPointsLayerRenderer;\n","\n        export function create() {\n          const source = \"const e=\\\"GENERATE_POLYGON_BUFFERS\\\",t=\\\"GENERATE_POINT_BUFFERS\\\",n=\\\"GENERATE_LINE_STRING_BUFFERS\\\",r={1:\\\"The view center is not defined\\\",2:\\\"The view resolution is not defined\\\",3:\\\"The view rotation is not defined\\\",4:\\\"`image` and `src` cannot be provided at the same time\\\",5:\\\"`imgSize` must be set when `image` is provided\\\",7:\\\"`format` must be set when `url` is set\\\",8:\\\"Unknown `serverType` configured\\\",9:\\\"`url` must be configured or set using `#setUrl()`\\\",10:\\\"The default `geometryFunction` can only handle `Point` geometries\\\",11:\\\"`options.featureTypes` must be an Array\\\",12:\\\"`options.geometryName` must also be provided when `options.bbox` is set\\\",13:\\\"Invalid corner\\\",14:\\\"Invalid color\\\",15:\\\"Tried to get a value for a key that does not exist in the cache\\\",16:\\\"Tried to set a value for a key that is used already\\\",17:\\\"`resolutions` must be sorted in descending order\\\",18:\\\"Either `origin` or `origins` must be configured, never both\\\",19:\\\"Number of `tileSizes` and `resolutions` must be equal\\\",20:\\\"Number of `origins` and `resolutions` must be equal\\\",22:\\\"Either `tileSize` or `tileSizes` must be configured, never both\\\",24:\\\"Invalid extent or geometry provided as `geometry`\\\",25:\\\"Cannot fit empty extent provided as `geometry`\\\",26:\\\"Features must have an id set\\\",27:\\\"Features must have an id set\\\",28:'`renderMode` must be `\\\"hybrid\\\"` or `\\\"vector\\\"`',30:\\\"The passed `feature` was already added to the source\\\",31:\\\"Tried to enqueue an `element` that was already added to the queue\\\",32:\\\"Transformation matrix cannot be inverted\\\",33:\\\"Invalid units\\\",34:\\\"Invalid geometry layout\\\",36:\\\"Unknown SRS type\\\",37:\\\"Unknown geometry type found\\\",38:\\\"`styleMapValue` has an unknown type\\\",39:\\\"Unknown geometry type\\\",40:\\\"Expected `feature` to have a geometry\\\",41:\\\"Expected an `ol/style/Style` or an array of `ol/style/Style.js`\\\",42:\\\"Question unknown, the answer is 42\\\",43:\\\"Expected `layers` to be an array or a `Collection`\\\",47:\\\"Expected `controls` to be an array or an `ol/Collection`\\\",48:\\\"Expected `interactions` to be an array or an `ol/Collection`\\\",49:\\\"Expected `overlays` to be an array or an `ol/Collection`\\\",50:\\\"`options.featureTypes` should be an Array\\\",51:\\\"Either `url` or `tileJSON` options must be provided\\\",52:\\\"Unknown `serverType` configured\\\",53:\\\"Unknown `tierSizeCalculation` configured\\\",55:\\\"The {-y} placeholder requires a tile grid with extent\\\",56:\\\"mapBrowserEvent must originate from a pointer event\\\",57:\\\"At least 2 conditions are required\\\",59:\\\"Invalid command found in the PBF\\\",60:\\\"Missing or invalid `size`\\\",61:\\\"Cannot determine IIIF Image API version from provided image information JSON\\\",62:\\\"A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`\\\",64:\\\"Layer opacity must be a number\\\",66:\\\"`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`\\\",67:\\\"A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both\\\",68:\\\"A VectorTile source can only be rendered if it has a projection compatible with the view projection\\\",69:\\\"`width` or `height` cannot be provided together with `scale`\\\"};class o extends Error{constructor(e){const t=r[e];super(t),this.code=e,this.name=\\\"AssertionError\\\",this.message=t}}var i=o;function a(e,t){const n=t[0],r=t[1];return t[0]=e[0]*n+e[2]*r+e[4],t[1]=e[1]*n+e[3]*r+e[5],t}function s(e,t){const n=(r=t)[0]*r[3]-r[1]*r[2];var r;!function(e,t){if(!e)throw new i(t)}(0!==n,32);const o=t[0],a=t[1],s=t[2],u=t[3],f=t[4],x=t[5];return e[0]=u/n,e[1]=-a/n,e[2]=-s/n,e[3]=o/n,e[4]=(s*x-u*f)/n,e[5]=-(o*x-a*f)/n,e}function u(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\\\"default\\\")?e.default:e}new Array(6);var f={exports:{}};function x(e,t,n){n=n||2;var r,o,i,a,s,u,f,x=t&&t.length,h=x?t[0]*n:e.length,v=l(e,0,h,n,!0),d=[];if(!v||v.next===v.prev)return d;if(x&&(v=function(e,t,n,r){var o,i,a,s=[];for(o=0,i=t.length;o<i;o++)(a=l(e,t[o]*r,o<i-1?t[o+1]*r:e.length,r,!1))===a.next&&(a.steiner=!0),s.push(A(a));for(s.sort(b),o=0;o<s.length;o++)n=g(s[o],n);return n}(e,t,v,n)),e.length>80*n){r=i=e[0],o=a=e[1];for(var y=n;y<h;y+=n)(s=e[y])<r&&(r=s),(u=e[y+1])<o&&(o=u),s>i&&(i=s),u>a&&(a=u);f=0!==(f=Math.max(i-r,a-o))?32767/f:0}return c(v,d,n,r,o,f,0),d}function l(e,t,n,r,o){var i,a;if(o===P(e,t,n,r)>0)for(i=t;i<n;i+=r)a=k(i,e[i],e[i+1],a);else for(i=n-r;i>=t;i-=r)a=k(i,e[i],e[i+1],a);return a&&F(a,a.next)&&(R(a),a=a.next),a}function h(e,t){if(!e)return e;t||(t=e);var n,r=e;do{if(n=!1,r.steiner||!F(r,r.next)&&0!==Z(r.prev,r,r.next))r=r.next;else{if(R(r),(r=t=r.prev)===r.next)break;n=!0}}while(n||r!==t);return t}function c(e,t,n,r,o,i,a){if(e){!a&&i&&function(e,t,n,r){var o=e;do{0===o.z&&(o.z=w(o.x,o.y,t,n,r)),o.prevZ=o.prev,o.nextZ=o.next,o=o.next}while(o!==e);o.prevZ.nextZ=null,o.prevZ=null,function(e){var t,n,r,o,i,a,s,u,f=1;do{for(n=e,e=null,i=null,a=0;n;){for(a++,r=n,s=0,t=0;t<f&&(s++,r=r.nextZ);t++);for(u=f;s>0||u>0&&r;)0!==s&&(0===u||!r||n.z<=r.z)?(o=n,n=n.nextZ,s--):(o=r,r=r.nextZ,u--),i?i.nextZ=o:e=o,o.prevZ=i,i=o;n=r}i.nextZ=null,f*=2}while(a>1)}(o)}(e,r,o,i);for(var s,u,f=e;e.prev!==e.next;)if(s=e.prev,u=e.next,i?d(e,r,o,i):v(e))t.push(s.i/n|0),t.push(e.i/n|0),t.push(u.i/n|0),R(e),e=u.next,f=u.next;else if((e=u)===f){a?1===a?c(e=y(h(e),t,n),t,n,r,o,i,2):2===a&&p(e,t,n,r,o,i):c(h(e),t,n,r,o,i,1);break}}}function v(e){var t=e.prev,n=e,r=e.next;if(Z(t,n,r)>=0)return!1;for(var o=t.x,i=n.x,a=r.x,s=t.y,u=n.y,f=r.y,x=o<i?o<a?o:a:i<a?i:a,l=s<u?s<f?s:f:u<f?u:f,h=o>i?o>a?o:a:i>a?i:a,c=s>u?s>f?s:f:u>f?u:f,v=r.next;v!==t;){if(v.x>=x&&v.x<=h&&v.y>=l&&v.y<=c&&E(o,s,i,u,a,f,v.x,v.y)&&Z(v.prev,v,v.next)>=0)return!1;v=v.next}return!0}function d(e,t,n,r){var o=e.prev,i=e,a=e.next;if(Z(o,i,a)>=0)return!1;for(var s=o.x,u=i.x,f=a.x,x=o.y,l=i.y,h=a.y,c=s<u?s<f?s:f:u<f?u:f,v=x<l?x<h?x:h:l<h?l:h,d=s>u?s>f?s:f:u>f?u:f,y=x>l?x>h?x:h:l>h?l:h,p=w(c,v,t,n,r),b=w(d,y,t,n,r),g=e.prevZ,m=e.nextZ;g&&g.z>=p&&m&&m.z<=b;){if(g.x>=c&&g.x<=d&&g.y>=v&&g.y<=y&&g!==o&&g!==a&&E(s,x,u,l,f,h,g.x,g.y)&&Z(g.prev,g,g.next)>=0)return!1;if(g=g.prevZ,m.x>=c&&m.x<=d&&m.y>=v&&m.y<=y&&m!==o&&m!==a&&E(s,x,u,l,f,h,m.x,m.y)&&Z(m.prev,m,m.next)>=0)return!1;m=m.nextZ}for(;g&&g.z>=p;){if(g.x>=c&&g.x<=d&&g.y>=v&&g.y<=y&&g!==o&&g!==a&&E(s,x,u,l,f,h,g.x,g.y)&&Z(g.prev,g,g.next)>=0)return!1;g=g.prevZ}for(;m&&m.z<=b;){if(m.x>=c&&m.x<=d&&m.y>=v&&m.y<=y&&m!==o&&m!==a&&E(s,x,u,l,f,h,m.x,m.y)&&Z(m.prev,m,m.next)>=0)return!1;m=m.nextZ}return!0}function y(e,t,n){var r=e;do{var o=r.prev,i=r.next.next;!F(o,i)&&T(o,r,r.next,i)&&z(o,i)&&z(i,o)&&(t.push(o.i/n|0),t.push(r.i/n|0),t.push(i.i/n|0),R(r),R(r.next),r=e=i),r=r.next}while(r!==e);return h(r)}function p(e,t,n,r,o,i){var a=e;do{for(var s=a.next.next;s!==a.prev;){if(a.i!==s.i&&M(a,s)){var u=U(a,s);return a=h(a,a.next),u=h(u,u.next),c(a,t,n,r,o,i,0),void c(u,t,n,r,o,i,0)}s=s.next}a=a.next}while(a!==e)}function b(e,t){return e.x-t.x}function g(e,t){var n=function(e,t){var n,r=t,o=e.x,i=e.y,a=-1/0;do{if(i<=r.y&&i>=r.next.y&&r.next.y!==r.y){var s=r.x+(i-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(s<=o&&s>a&&(a=s,n=r.x<r.next.x?r:r.next,s===o))return n}r=r.next}while(r!==t);if(!n)return null;var u,f=n,x=n.x,l=n.y,h=1/0;r=n;do{o>=r.x&&r.x>=x&&o!==r.x&&E(i<l?o:a,i,x,l,i<l?a:o,i,r.x,r.y)&&(u=Math.abs(i-r.y)/(o-r.x),z(r,e)&&(u<h||u===h&&(r.x>n.x||r.x===n.x&&m(n,r)))&&(n=r,h=u)),r=r.next}while(r!==f);return n}(e,t);if(!n)return t;var r=U(n,e);return h(r,r.next),h(n,n.next)}function m(e,t){return Z(e.prev,e,t.prev)<0&&Z(t.next,e,e.next)<0}function w(e,t,n,r,o){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=(e-n)*o|0)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=(t-r)*o|0)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function A(e){var t=e,n=e;do{(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next}while(t!==e);return n}function E(e,t,n,r,o,i,a,s){return(o-a)*(t-s)>=(e-a)*(i-s)&&(e-a)*(r-s)>=(n-a)*(t-s)&&(n-a)*(i-s)>=(o-a)*(r-s)}function M(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){var n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&T(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}(e,t)&&(z(e,t)&&z(t,e)&&function(e,t){var n=e,r=!1,o=(e.x+t.x)/2,i=(e.y+t.y)/2;do{n.y>i!=n.next.y>i&&n.next.y!==n.y&&o<(n.next.x-n.x)*(i-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==e);return r}(e,t)&&(Z(e.prev,e,t.prev)||Z(e,t.prev,t))||F(e,t)&&Z(e.prev,e,e.next)>0&&Z(t.prev,t,t.next)>0)}function Z(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function F(e,t){return e.x===t.x&&e.y===t.y}function T(e,t,n,r){var o=S(Z(e,t,n)),i=S(Z(e,t,r)),a=S(Z(n,r,e)),s=S(Z(n,r,t));return o!==i&&a!==s||(!(0!==o||!I(e,n,t))||(!(0!==i||!I(e,r,t))||(!(0!==a||!I(n,e,r))||!(0!==s||!I(n,t,r)))))}function I(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function S(e){return e>0?1:e<0?-1:0}function z(e,t){return Z(e.prev,e,e.next)<0?Z(e,t,e.next)>=0&&Z(e,e.prev,t)>=0:Z(e,t,e.prev)<0||Z(e,e.next,t)<0}function U(e,t){var n=new B(e.i,e.x,e.y),r=new B(t.i,t.x,t.y),o=e.next,i=t.prev;return e.next=t,t.prev=e,n.next=o,o.prev=n,r.next=n,n.prev=r,i.next=r,r.prev=i,r}function k(e,t,n,r){var o=new B(e,t,n);return r?(o.next=r.next,o.prev=r,r.next.prev=o,r.next=o):(o.prev=o,o.next=o),o}function R(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function B(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function P(e,t,n,r){for(var o=0,i=t,a=n-r;i<n;i+=r)o+=(e[a]-e[i])*(e[i+1]+e[a+1]),a=i;return o}f.exports=x,f.exports.default=x,x.deviation=function(e,t,n,r){var o=t&&t.length,i=o?t[0]*n:e.length,a=Math.abs(P(e,0,i,n));if(o)for(var s=0,u=t.length;s<u;s++){var f=t[s]*n,x=s<u-1?t[s+1]*n:e.length;a-=Math.abs(P(e,f,x,n))}var l=0;for(s=0;s<r.length;s+=3){var h=r[s]*n,c=r[s+1]*n,v=r[s+2]*n;l+=Math.abs((e[h]-e[v])*(e[c+1]-e[h+1])-(e[h]-e[c])*(e[v+1]-e[h+1]))}return 0===a&&0===l?0:Math.abs((l-a)/a)},x.flatten=function(e){for(var t=e[0][0].length,n={vertices:[],holes:[],dimensions:t},r=0,o=0;o<e.length;o++){for(var i=0;i<e[o].length;i++)for(var a=0;a<t;a++)n.vertices.push(e[o][i][a]);o>0&&(r+=e[o-1].length,n.holes.push(r))}return n};var N=u(f.exports);const _=[],O={vertexPosition:0,indexPosition:0};function q(e,t,n,r,o){e[t+0]=n,e[t+1]=r,e[t+2]=o}function L(e,t,n,r,o,i){const a=3+o,s=e[t+0],u=e[t+1],f=_;f.length=o;for(let n=0;n<f.length;n++)f[n]=e[t+2+n];let x=i?i.vertexPosition:0,l=i?i.indexPosition:0;const h=x/a;return q(n,x,s,u,0),f.length&&n.set(f,x+3),x+=a,q(n,x,s,u,1),f.length&&n.set(f,x+3),x+=a,q(n,x,s,u,2),f.length&&n.set(f,x+3),x+=a,q(n,x,s,u,3),f.length&&n.set(f,x+3),x+=a,r[l++]=h,r[l++]=h+1,r[l++]=h+3,r[l++]=h+1,r[l++]=h+2,r[l++]=h+3,O.vertexPosition=x,O.indexPosition=l,O}function C(e,t,n,r,o,i,s,u,f,x){const l=5+u.length,h=i.length/l,c=[e[t+0],e[t+1]],v=[e[n],e[n+1]],d=a(x,[...c]),y=a(x,[...v]);function p(e,t,n){const r=1e4;return Math.round(1500*t)+Math.round(1500*n)*r+e*r*r}function b(e,t,n){const r=Math.sqrt((t[0]-e[0])*(t[0]-e[0])+(t[1]-e[1])*(t[1]-e[1])),o=[(t[0]-e[0])/r,(t[1]-e[1])/r],i=[-o[1],o[0]],a=Math.sqrt((n[0]-e[0])*(n[0]-e[0])+(n[1]-e[1])*(n[1]-e[1])),s=[(n[0]-e[0])/a,(n[1]-e[1])/a],u=0===r||0===a?0:Math.acos((f=s[0]*o[0]+s[1]*o[1],x=-1,l=1,Math.min(Math.max(f,x),l)));var f,x,l;return s[0]*i[0]+s[1]*i[1]>0?u:2*Math.PI-u}const g=null!==o;let m=0,w=0;if(null!==r){m=b(d,y,a(x,[...[e[r],e[r+1]]]))}if(g){w=b(y,d,a(x,[...[e[o],e[o+1]]]))}i.push(c[0],c[1],v[0],v[1],p(0,m,w)),i.push(...u),i.push(c[0],c[1],v[0],v[1],p(1,m,w)),i.push(...u),i.push(c[0],c[1],v[0],v[1],p(2,m,w)),i.push(...u),i.push(c[0],c[1],v[0],v[1],p(3,m,w)),i.push(...u),s.push(h,h+1,h+2,h+1,h+3,h+2)}function G(e,t,n,r,o){const i=2+o;let a=t;const s=e.slice(a,a+o);a+=o;const u=e[a++];let f=0;const x=new Array(u-1);for(let t=0;t<u;t++)f+=e[a++],t<u-1&&(x[t]=f);const l=e.slice(a,a+2*f),h=N(l,x,2);for(let e=0;e<h.length;e++)r.push(h[e]+n.length/i);for(let e=0;e<l.length;e+=2)n.push(l[e],l[e+1],...s);return a+2*f}const j=self;j.onmessage=r=>{const o=r.data;switch(o.type){case t:{const e=3,t=2,n=o.customAttributesSize,r=t+n,i=new Float32Array(o.renderInstructions),a=i.length/r,s=4*a*(n+e),u=new Uint32Array(6*a),f=new Float32Array(s);let x;for(let e=0;e<i.length;e+=r)x=L(i,e,f,u,n,x);const l=Object.assign({vertexBuffer:f.buffer,indexBuffer:u.buffer,renderInstructions:i.buffer},o);j.postMessage(l,[f.buffer,u.buffer,i.buffer]);break}case n:{const e=[],t=[],n=o.customAttributesSize,r=2,i=new Float32Array(o.renderInstructions);let a=0;const u=o.renderInstructionsTransform,f=[1,0,0,1,0,0];let x,l;for(s(f,u);a<i.length;){l=Array.from(i.slice(a,a+n)),a+=n,x=i[a++];for(let n=0;n<x-1;n++)C(i,a+n*r,a+(n+1)*r,n>0?a+(n-1)*r:null,n<x-2?a+(n+2)*r:null,e,t,l,0,f);a+=x*r}const h=Uint32Array.from(t),c=Float32Array.from(e),v=Object.assign({vertexBuffer:c.buffer,indexBuffer:h.buffer,renderInstructions:i.buffer},o);j.postMessage(v,[c.buffer,h.buffer,i.buffer]);break}case e:{const e=[],t=[],n=o.customAttributesSize,r=new Float32Array(o.renderInstructions);let i=0;for(;i<r.length;)i=G(r,i,e,t,n);const a=Uint32Array.from(t),s=Float32Array.from(e),u=Object.assign({vertexBuffer:s.buffer,indexBuffer:a.buffer,renderInstructions:r.buffer},o);j.postMessage(u,[s.buffer,a.buffer,r.buffer]);break}}};\";\n          return new Worker(typeof Blob === 'undefined'\n            ? 'data:application/javascript;base64,' + Buffer.from(source, 'binary').toString('base64')\n            : URL.createObjectURL(new Blob([source], {type: 'application/javascript'})));\n        }\n      \n","/**\n * @module ol/layer/Heatmap\n */\nimport BaseVector from './BaseVector.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"../source/Vector.js\").default<import(\"../geom/Point.js\").default>} [source] Point source.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius',\n};\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {BaseVector<import(\"../source/Vector.js\").default, WebGLPointsLayerRenderer>}\n * @api\n */\nclass Heatmap extends BaseVector {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.weight;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.gradient_ = null;\n\n    this.addChangeListener(Property.GRADIENT, this.handleGradientChanged_);\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    const weight = options.weight ? options.weight : 'weight';\n    if (typeof weight === 'string') {\n      this.weightFunction_ = function (feature) {\n        return feature.get(weight);\n      };\n    } else {\n      this.weightFunction_ = weight;\n    }\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  getBlur() {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  }\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array<string>} Colors.\n   * @api\n   * @observable\n   */\n  getGradient() {\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n  }\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  getRadius() {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  }\n\n  /**\n   * @private\n   */\n  handleGradientChanged_() {\n    this.gradient_ = createGradient(this.getGradient());\n  }\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  setBlur(blur) {\n    this.set(Property.BLUR, blur);\n  }\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  setGradient(colors) {\n    this.set(Property.GRADIENT, colors);\n  }\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  setRadius(radius) {\n    this.set(Property.RADIUS, radius);\n  }\n\n  createRenderer() {\n    return new WebGLPointsLayerRenderer(this, {\n      className: this.getClassName(),\n      attributes: [\n        {\n          name: 'weight',\n          callback: (feature) => {\n            const weight = this.weightFunction_(feature);\n            return weight !== undefined ? clamp(weight, 0, 1) : 1;\n          },\n        },\n      ],\n      vertexShader: `\n        precision mediump float;\n        uniform mat4 u_projectionMatrix;\n        uniform mat4 u_offsetScaleMatrix;\n        uniform float u_size;\n        attribute vec2 a_position;\n        attribute float a_index;\n        attribute float a_weight;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n\n        void main(void) {\n          mat4 offsetMatrix = u_offsetScaleMatrix;\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\n          v_texCoord = vec2(u, v);\n          v_weight = a_weight;\n        }`,\n      fragmentShader: `\n        precision mediump float;\n        uniform float u_blurSlope;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n\n        void main(void) {\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\n          gl_FragColor = vec4(alpha, alpha, alpha, alpha);\n        }`,\n      hitVertexShader: `\n        precision mediump float;\n        uniform mat4 u_projectionMatrix;\n        uniform mat4 u_offsetScaleMatrix;\n        uniform float u_size;\n        attribute vec2 a_position;\n        attribute float a_index;\n        attribute float a_weight;\n        attribute vec4 a_hitColor;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n        varying vec4 v_hitColor;\n\n        void main(void) {\n          mat4 offsetMatrix = u_offsetScaleMatrix;\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\n          v_texCoord = vec2(u, v);\n          v_hitColor = a_hitColor;\n          v_weight = a_weight;\n        }`,\n      hitFragmentShader: `\n        precision mediump float;\n        uniform float u_blurSlope;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n        varying vec4 v_hitColor;\n\n        void main(void) {\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\n          if (alpha < 0.05) {\n            discard;\n          }\n\n          gl_FragColor = v_hitColor;\n        }`,\n      uniforms: {\n        u_size: () => {\n          return (this.get(Property.RADIUS) + this.get(Property.BLUR)) * 2;\n        },\n        u_blurSlope: () => {\n          return (\n            this.get(Property.RADIUS) / Math.max(1, this.get(Property.BLUR))\n          );\n        },\n      },\n      postProcesses: [\n        {\n          fragmentShader: `\n            precision mediump float;\n\n            uniform sampler2D u_image;\n            uniform sampler2D u_gradientTexture;\n            uniform float u_opacity;\n\n            varying vec2 v_texCoord;\n\n            void main() {\n              vec4 color = texture2D(u_image, v_texCoord);\n              gl_FragColor.a = color.a * u_opacity;\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\n              gl_FragColor.rgb *= gl_FragColor.a;\n            }`,\n          uniforms: {\n            u_gradientTexture: () => {\n              return this.gradient_;\n            },\n            u_opacity: () => {\n              return this.getOpacity();\n            },\n          },\n        },\n      ],\n    });\n  }\n\n  renderDeclutter() {}\n}\n\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {HTMLCanvasElement} canvas with gradient texture.\n */\nfunction createGradient(colors) {\n  const width = 1;\n  const height = 256;\n  const context = createCanvasContext2D(width, height);\n\n  const gradient = context.createLinearGradient(0, 0, width, height);\n  const step = 1 / (colors.length - 1);\n  for (let i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.canvas;\n}\n\nexport default Heatmap;\n","/**\n * @module ol/layer/VectorImage\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorImageLayerRenderer from '../renderer/canvas/VectorImageLayer.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text on this layer. The priority is defined\n * by the `zIndex` of the style and the render order of features. Higher z-index means higher priority.\n * Within the same z-index, a feature rendered before another has higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {number} [imageRatio=1] Ratio by which the rendered extent should be larger than the\n * viewport extent. A larger ratio avoids cut images during panning, but will cause a decrease in performance.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, to an image. This layer type provides great performance\n * during panning and zooming, but point symbols and texts are always rotated with the view and\n * pixels are scaled during zoom animations. For more accurate rendering of vector data, use\n * {@link module:ol/layer/Vector~VectorLayer} instead.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorImageLayerRenderer>}\n * @api\n */\nclass VectorImageLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.imageRatio;\n    super(baseOptions);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.imageRatio_ =\n      options.imageRatio !== undefined ? options.imageRatio : 1;\n  }\n\n  /**\n   * @return {number} Ratio between rendered extent size and viewport extent size.\n   */\n  getImageRatio() {\n    return this.imageRatio_;\n  }\n\n  createRenderer() {\n    return new CanvasVectorImageLayerRenderer(this);\n  }\n}\n\nexport default VectorImageLayer;\n","/**\n * @module ol/interaction/DblClickDragZoom\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds. *\n * @property {number} [delta=1] The zoom delta applied on move of one pixel. *\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by double tap/clik then drag up/down\n * with one finger/left mouse.\n * @api\n */\nclass DblClickDragZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleDeltaByPixel_ = options.delta ? options.delta : 0.01;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.handlingDownUpSequence_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.handlingDoubleDownSequence_ = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent  map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence_) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence_ = handledUp;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        if (this.handlingDoubleDownSequence_) {\n          this.handlingDoubleDownSequence_ = false;\n          const handled = this.handleDownEvent(mapBrowserEvent);\n          this.handlingDownUpSequence_ = handled;\n          stopEvent = this.stopDown(handled);\n        } else {\n          stopEvent = this.stopDown(false);\n          this.waitForDblTap();\n        }\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.down_.originalEvent;\n    const distance = touch0.clientY - touch1.clientY;\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta =\n        1 - (this.lastDistance_ - distance) * this.scaleDeltaByPixel_;\n    }\n    this.lastDistance_ = distance;\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale, bypass the resolution constraint\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    map.render();\n    view.adjustResolutionInternal(scaleDelta);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length == 1) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      this.down_ = mapBrowserEvent;\n      if (!this.handlingDownUpSequence_) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer up events zooming out.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length == 0) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      this.handlingDownUpSequence_ = false;\n      this.handlingDoubleDownSequence_ = false;\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = Object.values(this.trackedPointers_);\n    }\n  }\n\n  /**\n   * Wait the second double finger tap.\n   */\n  waitForDblTap() {\n    if (this.doubleTapTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.doubleTapTimeoutId_);\n      this.doubleTapTimeoutId_ = undefined;\n    } else {\n      this.handlingDoubleDownSequence_ = true;\n      this.doubleTapTimeoutId_ = setTimeout(\n        this.endInteraction.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  endInteraction() {\n    this.handlingDoubleDownSequence_ = false;\n    this.doubleTapTimeoutId_ = undefined;\n  }\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default DblClickDragZoom;\n","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport {TRUE} from '../functions.js';\nimport {get as getProjection, getUserProjection} from '../proj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default|import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors\n * (and/or formats pre-constructed with options).\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n/**\n * @enum {string}\n */\nconst DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nexport class DragAndDropEvent extends Event {\n  /**\n   * @param {DragAndDropEventType} type Type.\n   * @param {File} file File.\n   * @param {Array<import(\"../Feature.js\").default>} [features] Features.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   */\n  constructor(type, file, features, projection) {\n    super(type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     * @api\n     */\n    this.projection = projection;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'addfeatures', DragAndDropEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'addfeatures', Return>} DragAndDropOnSignature\n */\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * @api\n *\n * @fires DragAndDropEvent\n */\nclass DragAndDrop extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      handleEvent: TRUE,\n    });\n\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragAndDropOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.readAsBuffer_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../format/Feature.js\").default>}\n     */\n    this.formats_ = [];\n    const formatConstructors = options.formatConstructors\n      ? options.formatConstructors\n      : [];\n    for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      let format = formatConstructors[i];\n      if (typeof format === 'function') {\n        format = new format();\n      }\n      this.formats_.push(format);\n      this.readAsBuffer_ =\n        this.readAsBuffer_ || format.getType() === 'arraybuffer';\n    }\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = options.projection\n      ? getProjection(options.projection)\n      : null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../source/Vector.js\").default}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.target = options.target ? options.target : null;\n  }\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  handleResult_(file, event) {\n    const result = event.target.result;\n    const map = this.getMap();\n    let projection = this.projection_;\n    if (!projection) {\n      projection = getUserProjection();\n      if (!projection) {\n        const view = map.getView();\n        projection = view.getProjection();\n      }\n    }\n\n    let text;\n    const formats = this.formats_;\n    for (let i = 0, ii = formats.length; i < ii; ++i) {\n      const format = formats[i];\n      let input = result;\n      if (this.readAsBuffer_ && format.getType() !== 'arraybuffer') {\n        if (text === undefined) {\n          text = new TextDecoder().decode(result);\n        }\n        input = text;\n      }\n      const features = this.tryReadFeatures_(format, input, {\n        featureProjection: projection,\n      });\n      if (features && features.length > 0) {\n        if (this.source_) {\n          this.source_.clear();\n          this.source_.addFeatures(features);\n        }\n        this.dispatchEvent(\n          new DragAndDropEvent(\n            DragAndDropEventType.ADD_FEATURES,\n            file,\n            features,\n            projection\n          )\n        );\n        break;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  registerListeners_() {\n    const map = this.getMap();\n    if (map) {\n      const dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [\n        listen(dropArea, EventType.DROP, this.handleDrop, this),\n        listen(dropArea, EventType.DRAGENTER, this.handleStop, this),\n        listen(dropArea, EventType.DRAGOVER, this.handleStop, this),\n        listen(dropArea, EventType.DROP, this.handleStop, this),\n      ];\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (!this.getActive() && active) {\n      this.registerListeners_();\n    }\n    if (this.getActive() && !active) {\n      this.unregisterListeners_();\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.unregisterListeners_();\n    super.setMap(map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  }\n\n  /**\n   * @param {import(\"../format/Feature.js\").default} format Format.\n   * @param {string} text Text.\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n   * @private\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  tryReadFeatures_(format, text, options) {\n    try {\n      return (\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        (format.readFeatures(text, options))\n      );\n    } catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * @private\n   */\n  unregisterListeners_() {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleDrop(event) {\n    const files = event.dataTransfer.files;\n    for (let i = 0, ii = files.length; i < ii; ++i) {\n      const file = files.item(i);\n      const reader = new FileReader();\n      reader.addEventListener(\n        EventType.LOAD,\n        this.handleResult_.bind(this, file)\n      );\n      if (this.readAsBuffer_) {\n        reader.readAsArrayBuffer(file);\n      } else {\n        reader.readAsText(file);\n      }\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleStop(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n  }\n}\n\nexport default DragAndDrop;\n","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport PointerInteraction from './Pointer.js';\nimport {mouseOnly, shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nclass DragRotateAndZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastMagnitude_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const deltaX = offset[0] - size[0] / 2;\n    const deltaY = size[1] / 2 - offset[1];\n    const theta = Math.atan2(deltaY, deltaX);\n    const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    const view = map.getView();\n    if (this.lastAngle_ !== undefined) {\n      const angleDelta = this.lastAngle_ - theta;\n      view.adjustRotationInternal(angleDelta);\n    }\n    this.lastAngle_ = theta;\n    if (this.lastMagnitude_ !== undefined) {\n      view.adjustResolutionInternal(this.lastMagnitude_ / magnitude);\n    }\n    if (this.lastMagnitude_ !== undefined) {\n      this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n    }\n    this.lastMagnitude_ = magnitude;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n    view.endInteraction(this.duration_, direction);\n    this.lastScaleDelta_ = 0;\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (this.condition_(mapBrowserEvent)) {\n      mapBrowserEvent.map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      this.lastMagnitude_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotateAndZoom;\n","/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {\n  always,\n  never,\n  noModifierKeys,\n  shiftKeyOnly,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../extent.js';\nimport {clamp, squaredDistance, toFixed} from '../math.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {\n  distance,\n  squaredDistance as squaredCoordinateDistance,\n} from '../coordinate.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/Geometry.js\").Type} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition.noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition.shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean|import(\"../events/condition.js\").Condition} [trace=false] Trace a portion of another geometry.\n * Ignored when in freehand mode.\n * @property {VectorSource} [traceSource] Source for features to trace.  If tracing is active and a `traceSource` is\n * not provided, the interaction's `source` will be used.  Tracing requires that the interaction is configured with\n * either a `traceSource` or a `source`.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the draw interaction.\n */\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n/**\n * @typedef {Object} TraceState\n * @property {boolean} active Tracing active.\n * @property {import(\"../pixel.js\").Pixel} [startPx] The initially clicked pixel location.\n * @property {Array<TraceTarget>} [targets] Targets available for tracing.\n * @property {number} [targetIndex] The index of the currently traced target.  A value of -1 indicates\n * that no trace target is active.\n */\n\n/**\n * @typedef {Object} TraceTarget\n * @property {Array<import(\"../coordinate.js\").Coordinate>} coordinates Target coordinates.\n * @property {boolean} ring The target coordinates are a linear ring.\n * @property {number} startIndex The index of first traced coordinate.  A fractional index represents an\n * edge intersection.  Index values for rings will wrap (may be negative or larger than coordinates length).\n * @property {number} endIndex The index of last traced coordinate.  Details from startIndex also apply here.\n */\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'Polygon' | 'Circle'} Mode\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n */\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend',\n  /**\n   * Triggered upon feature draw abortion\n   * @event DrawEvent#drawabort\n   * @api\n   */\n  DRAWABORT: 'drawabort',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nexport class DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n  }\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {Array<Feature>} features The candidate features.\n * @return {Array<TraceTarget>} The trace targets.\n */\nfunction getTraceTargets(coordinate, features) {\n  /**\n   * @type {Array<TraceTarget>}\n   */\n  const targets = [];\n\n  for (let i = 0; i < features.length; ++i) {\n    const feature = features[i];\n    const geometry = feature.getGeometry();\n    appendGeometryTraceTargets(coordinate, geometry, targets);\n  }\n\n  return targets;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} a One coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b Another coordinate.\n * @return {number} The squared distance between the two coordinates.\n */\nfunction getSquaredDistance(a, b) {\n  return squaredDistance(a[0], a[1], b[0], b[1]);\n}\n\n/**\n * @param {LineCoordType} coordinates The ring coordinates.\n * @param {number} index The index.  May be wrapped.\n * @return {import(\"../coordinate.js\").Coordinate} The coordinate.\n */\nfunction getCoordinate(coordinates, index) {\n  const count = coordinates.length;\n  if (index < 0) {\n    return coordinates[index + count];\n  }\n  if (index >= count) {\n    return coordinates[index - count];\n  }\n  return coordinates[index];\n}\n\n/**\n * Get the cumulative squared distance along a ring path.  The end index index may be \"wrapped\" and it may\n * be less than the start index to indicate the direction of travel.  The start and end index may have\n * a fractional part to indicate a point between two coordinates.\n * @param {LineCoordType} coordinates Ring coordinates.\n * @param {number} startIndex The start index.\n * @param {number} endIndex The end index.\n * @return {number} The cumulative squared distance along the ring path.\n */\nfunction getCumulativeSquaredDistance(coordinates, startIndex, endIndex) {\n  let lowIndex, highIndex;\n  if (startIndex < endIndex) {\n    lowIndex = startIndex;\n    highIndex = endIndex;\n  } else {\n    lowIndex = endIndex;\n    highIndex = startIndex;\n  }\n  const lowWholeIndex = Math.ceil(lowIndex);\n  const highWholeIndex = Math.floor(highIndex);\n\n  if (lowWholeIndex > highWholeIndex) {\n    // both start and end are on the same segment\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    return getSquaredDistance(start, end);\n  }\n\n  let sd = 0;\n\n  if (lowIndex < lowWholeIndex) {\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = getCoordinate(coordinates, lowWholeIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  if (highWholeIndex < highIndex) {\n    const start = getCoordinate(coordinates, highWholeIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  for (let i = lowWholeIndex; i < highWholeIndex - 1; ++i) {\n    const start = getCoordinate(coordinates, i);\n    const end = getCoordinate(coordinates, i + 1);\n    sd += getSquaredDistance(start, end);\n  }\n\n  return sd;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {import(\"../geom/Geometry.js\").default} geometry The candidate geometry.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendGeometryTraceTargets(coordinate, geometry, targets) {\n  if (geometry instanceof LineString) {\n    appendTraceTarget(coordinate, geometry.getCoordinates(), false, targets);\n    return;\n  }\n  if (geometry instanceof MultiLineString) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], false, targets);\n    }\n    return;\n  }\n  if (geometry instanceof Polygon) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], true, targets);\n    }\n    return;\n  }\n  if (geometry instanceof MultiPolygon) {\n    const polys = geometry.getCoordinates();\n    for (let i = 0, ii = polys.length; i < ii; ++i) {\n      const coordinates = polys[i];\n      for (let j = 0, jj = coordinates.length; j < jj; ++j) {\n        appendTraceTarget(coordinate, coordinates[j], true, targets);\n      }\n    }\n    return;\n  }\n  if (geometry instanceof GeometryCollection) {\n    const geometries = geometry.getGeometries();\n    for (let i = 0; i < geometries.length; ++i) {\n      appendGeometryTraceTargets(coordinate, geometries[i], targets);\n    }\n    return;\n  }\n  // other types cannot be traced\n}\n\n/**\n * @typedef {Object} TraceTargetUpdateInfo\n * @property {number} index The new target index.\n * @property {number} endIndex The new segment end index.\n */\n\n/**\n * @type {TraceTargetUpdateInfo}\n */\nconst sharedUpdateInfo = {index: -1, endIndex: NaN};\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {TraceState} traceState The trace state.\n * @param {import(\"../Map.js\").default} map The map.\n * @param {number} snapTolerance The snap tolerance.\n * @return {TraceTargetUpdateInfo} Information about the new trace target.  The returned\n * object is reused between calls and must not be modified by the caller.\n */\nfunction getTraceTargetUpdate(coordinate, traceState, map, snapTolerance) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n\n  let closestTargetDistance = Infinity;\n\n  let newTargetIndex = -1;\n  let newEndIndex = NaN;\n\n  for (\n    let targetIndex = 0;\n    targetIndex < traceState.targets.length;\n    ++targetIndex\n  ) {\n    const target = traceState.targets[targetIndex];\n    const coordinates = target.coordinates;\n\n    let minSegmentDistance = Infinity;\n    let endIndex;\n    for (\n      let coordinateIndex = 0;\n      coordinateIndex < coordinates.length - 1;\n      ++coordinateIndex\n    ) {\n      const start = coordinates[coordinateIndex];\n      const end = coordinates[coordinateIndex + 1];\n      const rel = getPointSegmentRelationship(x, y, start, end);\n      if (rel.squaredDistance < minSegmentDistance) {\n        minSegmentDistance = rel.squaredDistance;\n        endIndex = coordinateIndex + rel.along;\n      }\n    }\n\n    if (minSegmentDistance < closestTargetDistance) {\n      closestTargetDistance = minSegmentDistance;\n      if (target.ring && traceState.targetIndex === targetIndex) {\n        // same target, maintain the same trace direction\n        if (target.endIndex > target.startIndex) {\n          // forward trace\n          if (endIndex < target.startIndex) {\n            endIndex += coordinates.length;\n          }\n        } else if (target.endIndex < target.startIndex) {\n          // reverse trace\n          if (endIndex > target.startIndex) {\n            endIndex -= coordinates.length;\n          }\n        }\n      }\n      newEndIndex = endIndex;\n      newTargetIndex = targetIndex;\n    }\n  }\n\n  const newTarget = traceState.targets[newTargetIndex];\n  let considerBothDirections = newTarget.ring;\n  if (traceState.targetIndex === newTargetIndex && considerBothDirections) {\n    // only consider switching trace direction if close to the start\n    const newCoordinate = interpolateCoordinate(\n      newTarget.coordinates,\n      newEndIndex\n    );\n    const pixel = map.getPixelFromCoordinate(newCoordinate);\n    if (distance(pixel, traceState.startPx) > snapTolerance) {\n      considerBothDirections = false;\n    }\n  }\n\n  if (considerBothDirections) {\n    const coordinates = newTarget.coordinates;\n    const count = coordinates.length;\n    const startIndex = newTarget.startIndex;\n    const endIndex = newEndIndex;\n    if (startIndex < endIndex) {\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex\n      );\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex - count\n      );\n      if (reverseDistance < forwardDistance) {\n        newEndIndex -= count;\n      }\n    } else {\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex\n      );\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex + count\n      );\n      if (forwardDistance < reverseDistance) {\n        newEndIndex += count;\n      }\n    }\n  }\n\n  sharedUpdateInfo.index = newTargetIndex;\n  sharedUpdateInfo.endIndex = newEndIndex;\n  return sharedUpdateInfo;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The clicked coordinate.\n * @param {Array<import(\"../coordinate.js\").Coordinate>} coordinates The geometry component coordinates.\n * @param {boolean} ring The coordinates represent a linear ring.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendTraceTarget(coordinate, coordinates, ring, targets) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const start = coordinates[i];\n    const end = coordinates[i + 1];\n    const rel = getPointSegmentRelationship(x, y, start, end);\n    if (rel.squaredDistance === 0) {\n      const index = i + rel.along;\n      targets.push({\n        coordinates: coordinates,\n        ring: ring,\n        startIndex: index,\n        endIndex: index,\n      });\n      return;\n    }\n  }\n}\n\n/**\n * @typedef {Object} PointSegmentRelationship\n * @property {number} along The closest point expressed as a fraction along the segment length.\n * @property {number} squaredDistance The squared distance of the point to the segment.\n */\n\n/**\n * @type {PointSegmentRelationship}\n */\nconst sharedRel = {along: 0, squaredDistance: 0};\n\n/**\n * @param {number} x The point x.\n * @param {number} y The point y.\n * @param {import(\"../coordinate.js\").Coordinate} start The segment start.\n * @param {import(\"../coordinate.js\").Coordinate} end The segment end.\n * @return {PointSegmentRelationship} The point segment relationship.  The returned object is\n * shared between calls and must not be modified by the caller.\n */\nfunction getPointSegmentRelationship(x, y, start, end) {\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  let along = 0;\n  let px = x1;\n  let py = y1;\n  if (dx !== 0 || dy !== 0) {\n    along = clamp(((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy), 0, 1);\n    px += dx * along;\n    py += dy * along;\n  }\n\n  sharedRel.along = along;\n  sharedRel.squaredDistance = toFixed(squaredDistance(x, y, px, py), 10);\n  return sharedRel;\n}\n\n/**\n * @param {LineCoordType} coordinates The coordinates.\n * @param {number} index The index.  May be fractional and may wrap.\n * @return {import(\"../coordinate.js\").Coordinate} The interpolated coordinate.\n */\nfunction interpolateCoordinate(coordinates, index) {\n  const count = coordinates.length;\n\n  let startIndex = Math.floor(index);\n  const along = index - startIndex;\n  if (startIndex >= count) {\n    startIndex -= count;\n  } else if (startIndex < 0) {\n    startIndex += count;\n  }\n\n  let endIndex = startIndex + 1;\n  if (endIndex >= count) {\n    endIndex -= count;\n  }\n\n  const start = coordinates[startIndex];\n  const x0 = start[0];\n  const y0 = start[1];\n  const end = coordinates[endIndex];\n  const dx = end[0] - x0;\n  const dy = end[1] - y0;\n\n  return [x0 + dx * along, y0 + dy * along];\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'drawabort'|'drawend'|'drawstart', DrawEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'drawabort'|'drawend'|'drawstart', Return>} DrawOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DrawOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {?}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * Pointer type of the last pointermove event\n     * @type {string}\n     * @private\n     */\n    this.pointerType_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {import(\"../geom/Geometry.js\").Type}\n     * @private\n     */\n    this.type_ = /** @type {import(\"../geom/Geometry.js\").Type} */ (\n      options.type\n    );\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints\n      ? options.minPoints\n      : this.mode_ === 'Polygon'\n      ? 3\n      : 2;\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ =\n      this.mode_ === 'Circle'\n        ? 2\n        : options.maxPoints\n        ? options.maxPoints\n        : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition\n      ? options.finishCondition\n      : TRUE;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      const mode = this.mode_;\n      if (mode === 'Circle') {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          const circle = geometry\n            ? /** @type {Circle} */ (geometry)\n            : new Circle([NaN, NaN]);\n          const center = fromUserCoordinate(coordinates[0], projection);\n          const squaredLength = squaredCoordinateDistance(\n            center,\n            fromUserCoordinate(coordinates[coordinates.length - 1], projection)\n          );\n          circle.setCenterAndRadius(\n            center,\n            Math.sqrt(squaredLength),\n            this.geometryLayout_\n          );\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        let Constructor;\n        if (mode === 'Point') {\n          Constructor = Point;\n        } else if (mode === 'LineString') {\n          Constructor = LineString;\n        } else if (mode === 'Polygon') {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          if (geometry) {\n            if (mode === 'Polygon') {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates(\n                  [coordinates[0].concat([coordinates[0][0]])],\n                  this.geometryLayout_\n                );\n              } else {\n                geometry.setCoordinates([], this.geometryLayout_);\n              }\n            } else {\n              geometry.setCoordinates(coordinates, this.geometryLayout_);\n            }\n          } else {\n            geometry = new Constructor(coordinates, this.geometryLayout_);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ =\n      options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature<import('../geom/SimpleGeometry.js').default>}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance\n      ? options.clickTolerance * options.clickTolerance\n      : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition\n        ? options.freehandCondition\n        : shiftKeyOnly;\n    }\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.traceCondition_;\n    this.setTrace(options.trace || false);\n\n    /**\n     * @type {TraceState}\n     * @private\n     */\n    this.traceState_ = {active: false};\n\n    /**\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.traceSource_ = options.traceSource || options.source || null;\n\n    this.addChangeListener(InteractionProperty.ACTIVE, this.updateState_);\n  }\n\n  /**\n   * Toggle tracing mode or set a tracing condition.\n   *\n   * @param {boolean|import(\"../events/condition.js\").Condition} trace A boolean to toggle tracing mode or an event\n   *     condition that will be checked when a feature is clicked to determine if tracing should be active.\n   */\n  setTrace(trace) {\n    let condition;\n    if (!trace) {\n      condition = never;\n    } else if (trace === true) {\n      condition = always;\n    } else {\n      condition = trace;\n    }\n    this.traceCondition_ = condition;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.originalEvent.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== 'Point' && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (\n      !this.freehand_ &&\n      this.lastDragTime_ &&\n      event.type === MapBrowserEventType.POINTERDRAG\n    ) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null\n    ) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN\n    ) {\n      pass = false;\n    } else if (move && this.getPointerCount() < 2) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        this.handlePointerMove_(event);\n        if (this.shouldHandle_) {\n          // Avoid page scrolling when freehand drawing on mobile\n          event.originalEvent.preventDefault();\n        }\n      } else if (\n        event.originalEvent.pointerType === 'mouse' ||\n        (event.type === MapBrowserEventType.POINTERDRAG &&\n          this.downTimeout_ === undefined)\n      ) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event.coordinate);\n      }\n      return true;\n    }\n\n    if (!this.condition_(event)) {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(() => {\n      this.handlePointerMove_(\n        new MapBrowserEvent(\n          MapBrowserEventType.POINTERMOVE,\n          event.map,\n          event.originalEvent,\n          false,\n          event.frameState\n        )\n      );\n    }, this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  deactivateTrace_() {\n    this.traceState_ = {active: false};\n  }\n\n  /**\n   * Activate or deactivate trace state based on a browser event.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  toggleTraceState_(event) {\n    if (!this.traceSource_ || !this.traceCondition_(event)) {\n      return;\n    }\n\n    if (this.traceState_.active) {\n      this.deactivateTrace_();\n      return;\n    }\n\n    const map = this.getMap();\n    const lowerLeft = map.getCoordinateFromPixel([\n      event.pixel[0] - this.snapTolerance_,\n      event.pixel[1] + this.snapTolerance_,\n    ]);\n    const upperRight = map.getCoordinateFromPixel([\n      event.pixel[0] + this.snapTolerance_,\n      event.pixel[1] - this.snapTolerance_,\n    ]);\n    const extent = boundingExtent([lowerLeft, upperRight]);\n    const features = this.traceSource_.getFeaturesInExtent(extent);\n    if (features.length === 0) {\n      return;\n    }\n\n    const targets = getTraceTargets(event.coordinate, features);\n    if (targets.length) {\n      this.traceState_ = {\n        active: true,\n        startPx: event.pixel.slice(),\n        targets: targets,\n        targetIndex: -1,\n      };\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} endIndex The new end index of the trace.\n   * @private\n   */\n  addOrRemoveTracedCoordinates_(target, endIndex) {\n    // three cases to handle:\n    //  1. traced in the same direction and points need adding\n    //  2. traced in the same direction and points need removing\n    //  3. traced in a new direction\n    const previouslyForward = target.startIndex <= target.endIndex;\n    const currentlyForward = target.startIndex <= endIndex;\n    if (previouslyForward === currentlyForward) {\n      // same direction\n      if (\n        (previouslyForward && endIndex > target.endIndex) ||\n        (!previouslyForward && endIndex < target.endIndex)\n      ) {\n        // case 1 - add new points\n        this.addTracedCoordinates_(target, target.endIndex, endIndex);\n      } else if (\n        (previouslyForward && endIndex < target.endIndex) ||\n        (!previouslyForward && endIndex > target.endIndex)\n      ) {\n        // case 2 - remove old points\n        this.removeTracedCoordinates_(endIndex, target.endIndex);\n      }\n    } else {\n      // case 3 - remove old points, add new points\n      this.removeTracedCoordinates_(target.startIndex, target.endIndex);\n      this.addTracedCoordinates_(target, target.startIndex, endIndex);\n    }\n  }\n\n  /**\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  removeTracedCoordinates_(fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    let remove = 0;\n    if (fromIndex < toIndex) {\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        end -= 1;\n      }\n      remove = end - start + 1;\n    } else {\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      remove = start - end + 1;\n    }\n\n    if (remove > 0) {\n      this.removeLastPoints_(remove);\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  addTracedCoordinates_(target, fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    const coordinates = [];\n    if (fromIndex < toIndex) {\n      // forward trace\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        // if end is snapped to a vertex, it will be added later\n        end -= 1;\n      }\n      for (let i = start; i <= end; ++i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    } else {\n      // reverse trace\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      for (let i = start; i >= end; --i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    }\n    if (coordinates.length) {\n      this.appendCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * Update the trace.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  updateTrace_(event) {\n    const traceState = this.traceState_;\n    if (!traceState.active) {\n      return;\n    }\n\n    if (traceState.targetIndex === -1) {\n      // check if we are ready to pick a target\n      if (distance(traceState.startPx, event.pixel) < this.snapTolerance_) {\n        return;\n      }\n    }\n\n    const updatedTraceTarget = getTraceTargetUpdate(\n      event.coordinate,\n      traceState,\n      this.getMap(),\n      this.snapTolerance_\n    );\n\n    if (traceState.targetIndex !== updatedTraceTarget.index) {\n      // target changed\n      if (traceState.targetIndex !== -1) {\n        // remove points added during previous trace\n        const oldTarget = traceState.targets[traceState.targetIndex];\n        this.removeTracedCoordinates_(oldTarget.startIndex, oldTarget.endIndex);\n      }\n      // add points for the new target\n      const newTarget = traceState.targets[updatedTraceTarget.index];\n      this.addTracedCoordinates_(\n        newTarget,\n        newTarget.startIndex,\n        updatedTraceTarget.endIndex\n      );\n    } else {\n      // target stayed the same\n      const target = traceState.targets[traceState.targetIndex];\n      this.addOrRemoveTracedCoordinates_(target, updatedTraceTarget.endIndex);\n    }\n\n    // modify the state with updated info\n    traceState.targetIndex = updatedTraceTarget.index;\n    const target = traceState.targets[traceState.targetIndex];\n    target.endIndex = updatedTraceTarget.endIndex;\n\n    // update event coordinate and pixel to match end point of final segment\n    const coordinate = interpolateCoordinate(\n      target.coordinates,\n      target.endIndex\n    );\n    const pixel = this.getMap().getPixelFromCoordinate(coordinate);\n    event.coordinate = coordinate;\n    event.pixel = [Math.round(pixel[0]), Math.round(pixel[1])];\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.getPointerCount() === 0) {\n      if (this.downTimeout_) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n\n      this.handlePointerMove_(event);\n      const tracing = this.traceState_.active;\n      this.toggleTraceState_(event);\n\n      if (this.shouldHandle_) {\n        const startingToDraw = !this.finishCoordinate_;\n        if (startingToDraw) {\n          this.startDrawing_(event.coordinate);\n        }\n        if (!startingToDraw && this.freehand_) {\n          this.finishDrawing();\n        } else if (\n          !this.freehand_ &&\n          (!startingToDraw || this.mode_ === 'Point')\n        ) {\n          if (this.atFinish_(event.pixel, tracing)) {\n            if (this.finishCondition_(event)) {\n              this.finishDrawing();\n            }\n          } else {\n            this.addToDrawing_(event.coordinate);\n          }\n        }\n        pass = false;\n      } else if (this.freehand_) {\n        this.abortDrawing();\n      }\n    }\n\n    if (!pass && this.stopClick_) {\n      event.preventDefault();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @private\n   */\n  handlePointerMove_(event) {\n    this.pointerType_ = event.originalEvent.pointerType;\n    if (\n      this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))\n    ) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_\n        ? squaredDistance > this.squaredClickTolerance_\n        : squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return;\n      }\n    }\n\n    if (!this.finishCoordinate_) {\n      this.createOrUpdateSketchPoint_(event.coordinate.slice());\n      return;\n    }\n\n    this.updateTrace_(event);\n    this.modifyDrawing_(event.coordinate);\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {boolean} [tracing] Drawing in trace mode (only stop if at the starting point).\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(pixel, tracing) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      const mode = this.mode_;\n      if (mode === 'Point') {\n        at = true;\n      } else if (mode === 'Circle') {\n        at = this.sketchCoords_.length === 2;\n      } else if (mode === 'LineString') {\n        potentiallyDone =\n          !tracing && this.sketchCoords_.length > this.minPoints_;\n      } else if (mode === 'Polygon') {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [\n          sketchCoords[0][0],\n          sketchCoords[0][sketchCoords[0].length - 2],\n        ];\n        if (tracing) {\n          potentiallyFinishCoordinates = [sketchCoords[0][0]];\n        } else {\n          potentiallyFinishCoordinates = [\n            sketchCoords[0][0],\n            sketchCoords[0][sketchCoords[0].length - 2],\n          ];\n        }\n      }\n      if (potentiallyDone) {\n        const map = this.getMap();\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../coordinate\").Coordinate} coordinates Coordinate.\n   * @private\n   */\n  createOrUpdateSketchPoint_(coordinates) {\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @private\n   */\n  createOrUpdateCustomSketchLine_(geometry) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature();\n    }\n    const ring = geometry.getLinearRing(0);\n    let sketchLineGeom = this.sketchLine_.getGeometry();\n    if (!sketchLineGeom) {\n      sketchLineGeom = new LineString(\n        ring.getFlatCoordinates(),\n        ring.getLayout()\n      );\n      this.sketchLine_.setGeometry(sketchLineGeom);\n    } else {\n      sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(),\n        ring.getFlatCoordinates()\n      );\n      sketchLineGeom.changed();\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n   * @private\n   */\n  startDrawing_(start) {\n    const projection = this.getMap().getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    while (start.length < stride) {\n      start.push(0);\n    }\n    this.finishCoordinate_ = start;\n    if (this.mode_ === 'Point') {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === 'Polygon') {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(\n      this.sketchCoords_,\n      undefined,\n      projection\n    );\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @private\n   */\n  modifyDrawing_(coordinate) {\n    const map = this.getMap();\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = map.getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    let coordinates, last;\n    while (coordinate.length < stride) {\n      coordinate.push(0);\n    }\n    if (this.mode_ === 'Point') {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(\n      /** @type {!LineCoordType} */ (this.sketchCoords_),\n      geometry,\n      projection\n    );\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    if (geometry.getType() === 'Polygon' && this.mode_ !== 'Polygon') {\n      this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n    } else if (this.sketchLineCoords_) {\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @private\n   */\n  addToDrawing_(coordinate) {\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let done;\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === 'LineString' || mode === 'Circle') {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (mode === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.createOrUpdateSketchPoint_(coordinate.slice());\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  }\n\n  /**\n   * @param {number} n The number of points to remove.\n   */\n  removeLastPoints_(n) {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    const mode = this.mode_;\n    for (let i = 0; i < n; ++i) {\n      let coordinates;\n      if (mode === 'LineString' || mode === 'Circle') {\n        coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n        coordinates.splice(-2, 1);\n        if (coordinates.length >= 2) {\n          this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n          const finishCoordinate = this.finishCoordinate_.slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        this.geometryFunction_(coordinates, geometry, projection);\n        if (geometry.getType() === 'Polygon' && this.sketchLine_) {\n          this.createOrUpdateCustomSketchLine_(\n            /** @type {Polygon} */ (geometry)\n          );\n        }\n      } else if (mode === 'Polygon') {\n        coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n        coordinates.splice(-2, 1);\n        const sketchLineGeom = this.sketchLine_.getGeometry();\n        if (coordinates.length >= 2) {\n          const finishCoordinate = coordinates[coordinates.length - 2].slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        sketchLineGeom.setCoordinates(coordinates);\n        this.geometryFunction_(this.sketchCoords_, geometry, projection);\n      }\n\n      if (coordinates.length === 1) {\n        this.abortDrawing();\n        break;\n      }\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn. Does not do anything when\n   * drawing POINT or MULTI_POINT geometries.\n   * @api\n   */\n  removeLastPoint() {\n    this.removeLastPoints_(1);\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    if (this.mode_ === 'LineString') {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === 'Polygon') {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === 'MultiPoint') {\n      sketchFeature.setGeometry(\n        new MultiPoint([/** @type {PointCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === 'MultiLineString') {\n      sketchFeature.setGeometry(\n        new MultiLineString([/** @type {LineCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === 'MultiPolygon') {\n      sketchFeature.setGeometry(\n        new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)])\n      );\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    this.deactivateTrace_();\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @api\n   */\n  abortDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (sketchFeature) {\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n    }\n  }\n\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon. If no geometry is being drawn, a new one will be created.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n   * the coordinate array.\n   * @api\n   */\n  appendCoordinates(coordinates) {\n    const mode = this.mode_;\n    const newDrawing = !this.sketchFeature_;\n    if (newDrawing) {\n      this.startDrawing_(coordinates[0]);\n    }\n    /** @type {LineCoordType} */\n    let sketchCoords;\n    if (mode === 'LineString' || mode === 'Circle') {\n      sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n    } else if (mode === 'Polygon') {\n      sketchCoords =\n        this.sketchCoords_ && this.sketchCoords_.length\n          ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n          : [];\n    } else {\n      return;\n    }\n\n    if (newDrawing) {\n      sketchCoords.shift();\n    }\n\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    sketchCoords.pop();\n\n    // Append coordinate list\n    for (let i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n\n    const ending = coordinates[coordinates.length - 1];\n    // Duplicate last coordinate for sketch drawing (cursor position)\n    this.addToDrawing_(ending);\n    this.modifyDrawing_(ending);\n  }\n\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.sketchPoint_ = new Feature(new Point(last));\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function (feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * {@link import(\"../geom/Circle.js\").Circle} geometry.\n * @param {number} [sides] Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number} [angle] Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(sides, angle) {\n  return function (coordinates, geometry, projection) {\n    const center = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[0],\n      projection\n    );\n    const end = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1],\n      projection\n    );\n    const radius = Math.sqrt(squaredCoordinateDistance(center, end));\n    geometry = geometry || fromCircle(new Circle(center), sides);\n\n    let internalAngle = angle;\n    if (!angle && angle !== 0) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      internalAngle = Math.atan2(y, x);\n    }\n    makeRegular(\n      /** @type {Polygon} */ (geometry),\n      center,\n      radius,\n      internalAngle\n    );\n\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return function (coordinates, geometry, projection) {\n    const extent = boundingExtent(\n      /** @type {LineCoordType} */ ([\n        coordinates[0],\n        coordinates[coordinates.length - 1],\n      ]).map(function (coordinate) {\n        return fromUserCoordinate(coordinate, projection);\n      })\n    );\n    const boxCoordinates = [\n      [\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent),\n      ],\n    ];\n    if (geometry) {\n      geometry.setCoordinates(boxCoordinates);\n    } else {\n      geometry = new Polygon(boxCoordinates);\n    }\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Get the drawing mode.  The mode for multi-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n      return 'Point';\n    case 'LineString':\n    case 'MultiLineString':\n      return 'LineString';\n    case 'Polygon':\n    case 'MultiPolygon':\n      return 'Polygon';\n    case 'Circle':\n      return 'Circle';\n    default:\n      throw new Error('Invalid type: ' + type);\n  }\n}\n\nexport default Draw;\n","/**\n * @module ol/interaction/Extent\n */\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {always} from '../events/condition.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {toUserExtent} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to the `Polygon` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to the `Point` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n/**\n * @enum {string}\n */\nconst ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event ExtentEvent#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nexport class ExtentEvent extends Event {\n  /**\n   * @param {import(\"../extent.js\").Extent} extent the new extent\n   */\n  constructor(extent) {\n    super(ExtentEventType.EXTENTCHANGED);\n\n    /**\n     * The current extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = extent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'extentchanged', ExtentEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'extentchanged', Return>} ExtentOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires ExtentEvent\n * @api\n */\nclass Extent extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ExtentOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * Condition\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * Extent of the drawn box\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.extent_ = null;\n\n    /**\n     * Handler for pointer move events\n     * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n     * @private\n     */\n    this.pointerHandler_ = null;\n\n    /**\n     * Pixel threshold to snap to extent\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Is the pointer snapped to an extent vertex\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Feature for displaying the visible extent\n     * @type {Feature}\n     * @private\n     */\n    this.extentFeature_ = null;\n\n    /**\n     * Feature for displaying the visible pointer\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    if (!options) {\n      options = {};\n    }\n\n    /**\n     * Layer for the extentFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.extentOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.boxStyle\n        ? options.boxStyle\n        : getDefaultExtentStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Layer for the vertexFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.vertexOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.pointerStyle\n        ? options.pointerStyle\n        : getDefaultPointerStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    if (options.extent) {\n      this.setExtent(options.extent);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n   * @param {import(\"../Map.js\").default} map map\n   * @return {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n   * @private\n   */\n  snapToVertex_(pixel, map) {\n    const pixelCoordinate = map.getCoordinateFromPixelInternal(pixel);\n    const sortByDistance = function (a, b) {\n      return (\n        squaredDistanceToSegment(pixelCoordinate, a) -\n        squaredDistanceToSegment(pixelCoordinate, b)\n      );\n    };\n    const extent = this.getExtentInternal();\n    if (extent) {\n      //convert extents to line segments and find the segment closest to pixelCoordinate\n      const segments = getSegments(extent);\n      segments.sort(sortByDistance);\n      const closestSegment = segments[0];\n\n      let vertex = closestOnSegment(pixelCoordinate, closestSegment);\n      const vertexPixel = map.getPixelFromCoordinateInternal(vertex);\n\n      //if the distance is within tolerance, snap to the segment\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        //test if we should further snap to a vertex\n        const pixel1 = map.getPixelFromCoordinateInternal(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinateInternal(closestSegment[1]);\n        const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex =\n            squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        }\n        return vertex;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n   * @private\n   */\n  handlePointerMove_(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    let vertex = this.snapToVertex_(pixel, map);\n    if (!vertex) {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n    }\n    this.createOrUpdatePointerFeature_(vertex);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent extent\n   * @return {Feature} extent as featrue\n   * @private\n   */\n  createOrUpdateExtentFeature_(extent) {\n    let extentFeature = this.extentFeature_;\n\n    if (!extentFeature) {\n      if (!extent) {\n        extentFeature = new Feature({});\n      } else {\n        extentFeature = new Feature(polygonFromExtent(extent));\n      }\n      this.extentFeature_ = extentFeature;\n      this.extentOverlay_.getSource().addFeature(extentFeature);\n    } else {\n      if (!extent) {\n        extentFeature.setGeometry(undefined);\n      } else {\n        extentFeature.setGeometry(polygonFromExtent(extent));\n      }\n    }\n    return extentFeature;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n   * @return {Feature} vertex as feature\n   * @private\n   */\n  createOrUpdatePointerFeature_(vertex) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(vertex));\n      this.vertexFeature_ = vertexFeature;\n      this.vertexOverlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(vertex);\n    }\n    return vertexFeature;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent || !this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    //display pointer (if not dragging)\n    if (\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    //call pointer to determine up/down/drag\n    super.handleEvent(mapBrowserEvent);\n    //return false to stop propagation\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    const extent = this.getExtentInternal();\n    let vertex = this.snapToVertex_(pixel, map);\n\n    //find the extent corner opposite the passed corner\n    const getOpposingPoint = function (point) {\n      let x_ = null;\n      let y_ = null;\n      if (point[0] == extent[0]) {\n        x_ = extent[2];\n      } else if (point[0] == extent[2]) {\n        x_ = extent[0];\n      }\n      if (point[1] == extent[1]) {\n        y_ = extent[3];\n      } else if (point[1] == extent[3]) {\n        y_ = extent[1];\n      }\n      if (x_ !== null && y_ !== null) {\n        return [x_, y_];\n      }\n      return null;\n    };\n    if (vertex && extent) {\n      const x =\n        vertex[0] == extent[0] || vertex[0] == extent[2] ? vertex[0] : null;\n      const y =\n        vertex[1] == extent[1] || vertex[1] == extent[3] ? vertex[1] : null;\n\n      //snap to point\n      if (x !== null && y !== null) {\n        this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n        //snap to edge\n      } else if (x !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([x, extent[1]]),\n          getOpposingPoint([x, extent[3]])\n        );\n      } else if (y !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([extent[0], y]),\n          getOpposingPoint([extent[2], y])\n        );\n      }\n      //no snap - new bbox\n    } else {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n      this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n      this.pointerHandler_ = getPointHandler(vertex);\n    }\n    return true; //event handled; start downup sequence\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (this.pointerHandler_) {\n      const pixelCoordinate = mapBrowserEvent.coordinate;\n      this.setExtent(this.pointerHandler_(pixelCoordinate));\n      this.createOrUpdatePointerFeature_(pixelCoordinate);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.pointerHandler_ = null;\n    //If bbox is zero area, set to null;\n    const extent = this.getExtentInternal();\n    if (!extent || getArea(extent) === 0) {\n      this.setExtent(null);\n    }\n    return false; //Stop handling downup sequence\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.extentOverlay_.setMap(map);\n    this.vertexOverlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection (or user projection if set)\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtent() {\n    return toUserExtent(\n      this.getExtentInternal(),\n      this.getMap().getView().getProjection()\n    );\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtentInternal() {\n    return this.extent_;\n  }\n\n  /**\n   * Manually sets the drawn extent, using the view projection.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent\n   * @api\n   */\n  setExtent(extent) {\n    //Null extent means no bbox\n    this.extent_ = extent ? extent : null;\n    this.createOrUpdateExtentFeature_(extent);\n    this.dispatchEvent(new ExtentEvent(this.extent_));\n  }\n}\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Polygon'];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function (point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  }\n  if (fixedP1[1] == fixedP2[1]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  }\n  return null;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [\n      [extent[0], extent[1]],\n      [extent[0], extent[3]],\n    ],\n    [\n      [extent[0], extent[3]],\n      [extent[2], extent[3]],\n    ],\n    [\n      [extent[2], extent[3]],\n      [extent[2], extent[1]],\n    ],\n    [\n      [extent[2], extent[1]],\n      [extent[0], extent[1]],\n    ],\n  ];\n}\n\nexport default Extent;\n","/**\n * @module ol/interaction/Link\n */\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport MapEventType from '../MapEventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {toFixed} from '../math.js';\n\n/**\n * @param {number} number A number.\n * @return {number} A number with at most 5 decimal places.\n */\nfunction to5(number) {\n  return toFixed(number, 5);\n}\n\n/**\n * @param {string} string A string.\n * @return {number} A number representing the string.\n */\nfunction readNumber(string) {\n  return parseFloat(string);\n}\n\n/**\n * @param {number} number A number.\n * @return {string} A string representing the number.\n */\nfunction writeNumber(number) {\n  return to5(number).toString();\n}\n\n/**\n * @param {number} a A number.\n * @param {number} b A number.\n * @return {boolean} The numbers are different.\n */\nfunction differentNumber(a, b) {\n  if (isNaN(a)) {\n    return false;\n  }\n  return a !== readNumber(writeNumber(b));\n}\n\n/**\n * @param {Array<number>} a An array of two numbers.\n * @param {Array<number>} b An array of two numbers.\n * @return {boolean} The arrays are different.\n */\nfunction differentArray(a, b) {\n  return differentNumber(a[0], b[0]) || differentNumber(a[1], b[1]);\n}\n\n/** @typedef {'x'|'y'|'z'|'r'|'l'} Params */\n\n/**\n * @typedef {Object} Options\n * @property {boolean|import('../View.js').AnimationOptions} [animate=true] Animate view transitions.\n * @property {Array<Params>} [params=['x', 'y', 'z', 'r', 'l']] Properties to track. Default is to track\n * `x` (center x), `y` (center y), `z` (zoom), `r` (rotation) and `l` (layers).\n * @property {boolean} [replace=false] Replace the current URL without creating the new entry in browser history.\n * By default, changes in the map state result in a new entry being added to the browser history.\n * @property {string} [prefix=''] By default, the URL will be updated with search parameters x, y, z, and r.  To\n * avoid collisions with existing search parameters that your application uses, you can supply a custom prefix for\n * the ones used by this interaction (e.g. 'ol:').\n */\n\n/**\n * @classdesc\n * An interaction that synchronizes the map state with the URL.\n *\n * @api\n */\nclass Link extends Interaction {\n  /**\n   * @param {Options} [options] Link options.\n   */\n  constructor(options) {\n    super();\n\n    options = Object.assign(\n      {\n        animate: true,\n        params: ['x', 'y', 'z', 'r', 'l'],\n        replace: false,\n        prefix: '',\n      },\n      options || {}\n    );\n\n    let animationOptions;\n    if (options.animate === true) {\n      animationOptions = {duration: 250};\n    } else if (!options.animate) {\n      animationOptions = null;\n    } else {\n      animationOptions = options.animate;\n    }\n\n    /**\n     * @type {import('../View.js').AnimationOptions|null}\n     * @private\n     */\n    this.animationOptions_ = animationOptions;\n\n    /**\n     * @type {Object<Params, boolean>}\n     * @private\n     */\n    this.params_ = options.params.reduce((acc, value) => {\n      acc[value] = true;\n      return acc;\n    }, {});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.replace_ = options.replace;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.prefix_ = options.prefix;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.initial_ = true;\n\n    this.updateState_ = this.updateState_.bind(this);\n  }\n\n  /**\n   * @private\n   * @param {string} name A parameter name.\n   * @return {string} A name with the prefix applied.\n   */\n  getParamName_(name) {\n    if (!this.prefix_) {\n      return name;\n    }\n    return this.prefix_ + name;\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   * @return {string|null} The parameter value.\n   */\n  get_(params, name) {\n    return params.get(this.getParamName_(name));\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   * @param {string} value The param value.\n   */\n  set_(params, name, value) {\n    if (!(name in this.params_)) {\n      return;\n    }\n    params.set(this.getParamName_(name), value);\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   */\n  delete_(params, name) {\n    if (!(name in this.params_)) {\n      return;\n    }\n    params.delete(this.getParamName_(name));\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      this.unregisterListeners_(oldMap);\n    }\n    if (map) {\n      this.initial_ = true;\n      this.updateState_();\n      this.registerListeners_(map);\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   * @private\n   */\n  registerListeners_(map) {\n    this.listenerKeys_.push(\n      listen(map, MapEventType.MOVEEND, this.updateUrl_, this),\n      listen(map.getLayerGroup(), EventType.CHANGE, this.updateUrl_, this),\n      listen(map, 'change:layergroup', this.handleChangeLayerGroup_, this)\n    );\n\n    if (!this.replace_) {\n      addEventListener('popstate', this.updateState_);\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   * @private\n   */\n  unregisterListeners_(map) {\n    for (let i = 0, ii = this.listenerKeys_.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys_[i]);\n    }\n    this.listenerKeys_.length = 0;\n\n    if (!this.replace_) {\n      removeEventListener('popstate', this.updateState_);\n    }\n\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    this.delete_(params, 'x');\n    this.delete_(params, 'y');\n    this.delete_(params, 'z');\n    this.delete_(params, 'r');\n    this.delete_(params, 'l');\n    window.history.replaceState(null, '', url);\n  }\n\n  /**\n   * @private\n   */\n  handleChangeLayerGroup_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    this.unregisterListeners_(map);\n    this.registerListeners_(map);\n    this.initial_ = true;\n    this.updateUrl_();\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    if (!view) {\n      return;\n    }\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n\n    let updateView = false;\n\n    /**\n     * @type {import('../View.js').AnimationOptions}\n     */\n    const viewProperties = {};\n\n    const zoom = readNumber(this.get_(params, 'z'));\n    if ('z' in this.params_ && differentNumber(zoom, view.getZoom())) {\n      updateView = true;\n      viewProperties.zoom = zoom;\n    }\n\n    const rotation = readNumber(this.get_(params, 'r'));\n    if ('r' in this.params_ && differentNumber(rotation, view.getRotation())) {\n      updateView = true;\n      viewProperties.rotation = rotation;\n    }\n\n    const center = [\n      readNumber(this.get_(params, 'x')),\n      readNumber(this.get_(params, 'y')),\n    ];\n    if (\n      ('x' in this.params_ || 'y' in this.params_) &&\n      differentArray(center, view.getCenter())\n    ) {\n      updateView = true;\n      viewProperties.center = center;\n    }\n\n    if (updateView) {\n      if (!this.initial_ && this.animationOptions_) {\n        view.animate(Object.assign(viewProperties, this.animationOptions_));\n      } else {\n        if (viewProperties.center) {\n          view.setCenter(viewProperties.center);\n        }\n        if ('zoom' in viewProperties) {\n          view.setZoom(viewProperties.zoom);\n        }\n        if ('rotation' in viewProperties) {\n          view.setRotation(viewProperties.rotation);\n        }\n      }\n    }\n\n    const layers = map.getAllLayers();\n    const layersParam = this.get_(params, 'l');\n    if (\n      'l' in this.params_ &&\n      layersParam &&\n      layersParam.length === layers.length\n    ) {\n      for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const value = parseInt(layersParam[i]);\n        if (!isNaN(value)) {\n          const visible = Boolean(value);\n          const layer = layers[i];\n          if (layer.getVisible() !== visible) {\n            layer.setVisible(visible);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateUrl_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    if (!view) {\n      return;\n    }\n    const initial = this.initial_;\n    this.initial_ = false;\n\n    const center = view.getCenter();\n    const zoom = view.getZoom();\n    const rotation = view.getRotation();\n\n    const layers = map.getAllLayers();\n    const visibilities = new Array(layers.length);\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      visibilities[i] = layers[i].getVisible() ? '1' : '0';\n    }\n\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n\n    this.set_(params, 'x', writeNumber(center[0]));\n    this.set_(params, 'y', writeNumber(center[1]));\n    this.set_(params, 'z', writeNumber(zoom));\n    this.set_(params, 'r', writeNumber(rotation));\n    this.set_(params, 'l', visibilities.join(''));\n\n    if (url.href !== window.location.href) {\n      if (initial || this.replace_) {\n        window.history.replaceState(history.state, '', url);\n      } else {\n        window.history.pushState(null, '', url);\n      }\n    }\n  }\n}\n\nexport default Link;\n","/**\n * @module ol/interaction/Modify\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  altKeyOnly,\n  always,\n  primaryAction,\n  singleClick,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  buffer as bufferExtent,\n  createOrUpdateFromCoordinate as createExtent,\n} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  equals as coordinatesEqual,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {equals} from '../array.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\nconst tempExtent = [0, 0, 0, 0];\nconst tempSegment = [];\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend',\n};\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth] Depth.\n * @property {Feature} feature Feature.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} [index] Index.\n * @property {Array<Array<number>>} segment Segment.\n * @property {Array<SegmentData>} [featureSegments] FeatureSegments.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition.primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition.singleClick} with\n * {@link module:ol/events/condition.altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition.always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style used for the modification point or vertex. For linestrings and polygons, this will\n * be the affected vertex, for circles a point along the circle, and for points the actual\n * point. If not configured, the default edit style is used (see {@link module:ol/style/Style~Style}).\n * When using a style function, the point feature passed to the function will have a `features`\n * property - an array whose entries are the features that are being modified, and a `geometries`\n * property - an array whose entries are the geometries that are being modified. Both arrays are\n * in the same order. The `geometries` are only useful when modifying geometry collections, where\n * the geometry will be the particular geometry from the collection that is being modified.\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the `features` option.\n * @property {boolean|import(\"../layer/BaseVector\").default} [hitDetection] When configured, point\n * features will be considered for modification based on their visual appearance, instead of being within\n * the `pixelTolerance` from the pointer location. When a {@link module:ol/layer/BaseVector~BaseVectorLayer} is\n * provided, only the rendered representation of the features on that layer will be considered.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the `source` option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {boolean} [snapToPointer=!hitDetection] The vertex, point or segment being modified snaps to the\n * pointer coordinate when clicked within the `pixelTolerance`.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport class ModifyEvent extends Event {\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {Collection<Feature>} features\n   * The features modified.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent\n   * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, features, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'modifyend'|'modifystart', ModifyEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'modifyend'|'modifystart', Return>} ModifyOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * Cartesian distance from the pointer is used to determine the features that\n * will be modified. This means that geometries will only be considered for\n * modification when they are within the configured `pixelTolerance`. For point\n * geometries, the `hitDetection` option can be used to match their visual\n * appearance.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nclass Modify extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ModifyOnSignature<void>}\n     */\n    this.un;\n\n    /** @private */\n    this.boundHandleFeatureChange_ = this.handleFeatureChange_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition\n      ? options.deleteCondition\n      : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition\n      ? options.insertVertexCondition\n      : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.featuresBeingModified_ = null;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n    };\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    /**\n     * @type {boolean|import(\"../layer/BaseVector\").default}\n     */\n    this.hitDetection_ = null;\n\n    /** @type {Collection<Feature>} */\n    let features;\n    if (options.features) {\n      features = options.features;\n    } else if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      this.source_.addEventListener(\n        VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_.bind(this)\n      );\n      this.source_.addEventListener(\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_.bind(this)\n      );\n    }\n    if (!features) {\n      throw new Error(\n        'The modify interaction requires features, a source or a layer'\n      );\n    }\n    if (options.hitDetection) {\n      this.hitDetection_ = options.hitDetection;\n    }\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    this.features_.addEventListener(\n      CollectionEventType.ADD,\n      this.handleFeatureAdd_.bind(this)\n    );\n    this.features_.addEventListener(\n      CollectionEventType.REMOVE,\n      this.handleFeatureRemove_.bind(this)\n    );\n\n    /**\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n    /**\n     * Delta (x, y in map units) between matched rtree vertex and pointer vertex.\n     * @type {Array<number>}\n     */\n    this.delta_ = [0, 0];\n\n    /**\n     * @private\n     */\n    this.snapToPointer_ =\n      options.snapToPointer === undefined\n        ? !this.hitDetection_\n        : options.snapToPointer;\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  addFeature_(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (writer) {\n        writer(feature, geometry);\n      }\n    }\n    const map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @param {Array<Array<SegmentData>>} segments The segments subject to modification.\n   * @private\n   */\n  willModifyFeatures_(evt, segments) {\n    if (!this.featuresBeingModified_) {\n      this.featuresBeingModified_ = new Collection();\n      const features = this.featuresBeingModified_.getArray();\n      for (let i = 0, ii = segments.length; i < ii; ++i) {\n        const segment = segments[i];\n        for (let s = 0, ss = segment.length; s < ss; ++s) {\n          const feature = segment[s].feature;\n          if (feature && !features.includes(feature)) {\n            this.featuresBeingModified_.push(feature);\n          }\n        }\n      }\n      if (this.featuresBeingModified_.getLength() === 0) {\n        this.featuresBeingModified_ = null;\n      } else {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYSTART,\n            this.featuresBeingModified_,\n            evt\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeature_(feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of candidate features is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    feature.removeEventListener(\n      EventType.CHANGE,\n      this.boundHandleFeatureChange_\n    );\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureSegmentData_(feature) {\n    const rBush = this.rBush_;\n    /** @type {Array<SegmentData>} */\n    const nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      }\n    );\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      const nodeToRemove = nodesToRemove[i];\n      for (let j = this.dragSegments_.length - 1; j >= 0; --j) {\n        if (this.dragSegments_[j][0] === nodeToRemove) {\n          this.dragSegments_.splice(j, 1);\n        }\n      }\n      rBush.remove(nodeToRemove);\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.overlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders the modification point or vertex to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceAdd_(event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceRemove_(event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    this.addFeature_(evt.element);\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    if (!this.changingFeature_) {\n      const feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    this.removeFeature_(evt.element);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n\n    /** @type {SegmentData} */\n    const segmentData = {\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates],\n    };\n\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates],\n      };\n\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment,\n      };\n\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n\n          /** @type {SegmentData} */\n          const segmentData = {\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment,\n          };\n\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const coordinates = geometry.getCenter();\n\n    /** @type {SegmentData} */\n    const centerSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    /** @type {SegmentData} */\n    const circumferenceSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = featureSegments;\n    circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n    let circleGeometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection && this.getMap()) {\n      const projection = this.getMap().getView().getProjection();\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n      circleGeometry = fromCircle(\n        /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n      ).transform(projection, userProjection);\n    }\n    this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const geometry = geometries[i];\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      writer(feature, geometry);\n    }\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {Array<Feature>} features The features being modified.\n   * @param {Array<import(\"../geom/SimpleGeometry.js\").default>} geometries The geometries being modified.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  createOrUpdateVertexFeature_(coordinates, features, geometries) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(coordinates);\n    }\n    vertexFeature.set('features', features);\n    vertexFeature.set('geometries', geometries);\n    return vertexFeature;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may modify the geometry.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    let handled;\n    if (\n      !mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (\n        mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_\n      ) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return super.handleEvent(mapBrowserEvent) && !handled;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   */\n  handleDragEvent(evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt, this.dragSegments_);\n\n    const vertex = [\n      evt.coordinate[0] + this.delta_[0],\n      evt.coordinate[1] + this.delta_[1],\n    ];\n    const features = [];\n    const geometries = [];\n    for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      const dragSegment = this.dragSegments_[i];\n      const segmentData = dragSegment[0];\n      const feature = segmentData.feature;\n      if (!features.includes(feature)) {\n        features.push(feature);\n      }\n      const geometry = segmentData.geometry;\n      if (!geometries.includes(geometry)) {\n        geometries.push(geometry);\n      }\n      const depth = segmentData.depth;\n      let coordinates;\n      const segment = segmentData.segment;\n      const index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case 'Point':\n          coordinates = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'MultiPoint':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'LineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiLineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Polygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiPolygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Circle':\n          segment[0] = vertex;\n          segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else {\n            // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            const projection = evt.map.getView().getProjection();\n            let radius = coordinateDistance(\n              fromUserCoordinate(geometry.getCenter(), projection),\n              fromUserCoordinate(vertex, projection)\n            );\n            const userProjection = getUserProjection();\n            if (userProjection) {\n              const circleGeometry = geometry\n                .clone()\n                .transform(userProjection, projection);\n              circleGeometry.setRadius(radius);\n              radius = circleGeometry\n                .transform(projection, userProjection)\n                .getRadius();\n            }\n            geometry.setRadius(radius);\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex, features, geometries);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    const pixelCoordinate = evt.coordinate;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, pixelCoordinate);\n    this.dragSegments_.length = 0;\n    this.featuresBeingModified_ = null;\n    const vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      const projection = evt.map.getView().getProjection();\n      const insertVertices = [];\n      const vertex = vertexFeature.getGeometry().getCoordinates();\n      const vertexExtent = boundingExtent([vertex]);\n      const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      const componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        const segmentDataMatch = segmentDataMatches[i];\n        const segment = segmentDataMatch.segment;\n        let uid = getUid(segmentDataMatch.geometry);\n        const depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n\n        if (\n          segmentDataMatch.geometry.getType() === 'Circle' &&\n          segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          const closestVertex = closestOnSegmentData(\n            pixelCoordinate,\n            segmentDataMatch,\n            projection\n          );\n          if (\n            coordinatesEqual(closestVertex, vertex) &&\n            !componentSegments[uid][0]\n          ) {\n            this.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]\n        ) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]\n        ) {\n          if (\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0\n          ) {\n            let coordinates = segmentDataMatch.geometry.getCoordinates();\n            switch (segmentDataMatch.geometry.getType()) {\n              // prevent dragging closed linestrings by the connecting node\n              case 'LineString':\n              case 'MultiLineString':\n                continue;\n              // if dragging the first vertex of a polygon, ensure the other segment\n              // belongs to the closing vertex of the linear ring\n              case 'MultiPolygon':\n                coordinates = coordinates[depth[1]];\n              /* falls through */\n              case 'Polygon':\n                if (\n                  segmentDataMatch.index !==\n                  coordinates[depth[0]].length - 2\n                ) {\n                  continue;\n                }\n                break;\n              default:\n              // pass\n            }\n          }\n\n          this.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          getUid(segment) in this.vertexSegments_ &&\n          !componentSegments[uid][0] &&\n          !componentSegments[uid][1] &&\n          this.insertVertexCondition_(evt)\n        ) {\n          insertVertices.push(segmentDataMatch);\n        }\n      }\n\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt, [insertVertices]);\n      }\n\n      for (let j = insertVertices.length - 1; j >= 0; --j) {\n        this.insertVertex_(insertVertices[j], vertex);\n      }\n    }\n    return !!this.vertexFeature_;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n      const segmentData = this.dragSegments_[i][0];\n      const geometry = segmentData.geometry;\n      if (geometry.getType() === 'Circle') {\n        // Update a circle object in the R* bush:\n        const coordinates = geometry.getCenter();\n        const centerSegmentData = segmentData.featureSegments[0];\n        const circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = coordinates;\n        centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = coordinates;\n        circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createExtent(coordinates), centerSegmentData);\n        let circleGeometry = geometry;\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          const projection = evt.map.getView().getProjection();\n          circleGeometry = circleGeometry\n            .clone()\n            .transform(userProjection, projection);\n          circleGeometry = fromCircle(circleGeometry).transform(\n            projection,\n            userProjection\n          );\n        }\n        this.rBush_.update(\n          circleGeometry.getExtent(),\n          circumferenceSegmentData\n        );\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.featuresBeingModified_) {\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYEND,\n          this.featuresBeingModified_,\n          evt\n        )\n      );\n      this.featuresBeingModified_ = null;\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  handlePointerMove_(evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, evt.coordinate);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../Map.js\").default} map Map.\n   * @param {import(\"../coordinate.js\").Coordinate} [coordinate] The pixel Coordinate.\n   * @private\n   */\n  handlePointerAtPixel_(pixel, map, coordinate) {\n    const pixelCoordinate = coordinate || map.getCoordinateFromPixel(pixel);\n    const projection = map.getView().getProjection();\n    const sortByDistance = function (a, b) {\n      return (\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection)\n      );\n    };\n\n    /** @type {Array<SegmentData>|undefined} */\n    let nodes;\n    /** @type {Point|undefined} */\n    let hitPointGeometry;\n    if (this.hitDetection_) {\n      const layerFilter =\n        typeof this.hitDetection_ === 'object'\n          ? (layer) => layer === this.hitDetection_\n          : undefined;\n      map.forEachFeatureAtPixel(\n        pixel,\n        (feature, layer, geometry) => {\n          if (geometry) {\n            geometry = new Point(\n              toUserCoordinate(geometry.getCoordinates(), projection)\n            );\n          }\n          const geom = geometry || feature.getGeometry();\n          if (\n            geom.getType() === 'Point' &&\n            feature instanceof Feature &&\n            this.features_.getArray().includes(feature)\n          ) {\n            hitPointGeometry = /** @type {Point} */ (geom);\n            const coordinate = /** @type {Point} */ (feature.getGeometry())\n              .getFlatCoordinates()\n              .slice(0, 2);\n            nodes = [\n              {\n                feature,\n                geometry: hitPointGeometry,\n                segment: [coordinate, coordinate],\n              },\n            ];\n          }\n          return true;\n        },\n        {layerFilter}\n      );\n    }\n    if (!nodes) {\n      const viewExtent = fromUserExtent(\n        createExtent(pixelCoordinate, tempExtent),\n        projection\n      );\n      const buffer = map.getView().getResolution() * this.pixelTolerance_;\n      const box = toUserExtent(\n        bufferExtent(viewExtent, buffer, tempExtent),\n        projection\n      );\n      nodes = this.rBush_.getInExtent(box);\n    }\n\n    if (nodes && nodes.length > 0) {\n      const node = nodes.sort(sortByDistance)[0];\n      const closestSegment = node.segment;\n      let vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n      let dist = coordinateDistance(pixel, vertexPixel);\n      if (hitPointGeometry || dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        const vertexSegments = {};\n        vertexSegments[getUid(closestSegment)] = true;\n\n        if (!this.snapToPointer_) {\n          this.delta_[0] = vertex[0] - pixelCoordinate[0];\n          this.delta_[1] = vertex[1] - pixelCoordinate[1];\n        }\n        if (\n          node.geometry.getType() === 'Circle' &&\n          node.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n        } else {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex =\n              squaredDist1 > squaredDist2\n                ? closestSegment[1]\n                : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n          const geometries = {};\n          geometries[getUid(node.geometry)] = true;\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\n            const segment = nodes[i].segment;\n            if (\n              (coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1])) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0]))\n            ) {\n              const geometryUid = getUid(nodes[i].geometry);\n              if (!(geometryUid in geometries)) {\n                geometries[geometryUid] = true;\n                vertexSegments[getUid(segment)] = true;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  }\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  insertVertex_(segmentData, vertex) {\n    const segment = segmentData.segment;\n    const feature = segmentData.feature;\n    const geometry = segmentData.geometry;\n    const depth = segmentData.depth;\n    const index = segmentData.index;\n    let coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case 'MultiLineString':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'Polygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'MultiPolygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'LineString':\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    const rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n\n    /** @type {SegmentData} */\n    const newSegmentData = {\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    /** @type {SegmentData} */\n    const newSegmentData2 = {\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  }\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  removePoint() {\n    if (\n      this.lastPointerEvent_ &&\n      this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG\n    ) {\n      const evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt, this.dragSegments_);\n      const removed = this.removeVertex_();\n      if (this.featuresBeingModified_) {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYEND,\n            this.featuresBeingModified_,\n            evt\n          )\n        );\n      }\n\n      this.featuresBeingModified_ = null;\n      return removed;\n    }\n    return false;\n  }\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  removeVertex_() {\n    const dragSegments = this.dragSegments_;\n    const segmentsByFeature = {};\n    let deleted = false;\n    let component, coordinates, dragSegment, geometry, i, index, left;\n    let newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case 'MultiLineString':\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'LineString':\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'MultiPolygon':\n          component = component[segmentData.depth[1]];\n        /* falls through */\n        case 'Polygon':\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        const segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          /** @type {SegmentData} */\n          const newSegmentData = {\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments,\n          };\n\n          this.rBush_.insert(\n            boundingExtent(newSegmentData.segment),\n            newSegmentData\n          );\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n    }\n    return deleted;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  setGeometryCoordinates_(geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  updateSegmentIndices_(geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(\n      geometry.getExtent(),\n      function (segmentDataMatch) {\n        if (\n          segmentDataMatch.geometry === geometry &&\n          (depth === undefined ||\n            segmentDataMatch.depth === undefined ||\n            equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index\n        ) {\n          segmentDataMatch.index += delta;\n        }\n      }\n    );\n  }\n}\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction projectedDistanceToSegmentDataSquared(\n  pointCoordinates,\n  segmentData,\n  projection\n) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === 'Circle') {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n          circleGeometry.clone().transform(userProjection, projection)\n        );\n      }\n      const distanceToCenterSquared = squaredCoordinateDistance(\n        circleGeometry.getCenter(),\n        fromUserCoordinate(pointCoordinates, projection)\n      );\n      const distanceToCircumference =\n        Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return squaredDistanceToSegment(coordinate, tempSegment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n  const geometry = segmentData.geometry;\n\n  if (\n    geometry.getType() === 'Circle' &&\n    segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX\n  ) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n        circleGeometry.clone().transform(userProjection, projection)\n      );\n    }\n    return toUserCoordinate(\n      circleGeometry.getClosestPoint(\n        fromUserCoordinate(pointCoordinates, projection)\n      ),\n      projection\n    );\n  }\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return toUserCoordinate(\n    closestOnSegment(coordinate, tempSegment),\n    projection\n  );\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n\nexport default Modify;\n","/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport Interaction from './Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {TRUE} from '../functions.js';\nimport {clear} from '../obj.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {never, shiftKeyOnly, singleClick} from '../events/condition.js';\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").default, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style/Style~Style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {Collection<Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature~Feature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nexport class SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nconst originalFeatureStyles = {};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'select', Return>} SelectOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * @fires SelectEvent\n * @api\n */\nclass Select extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SelectOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     */\n    this.boundAddFeature_ = this.addFeature_.bind(this);\n\n    /**\n     * @private\n     */\n    this.boundRemoveFeature_ = this.removeFeature_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition\n      ? options.removeCondition\n      : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition\n      ? options.toggleCondition\n      : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n    this.style_ =\n      options.style !== undefined ? options.style : getDefaultStyleFunction();\n\n    /**\n     * @private\n     * @type {Collection<Feature>}\n     */\n    this.features_ = options.features || new Collection();\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  addFeatureLayerAssociation_(feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  }\n\n  /**\n   * Get the selected features.\n   * @return {Collection<Feature>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~VectorLayer vector layer} of\n   * a selected feature.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n  getLayer(feature) {\n    return /** @type {import('../layer/Vector.js').default} */ (\n      this.featureLayerAssociation_[getUid(feature)]\n    );\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n    super.setMap(map);\n    if (map) {\n      this.features_.addEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.addEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.removeEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n    if (!this.getLayer(feature)) {\n      const layer = /** @type {VectorLayer} */ (\n        this.getMap()\n          .getAllLayers()\n          .find(function (layer) {\n            if (\n              layer instanceof VectorLayer &&\n              layer.getSource() &&\n              layer.getSource().hasFeature(feature)\n            ) {\n              return layer;\n            }\n          })\n      );\n      if (layer) {\n        this.addFeatureLayerAssociation_(feature, layer);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    if (this.style_) {\n      this.restorePreviousStyle_(evt.element);\n    }\n  }\n\n  /**\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  applySelectedStyle_(feature) {\n    const key = getUid(feature);\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n    feature.setStyle(this.style_);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  restorePreviousStyle_(feature) {\n    const interactions = this.getMap().getInteractions().getArray();\n    for (let i = interactions.length - 1; i >= 0; --i) {\n      const interaction = interactions[i];\n      if (\n        interaction !== this &&\n        interaction instanceof Select &&\n        interaction.getStyle() &&\n        interaction.getFeatures().getArray().lastIndexOf(feature) !== -1\n      ) {\n        feature.setStyle(interaction.getStyle());\n        return;\n      }\n    }\n\n    const key = getUid(feature);\n    feature.setStyle(originalFeatureStyles[key]);\n    delete originalFeatureStyles[key];\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureLayerAssociation_(feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may change the\n   * selected state of features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const add = this.addCondition_(mapBrowserEvent);\n    const remove = this.removeCondition_(mapBrowserEvent);\n    const toggle = this.toggleCondition_(mapBrowserEvent);\n    const set = !add && !remove && !toggle;\n    const map = mapBrowserEvent.map;\n    const features = this.getFeatures();\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const deselected = [];\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const selected = [];\n\n    if (set) {\n      // Replace the currently selected feature(s) with the feature(s) at the\n      // pixel, or clear the selected feature(s) if there is no feature at\n      // the pixel.\n      clear(this.featureLayerAssociation_);\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        (feature, layer) => {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          this.addFeatureLayerAssociation_(feature, layer);\n          selected.push(feature);\n          return !this.multi_;\n        },\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let i = features.getLength() - 1; i >= 0; --i) {\n        const feature = features.item(i);\n        const index = selected.indexOf(feature);\n        if (index > -1) {\n          // feature is already selected\n          selected.splice(index, 1);\n        } else {\n          features.remove(feature);\n          deselected.push(feature);\n        }\n      }\n      if (selected.length !== 0) {\n        features.extend(selected);\n      }\n    } else {\n      // Modify the currently selected feature(s).\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        (feature, layer) => {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          if ((add || toggle) && !features.getArray().includes(feature)) {\n            this.addFeatureLayerAssociation_(feature, layer);\n            selected.push(feature);\n          } else if (\n            (remove || toggle) &&\n            features.getArray().includes(feature)\n          ) {\n            deselected.push(feature);\n            this.removeFeatureLayerAssociation_(feature);\n          }\n          return !this.multi_;\n        },\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let j = deselected.length - 1; j >= 0; --j) {\n        features.remove(deselected[j]);\n      }\n      features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n      this.dispatchEvent(\n        new SelectEvent(\n          SelectEventType.SELECT,\n          selected,\n          deselected,\n          mapBrowserEvent\n        )\n      );\n    }\n    return true;\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles['Polygon'], styles['LineString']);\n  extend(styles['GeometryCollection'], styles['LineString']);\n\n  return function (feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\nexport default Select;\n","/**\n * @module ol/interaction/Snap\n */\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {boundingExtent, buffer, createEmpty} from '../extent.js';\nimport {\n  closestOnCircle,\n  closestOnSegment,\n  squaredDistance,\n} from '../coordinate.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Result\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex Vertex.\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel VertexPixel.\n */\n\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature Feature.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment Segment.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n * @return {import(\"../Feature.js\").default|null} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n  if (\n    /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature\n  ) {\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt)\n      .feature;\n  }\n  if (\n    /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element\n  ) {\n    return /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element;\n  }\n  return null;\n}\n\nconst tempSegment = [];\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector~VectorSource} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap.js';\n *\n *     const snap = new Snap({\n *       source: source\n *     });\n *\n *     map.addInteraction(snap);\n *\n * @api\n */\nclass Snap extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.handleDownEvent) {\n      pointerOptions.handleDownEvent = TRUE;\n    }\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @type {import(\"../source/Vector.js\").default|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<string, import(\"../extent.js\").Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Segment RTree for each layer\n     * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @const\n     * @private\n     * @type {Object<string, function(Array<Array<import('../coordinate.js').Coordinate>>, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.GEOMETRY_SEGMENTERS_ = {\n      'Point': this.segmentPointGeometry_.bind(this),\n      'LineString': this.segmentLineStringGeometry_.bind(this),\n      'LinearRing': this.segmentLineStringGeometry_.bind(this),\n      'Polygon': this.segmentPolygonGeometry_.bind(this),\n      'MultiPoint': this.segmentMultiPointGeometry_.bind(this),\n      'MultiLineString': this.segmentMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.segmentMultiPolygonGeometry_.bind(this),\n      'GeometryCollection': this.segmentGeometryCollectionGeometry_.bind(this),\n      'Circle': this.segmentCircleGeometry_.bind(this),\n    };\n  }\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {boolean} [register] Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  addFeature(feature, register) {\n    register = register !== undefined ? register : true;\n    const feature_uid = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const segmenter = this.GEOMETRY_SEGMENTERS_[geometry.getType()];\n      if (segmenter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(\n          createEmpty()\n        );\n        const segments =\n          /** @type {Array<Array<import('../coordinate.js').Coordinate>>} */ ([]);\n        segmenter(segments, geometry);\n        if (segments.length === 1) {\n          this.rBush_.insert(boundingExtent(segments[0]), {\n            feature: feature,\n            segment: segments[0],\n          });\n        } else if (segments.length > 1) {\n          const extents = segments.map((s) => boundingExtent(s));\n          const segmentsData = segments.map((segment) => ({\n            feature: feature,\n            segment: segment,\n          }));\n          this.rBush_.load(extents, segmentsData);\n        }\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_,\n        this\n      );\n    }\n  }\n\n  /**\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  getFeatures_() {\n    /** @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} */\n    let features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return features;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(evt) {\n    const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n    if (result) {\n      evt.coordinate = result.vertex.slice(0, 2);\n      evt.pixel = result.vertexPixel;\n    }\n    return super.handleEvent(evt);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    if (feature) {\n      this.addFeature(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    if (feature) {\n      this.removeFeature(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    const feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      const uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    const featuresToUpdate = Object.values(this.pendingFeatures_);\n    if (featuresToUpdate.length) {\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\n      this.pendingFeatures_ = {};\n    }\n    return false;\n  }\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {boolean} [unlisten] Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  removeFeature(feature, unlisten) {\n    const unregister = unlisten !== undefined ? unlisten : true;\n    const feature_uid = getUid(feature);\n    const extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      const rBush = this.rBush_;\n      const nodesToRemove = [];\n      rBush.forEachInExtent(extent, function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    const keys = this.featuresListenerKeys_;\n    const features = /** @type {Array<import(\"../Feature.js\").default>} */ (\n      this.getFeatures_()\n    );\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      this.rBush_.clear();\n      Object.values(this.featureChangeListenerKeys_).forEach(unlistenByKey);\n      this.featureChangeListenerKeys_ = {};\n    }\n    super.setMap(map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(\n            this.features_,\n            CollectionEventType.ADD,\n            this.handleFeatureAdd_,\n            this\n          ),\n          listen(\n            this.features_,\n            CollectionEventType.REMOVE,\n            this.handleFeatureRemove_,\n            this\n          )\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(\n            this.source_,\n            VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_,\n            this\n          ),\n          listen(\n            this.source_,\n            VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_,\n            this\n          )\n        );\n      }\n      features.forEach((feature) => this.addFeature(feature));\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n   * @param {import(\"../Map.js\").default} map Map.\n   * @return {Result|null} Snap result\n   */\n  snapTo(pixel, pixelCoordinate, map) {\n    const projection = map.getView().getProjection();\n    const projectedCoordinate = fromUserCoordinate(pixelCoordinate, projection);\n\n    const box = toUserExtent(\n      buffer(\n        boundingExtent([projectedCoordinate]),\n        map.getView().getResolution() * this.pixelTolerance_\n      ),\n      projection\n    );\n\n    const segments = this.rBush_.getInExtent(box);\n\n    const segmentsLength = segments.length;\n    if (segmentsLength === 0) {\n      return null;\n    }\n\n    let closestVertex;\n    let minSquaredDistance = Infinity;\n\n    const squaredPixelTolerance = this.pixelTolerance_ * this.pixelTolerance_;\n    const getResult = () => {\n      if (closestVertex) {\n        const vertexPixel = map.getPixelFromCoordinate(closestVertex);\n        const squaredPixelDistance = squaredDistance(pixel, vertexPixel);\n        if (squaredPixelDistance <= squaredPixelTolerance) {\n          return {\n            vertex: closestVertex,\n            vertexPixel: [\n              Math.round(vertexPixel[0]),\n              Math.round(vertexPixel[1]),\n            ],\n          };\n        }\n      }\n      return null;\n    };\n\n    if (this.vertex_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() !== 'Circle') {\n          segmentData.segment.forEach((vertex) => {\n            const tempVertexCoord = fromUserCoordinate(vertex, projection);\n            const delta = squaredDistance(projectedCoordinate, tempVertexCoord);\n            if (delta < minSquaredDistance) {\n              closestVertex = vertex;\n              minSquaredDistance = delta;\n            }\n          });\n        }\n      }\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    if (this.edge_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        let vertex = null;\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() === 'Circle') {\n          let circleGeometry = segmentData.feature.getGeometry();\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circleGeometry = circleGeometry\n              .clone()\n              .transform(userProjection, projection);\n          }\n          vertex = closestOnCircle(\n            projectedCoordinate,\n            /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n          );\n        } else {\n          const [segmentStart, segmentEnd] = segmentData.segment;\n          // points have only one coordinate\n          if (segmentEnd) {\n            tempSegment[0] = fromUserCoordinate(segmentStart, projection);\n            tempSegment[1] = fromUserCoordinate(segmentEnd, projection);\n            vertex = closestOnSegment(projectedCoordinate, tempSegment);\n          }\n        }\n        if (vertex) {\n          const delta = squaredDistance(projectedCoordinate, vertex);\n          if (delta < minSquaredDistance) {\n            closestVertex = toUserCoordinate(vertex, projection);\n            minSquaredDistance = delta;\n          }\n        }\n      }\n\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  updateFeature_(feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentCircleGeometry_(segments, geometry) {\n    const projection = this.getMap().getView().getProjection();\n    let circleGeometry = geometry;\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n        circleGeometry.clone().transform(userProjection, projection)\n      );\n    }\n    const polygon = fromCircle(circleGeometry);\n    if (userProjection) {\n      polygon.transform(projection, userProjection);\n    }\n    const coordinates = polygon.getCoordinates()[0];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segments.push(coordinates.slice(i, i + 2));\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentGeometryCollectionGeometry_(segments, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const segmenter = this.GEOMETRY_SEGMENTERS_[geometries[i].getType()];\n      if (segmenter) {\n        segmenter(segments, geometries[i]);\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentLineStringGeometry_(segments, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segments.push(coordinates.slice(i, i + 2));\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiLineStringGeometry_(segments, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segments.push(coordinates.slice(i, i + 2));\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiPointGeometry_(segments, geometry) {\n    geometry.getCoordinates().forEach((point) => {\n      segments.push([point]);\n    });\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiPolygonGeometry_(segments, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          segments.push(coordinates.slice(i, i + 2));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentPointGeometry_(segments, geometry) {\n    segments.push([geometry.getCoordinates()]);\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentPolygonGeometry_(segments, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segments.push(coordinates.slice(i, i + 2));\n      }\n    }\n  }\n}\n\nexport default Snap;\n","/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport InteractionProperty from './Property.js';\nimport PointerInteraction from './Pointer.js';\nimport {TRUE} from '../functions.js';\nimport {always} from '../events/condition.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\n\n/**\n * @enum {string}\n */\nconst TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @typedef {function(Feature, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {Collection<Feature>} [features] Features contained in this collection will be able to be translated together.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * Not used if `features` is provided.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature~Feature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * translated or `false` otherwise. Not used if `features` is provided.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nexport class TranslateEvent extends Event {\n  /**\n   * @param {TranslateEventType} type Type.\n   * @param {Collection<Feature>} features The features translated.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} startCoordinate The original coordinates before.translation started\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   */\n  constructor(type, features, coordinate, startCoordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being translated.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * The coordinate of the start position before translation started.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.startCoordinate = startCoordinate;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'translateend'|'translatestart'|'translating', TranslateEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'translateend'|'translatestart'|'translating', Return>} TranslateOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n * If you want to translate multiple features in a single action (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.\n *\n * @fires TranslateEvent\n * @api\n */\nclass Translate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {TranslateOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TranslateOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TranslateOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * The last position we translated to.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = null;\n\n    /**\n     * The start position before translation started.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.startCoordinate_ = null;\n\n    /**\n     * @type {Collection<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features !== undefined ? options.features : null;\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers && !this.features_) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter && !this.features_ ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @type {Feature}\n     * @private\n     */\n    this.lastFeature_ = null;\n\n    this.addChangeListener(\n      InteractionProperty.ACTIVE,\n      this.handleActiveChanged_\n    );\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    if (!event.originalEvent || !this.condition_(event)) {\n      return false;\n    }\n    this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n    if (!this.lastCoordinate_ && this.lastFeature_) {\n      this.startCoordinate_ = event.coordinate;\n      this.lastCoordinate_ = event.coordinate;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATESTART,\n          features,\n          event.coordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    if (this.lastCoordinate_) {\n      this.lastCoordinate_ = null;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATEEND,\n          features,\n          event.coordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n      // cleanup\n      this.startCoordinate_ = null;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  handleDragEvent(event) {\n    if (this.lastCoordinate_) {\n      const newCoordinate = event.coordinate;\n      const projection = event.map.getView().getProjection();\n\n      const newViewCoordinate = fromUserCoordinate(newCoordinate, projection);\n      const lastViewCoordinate = fromUserCoordinate(\n        this.lastCoordinate_,\n        projection\n      );\n      const deltaX = newViewCoordinate[0] - lastViewCoordinate[0];\n      const deltaY = newViewCoordinate[1] - lastViewCoordinate[1];\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n      const userProjection = getUserProjection();\n\n      features.forEach(function (feature) {\n        const geom = feature.getGeometry();\n        if (userProjection) {\n          geom.transform(userProjection, projection);\n          geom.translate(deltaX, deltaY);\n          geom.transform(projection, userProjection);\n        } else {\n          geom.translate(deltaX, deltaY);\n        }\n        feature.setGeometry(geom);\n      });\n\n      this.lastCoordinate_ = newCoordinate;\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATING,\n          features,\n          newCoordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n    }\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  handleMoveEvent(event) {\n    const elem = event.map.getViewport();\n\n    // Change the cursor to grab/grabbing if hovering any of the features managed\n    // by the interaction\n    if (this.featuresAtPixel_(event.pixel, event.map)) {\n      elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n      elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n    } else {\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {import(\"../Map.js\").default} map Map to test the intersection on.\n   * @return {Feature} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  featuresAtPixel_(pixel, map) {\n    return map.forEachFeatureAtPixel(\n      pixel,\n      (feature, layer) => {\n        if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n          return undefined;\n        }\n        if (this.features_ && !this.features_.getArray().includes(feature)) {\n          return undefined;\n        }\n        return feature;\n      },\n      {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_,\n      }\n    );\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    this.updateState_(oldMap);\n  }\n\n  /**\n   * @private\n   */\n  handleActiveChanged_() {\n    this.updateState_(null);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} oldMap Old map.\n   * @private\n   */\n  updateState_(oldMap) {\n    let map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        const elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  }\n}\n\nexport default Translate;\n","/**\n * @module ol/geom/flat/flip\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destOffset] Destination offset.\n * @return {Array<number>} Flat coordinates.\n */\nexport function flipXY(flatCoordinates, offset, end, stride, dest, destOffset) {\n  if (dest !== undefined) {\n    dest = dest;\n    destOffset = destOffset !== undefined ? destOffset : 0;\n  } else {\n    dest = [];\n    destOffset = 0;\n  }\n  let j = offset;\n  while (j < end) {\n    const x = flatCoordinates[j++];\n    dest[destOffset++] = flatCoordinates[j++];\n    dest[destOffset++] = x;\n    for (let k = 2; k < stride; ++k) {\n      dest[destOffset++] = flatCoordinates[j++];\n    }\n  }\n  dest.length = destOffset;\n  return dest;\n}\n","/**\n * @module ol/format/Feature\n */\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  }\n  if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/EsriJSON\n */\nimport Feature from '../Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent} from '../extent.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {linearRingIsClockwise} from '../geom/flat/orient.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"arcgis-rest-api\").Feature} EsriJSONFeature\n * @typedef {import(\"arcgis-rest-api\").FeatureSet} EsriJSONFeatureSet\n * @typedef {import(\"arcgis-rest-api\").Geometry} EsriJSONGeometry\n * @typedef {import(\"arcgis-rest-api\").Point} EsriJSONPoint\n * @typedef {import(\"arcgis-rest-api\").Polyline} EsriJSONPolyline\n * @typedef {import(\"arcgis-rest-api\").Polygon} EsriJSONPolygon\n * @typedef {import(\"arcgis-rest-api\").Multipoint} EsriJSONMultipoint\n * @typedef {import(\"arcgis-rest-api\").HasZM} EsriJSONHasZM\n * @typedef {import(\"arcgis-rest-api\").Position} EsriJSONPosition\n * @typedef {import(\"arcgis-rest-api\").SpatialReferenceWkid} EsriJSONSpatialReferenceWkid\n */\n\n/**\n * @typedef {Object} EsriJSONMultiPolygon\n * @property {Array<Array<Array<Array<number>>>>} rings Rings for the MultiPolygon.\n * @property {boolean} [hasM] If the polygon coordinates have an M value.\n * @property {boolean} [hasZ] If the polygon coordinates have a Z value.\n * @property {EsriJSONSpatialReferenceWkid} [spatialReference] The coordinate reference system.\n */\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type, function(EsriJSONGeometry): import(\"../geom/Geometry.js\").default>}\n */\nconst GEOMETRY_READERS = {\n  Point: readPointGeometry,\n  LineString: readLineStringGeometry,\n  Polygon: readPolygonGeometry,\n  MultiPoint: readMultiPointGeometry,\n  MultiLineString: readMultiLineStringGeometry,\n  MultiPolygon: readMultiPolygonGeometry,\n};\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type, function(import(\"../geom/Geometry.js\").default, import(\"./Feature.js\").WriteOptions=): (EsriJSONGeometry)>}\n */\nconst GEOMETRY_WRITERS = {\n  Point: writePointGeometry,\n  LineString: writeLineStringGeometry,\n  Polygon: writePolygonGeometry,\n  MultiPoint: writeMultiPointGeometry,\n  MultiLineString: writeMultiLineStringGeometry,\n  MultiPolygon: writeMultiPolygonGeometry,\n};\n\n/**\n * @typedef {Object} Options\n * @property {string} [geometryName] Geometry name to use when creating features.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the EsriJSON format.\n *\n * @api\n */\nclass EsriJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @param {string} [idField] Name of the field where to get the id from.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options, idField) {\n    const esriJSONFeature = /** @type {EsriJSONFeature} */ (object);\n    const geometry = readGeometry(esriJSONFeature.geometry, options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    }\n    feature.setGeometry(geometry);\n    if (esriJSONFeature.attributes) {\n      feature.setProperties(esriJSONFeature.attributes, true);\n      const id = esriJSONFeature.attributes[idField];\n      if (id !== undefined) {\n        feature.setId(/** @type {number} */ (id));\n      }\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    options = options ? options : {};\n    if (object['features']) {\n      const esriJSONFeatureSet = /** @type {EsriJSONFeatureSet} */ (object);\n      /** @type {Array<import(\"../Feature.js\").default>} */\n      const features = [];\n      const esriJSONFeatures = esriJSONFeatureSet.features;\n      for (let i = 0, ii = esriJSONFeatures.length; i < ii; ++i) {\n        features.push(\n          this.readFeatureFromObject(\n            esriJSONFeatures[i],\n            options,\n            object.objectIdFieldName\n          )\n        );\n      }\n      return features;\n    }\n    return [this.readFeatureFromObject(object, options)];\n  }\n\n  /**\n   * @param {EsriJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    if (\n      object['spatialReference'] &&\n      object['spatialReference']['wkid'] !== undefined\n    ) {\n      const spatialReference = /** @type {EsriJSONSpatialReferenceWkid} */ (\n        object['spatialReference']\n      );\n      const crs = spatialReference.wkid;\n      return getProjection('EPSG:' + crs);\n    }\n    return null;\n  }\n\n  /**\n   * Encode a geometry as a EsriJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {EsriJSONGeometry} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n\n  /**\n   * Encode a feature as a esriJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n    const object = {};\n    if (!feature.hasProperties()) {\n      object['attributes'] = {};\n      return object;\n    }\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object['geometry'] = writeGeometry(geometry, options);\n      const projection =\n        options && (options.dataProjection || options.featureProjection);\n      if (projection) {\n        object['geometry']['spatialReference'] =\n          /** @type {EsriJSONSpatialReferenceWkid} */ ({\n            wkid: Number(getProjection(projection).getCode().split(':').pop()),\n          });\n      }\n      delete properties[feature.getGeometryName()];\n    }\n    if (!isEmpty(properties)) {\n      object['attributes'] = properties;\n    } else {\n      object['attributes'] = {};\n    }\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a EsriJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {EsriJSONFeatureSet} EsriJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      'features': objects,\n    };\n  }\n}\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  /** @type {import(\"../geom/Geometry.js\").Type} */\n  let type;\n  if (typeof object['x'] === 'number' && typeof object['y'] === 'number') {\n    type = 'Point';\n  } else if (object['points']) {\n    type = 'MultiPoint';\n  } else if (object['paths']) {\n    const esriJSONPolyline = /** @type {EsriJSONPolyline} */ (object);\n    if (esriJSONPolyline.paths.length === 1) {\n      type = 'LineString';\n    } else {\n      type = 'MultiLineString';\n    }\n  } else if (object['rings']) {\n    const esriJSONPolygon = /** @type {EsriJSONPolygon} */ (object);\n    const layout = getGeometryLayout(esriJSONPolygon);\n    const rings = convertRings(esriJSONPolygon.rings, layout);\n    if (rings.length === 1) {\n      type = 'Polygon';\n      object = Object.assign({}, object, {['rings']: rings[0]});\n    } else {\n      type = 'MultiPolygon';\n      object = Object.assign({}, object, {['rings']: rings});\n    }\n  }\n  const geometryReader = GEOMETRY_READERS[type];\n  return transformGeometryWithOptions(geometryReader(object), false, options);\n}\n\n/**\n * Determines inner and outer rings.\n * Checks if any polygons in this array contain any other polygons in this\n * array. It is used for checking for holes.\n * Logic inspired by: https://github.com/Esri/terraformer-arcgis-parser\n * @param {Array<!Array<!Array<number>>>} rings Rings.\n * @param {import(\"../geom/Geometry.js\").GeometryLayout} layout Geometry layout.\n * @return {Array<!Array<!Array<!Array<number>>>>} Transformed rings.\n */\nfunction convertRings(rings, layout) {\n  const flatRing = [];\n  const outerRings = [];\n  const holes = [];\n  let i, ii;\n  for (i = 0, ii = rings.length; i < ii; ++i) {\n    flatRing.length = 0;\n    deflateCoordinates(flatRing, 0, rings[i], layout.length);\n    // is this ring an outer ring? is it clockwise?\n    const clockwise = linearRingIsClockwise(\n      flatRing,\n      0,\n      flatRing.length,\n      layout.length\n    );\n    if (clockwise) {\n      outerRings.push([rings[i]]);\n    } else {\n      holes.push(rings[i]);\n    }\n  }\n  while (holes.length) {\n    const hole = holes.shift();\n    let matched = false;\n    // loop over all outer rings and see if they contain our hole.\n    for (i = outerRings.length - 1; i >= 0; i--) {\n      const outerRing = outerRings[i][0];\n      const containsHole = containsExtent(\n        new LinearRing(outerRing).getExtent(),\n        new LinearRing(hole).getExtent()\n      );\n      if (containsHole) {\n        // the hole is contained push it into our polygon\n        outerRings[i].push(hole);\n        matched = true;\n        break;\n      }\n    }\n    if (!matched) {\n      // no outer rings contain this hole turn it into and outer\n      // ring (reverse it)\n      outerRings.push([hole.reverse()]);\n    }\n  }\n  return outerRings;\n}\n\n/**\n * @param {EsriJSONPoint} object Object.\n * @return {import(\"../geom/Geometry.js\").default} Point.\n */\nfunction readPointGeometry(object) {\n  let point;\n  if (object.m !== undefined && object.z !== undefined) {\n    point = new Point([object.x, object.y, object.z, object.m], 'XYZM');\n  } else if (object.z !== undefined) {\n    point = new Point([object.x, object.y, object.z], 'XYZ');\n  } else if (object.m !== undefined) {\n    point = new Point([object.x, object.y, object.m], 'XYM');\n  } else {\n    point = new Point([object.x, object.y]);\n  }\n  return point;\n}\n\n/**\n * @param {EsriJSONPolyline} object Object.\n * @return {import(\"../geom/Geometry.js\").default} LineString.\n */\nfunction readLineStringGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new LineString(object.paths[0], layout);\n}\n\n/**\n * @param {EsriJSONPolyline} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new MultiLineString(object.paths, layout);\n}\n\n/**\n * @param {EsriJSONHasZM} object Object.\n * @return {import(\"../geom/Geometry.js\").GeometryLayout} The geometry layout to use.\n */\nfunction getGeometryLayout(object) {\n  /** @type {import(\"../geom/Geometry.js\").GeometryLayout} */\n  let layout = 'XY';\n  if (object.hasZ === true && object.hasM === true) {\n    layout = 'XYZM';\n  } else if (object.hasZ === true) {\n    layout = 'XYZ';\n  } else if (object.hasM === true) {\n    layout = 'XYM';\n  }\n  return layout;\n}\n\n/**\n * @param {EsriJSONMultipoint} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new MultiPoint(object.points, layout);\n}\n\n/**\n * @param {EsriJSONMultiPolygon} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new MultiPolygon(object.rings, layout);\n}\n\n/**\n * @param {EsriJSONPolygon} object Object.\n * @return {import(\"../geom/Geometry.js\").default} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new Polygon(object.rings, layout);\n}\n\n/**\n * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONPoint} EsriJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  const coordinates = geometry.getCoordinates();\n  /** @type {EsriJSONPoint} */\n  let esriJSON;\n  const layout = geometry.getLayout();\n  if (layout === 'XYZ') {\n    esriJSON = {\n      x: coordinates[0],\n      y: coordinates[1],\n      z: coordinates[2],\n    };\n  } else if (layout === 'XYM') {\n    esriJSON = {\n      x: coordinates[0],\n      y: coordinates[1],\n      m: coordinates[2],\n    };\n  } else if (layout === 'XYZM') {\n    esriJSON = {\n      x: coordinates[0],\n      y: coordinates[1],\n      z: coordinates[2],\n      m: coordinates[3],\n    };\n  } else if (layout === 'XY') {\n    esriJSON = {\n      x: coordinates[0],\n      y: coordinates[1],\n    };\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n  return esriJSON;\n}\n\n/**\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @return {Object} Object with boolean hasZ and hasM keys.\n */\nfunction getHasZM(geometry) {\n  const layout = geometry.getLayout();\n  return {\n    hasZ: layout === 'XYZ' || layout === 'XYZM',\n    hasM: layout === 'XYM' || layout === 'XYZM',\n  };\n}\n\n/**\n * @param {import(\"../geom/LineString.js\").default} lineString Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeLineStringGeometry(lineString, options) {\n  const hasZM = getHasZM(lineString);\n  return {\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    paths: [\n      /** @type {Array<EsriJSONPosition>} */ (lineString.getCoordinates()),\n    ],\n  };\n}\n\n/**\n * @param {import(\"../geom/Polygon.js\").default} polygon Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writePolygonGeometry(polygon, options) {\n  // Esri geometries use the left-hand rule\n  const hasZM = getHasZM(polygon);\n  return {\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    rings: /** @type {Array<Array<EsriJSONPosition>>} */ (\n      polygon.getCoordinates(false)\n    ),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default} multiLineString Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeMultiLineStringGeometry(multiLineString, options) {\n  const hasZM = getHasZM(multiLineString);\n  return {\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    paths: /** @type {Array<Array<EsriJSONPosition>>} */ (\n      multiLineString.getCoordinates()\n    ),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default} multiPoint Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONMultipoint} EsriJSON geometry.\n */\nfunction writeMultiPointGeometry(multiPoint, options) {\n  const hasZM = getHasZM(multiPoint);\n  return {\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    points: /** @type {Array<EsriJSONPosition>} */ (\n      multiPoint.getCoordinates()\n    ),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  const hasZM = getHasZM(geometry);\n  const coordinates = geometry.getCoordinates(false);\n  const output = [];\n  for (let i = 0; i < coordinates.length; i++) {\n    for (let x = coordinates[i].length - 1; x >= 0; x--) {\n      output.push(coordinates[i][x]);\n    }\n  }\n  return {\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    rings: /** @type {Array<Array<EsriJSONPosition>>} */ (output),\n  };\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONGeometry} EsriJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  const geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n  return geometryWriter(\n    transformGeometryWithOptions(geometry, true, options),\n    options\n  );\n}\n\nexport default EsriJSON;\n","/**\n * @module ol/format/XMLFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport {abstract} from '../util.js';\nimport {extend} from '../array.js';\nimport {getXMLSerializer, isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nclass XMLFeature extends FeatureFormat {\n  constructor() {\n    super();\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = getXMLSerializer();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'xml';\n  }\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readFeatureFromDocument(\n        /** @type {Document} */ (source),\n        options\n      );\n    }\n    return this.readFeatureFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromDocument(doc, options) {\n    const features = this.readFeaturesFromDocument(doc, options);\n    if (features.length > 0) {\n      return features[0];\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    if (!source) {\n      return [];\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeaturesFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source),\n        options\n      );\n    }\n    return this.readFeaturesFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromDocument(doc, options) {\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    const features = [];\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          features,\n          this.readFeaturesFromNode(/** @type {Element} */ (n), options)\n        );\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readGeometryFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source),\n        options\n      );\n    }\n    return this.readGeometryFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromDocument(doc, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readProjectionFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    return this.dataProjection;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   */\n  writeFeature(feature, options) {\n    const node = this.writeFeatureNode(feature, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  writeFeatureNode(feature, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Result.\n   * @api\n   */\n  writeFeatures(features, options) {\n    const node = this.writeFeaturesNode(features, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeFeaturesNode(features, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   */\n  writeGeometry(geometry, options) {\n    const node = this.writeGeometryNode(geometry, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeGeometryNode(geometry, options) {\n    return null; // not implemented\n  }\n}\n\nexport default XMLFeature;\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, getDocument} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readPositiveInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(getDocument().createTextNode(string));\n}\n","/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  makeArrayPusher,\n  makeArraySerializer,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readDateTime,\n  readDecimal,\n  readPositiveInteger,\n  readString,\n  writeDateTimeTextNode,\n  writeDecimalTextNode,\n  writeNonNegativeIntegerTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.topografix.com/GPX/1/1 ' +\n  'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt,\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GPX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeArrayPusher(readRte),\n  'trk': makeArrayPusher(readTrk),\n  'wpt': makeArrayPusher(readWpt),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeObjectPropertySetter(readString, 'linkText'),\n  'type': makeObjectPropertySetter(readString, 'linkType'),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst GPX_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeChildAppender(writeRte),\n  'trk': makeChildAppender(writeTrk),\n  'wpt': makeChildAppender(writeWpt),\n});\n\n/**\n * @typedef {Object} Options\n * @property {function(Feature, Node):void} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ] HasZ.\n * @property {boolean} [hasM] HasM.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nclass GPX extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @type {function(Feature, Node): void|undefined}\n     * @private\n     */\n    this.readExtensions_ = options.readExtensions;\n  }\n\n  /**\n   * @param {Array<Feature>} features List of features.\n   * @private\n   */\n  handleReadExtensions_(features) {\n    if (!features) {\n      features = [];\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      if (this.readExtensions_) {\n        const extensionsNode = feature.get('extensionsNode_') || null;\n        this.readExtensions_(feature, extensionsNode);\n      }\n      feature.set('extensionsNode_', undefined);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    const featureReader = FEATURE_READER[node.localName];\n    if (!featureReader) {\n      return null;\n    }\n    const feature = featureReader(node, [this.getReadOptions(node, options)]);\n    if (!feature) {\n      return null;\n    }\n    this.handleReadExtensions_([feature]);\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return [];\n    }\n    if (node.localName == 'gpx') {\n      /** @type {Array<Feature>} */\n      const features = pushParseAndPop([], GPX_PARSERS, node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (features) {\n        this.handleReadExtensions_(features);\n        return features;\n      }\n      return [];\n    }\n    return [];\n  }\n\n  /**\n   * Encode an array of features in the GPX format as an XML node.\n   * LineString geometries are output as routes (`<rte>`), and MultiLineString\n   * as tracks (`<trk>`).\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    //FIXME Serialize metadata\n    const gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    gpx.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION\n    );\n    gpx.setAttribute('version', '1.1');\n    gpx.setAttribute('creator', 'OpenLayers');\n\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: gpx}),\n      GPX_SERIALIZERS,\n      GPX_NODE_FACTORY,\n      features,\n      [options]\n    );\n    return gpx;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readPositiveInteger),\n  'extensions': parseExtensions,\n  'type': makeObjectPropertySetter(readString),\n  'rtept': parseRtePt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTEPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readPositiveInteger),\n  'type': makeObjectPropertySetter(readString),\n  'extensions': parseExtensions,\n  'trkseg': parseTrkSeg,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKSEG_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': parseTrkPt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n  'magvar': makeObjectPropertySetter(readDecimal),\n  'geoidheight': makeObjectPropertySetter(readDecimal),\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'sym': makeObjectPropertySetter(readString),\n  'type': makeObjectPropertySetter(readString),\n  'fix': makeObjectPropertySetter(readString),\n  'sat': makeObjectPropertySetter(readPositiveInteger),\n  'hdop': makeObjectPropertySetter(readDecimal),\n  'vdop': makeObjectPropertySetter(readDecimal),\n  'pdop': makeObjectPropertySetter(readDecimal),\n  'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n  'dgpsid': makeObjectPropertySetter(readPositiveInteger),\n  'extensions': parseExtensions,\n});\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'rtept',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst RTE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'rtept': makeArraySerializer(makeChildAppender(writeWptType)),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTEPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['ele', 'time']);\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst TRK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'trkseg',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg)),\n});\n\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRKSEG_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': makeChildAppender(writeWptType),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'ele',\n  'time',\n  'magvar',\n  'geoidheight',\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'sym',\n  'type',\n  'fix',\n  'sat',\n  'hdop',\n  'vdop',\n  'pdop',\n  'ageofdgpsdata',\n  'dgpsid',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeChildAppender(writeDecimalTextNode),\n  'time': makeChildAppender(writeDateTimeTextNode),\n  'magvar': makeChildAppender(writeDecimalTextNode),\n  'geoidheight': makeChildAppender(writeDecimalTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'sym': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'fix': makeChildAppender(writeStringTextNode),\n  'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'hdop': makeChildAppender(writeDecimalTextNode),\n  'vdop': makeChildAppender(writeDecimalTextNode),\n  'pdop': makeChildAppender(writeDecimalTextNode),\n  'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n  'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk',\n};\n\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, nodeName) {\n  const geometry = /** @type {Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Element} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat'))\n  );\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>} [ends] Ends.\n * @return {import(\"../geom/Geometry.js\").GeometryLayout} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n  /** @type {import(\"../geom/Geometry.js\").GeometryLayout} */\n  let layout = 'XY';\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = 'XYZM';\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = 'XYZ';\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = 'XYM';\n    stride = 3;\n  }\n  if (stride !== 4) {\n    for (let i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = (flatCoordinates.length / 4) * stride;\n    if (ends) {\n      for (let i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = (ends[i] / 4) * stride;\n      }\n    }\n  }\n  return layout;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {!Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const flatCoordinates = /** @type {Array<number>} */ (\n      rteValues['flatCoordinates']\n    );\n    const layoutOptions = /** @type {LayoutOptions} */ (\n      rteValues['layoutOptions']\n    );\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {!Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const flatCoordinates = /** @type {Array<number>} */ (\n      trkValues['flatCoordinates']\n    );\n    const layoutOptions = /** @type {LayoutOptions} */ (\n      trkValues['layoutOptions']\n    );\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'layoutOptions': {},\n    },\n    RTE_PARSERS,\n    node,\n    objectStack\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n  const geometry = new LineString(flatCoordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'ends': [],\n      'layoutOptions': {},\n    },\n    TRK_PARSERS,\n    node,\n    objectStack\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(flatCoordinates, layout, ends);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = applyLayoutOptions(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [properties['linkText'], properties['linkType']];\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    link,\n    objectStack,\n    LINK_SEQUENCE\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  node.setAttributeNS(null, 'lat', String(coordinate[1]));\n  node.setAttributeNS(null, 'lon', String(coordinate[0]));\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case 'XYZM':\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n    // fall through\n    case 'XYZ':\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case 'XYM':\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n    // pass\n  }\n  const orderedKeys =\n    node.nodeName == 'rtept'\n      ? RTEPT_TYPE_SEQUENCE[namespaceURI]\n      : WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const properties = feature.getProperties();\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'LineString') {\n    const lineString = /** @type {LineString} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    context['geometryLayout'] = lineString.getLayout();\n    properties['rtept'] = lineString.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    RTE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const properties = feature.getProperties();\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'MultiLineString') {\n    const multiLineString = /** @type {MultiLineString} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    properties['trkseg'] = multiLineString.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    TRK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['geometryLayout'] = lineString.getLayout();\n  context['properties'] = {};\n  pushSerializeAndPop(\n    context,\n    TRKSEG_SERIALIZERS,\n    TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(),\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'Point') {\n    const point = /** @type {Point} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    context['geometryLayout'] = point.getLayout();\n    writeWptType(node, point.getCoordinates(), objectStack);\n  }\n}\n\nexport default GPX;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assert} from '../asserts.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), options);\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/format/TextFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nclass TextFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'text';\n  }\n\n  /**\n   * Read the feature from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromText(\n      getText(source),\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the features from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromText(\n      getText(source),\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the geometry from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromText(\n      getText(source),\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromText(getText(source));\n  }\n\n  /**\n   * @param {string} text Text.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjectionFromText(text) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as a string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return this.writeFeatureText(feature, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return this.writeFeaturesText(features, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return this.writeGeometryText(geometry, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  }\n  return '';\n}\n\nexport default TextFeature;\n","/**\n * @module ol/format/IGC\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport TextFeature from './TextFeature.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {'barometric' | 'gps' | 'none'} IGCZ\n * IGC altitude/z. One of 'barometric', 'gps', 'none'.\n */\n\n/**\n * @const\n * @type {RegExp}\n */\nconst B_RECORD_RE =\n  /^B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5})/;\n\n/**\n * @const\n * @type {RegExp}\n */\nconst H_RECORD_RE = /^H.([A-Z]{3}).*?:(.*)/;\n\n/**\n * @const\n * @type {RegExp}\n */\nconst HFDTE_RECORD_RE = /^HFDTE(\\d{2})(\\d{2})(\\d{2})/;\n\n/**\n * A regular expression matching the newline characters `\\r\\n`, `\\r` and `\\n`.\n *\n * @const\n * @type {RegExp}\n */\nconst NEWLINE_RE = /\\r\\n|\\r|\\n/;\n\n/**\n * @typedef {Object} Options\n * @property {IGCZ} [altitudeMode='none'] Altitude mode. Possible\n * values are `'barometric'`, `'gps'`, and `'none'`.\n */\n\n/**\n * @classdesc\n * Feature format for `*.igc` flight recording files.\n *\n * As IGC sources contain a single feature,\n * {@link module:ol/format/IGC~IGC#readFeatures} will return the feature in an\n * array\n *\n * @api\n */\nclass IGC extends TextFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {IGCZ}\n     */\n    this.altitudeMode_ = options.altitudeMode ? options.altitudeMode : 'none';\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    const altitudeMode = this.altitudeMode_;\n    const lines = text.split(NEWLINE_RE);\n    /** @type {Object<string, string>} */\n    const properties = {};\n    const flatCoordinates = [];\n    let year = 2000;\n    let month = 0;\n    let day = 1;\n    let lastDateTime = -1;\n    let i, ii;\n    for (i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      let m;\n      if (line.charAt(0) == 'B') {\n        m = B_RECORD_RE.exec(line);\n        if (m) {\n          const hour = parseInt(m[1], 10);\n          const minute = parseInt(m[2], 10);\n          const second = parseInt(m[3], 10);\n          let y = parseInt(m[4], 10) + parseInt(m[5], 10) / 60000;\n          if (m[6] == 'S') {\n            y = -y;\n          }\n          let x = parseInt(m[7], 10) + parseInt(m[8], 10) / 60000;\n          if (m[9] == 'W') {\n            x = -x;\n          }\n          flatCoordinates.push(x, y);\n          if (altitudeMode != 'none') {\n            let z;\n            if (altitudeMode == 'gps') {\n              z = parseInt(m[11], 10);\n            } else if (altitudeMode == 'barometric') {\n              z = parseInt(m[12], 10);\n            } else {\n              z = 0;\n            }\n            flatCoordinates.push(z);\n          }\n          let dateTime = Date.UTC(year, month, day, hour, minute, second);\n          // Detect UTC midnight wrap around.\n          if (dateTime < lastDateTime) {\n            dateTime = Date.UTC(year, month, day + 1, hour, minute, second);\n          }\n          flatCoordinates.push(dateTime / 1000);\n          lastDateTime = dateTime;\n        }\n      } else if (line.charAt(0) == 'H') {\n        m = HFDTE_RECORD_RE.exec(line);\n        if (m) {\n          day = parseInt(m[1], 10);\n          month = parseInt(m[2], 10) - 1;\n          year = 2000 + parseInt(m[3], 10);\n        } else {\n          m = H_RECORD_RE.exec(line);\n          if (m) {\n            properties[m[1]] = m[2].trim();\n          }\n        }\n      }\n    }\n    if (flatCoordinates.length === 0) {\n      return null;\n    }\n    const layout = altitudeMode == 'none' ? 'XYM' : 'XYZM';\n    const lineString = new LineString(flatCoordinates, layout);\n    const feature = new Feature(\n      transformGeometryWithOptions(lineString, false, options)\n    );\n    feature.setProperties(properties, true);\n    return feature;\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    const feature = this.readFeatureFromText(text, options);\n    if (feature) {\n      return [feature];\n    }\n    return [];\n  }\n}\n\nexport default IGC;\n","/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport Icon from '../style/Icon.js';\nimport ImageState from '../ImageState.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  isDocument,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeReplacer,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readBoolean,\n  readDecimal,\n  readString,\n  writeBooleanTextNode,\n  writeCDATASection,\n  writeDecimalTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {toRadians} from '../math.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x X coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} xunits Units of x.\n * @property {number} y Y coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} yunits Units of Y.\n * @property {import(\"../style/Icon.js\").IconOrigin} [origin] Origin.\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<Array<number>>} coordinates Coordinates.\n * @property {Array<number>} whens Whens.\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst GX_NAMESPACE_URIS = ['http://www.google.com/kml/ext/2.2'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.opengis.net/kml/2.2 ' +\n  'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n/**\n * @type {Object<string, import(\"../style/Icon.js\").IconAnchorUnits>}\n */\nconst ICON_ANCHOR_UNITS_MAP = {\n  'fraction': 'fraction',\n  'pixels': 'pixels',\n  'insetPixels': 'pixels',\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PLACEMARK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readStyleURL),\n    'visibility': makeObjectPropertySetter(readBoolean),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry'),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': extendedDataParser,\n  'Region': regionParser,\n  'Link': linkParser,\n  'address': makeObjectPropertySetter(readString),\n  'description': makeObjectPropertySetter(readString),\n  'name': makeObjectPropertySetter(readString),\n  'open': makeObjectPropertySetter(readBoolean),\n  'phoneNumber': makeObjectPropertySetter(readString),\n  'visibility': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'href': makeObjectPropertySetter(readURI),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CAMERA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  Altitude: makeObjectPropertySetter(readDecimal),\n  Longitude: makeObjectPropertySetter(readDecimal),\n  Latitude: makeObjectPropertySetter(readDecimal),\n  Tilt: makeObjectPropertySetter(readDecimal),\n  AltitudeMode: makeObjectPropertySetter(readString),\n  Heading: makeObjectPropertySetter(readDecimal),\n  Roll: makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LatLonAltBox': latLonAltBoxParser,\n  'Lod': lodParser,\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['Document', 'Placemark']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Document': makeChildAppender(writeDocument),\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @type {import(\"../color.js\").Color}\n */\nlet DEFAULT_COLOR;\n\n/**\n * @type {Fill|null}\n */\nlet DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill|null} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nlet DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {import(\"../style/Image.js\").default|null}\n */\nlet DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default|null} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nlet DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {Stroke|null}\n */\nlet DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke|null} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {Stroke}\n */\nlet DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {Text|null}\n */\nlet DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text|null} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {Style|null}\n */\nlet DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {Style|null} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>|null} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\n/**\n * Function that returns the scale needed to normalize an icon image to 32 pixels.\n * @param {import(\"../size.js\").Size} size Image size.\n * @return {number} Scale.\n */\nfunction scaleForSize(size) {\n  return 32 / Math.min(size[0], size[1]);\n}\n\nfunction createStyleDefaults() {\n  DEFAULT_COLOR = [255, 255, 255, 1];\n\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR,\n  });\n\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2];\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = 'pixels';\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = 'pixels';\n\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n\n  DEFAULT_IMAGE_STYLE_SRC =\n    'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: 'bottom-left',\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: scaleForSize(DEFAULT_IMAGE_STYLE_SIZE),\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC,\n  });\n\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1,\n  });\n\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2,\n  });\n\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8,\n  });\n\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0,\n  });\n\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n\n/**\n * @type {HTMLTextAreaElement}\n */\nlet TEXTAREA;\n\n/**\n * A function that takes a url `{string}` and returns a url `{string}`.\n * Might be used to change an icon path or to substitute a\n * data url obtained from a KMZ array buffer.\n *\n * @typedef {function(string):string} IconUrlFunction\n * @api\n */\n\n/**\n * Function that returns a url unchanged.\n * @param {string} href Input url.\n * @return {string} Output url.\n */\nfunction defaultIconUrlFunction(href) {\n  return href;\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * @property {IconUrlFunction} [iconUrlFunction] Function that takes a url string and returns a url string.\n * Might be used to change an icon path or to substitute a data url obtained from a KMZ array buffer.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * @api\n */\nclass KML extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    if (!DEFAULT_STYLE_ARRAY) {\n      createStyleDefaults();\n    }\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {Array<Style>}\n     */\n    this.defaultStyle_ = options.defaultStyle\n      ? options.defaultStyle\n      : DEFAULT_STYLE_ARRAY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.extractStyles_ =\n      options.extractStyles !== undefined ? options.extractStyles : true;\n\n    /**\n     * @type {boolean}\n     */\n    this.writeStyles_ =\n      options.writeStyles !== undefined ? options.writeStyles : true;\n\n    /**\n     * @private\n     * @type {!Object<string, (Array<Style>|string)>}\n     */\n    this.sharedStyles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.showPointNames_ =\n      options.showPointNames !== undefined ? options.showPointNames : true;\n\n    /**\n     * @type {null|string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    /**\n     * @type {IconUrlFunction}\n     */\n    this.iconUrlFunction_ = options.iconUrlFunction\n      ? options.iconUrlFunction\n      : defaultIconUrlFunction;\n\n    this.supportedMediaTypes = ['application/vnd.google-earth.kml+xml'];\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<Feature>|undefined} Features.\n   */\n  readDocumentOrFolder_(node, objectStack) {\n    // FIXME use scope somehow\n    const parsersNS = makeStructureNS(NAMESPACE_URIS, {\n      'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this),\n    });\n    /** @type {Array<Feature>} */\n    // @ts-ignore\n    const features = pushParseAndPop([], parsersNS, node, objectStack, this);\n    if (features) {\n      return features;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Feature|undefined} Feature.\n   */\n  readPlacemark_(node, objectStack) {\n    const object = pushParseAndPop(\n      {'geometry': null},\n      PLACEMARK_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (!object) {\n      return undefined;\n    }\n    const feature = new Feature();\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      feature.setId(id);\n    }\n    const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n      objectStack[0]\n    );\n\n    const geometry = object['geometry'];\n    if (geometry) {\n      transformGeometryWithOptions(geometry, false, options);\n    }\n    feature.setGeometry(geometry);\n    delete object['geometry'];\n\n    if (this.extractStyles_) {\n      const style = object['Style'];\n      const styleUrl = object['styleUrl'];\n      const styleFunction = createFeatureStyleFunction(\n        style,\n        styleUrl,\n        this.defaultStyle_,\n        this.sharedStyles_,\n        this.showPointNames_\n      );\n      feature.setStyle(styleFunction);\n    }\n    delete object['Style'];\n    // we do not remove the styleUrl property from the object, so it\n    // gets stored on feature when setProperties is called\n\n    feature.setProperties(object, true);\n\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyle_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      const style = readStyle.call(this, node, objectStack);\n      if (style) {\n        let styleUri;\n        let baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n          baseURI = window.location.href;\n        }\n        if (baseURI) {\n          const url = new URL('#' + id, baseURI);\n          styleUri = url.href;\n        } else {\n          styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = style;\n      }\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyleMap_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id === null) {\n      return;\n    }\n    const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n    if (!styleMapValue) {\n      return;\n    }\n    let styleUri;\n    let baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n      baseURI = window.location.href;\n    }\n    if (baseURI) {\n      const url = new URL('#' + id, baseURI);\n      styleUri = url.href;\n    } else {\n      styleUri = '#' + id;\n    }\n    this.sharedStyles_[styleUri] = styleMapValue;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    const feature = this.readPlacemark_(node, [\n      this.getReadOptions(node, options),\n    ]);\n    if (feature) {\n      return feature;\n    }\n    return null;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return [];\n    }\n    let features;\n    const localName = node.localName;\n    if (localName == 'Document' || localName == 'Folder') {\n      features = this.readDocumentOrFolder_(node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (features) {\n        return features;\n      }\n      return [];\n    }\n    if (localName == 'Placemark') {\n      const feature = this.readPlacemark_(node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (feature) {\n        return [feature];\n      }\n      return [];\n    }\n    if (localName == 'kml') {\n      features = [];\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        const fs = this.readFeaturesFromNode(n, options);\n        if (fs) {\n          extend(features, fs);\n        }\n      }\n      return features;\n    }\n    return [];\n  }\n\n  /**\n   * Read the name of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {string|undefined} Name.\n   * @api\n   */\n  readName(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readNameFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readNameFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readNameFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {string|undefined} Name.\n   */\n  readNameFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        const name = this.readNameFromNode(/** @type {Element} */ (n));\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {string|undefined} Name.\n   */\n  readNameFromNode(node) {\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'name') {\n        return readString(n);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' ||\n          localName == 'Folder' ||\n          localName == 'Placemark' ||\n          localName == 'kml')\n      ) {\n        const name = this.readNameFromNode(n);\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Read the network links of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Network links.\n   * @api\n   */\n  readNetworkLinks(source) {\n    const networkLinks = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromNode(/** @type {Element} */ (source))\n      );\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromDocument(doc) {\n    const networkLinks = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          networkLinks,\n          this.readNetworkLinksFromNode(/** @type {Element} */ (n))\n        );\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromNode(node) {\n    const networkLinks = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        n.localName == 'NetworkLink'\n      ) {\n        const obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n        networkLinks.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(networkLinks, this.readNetworkLinksFromNode(n));\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * Read the regions of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Regions.\n   * @api\n   */\n  readRegion(source) {\n    const regions = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(regions, this.readRegionFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        regions,\n        this.readRegionFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(regions, this.readRegionFromNode(/** @type {Element} */ (source)));\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Region.\n   */\n  readRegionFromDocument(doc) {\n    const regions = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Region.\n   * @api\n   */\n  readRegionFromNode(node) {\n    const regions = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'Region') {\n        const obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n        regions.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(regions, this.readRegionFromNode(n));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @typedef {Object} KMLCamera Specifies the observer's viewpoint and associated view parameters.\n   * @property {number} [Latitude] Latitude of the camera.\n   * @property {number} [Longitude] Longitude of the camera.\n   * @property {number} [Altitude] Altitude of the camera.\n   * @property {string} [AltitudeMode] Floor-related altitude mode.\n   * @property {number} [Heading] Horizontal camera rotation.\n   * @property {number} [Tilt] Lateral camera rotation.\n   * @property {number} [Roll] Vertical camera rotation.\n   */\n\n  /**\n   * Read the cameras of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<KMLCamera>} Cameras.\n   * @api\n   */\n  readCamera(source) {\n    const cameras = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(cameras, this.readCameraFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        cameras,\n        this.readCameraFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(cameras, this.readCameraFromNode(/** @type {Element} */ (source)));\n    }\n    return cameras;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<KMLCamera>} Cameras.\n   */\n  readCameraFromDocument(doc) {\n    const cameras = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType === Node.ELEMENT_NODE) {\n        extend(cameras, this.readCameraFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return cameras;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<KMLCamera>} Cameras.\n   * @api\n   */\n  readCameraFromNode(node) {\n    const cameras = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName === 'Camera') {\n        const obj = pushParseAndPop({}, CAMERA_PARSERS, n, []);\n        cameras.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName === 'Document' ||\n          localName === 'Folder' ||\n          localName === 'Placemark' ||\n          localName === 'kml')\n      ) {\n        extend(cameras, this.readCameraFromNode(n));\n      }\n    }\n    return cameras;\n  }\n\n  /**\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    const kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    kml.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION\n    );\n\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: kml,\n      };\n    /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n    const properties = {};\n    if (features.length > 1) {\n      properties['Document'] = features;\n    } else if (features.length == 1) {\n      properties['Placemark'] = features[0];\n    }\n    const orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n    const values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(\n      context,\n      KML_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      [options],\n      orderedKeys,\n      this\n    );\n    return kml;\n  }\n}\n\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  const textOffset = [0, 0];\n  /** @type {CanvasTextAlign} */\n  let textAlign = 'start';\n  const imageStyle = foundStyle.getImage();\n  if (imageStyle) {\n    const imageSize = imageStyle.getSize();\n    if (imageSize && imageSize.length == 2) {\n      const imageScale = imageStyle.getScaleArray();\n      const anchor = imageStyle.getAnchor();\n      // Offset the label to be centered to the right of the icon,\n      // if there is one.\n      textOffset[0] = imageScale[0] * (imageSize[0] - anchor[0]);\n      textOffset[1] = imageScale[1] * (imageSize[1] / 2 - anchor[1]);\n      textAlign = 'left';\n    }\n  }\n  let textStyle = foundStyle.getText();\n  if (textStyle) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    textStyle = textStyle.clone();\n    textStyle.setFont(textStyle.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(textStyle.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(textStyle.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(textStyle.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    image: imageStyle,\n    text: textStyle,\n  });\n  return nameStyle;\n}\n\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(\n  style,\n  styleUrl,\n  defaultStyle,\n  sharedStyles,\n  showPointNames\n) {\n  return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>|Style} Style.\n     */\n    function (feature, resolution) {\n      let drawName = showPointNames;\n      let name = '';\n      let multiGeometryPoints = [];\n      if (drawName) {\n        const geometry = feature.getGeometry();\n        if (geometry) {\n          if (geometry instanceof GeometryCollection) {\n            multiGeometryPoints = geometry\n              .getGeometriesArrayRecursive()\n              .filter(function (geometry) {\n                const type = geometry.getType();\n                return type === 'Point' || type === 'MultiPoint';\n              });\n            drawName = multiGeometryPoints.length > 0;\n          } else {\n            const type = geometry.getType();\n            drawName = type === 'Point' || type === 'MultiPoint';\n          }\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (feature.get('name'));\n        drawName = drawName && !!name;\n        // convert any html character codes\n        if (drawName && /&[^&]+;/.test(name)) {\n          if (!TEXTAREA) {\n            TEXTAREA = document.createElement('textarea');\n          }\n          TEXTAREA.innerHTML = name;\n          name = TEXTAREA.value;\n        }\n      }\n\n      let featureStyle = defaultStyle;\n      if (style) {\n        featureStyle = style;\n      } else if (styleUrl) {\n        featureStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n      }\n      if (drawName) {\n        const nameStyle = createNameStyleFunction(featureStyle[0], name);\n        if (multiGeometryPoints.length > 0) {\n          // in multigeometries restrict the name style to points and create a\n          // style without image or text for geometries requiring fill or stroke\n          // including any polygon specific style if there is one\n          nameStyle.setGeometry(new GeometryCollection(multiGeometryPoints));\n          const baseStyle = new Style({\n            geometry: featureStyle[0].getGeometry(),\n            image: null,\n            fill: featureStyle[0].getFill(),\n            stroke: featureStyle[0].getStroke(),\n            text: null,\n          });\n          return [nameStyle, baseStyle].concat(featureStyle.slice(1));\n        }\n        return nameStyle;\n      }\n      return featureStyle;\n    }\n  );\n}\n\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  }\n  if (typeof styleValue === 'string') {\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  }\n  return defaultStyle;\n}\n\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n  const s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255,\n    ];\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  let s = getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  s = s.replace(/\\s*,\\s*/g, ',');\n  const re =\n    /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?),([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|,|$)(?:([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|$))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  const s = getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  }\n  return s;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readStyleURL(node) {\n  // KML files in the wild occasionally forget the leading\n  // `#` on styleUrlsdefined in the same document.\n  const s = getAllTextContent(node, false)\n    .trim()\n    .replace(/^(?!.*#)/, '#');\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  }\n  return s;\n}\n\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  /** @type {import('../style/Icon.js').IconOrigin} */\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = 'bottom-left';\n    } else {\n      origin = 'top-left';\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = 'bottom-right';\n    } else {\n      origin = 'top-right';\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin,\n  };\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Pair': pairDataParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack, this);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeObjectPropertySetter(readIcon),\n  'color': makeObjectPropertySetter(readColor),\n  'heading': makeObjectPropertySetter(readDecimal),\n  'hotSpot': makeObjectPropertySetter(readVec2),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = !('Icon' in object) || Object.keys(IconObject).length > 0;\n  let src;\n  const href = /** @type {string|undefined} */ (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  /** @type {import('../style/Icon.js').IconOrigin|undefined} */\n  let anchorOrigin = 'bottom-left';\n  const hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (/^https?:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    // Google hotspots from https://kml4earth.appspot.com/icons.html#notes\n    if (src.includes('pushpin')) {\n      anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (src.includes('arrow-reverse')) {\n      anchor = [54, 42];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (src.includes('paddle')) {\n      anchor = [32, 1];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    }\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */ (IconObject['x']);\n  const y = /** @type {number|undefined} */ (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */ (IconObject['w']);\n  const h = /** @type {number|undefined} */ (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */ (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  const scale = /** @type {number|undefined} */ (object['scale']);\n\n  const color = /** @type {Array<number>|undefined} */ (object['color']);\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: this.crossOrigin_,\n      offset: offset,\n      offsetOrigin: 'bottom-left',\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: this.iconUrlFunction_(src),\n      color: color,\n    });\n\n    const imageScale = imageStyle.getScaleArray()[0];\n    const imageSize = imageStyle.getSize();\n    if (imageSize === null) {\n      const imageState = imageStyle.getImageState();\n      if (imageState === ImageState.IDLE || imageState === ImageState.LOADING) {\n        const listener = function () {\n          const imageState = imageStyle.getImageState();\n          if (\n            !(\n              imageState === ImageState.IDLE ||\n              imageState === ImageState.LOADING\n            )\n          ) {\n            const imageSize = imageStyle.getSize();\n            if (imageSize && imageSize.length == 2) {\n              const resizeScale = scaleForSize(imageSize);\n              imageStyle.setScale(imageScale * resizeScale);\n            }\n            imageStyle.unlistenImageChange(listener);\n          }\n        };\n        imageStyle.listenImageChange(listener);\n        if (imageState === ImageState.IDLE) {\n          imageStyle.load();\n        }\n      }\n    } else if (imageSize.length == 2) {\n      const resizeScale = scaleForSize(imageSize);\n      imageStyle.setScale(imageScale * resizeScale);\n    }\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color:\n        /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    }),\n    scale: /** @type {number|undefined} */ (object['scale']),\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'width': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1),\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'fill': makeObjectPropertySetter(readBoolean),\n  'outline': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline = /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const coordinates = gxTrackObject.coordinates;\n  const s = getAllTextContent(node, false);\n  const re =\n    /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    coordinates.push([x, y, z]);\n  } else {\n    coordinates.push([]);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n  'Track': makeArrayPusher(readGxTrack),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  const lineStrings = pushParseAndPop(\n    [],\n    GX_MULTITRACK_GEOMETRY_PARSERS,\n    node,\n    objectStack\n  );\n  if (!lineStrings) {\n    return undefined;\n  }\n  return new MultiLineString(lineStrings);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_TRACK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'when': whenParser,\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'coord': gxCoordParser,\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  const gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n      coordinates: [],\n      whens: [],\n    }),\n    GX_TRACK_PARSERS,\n    node,\n    objectStack\n  );\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = [];\n  const coordinates = gxTrackObject.coordinates;\n  const whens = gxTrackObject.whens;\n  for (\n    let i = 0, ii = Math.min(coordinates.length, whens.length);\n    i < ii;\n    ++i\n  ) {\n    if (coordinates[i].length == 3) {\n      flatCoordinates.push(\n        coordinates[i][0],\n        coordinates[i][1],\n        coordinates[i][2],\n        whens[i]\n      );\n    }\n  }\n  return new LineString(flatCoordinates, 'XYZM');\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeObjectPropertySetter(readURI),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeObjectPropertySetter(readDecimal),\n    'y': makeObjectPropertySetter(readDecimal),\n    'w': makeObjectPropertySetter(readDecimal),\n    'h': makeObjectPropertySetter(readDecimal),\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  const iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  }\n  return null;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(\n    null,\n    GEOMETRY_FLAT_COORDINATES_PARSERS,\n    node,\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeObjectPropertySetter(readBoolean),\n  'tessellate': makeObjectPropertySetter(readBoolean),\n  'altitudeMode': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(flatCoordinates, 'XYZ');\n    lineString.setProperties(properties, true);\n    return lineString;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(flatCoordinates, 'XYZ', [\n      flatCoordinates.length,\n    ]);\n    polygon.setProperties(properties, true);\n    return polygon;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeArrayPusher(readLineString),\n  'LinearRing': makeArrayPusher(readLinearRing),\n  'MultiGeometry': makeArrayPusher(readMultiGeometry),\n  'Point': makeArrayPusher(readPoint),\n  'Polygon': makeArrayPusher(readPolygon),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  const geometries = pushParseAndPop(\n    [],\n    MULTI_GEOMETRY_PARSERS,\n    node,\n    objectStack\n  );\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry;\n  for (let i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == 'Point') {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (let i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'LineString') {\n      multiGeometry = new MultiLineString(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'Polygon') {\n      multiGeometry = new MultiPolygon(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'GeometryCollection') {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(flatCoordinates, 'XYZ');\n    point.setProperties(properties, true);\n    return point;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'innerBoundaryIs': innerBoundaryIsParser,\n  'outerBoundaryIs': outerBoundaryIsParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  const properties = pushParseAndPop(\n    /** @type {Object<string,*>} */ ({}),\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatLinearRings = pushParseAndPop(\n    [null],\n    FLAT_LINEAR_RINGS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRings && flatLinearRings[0]) {\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    for (let i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    const polygon = new Polygon(flatCoordinates, 'XYZ', ends);\n    polygon.setProperties(properties, true);\n    return polygon;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': iconStyleParser,\n  'LabelStyle': labelStyleParser,\n  'LineStyle': lineStyleParser,\n  'PolyStyle': polyStyleParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  const styleObject = pushParseAndPop(\n    {},\n    STYLE_PARSERS,\n    node,\n    objectStack,\n    this\n  );\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle =\n    /** @type {Fill} */\n    (\n      'fillStyle' in styleObject ? styleObject['fillStyle'] : DEFAULT_FILL_STYLE\n    );\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle;\n  if ('imageStyle' in styleObject) {\n    if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n      imageStyle = /** @type {import(\"../style/Image.js\").default} */ (\n        styleObject['imageStyle']\n      );\n    }\n  } else {\n    imageStyle = DEFAULT_IMAGE_STYLE;\n  }\n  const textStyle =\n    /** @type {Text} */\n    (\n      'textStyle' in styleObject ? styleObject['textStyle'] : DEFAULT_TEXT_STYLE\n    );\n  const strokeStyle =\n    /** @type {Stroke} */\n    (\n      'strokeStyle' in styleObject\n        ? styleObject['strokeStyle']\n        : DEFAULT_STROKE_STYLE\n    );\n  const outline = /** @type {boolean|undefined} */ (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    // if the polystyle specifies no outline two styles are needed,\n    // one for non-polygon geometries where linestrings require a stroke\n    // and one for polygons where there should be no stroke\n    return [\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === 'GeometryCollection') {\n            const collection =\n              /** @type {import(\"../geom/GeometryCollection\").default} */ (\n                geometry\n              );\n            return new GeometryCollection(\n              collection\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type !== 'Polygon' && type !== 'MultiPolygon';\n                })\n            );\n          }\n          if (type !== 'Polygon' && type !== 'MultiPolygon') {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        image: imageStyle,\n        stroke: strokeStyle,\n        text: textStyle,\n        zIndex: undefined, // FIXME\n      }),\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === 'GeometryCollection') {\n            const collection =\n              /** @type {import(\"../geom/GeometryCollection\").default} */ (\n                geometry\n              );\n            return new GeometryCollection(\n              collection\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type === 'Polygon' || type === 'MultiPolygon';\n                })\n            );\n          }\n          if (type === 'Polygon' || type === 'MultiPolygon') {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        stroke: null,\n        zIndex: undefined, // FIXME\n      }),\n    ];\n  }\n  return [\n    new Style({\n      fill: fillStyle,\n      image: imageStyle,\n      stroke: strokeStyle,\n      text: textStyle,\n      zIndex: undefined, // FIXME\n    }),\n  ];\n}\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = false;\n  hasTessellate = false;\n  hasAltitudeMode = false;\n  for (let i = 0; i < ii; ++i) {\n    const geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'displayName': makeObjectPropertySetter(readString),\n  'value': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  const featureObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  if (name && featureObject.displayName) {\n    featureObject[name] = {\n      value: featureObject.value,\n      displayName: featureObject.displayName,\n      toString: function () {\n        return featureObject.value;\n      },\n    };\n  } else if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': dataParser,\n  'SchemaData': schemaDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Style': makeObjectPropertySetter(readStyle),\n  'key': makeObjectPropertySetter(readString),\n  'styleUrl': makeObjectPropertySetter(readStyleURL),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  const pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack, this);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */ (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const style = /** @type {Style} */ (pairObject['Style']);\n    if (style) {\n      objectStack[objectStack.length - 1] = style;\n    }\n  }\n}\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'SimpleData': simpleDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = readString(node);\n    const featureObject = /** @type {Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    featureObject[name] = data;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'altitudeMode': makeObjectPropertySetter(readString),\n  'minAltitude': makeObjectPropertySetter(readDecimal),\n  'maxAltitude': makeObjectPropertySetter(readDecimal),\n  'north': makeObjectPropertySetter(readDecimal),\n  'south': makeObjectPropertySetter(readDecimal),\n  'east': makeObjectPropertySetter(readDecimal),\n  'west': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  const object = pushParseAndPop(\n    {},\n    LAT_LON_ALT_BOX_PARSERS,\n    node,\n    objectStack\n  );\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north']),\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'minLodPixels': makeObjectPropertySetter(readDecimal),\n  'maxLodPixels': makeObjectPropertySetter(readDecimal),\n  'minFadeExtent': makeObjectPropertySetter(readDecimal),\n  'maxFadeExtent': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  const object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  // KML spec only allows one LinearRing  per innerBoundaryIs, but Google Earth\n  // allows multiple, so we parse multiple here too.\n  'LinearRing': makeArrayPusher(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  const innerBoundaryFlatLinearRings = pushParseAndPop(\n    /** @type {Array<Array<number>>} */ ([]),\n    INNER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack\n  );\n  if (innerBoundaryFlatLinearRings.length > 0) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(...innerBoundaryFlatLinearRings);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(\n    undefined,\n    OUTER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRing) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  const rgba = asArray(color);\n  const opacity = rgba.length == 4 ? rgba[3] : 1;\n  /** @type {Array<string|number>} */\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (let i = 0; i < 4; ++i) {\n    const hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n    abgr[i] = hex.length == 1 ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == 'XY' || layout == 'XYM') {\n    dimension = 2;\n  } else if (layout == 'XYZ' || layout == 'XYZM') {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (let d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (let i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (let d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': makeChildAppender(writeDataNode),\n  'value': makeChildAppender(writeDataNodeValue),\n  'displayName': makeChildAppender(writeDataNodeName),\n});\n\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.displayName],\n        objectStack,\n        ['displayName']\n      );\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.value],\n        objectStack,\n        ['value']\n      );\n    }\n  } else {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      [value],\n      objectStack,\n      ['value']\n    );\n  }\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst DOCUMENT_NODE_FACTORY = function (value, objectStack, nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    DOCUMENT_SERIALIZERS,\n    DOCUMENT_NODE_FACTORY,\n    features,\n    objectStack,\n    undefined,\n    this\n  );\n}\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n/**\n * @param {Element} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      DATA_NODE_FACTORY,\n      [{name: names[i], value: values[i]}],\n      objectStack\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS,\n  ['href'],\n  makeStructureNS(GX_NAMESPACE_URIS, ['x', 'y', 'w', 'h'])\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeChildAppender(writeStringTextNode),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeChildAppender(writeDecimalTextNode),\n    'y': makeChildAppender(writeDecimalTextNode),\n    'w': makeChildAppender(writeDecimalTextNode),\n    'h': makeChildAppender(writeDecimalTextNode),\n  })\n);\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GX_NODE_FACTORY = function (value, objectStack, nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + nodeName);\n};\n\n/**\n * @param {Element} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  let values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n  orderedKeys = ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    GX_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'scale',\n  'heading',\n  'Icon',\n  'color',\n  'hotSpot',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeChildAppender(writeIcon),\n  'color': makeChildAppender(writeColorTextNode),\n  'heading': makeChildAppender(writeDecimalTextNode),\n  'hotSpot': makeChildAppender(writeVec2),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const /** @type {Object<string, any>} */ properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src,\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {Vec2} */ hotSpot = {\n          x: anchor[0],\n          xunits: 'pixels',\n          y: size[1] - anchor[1],\n          yunits: 'pixels',\n        };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  let scale = style.getScaleArray()[0];\n  let imageSize = size;\n  if (imageSize === null) {\n    imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n  }\n  if (imageSize.length == 2) {\n    const resizeScale = scaleForSize(imageSize);\n    scale = scale / resizeScale;\n  }\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const color = style.getColor();\n  if (color) {\n    properties['color'] = color;\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'scale',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LABEL_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'width']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'width': makeChildAppender(writeDecimalTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': Number(style.getWidth()) || 1,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LINE_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry',\n};\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GEOMETRY_NODE_FACTORY = function (value, objectStack, nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      parentNode.namespaceURI,\n      GEOMETRY_TYPE_TO_NODENAME[\n        /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType()\n      ]\n    );\n  }\n};\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'GeometryCollection': makeChildAppender(writeMultiGeometry),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n  let geometries = [];\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type === 'GeometryCollection') {\n    /** @type {GeometryCollection} */ (geometry)\n      .getGeometriesArrayRecursive()\n      .forEach(function (geometry) {\n        const type = geometry.getType();\n        if (type === 'MultiPoint') {\n          geometries = geometries.concat(\n            /** @type {MultiPoint} */ (geometry).getPoints()\n          );\n        } else if (type === 'MultiLineString') {\n          geometries = geometries.concat(\n            /** @type {MultiLineString} */ (geometry).getLineStrings()\n          );\n        } else if (type === 'MultiPolygon') {\n          geometries = geometries.concat(\n            /** @type {MultiPolygon} */ (geometry).getPolygons()\n          );\n        } else if (\n          type === 'Point' ||\n          type === 'LineString' ||\n          type === 'Polygon'\n        ) {\n          geometries.push(geometry);\n        } else {\n          assert(false, 39); // Unknown geometry type\n        }\n      });\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type === 'MultiPoint') {\n    geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type === 'MultiLineString') {\n    geometries = /** @type {MultiLineString} */ (geometry).getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type === 'MultiPolygon') {\n    geometries = /** @type {MultiPolygon} */ (geometry).getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  pushSerializeAndPop(\n    context,\n    MULTI_GEOMETRY_SERIALIZERS,\n    factory,\n    geometries,\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    BOUNDARY_IS_SERIALIZERS,\n    LINEAR_RING_NODE_FACTORY,\n    [linearRing],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': makeChildAppender(writeExtendedData),\n  'MultiGeometry': makeChildAppender(writeMultiGeometry),\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'Style': makeChildAppender(writeStyle),\n  'address': makeChildAppender(writeStringTextNode),\n  'description': makeChildAppender(writeStringTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'open': makeChildAppender(writeBooleanTextNode),\n  'phoneNumber': makeChildAppender(writeStringTextNode),\n  'styleUrl': makeChildAppender(writeStringTextNode),\n  'visibility': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'open',\n  'visibility',\n  'address',\n  'phoneNumber',\n  'description',\n  'styleUrl',\n  'Style',\n]);\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', /** @type {string} */ (feature.getId()));\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {\n    'address': 1,\n    'description': 1,\n    'name': 1,\n    'open': 1,\n    'phoneNumber': 1,\n    'styleUrl': 1,\n    'visibility': 1,\n  };\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {})\n    .sort()\n    .filter(function (v) {\n      return !filter[v];\n    });\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction(feature, 0);\n    if (styles) {\n      const styleArray = Array.isArray(styles) ? styles : [styles];\n      let pointStyles = styleArray;\n      if (feature.getGeometry()) {\n        pointStyles = styleArray.filter(function (style) {\n          const geometry = style.getGeometryFunction()(feature);\n          if (geometry) {\n            const type = geometry.getType();\n            if (type === 'GeometryCollection') {\n              return /** @type {GeometryCollection} */ (geometry)\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type === 'Point' || type === 'MultiPoint';\n                }).length;\n            }\n            return type === 'Point' || type === 'MultiPoint';\n          }\n        });\n        ('Point');\n      }\n      if (this.writeStyles_) {\n        let lineStyles = styleArray;\n        let polyStyles = styleArray;\n        if (feature.getGeometry()) {\n          lineStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === 'GeometryCollection') {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return type === 'LineString' || type === 'MultiLineString';\n                  }).length;\n              }\n              return type === 'LineString' || type === 'MultiLineString';\n            }\n          });\n          polyStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === 'GeometryCollection') {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return type === 'Polygon' || type === 'MultiPolygon';\n                  }).length;\n              }\n              return type === 'Polygon' || type === 'MultiPolygon';\n            }\n          });\n        }\n        properties['Style'] = {\n          pointStyles: pointStyles,\n          lineStyles: lineStyles,\n          polyStyles: polyStyles,\n        };\n      }\n      if (pointStyles.length && properties['name'] === undefined) {\n        const textStyle = pointStyles[0].getText();\n        if (textStyle) {\n          properties['name'] = textStyle.getText();\n        }\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n\n  if (keys.length > 0) {\n    const sequence = makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    pushSerializeAndPop(\n      context,\n      PLACEMARK_SERIALIZERS,\n      EXTENDEDDATA_NODE_FACTORY,\n      [namesAndValues],\n      objectStack\n    );\n  }\n\n  // serialize geometry\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformGeometryWithOptions(geometry, true, options);\n  }\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    GEOMETRY_NODE_FACTORY,\n    [geometry],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'extrude',\n  'tessellate',\n  'altitudeMode',\n  'coordinates',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeChildAppender(writeBooleanTextNode),\n  'tessellate': makeChildAppender(writeBooleanTextNode),\n  'altitudeMode': makeChildAppender(writeStringTextNode),\n  'coordinates': makeChildAppender(writeCoordinatesTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PRIMITIVE_GEOMETRY_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'fill',\n  'outline',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n  'innerBoundaryIs': makeChildAppender(writeBoundaryIs),\n});\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n/**\n * @param {Element} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  // inner rings\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    INNER_BOUNDARY_NODE_FACTORY,\n    linearRings,\n    objectStack\n  );\n  // outer ring\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    OUTER_BOUNDARY_NODE_FACTORY,\n    [outerRing],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'fill': makeChildAppender(writeBooleanTextNode),\n  'outline': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const fill = style.getFill();\n  const stroke = style.getStroke();\n  const properties = {\n    'color': fill ? fill.getColor() : undefined,\n    'fill': fill ? undefined : false,\n    'outline': stroke ? undefined : false,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = POLY_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    POLY_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'IconStyle',\n  'LabelStyle',\n  'LineStyle',\n  'PolyStyle',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': makeChildAppender(writeIconStyle),\n  'LabelStyle': makeChildAppender(writeLabelStyle),\n  'LineStyle': makeChildAppender(writeLineStyle),\n  'PolyStyle': makeChildAppender(writePolyStyle),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Object<string, Array<Style>>} styles Styles.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, styles, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  if (styles.pointStyles.length) {\n    const textStyle = styles.pointStyles[0].getText();\n    if (textStyle) {\n      properties['LabelStyle'] = textStyle;\n    }\n    const imageStyle = styles.pointStyles[0].getImage();\n    if (\n      imageStyle &&\n      typeof (/** @type {?} */ (imageStyle).getSrc) === 'function'\n    ) {\n      properties['IconStyle'] = imageStyle;\n    }\n  }\n  if (styles.lineStyles.length) {\n    const strokeStyle = styles.lineStyles[0].getStroke();\n    if (strokeStyle) {\n      properties['LineStyle'] = strokeStyle;\n    }\n  }\n  if (styles.polyStyles.length) {\n    const strokeStyle = styles.polyStyles[0].getStroke();\n    if (strokeStyle && !properties['LineStyle']) {\n      properties['LineStyle'] = strokeStyle;\n    }\n    properties['PolyStyle'] = styles.polyStyles[0];\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', String(vec2.x));\n  node.setAttribute('y', String(vec2.y));\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\nexport default KML;\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos;\n        var pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return readUtf8TextDecoder(this.buf, pos, end);\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport {assert} from '../asserts.js';\nimport {get} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options} [options] Options.\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    /**\n     * @private\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass_ = options.featureClass\n      ? options.featureClass\n      : RenderFeature;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1]\n          );\n          coordsLen += 2;\n        }\n      } else {\n        assert(false, 59); // Invalid command found in the PBF\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(\n        geometryType,\n        flatCoordinates,\n        ends,\n        values,\n        id\n      );\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n            ? new LineString(flatCoordinates, 'XY')\n            : geometryType === 'MultiPoint'\n            ? new MultiPoint(flatCoordinates, 'XY')\n            : geometryType === 'MultiLineString'\n            ? new MultiLineString(flatCoordinates, 'XY', ends)\n            : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass_\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return feature;\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return features;\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n          ? pbf.readFloat()\n          : tag === 3\n          ? pbf.readDouble()\n          : tag === 4\n          ? pbf.readVarint64()\n          : tag === 5\n          ? pbf.readVarint()\n          : tag === 6\n          ? pbf.readSVarint()\n          : tag === 7\n          ? pbf.readBoolean()\n          : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../geom/Geometry.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../geom/Geometry.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/format/OSMXML\n */\n// FIXME add typedef for stack state objects\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport XMLFeature from './XMLFeature.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {makeStructureNS, pushParseAndPop} from '../xml.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @const\n * @type {Array<null>}\n */\nconst NAMESPACE_URIS = [null];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WAY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'nd': readNd,\n  'tag': readTag,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'node': readNode,\n  'way': readWay,\n});\n\n/**\n * @classdesc\n * Feature format for reading data in the\n * [OSMXML format](https://wiki.openstreetmap.org/wiki/OSM_XML).\n *\n * @api\n */\nclass OSMXML extends XMLFeature {\n  constructor() {\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    options = this.getReadOptions(node, options);\n    if (node.localName == 'osm') {\n      const state = pushParseAndPop(\n        {\n          nodes: {},\n          ways: [],\n          features: [],\n        },\n        PARSERS,\n        node,\n        [options]\n      );\n      // parse nodes in ways\n      for (let j = 0; j < state.ways.length; j++) {\n        const values = /** @type {Object} */ (state.ways[j]);\n        /** @type {Array<number>} */\n        const flatCoordinates = values.flatCoordinates;\n        if (!flatCoordinates.length) {\n          for (let i = 0, ii = values.ndrefs.length; i < ii; i++) {\n            const point = state.nodes[values.ndrefs[i]];\n            extend(flatCoordinates, point);\n          }\n        }\n        let geometry;\n        if (values.ndrefs[0] == values.ndrefs[values.ndrefs.length - 1]) {\n          // closed way\n          geometry = new Polygon(flatCoordinates, 'XY', [\n            flatCoordinates.length,\n          ]);\n        } else {\n          geometry = new LineString(flatCoordinates, 'XY');\n        }\n        transformGeometryWithOptions(geometry, false, options);\n        const feature = new Feature(geometry);\n        if (values.id !== undefined) {\n          feature.setId(values.id);\n        }\n        feature.setProperties(values.tags, true);\n        state.features.push(feature);\n      }\n      if (state.features) {\n        return state.features;\n      }\n    }\n    return [];\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'tag': readTag,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNode(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const id = node.getAttribute('id');\n  /** @type {import(\"../coordinate.js\").Coordinate} */\n  const coordinates = [\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')),\n  ];\n  state.nodes[id] = coordinates;\n\n  const values = pushParseAndPop(\n    {\n      tags: {},\n    },\n    NODE_PARSERS,\n    node,\n    objectStack\n  );\n  if (!isEmpty(values.tags)) {\n    const geometry = new Point(coordinates);\n    transformGeometryWithOptions(geometry, false, options);\n    const feature = new Feature(geometry);\n    if (id !== undefined) {\n      feature.setId(id);\n    }\n    feature.setProperties(values.tags, true);\n    state.features.push(feature);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readWay(node, objectStack) {\n  const id = node.getAttribute('id');\n  const values = pushParseAndPop(\n    {\n      id: id,\n      ndrefs: [],\n      flatCoordinates: [],\n      tags: {},\n    },\n    WAY_PARSERS,\n    node,\n    objectStack\n  );\n  const state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  state.ways.push(values);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNd(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values.ndrefs.push(node.getAttribute('ref'));\n  if (node.hasAttribute('lon') && node.hasAttribute('lat')) {\n    values.flatCoordinates.push(parseFloat(node.getAttribute('lon')));\n    values.flatCoordinates.push(parseFloat(node.getAttribute('lat')));\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readTag(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values.tags[node.getAttribute('k')] = node.getAttribute('v');\n}\n\nexport default OSMXML;\n","/**\n * @module ol/format/XML\n */\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nclass XML {\n  /**\n   * Read the source document.\n   *\n   * @param {Document|Element|string} source The XML source.\n   * @return {Object} An object representing the source.\n   * @api\n   */\n  read(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Object} Object\n   */\n  readFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {}\n}\n\nexport default XML;\n","/**\n * @module ol/format/xlink\n */\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n/**\n * @param {Element} node Node.\n * @return {string|undefined} href.\n */\nexport function readHref(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n","/**\n * @module ol/format/OWS\n */\nimport XML from './XML.js';\nimport {\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readHref} from './xlink.js';\nimport {readString} from './xsd.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n  'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n  'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata),\n});\n\nclass OWS extends XML {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {\n    const owsObject = pushParseAndPop({}, PARSERS, node, []);\n    return owsObject ? owsObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DeliveryPoint': makeObjectPropertySetter(readString),\n  'City': makeObjectPropertySetter(readString),\n  'AdministrativeArea': makeObjectPropertySetter(readString),\n  'PostalCode': makeObjectPropertySetter(readString),\n  'Country': makeObjectPropertySetter(readString),\n  'ElectronicMailAddress': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ALLOWED_VALUES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Value': makeObjectPropertyPusher(readValue),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONSTRAINT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'AllowedValues': makeObjectPropertySetter(readAllowedValues),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_INFO_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Phone': makeObjectPropertySetter(readPhone),\n  'Address': makeObjectPropertySetter(readAddress),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DCP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'HTTP': makeObjectPropertySetter(readHttp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Get': makeObjectPropertyPusher(readGet),\n  'Post': undefined, // TODO\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DCP': makeObjectPropertySetter(readDcp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATIONS_METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Operation': readOperation,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PHONE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Voice': makeObjectPropertySetter(readString),\n  'Facsimile': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REQUEST_METHOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Constraint': makeObjectPropertyPusher(readConstraint),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_CONTACT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IndividualName': makeObjectPropertySetter(readString),\n  'PositionName': makeObjectPropertySetter(readString),\n  'ContactInfo': makeObjectPropertySetter(readContactInfo),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_IDENTIFICATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Abstract': makeObjectPropertySetter(readString),\n  'AccessConstraints': makeObjectPropertySetter(readString),\n  'Fees': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'ServiceTypeVersion': makeObjectPropertySetter(readString),\n  'ServiceType': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PROVIDER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ProviderName': makeObjectPropertySetter(readString),\n  'ProviderSite': makeObjectPropertySetter(readHref),\n  'ServiceContact': makeObjectPropertySetter(readServiceContact),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({}, ADDRESS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({}, ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({'name': name}, CONSTRAINT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({}, DCP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  const href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop(\n    {'href': href},\n    REQUEST_METHOD_PARSERS,\n    node,\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = pushParseAndPop({}, OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  object[name] = value;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONS_METADATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({}, PHONE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_IDENTIFICATION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_CONTACT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PROVIDER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\n\nexport default OWS;\n","/**\n * @module ol/format/Polyline\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport TextFeature from './TextFeature.js';\nimport {assert} from '../asserts.js';\nimport {flipXY} from '../geom/flat/flip.js';\nimport {get as getProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the format reader.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the Encoded\n * Polyline Algorithm Format.\n *\n * When reading features, the coordinates are assumed to be in two dimensions\n * and in [latitude, longitude] order.\n *\n * As Polyline sources contain a single feature,\n * {@link module:ol/format/Polyline~Polyline#readFeatures} will return the\n * feature in an array.\n *\n * @api\n */\nclass Polyline extends TextFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.factor_ = options.factor ? options.factor : 1e5;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    const geometry = this.readGeometryFromText(text, options);\n    return new Feature(geometry);\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    const feature = this.readFeatureFromText(text, options);\n    return [feature];\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, options) {\n    const stride = getStrideForLayout(this.geometryLayout_);\n    const flatCoordinates = decodeDeltas(text, stride, this.factor_);\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    const coordinates = inflateCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    const lineString = new LineString(coordinates, this.geometryLayout_);\n\n    return transformGeometryWithOptions(\n      lineString,\n      false,\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default<LineString>} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, options) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, options);\n    }\n    assert(false, 40); // Expected `feature` to have a geometry\n    return '';\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default<LineString>>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, options) {\n    return this.writeFeatureText(features[0], options);\n  }\n\n  /**\n   * @param {LineString} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, options) {\n    geometry =\n      /** @type {LineString} */\n      (\n        transformGeometryWithOptions(geometry, true, this.adaptOptions(options))\n      );\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    return encodeDeltas(flatCoordinates, stride, this.factor_);\n  }\n}\n\n/**\n * Encode a list of n-dimensional points and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of n-dimensional points.\n * @param {number} stride The number of dimension of the points in the list.\n * @param {number} [factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeDeltas(numbers, stride, factor) {\n  factor = factor ? factor : 1e5;\n  let d;\n\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      const num = numbers[i];\n      const delta = num - lastNumbers[d];\n      lastNumbers[d] = num;\n\n      numbers[i] = delta;\n    }\n  }\n\n  return encodeFloats(numbers, factor);\n}\n\n/**\n * Decode a list of n-dimensional points from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} stride The number of dimension of the points in the\n *     encoded string.\n * @param {number} [factor] The factor by which the resulting numbers will\n *     be divided. Default is `1e5`.\n * @return {Array<number>} A list of n-dimensional points.\n * @api\n */\nexport function decodeDeltas(encoded, stride, factor) {\n  factor = factor ? factor : 1e5;\n  let d;\n\n  /** @type {Array<number>} */\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  const numbers = decodeFloats(encoded, factor);\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      lastNumbers[d] += numbers[i];\n\n      numbers[i] = lastNumbers[d];\n    }\n  }\n\n  return numbers;\n}\n\n/**\n * Encode a list of floating point numbers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of floating point numbers.\n * @param {number} [factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeFloats(numbers, factor) {\n  factor = factor ? factor : 1e5;\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] = Math.round(numbers[i] * factor);\n  }\n\n  return encodeSignedIntegers(numbers);\n}\n\n/**\n * Decode a list of floating point numbers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} [factor] The factor by which the result will be divided.\n *     Default is `1e5`.\n * @return {Array<number>} A list of floating point numbers.\n * @api\n */\nexport function decodeFloats(encoded, factor) {\n  factor = factor ? factor : 1e5;\n  const numbers = decodeSignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] /= factor;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of signed integers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of signed integers.\n * @return {string} The encoded string.\n */\nexport function encodeSignedIntegers(numbers) {\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num < 0 ? ~(num << 1) : num << 1;\n  }\n  return encodeUnsignedIntegers(numbers);\n}\n\n/**\n * Decode a list of signed integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of signed integers.\n */\nexport function decodeSignedIntegers(encoded) {\n  const numbers = decodeUnsignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num & 1 ? ~(num >> 1) : num >> 1;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of unsigned integers and return an encoded string\n *\n * @param {Array<number>} numbers A list of unsigned integers.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedIntegers(numbers) {\n  let encoded = '';\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    encoded += encodeUnsignedInteger(numbers[i]);\n  }\n  return encoded;\n}\n\n/**\n * Decode a list of unsigned integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of unsigned integers.\n */\nexport function decodeUnsignedIntegers(encoded) {\n  const numbers = [];\n  let current = 0;\n  let shift = 0;\n  for (let i = 0, ii = encoded.length; i < ii; ++i) {\n    const b = encoded.charCodeAt(i) - 63;\n    current |= (b & 0x1f) << shift;\n    if (b < 0x20) {\n      numbers.push(current);\n      current = 0;\n      shift = 0;\n    } else {\n      shift += 5;\n    }\n  }\n  return numbers;\n}\n\n/**\n * Encode one single unsigned integer and return an encoded string\n *\n * @param {number} num Unsigned integer that should be encoded.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedInteger(num) {\n  let value,\n    encoded = '';\n  while (num >= 0x20) {\n    value = (0x20 | (num & 0x1f)) + 63;\n    encoded += String.fromCharCode(value);\n    num >>= 5;\n  }\n  value = num + 63;\n  encoded += String.fromCharCode(value);\n  return encoded;\n}\n\nexport default Polyline;\n","/**\n * @module ol/format/TopoJSON\n */\nimport Feature from '../Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"topojson-specification\").Topology} TopoJSONTopology\n * @typedef {import(\"topojson-specification\").GeometryCollection} TopoJSONGeometryCollection\n * @typedef {import(\"topojson-specification\").GeometryObject} TopoJSONGeometry\n * @typedef {import(\"topojson-specification\").Point} TopoJSONPoint\n * @typedef {import(\"topojson-specification\").MultiPoint} TopoJSONMultiPoint\n * @typedef {import(\"topojson-specification\").LineString} TopoJSONLineString\n * @typedef {import(\"topojson-specification\").MultiLineString} TopoJSONMultiLineString\n * @typedef {import(\"topojson-specification\").Polygon} TopoJSONPolygon\n * @typedef {import(\"topojson-specification\").MultiPolygon} TopoJSONMultiPolygon\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {string} [layerName] Set the name of the TopoJSON topology\n * `objects`'s children as feature property with the specified name. This means\n * that when set to `'layer'`, a topology like\n * ```\n * {\n *   \"type\": \"Topology\",\n *   \"objects\": {\n *     \"example\": {\n *       \"type\": \"GeometryCollection\",\n *       \"geometries\": []\n *     }\n *   }\n * }\n * ```\n * will result in features that have a property `'layer'` set to `'example'`.\n * When not set, no property will be added to features.\n * @property {Array<string>} [layers] Names of the TopoJSON topology's\n * `objects`'s children to read features from.  If not provided, features will\n * be read from all children.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the TopoJSON format.\n *\n * @api\n */\nclass TopoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.layerName_ = options.layerName;\n\n    /**\n     * @private\n     * @type {?Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    if (object.type == 'Topology') {\n      const topoJSONTopology = /** @type {TopoJSONTopology} */ (object);\n      let transform,\n        scale = null,\n        translate = null;\n      if (topoJSONTopology['transform']) {\n        transform = topoJSONTopology['transform'];\n        scale = transform['scale'];\n        translate = transform['translate'];\n      }\n      const arcs = topoJSONTopology['arcs'];\n      if (transform) {\n        transformArcs(arcs, scale, translate);\n      }\n      /** @type {Array<Feature>} */\n      const features = [];\n      const topoJSONFeatures = topoJSONTopology['objects'];\n      const property = this.layerName_;\n      let feature;\n      for (const objectName in topoJSONFeatures) {\n        if (this.layers_ && !this.layers_.includes(objectName)) {\n          continue;\n        }\n        if (topoJSONFeatures[objectName].type === 'GeometryCollection') {\n          feature = /** @type {TopoJSONGeometryCollection} */ (\n            topoJSONFeatures[objectName]\n          );\n          features.push.apply(\n            features,\n            readFeaturesFromGeometryCollection(\n              feature,\n              arcs,\n              scale,\n              translate,\n              property,\n              objectName,\n              options\n            )\n          );\n        } else {\n          feature = /** @type {TopoJSONGeometry} */ (\n            topoJSONFeatures[objectName]\n          );\n          features.push(\n            readFeatureFromGeometry(\n              feature,\n              arcs,\n              scale,\n              translate,\n              property,\n              objectName,\n              options\n            )\n          );\n        }\n      }\n      return features;\n    }\n    return [];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return this.dataProjection;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, function(TopoJSONGeometry, Array, ...Array=): import(\"../geom/Geometry.js\").default>}\n */\nconst GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry,\n};\n\n/**\n * Concatenate arcs into a coordinate array.\n * @param {Array<number>} indices Indices of arcs to concatenate.  Negative\n *     values indicate arcs need to be reversed.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs (already\n *     transformed).\n * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates array.\n */\nfunction concatenateArcs(indices, arcs) {\n  /** @type {Array<import(\"../coordinate.js\").Coordinate>} */\n  const coordinates = [];\n  let index;\n  for (let i = 0, ii = indices.length; i < ii; ++i) {\n    index = indices[i];\n    if (i > 0) {\n      // splicing together arcs, discard last point\n      coordinates.pop();\n    }\n    if (index >= 0) {\n      // forward arc\n      const arc = arcs[index];\n      for (let j = 0, jj = arc.length; j < jj; ++j) {\n        coordinates.push(arc[j].slice(0));\n      }\n    } else {\n      // reverse arc\n      const arc = arcs[~index];\n      for (let j = arc.length - 1; j >= 0; --j) {\n        coordinates.push(arc[j].slice(0));\n      }\n    }\n  }\n  return coordinates;\n}\n\n/**\n * Create a point from a TopoJSON geometry object.\n *\n * @param {TopoJSONPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {Point} Geometry.\n */\nfunction readPointGeometry(object, scale, translate) {\n  const coordinates = object['coordinates'];\n  if (scale && translate) {\n    transformVertex(coordinates, scale, translate);\n  }\n  return new Point(coordinates);\n}\n\n/**\n * Create a multi-point from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {MultiPoint} Geometry.\n */\nfunction readMultiPointGeometry(object, scale, translate) {\n  const coordinates = object['coordinates'];\n  if (scale && translate) {\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      transformVertex(coordinates[i], scale, translate);\n    }\n  }\n  return new MultiPoint(coordinates);\n}\n\n/**\n * Create a linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {LineString} Geometry.\n */\nfunction readLineStringGeometry(object, arcs) {\n  const coordinates = concatenateArcs(object['arcs'], arcs);\n  return new LineString(coordinates);\n}\n\n/**\n * Create a multi-linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiLineString} Geometry.\n */\nfunction readMultiLineStringGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n  }\n  return new MultiLineString(coordinates);\n}\n\n/**\n * Create a polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {Polygon} Geometry.\n */\nfunction readPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n  }\n  return new Polygon(coordinates);\n}\n\n/**\n * Create a multi-polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiPolygon} Geometry.\n */\nfunction readMultiPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    // for each polygon\n    const polyArray = object['arcs'][i];\n    const ringCoords = [];\n    for (let j = 0, jj = polyArray.length; j < jj; ++j) {\n      // for each ring\n      ringCoords[j] = concatenateArcs(polyArray[j], arcs);\n    }\n    coordinates[i] = ringCoords;\n  }\n  return new MultiPolygon(coordinates);\n}\n\n/**\n * Create features from a TopoJSON GeometryCollection object.\n *\n * @param {TopoJSONGeometryCollection} collection TopoJSON Geometry\n *     object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {Array<Feature>} Array of features.\n */\nfunction readFeaturesFromGeometryCollection(\n  collection,\n  arcs,\n  scale,\n  translate,\n  property,\n  name,\n  options\n) {\n  const geometries = collection['geometries'];\n  const features = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    features[i] = readFeatureFromGeometry(\n      geometries[i],\n      arcs,\n      scale,\n      translate,\n      property,\n      name,\n      options\n    );\n  }\n  return features;\n}\n\n/**\n * Create a feature from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON geometry object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {Feature} Feature.\n */\nfunction readFeatureFromGeometry(\n  object,\n  arcs,\n  scale,\n  translate,\n  property,\n  name,\n  options\n) {\n  let geometry = null;\n  const type = object.type;\n  if (type) {\n    const geometryReader = GEOMETRY_READERS[type];\n    if (type === 'Point' || type === 'MultiPoint') {\n      geometry = geometryReader(object, scale, translate);\n    } else {\n      geometry = geometryReader(object, arcs);\n    }\n    geometry = transformGeometryWithOptions(geometry, false, options);\n  }\n  const feature = new Feature({geometry: geometry});\n  if (object.id !== undefined) {\n    feature.setId(object.id);\n  }\n  let properties = object.properties;\n  if (property) {\n    if (!properties) {\n      properties = {};\n    }\n    properties[property] = name;\n  }\n  if (properties) {\n    feature.setProperties(properties, true);\n  }\n  return feature;\n}\n\n/**\n * Apply a linear transform to array of arcs.  The provided array of arcs is\n * modified in place.\n *\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArcs(arcs, scale, translate) {\n  for (let i = 0, ii = arcs.length; i < ii; ++i) {\n    transformArc(arcs[i], scale, translate);\n  }\n}\n\n/**\n * Apply a linear transform to an arc.  The provided arc is modified in place.\n *\n * @param {Array<import(\"../coordinate.js\").Coordinate>} arc Arc.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArc(arc, scale, translate) {\n  let x = 0;\n  let y = 0;\n  for (let i = 0, ii = arc.length; i < ii; ++i) {\n    const vertex = arc[i];\n    x += vertex[0];\n    y += vertex[1];\n    vertex[0] = x;\n    vertex[1] = y;\n    transformVertex(vertex, scale, translate);\n  }\n}\n\n/**\n * Apply a linear transform to a vertex.  The provided vertex is modified in\n * place.\n *\n * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformVertex(vertex, scale, translate) {\n  vertex[0] = vertex[0] * scale[0] + translate[0];\n  vertex[1] = vertex[1] * scale[1] + translate[1];\n}\n\nexport default TopoJSON;\n","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport Feature from '../Feature.js';\nimport Geometry from '../geom/Geometry.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport XMLFeature from './XMLFeature.js';\nimport {extend} from '../array.js';\nimport {\n  getAllTextContent,\n  getAttributeNS,\n  makeArrayPusher,\n  makeReplacer,\n  parseNode,\n  pushParseAndPop,\n} from '../xml.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\n\n/**\n * @const\n * @type {string}\n */\nexport const GMLNS = 'http://www.opengis.net/gml';\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc.\n *\n * @const\n * @type {RegExp}\n */\nconst ONLY_WHITESPACE_RE = /^\\s*$/;\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] Feature\n * namespace. If not defined will be derived from GML. If multiple\n * feature types have been configured which come from different feature\n * namespaces, this will be an object with the keys being the prefixes used\n * in the entries of featureType array. The values of the object will be the\n * feature namespaces themselves. So for instance there might be a featureType\n * item `topp:states` in the `featureType` array and then there will be a key\n * `topp` in the featureNS object with value `http://www.openplans.org/topp`.\n * @property {Array<string>|string} [featureType] Feature type(s) to parse.\n * If multiple feature types need to be configured\n * which come from different feature namespaces, `featureNS` will be an object\n * with the keys being the prefixes used in the entries of featureType array.\n * The values of the object will be the feature namespaces themselves.\n * So for instance there might be a featureType item `topp:states` and then\n * there will be a key named `topp` in the featureNS object with value\n * `http://www.openplans.org/topp`.\n * @property {string} [srsName] srsName to use when writing geometries.\n * @property {boolean} [surface=false] Write gml:Surface instead of gml:Polygon\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [curve=false] Write gml:Curve instead of gml:LineString\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [multiCurve=true] Write gml:MultiCurve instead of gml:MultiLineString.\n * Since the latter is deprecated in GML 3.\n * @property {boolean} [multiSurface=true] Write gml:multiSurface instead of\n * gml:MultiPolygon. Since the latter is deprecated in GML 3.\n * @property {string} [schemaLocation] Optional schemaLocation to use when\n * writing out the GML, this will override the default provided.\n * @property {boolean} [hasZ=false] If coordinates have a Z value.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes GML2 and GML3.\n *\n * @abstract\n * @api\n */\nclass GMLBase extends XMLFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @protected\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType = options.featureType;\n\n    /**\n     * @protected\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS = options.featureNS;\n\n    /**\n     * @protected\n     * @type {string|undefined}\n     */\n    this.srsName = options.srsName;\n\n    /**\n     * @protected\n     * @type {string}\n     */\n    this.schemaLocation = '';\n\n    /**\n     * @type {Object<string, Object<string, Object>>}\n     */\n    this.FEATURE_COLLECTION_PARSERS = {};\n    this.FEATURE_COLLECTION_PARSERS[this.namespace] = {\n      'featureMember': makeArrayPusher(this.readFeaturesInternal),\n      'featureMembers': makeReplacer(this.readFeaturesInternal),\n    };\n\n    this.supportedMediaTypes = ['application/gml+xml'];\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<Feature> | undefined} Features.\n   */\n  readFeaturesInternal(node, objectStack) {\n    const localName = node.localName;\n    let features = null;\n    if (localName == 'FeatureCollection') {\n      features = pushParseAndPop(\n        [],\n        this.FEATURE_COLLECTION_PARSERS,\n        node,\n        objectStack,\n        this\n      );\n    } else if (\n      localName == 'featureMembers' ||\n      localName == 'featureMember' ||\n      localName == 'member'\n    ) {\n      const context = objectStack[0];\n      let featureType = context['featureType'];\n      let featureNS = context['featureNS'];\n      const prefix = 'p';\n      const defaultPrefix = 'p0';\n      if (!featureType && node.childNodes) {\n        (featureType = []), (featureNS = {});\n        for (let i = 0, ii = node.childNodes.length; i < ii; ++i) {\n          const child = /** @type {Element} */ (node.childNodes[i]);\n          if (child.nodeType === 1) {\n            const ft = child.nodeName.split(':').pop();\n            if (!featureType.includes(ft)) {\n              let key = '';\n              let count = 0;\n              const uri = child.namespaceURI;\n              for (const candidate in featureNS) {\n                if (featureNS[candidate] === uri) {\n                  key = candidate;\n                  break;\n                }\n                ++count;\n              }\n              if (!key) {\n                key = prefix + count;\n                featureNS[key] = uri;\n              }\n              featureType.push(key + ':' + ft);\n            }\n          }\n        }\n        if (localName != 'featureMember') {\n          // recheck featureType for each featureMember\n          context['featureType'] = featureType;\n          context['featureNS'] = featureNS;\n        }\n      }\n      if (typeof featureNS === 'string') {\n        const ns = featureNS;\n        featureNS = {};\n        featureNS[defaultPrefix] = ns;\n      }\n      /** @type {Object<string, Object<string, import(\"../xml.js\").Parser>>} */\n      const parsersNS = {};\n      const featureTypes = Array.isArray(featureType)\n        ? featureType\n        : [featureType];\n      for (const p in featureNS) {\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        const parsers = {};\n        for (let i = 0, ii = featureTypes.length; i < ii; ++i) {\n          const featurePrefix = featureTypes[i].includes(':')\n            ? featureTypes[i].split(':')[0]\n            : defaultPrefix;\n          if (featurePrefix === p) {\n            parsers[featureTypes[i].split(':').pop()] =\n              localName == 'featureMembers'\n                ? makeArrayPusher(this.readFeatureElement, this)\n                : makeReplacer(this.readFeatureElement, this);\n          }\n        }\n        parsersNS[featureNS[p]] = parsers;\n      }\n      if (localName == 'featureMember' || localName == 'member') {\n        features = pushParseAndPop(undefined, parsersNS, node, objectStack);\n      } else {\n        features = pushParseAndPop([], parsersNS, node, objectStack);\n      }\n    }\n    if (features === null) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent|undefined} Geometry.\n   */\n  readGeometryOrExtent(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    context['srsName'] = node.firstElementChild.getAttribute('srsName');\n    context['srsDimension'] =\n      node.firstElementChild.getAttribute('srsDimension');\n    return pushParseAndPop(\n      null,\n      this.GEOMETRY_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Geometry.\n   */\n  readExtentElement(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    const extent = /** @type {import(\"../extent.js\").Extent} */ (\n      this.readGeometryOrExtent(node, objectStack)\n    );\n    return extent ? transformExtentWithOptions(extent, context) : undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../geom/Geometry.js\").default|undefined} Geometry.\n   */\n  readGeometryElement(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    const geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      this.readGeometryOrExtent(node, objectStack)\n    );\n    return geometry\n      ? transformGeometryWithOptions(geometry, false, context)\n      : undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {boolean} asFeature whether result should be wrapped as a feature.\n   * @return {Feature|Object} Feature\n   */\n  readFeatureElementInternal(node, objectStack, asFeature) {\n    let geometryName;\n    const values = {};\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      let value;\n      const localName = n.localName;\n      // first, check if it is simple attribute\n      if (\n        n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n          (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))\n      ) {\n        value = getAllTextContent(n, false);\n        if (ONLY_WHITESPACE_RE.test(value)) {\n          value = undefined;\n        }\n      } else {\n        if (asFeature) {\n          //if feature, try it as a geometry or extent\n          value =\n            localName === 'boundedBy'\n              ? this.readExtentElement(n, objectStack)\n              : this.readGeometryElement(n, objectStack);\n        }\n        if (!value) {\n          //if not a geometry or not a feature, treat it as a complex attribute\n          value = this.readFeatureElementInternal(n, objectStack, false);\n        } else if (localName !== 'boundedBy') {\n          // boundedBy is an extent and must not be considered as a geometry\n          geometryName = localName;\n        }\n      }\n\n      const len = n.attributes.length;\n      if (len > 0 && !(value instanceof Geometry)) {\n        value = {_content_: value};\n        for (let i = 0; i < len; i++) {\n          const attName = n.attributes[i].name;\n          value[attName] = n.attributes[i].value;\n        }\n      }\n\n      if (values[localName]) {\n        if (!(values[localName] instanceof Array)) {\n          values[localName] = [values[localName]];\n        }\n        values[localName].push(value);\n      } else {\n        values[localName] = value;\n      }\n    }\n    if (!asFeature) {\n      return values;\n    }\n    const feature = new Feature(values);\n    if (geometryName) {\n      feature.setGeometryName(geometryName);\n    }\n    const fid =\n      node.getAttribute('fid') || getAttributeNS(node, this.namespace, 'id');\n    if (fid) {\n      feature.setId(fid);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Feature} Feature.\n   */\n  readFeatureElement(node, objectStack) {\n    return this.readFeatureElementInternal(node, objectStack, true);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Point|undefined} Point.\n   */\n  readPoint(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      return new Point(flatCoordinates, 'XYZ');\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPoint|undefined} MultiPoint.\n   */\n  readMultiPoint(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const coordinates = pushParseAndPop(\n      [],\n      this.MULTIPOINT_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (coordinates) {\n      return new MultiPoint(coordinates);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  readMultiLineString(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTILINESTRING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (lineStrings) {\n      return new MultiLineString(lineStrings);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiPolygon(node, objectStack) {\n    /** @type {Array<Polygon>} */\n    const polygons = pushParseAndPop(\n      [],\n      this.MULTIPOLYGON_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  pointMemberParser(node, objectStack) {\n    parseNode(this.POINTMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  lineStringMemberParser(node, objectStack) {\n    parseNode(this.LINESTRINGMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  polygonMemberParser(node, objectStack) {\n    parseNode(this.POLYGONMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n  readLineString(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, 'XYZ');\n      return lineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} LinearRing flat coordinates.\n   */\n  readFlatLinearRing(node, objectStack) {\n    const ring = pushParseAndPop(\n      null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (ring) {\n      return ring;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LinearRing|undefined} LinearRing.\n   */\n  readLinearRing(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      return new LinearRing(flatCoordinates, 'XYZ');\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n  readPolygon(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const flatLinearRings = pushParseAndPop(\n      [null],\n      this.FLAT_LINEAR_RINGS_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, 'XYZ', ends);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>} Flat coordinates.\n   */\n  readFlatCoordinatesFromNode(node, objectStack) {\n    return pushParseAndPop(\n      null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, options) {\n    const geometry = this.readGeometryElement(node, [\n      this.getReadOptions(node, options ? options : {}),\n    ]);\n    return geometry ? geometry : null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    const internalOptions = {\n      featureType: this.featureType,\n      featureNS: this.featureNS,\n    };\n    if (internalOptions) {\n      Object.assign(internalOptions, this.getReadOptions(node, options));\n    }\n    const features = this.readFeaturesInternal(node, [internalOptions]);\n    return features || [];\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return getProjection(\n      this.srsName\n        ? this.srsName\n        : node.firstElementChild.getAttribute('srsName')\n    );\n  }\n}\n\nGMLBase.prototype.namespace = GMLNS;\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTIPOINT_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser\n    ),\n    'lineStringMembers': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.POINTMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n  },\n};\n\nexport default GMLBase;\n","/**\n * @module ol/format/GML2\n */\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  createElementNS,\n  getAllTextContent,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n  makeSimpleNodeFactory,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {createOrUpdate} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport {writeStringTextNode} from './xsd.js';\n\n/**\n * @const\n * @type {string}\n */\nconst schemaLocation =\n  GMLNS + ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember',\n};\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @api\n */\nclass GML2 extends GMLBase {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    this.FEATURE_COLLECTION_PARSERS[GMLNS]['featureMember'] = makeArrayPusher(\n      this.readFeaturesInternal\n    );\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : schemaLocation;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatCoordinates(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n      objectStack[0]\n    );\n    const containerSrs = context['srsName'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      if (proj) {\n        axisOrientation = proj.getAxisOrientation();\n      }\n    }\n    const coordsGroups = s.trim().split(/\\s+/);\n    const flatCoordinates = [];\n    for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n      const coords = coordsGroups[i].split(/,+/);\n      const x = parseFloat(coords[0]);\n      const y = parseFloat(coords[1]);\n      const z = coords.length === 3 ? parseFloat(coords[2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  readBox(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.BOX_PARSERS_,\n      node,\n      objectStack,\n      this\n    );\n    return createOrUpdate(\n      flatCoordinates[1][0],\n      flatCoordinates[1][1],\n      flatCoordinates[1][3],\n      flatCoordinates[1][4]\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  innerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  outerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const multiCurve = context['multiCurve'];\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        value\n      ).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS('http://www.opengis.net/gml', nodeName);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const keys = [];\n    const values = [];\n    if (feature.hasProperties()) {\n      const properties = feature.getProperties();\n      for (const key in properties) {\n        const value = properties[key];\n        if (value !== null) {\n          keys.push(key);\n          values.push(value);\n          if (\n            key == geometryName ||\n            typeof (/** @type {?} */ (value).getSimplifiedGeometry) ===\n              'function'\n          ) {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] = makeChildAppender(\n                this.writeGeometryElement,\n                this\n              );\n            }\n          } else {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] =\n                makeChildAppender(writeStringTextNode);\n            }\n          }\n        }\n      }\n    }\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack,\n      keys\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (\n      node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment'\n    ) {\n      const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n      node.appendChild(coordinates);\n      this.writeCoordinates_(coordinates, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLineStringOrCurveMember(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      lines,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const item = Object.assign({}, context);\n    item['node'] = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      value = transformExtentWithOptions(\n        /** @type {import(\"../extent.js\").Extent} */ (geometry),\n        context\n      );\n    } else {\n      value = transformGeometryWithOptions(\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry),\n        true,\n        context\n      );\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      this.GEOMETRY_SERIALIZERS,\n      this.GEOMETRY_NODE_FACTORY_,\n      [value],\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {string} namespaceURI XML namespace.\n   * @return {Element} coordinates node.\n   * @private\n   */\n  createCoordinatesNode_(namespaceURI) {\n    const coordinates = createElementNS(namespaceURI, 'coordinates');\n    coordinates.setAttribute('decimal', '.');\n    coordinates.setAttribute('cs', ',');\n    coordinates.setAttribute('ts', ' ');\n\n    return coordinates;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/LineString.js\").default|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCoordinates_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      const point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString(child, line, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS,\n        this.RING_NODE_FACTORY_,\n        rings,\n        objectStack,\n        undefined,\n        this\n      );\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(\n      parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs'\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeRing(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string} [srsName] Optional srsName\n   * @param {boolean} [hasZ] whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, srsName, hasZ) {\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    let coords =\n      axisOrientation.substr(0, 2) === 'en'\n        ? point[0] + ',' + point[1]\n        : point[1] + ',' + point[0];\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ',' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    const point = geometry.getCoordinates();\n    const coord = this.getCoords_(point, srsName, hasZ);\n    writeStringTextNode(coordinates, coord);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiPoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS,\n      makeSimpleNodeFactory('pointMember'),\n      points,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePointMember(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint(child, point, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLinearRing(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      polygons,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygonMember(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}),\n      this.ENVELOPE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack,\n      keys,\n      this\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      'http://www.opengis.net/gml',\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeArrayPusher(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Box': makeReplacer(GML2.prototype.readBox),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(GML2.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML2.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML2.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML2.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML2.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString\n    ),\n    'LinearRing': makeChildAppender(GML2.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Surface': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Envelope': makeChildAppender(GML2.prototype.writeEnvelope),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember\n    ),\n    'curveMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': makeChildAppender(GML2.prototype.writeRing),\n    'innerBoundaryIs': makeChildAppender(GML2.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(GML2.prototype.writePointMember),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember\n    ),\n    'polygonMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\nexport default GML2;\n","/**\n * @module ol/format/GML3\n */\nimport GML2 from './GML2.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n  makeSimpleNodeFactory,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {createOrUpdate} from '../extent.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {readNonNegativeIntegerString, writeStringTextNode} from './xsd.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\n\n/**\n * @const\n * @type {string}\n * @private\n */\nconst schemaLocation =\n  GMLNS +\n  ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n  '1.0.0/gmlsf.xsd';\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember',\n};\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @api\n */\nclass GML3 extends GMLBase {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.surface_ = options.surface !== undefined ? options.surface : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.curve_ = options.curve !== undefined ? options.curve : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiCurve_ =\n      options.multiCurve !== undefined ? options.multiCurve : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiSurface_ =\n      options.multiSurface !== undefined ? options.multiSurface : true;\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : schemaLocation;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hasZ = options.hasZ !== undefined ? options.hasZ : false;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  readMultiCurve(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTICURVE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (lineStrings) {\n      const multiLineString = new MultiLineString(lineStrings);\n      return multiLineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Polygon.\n   */\n  readFlatCurveRing(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTICURVE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    const flatCoordinates = [];\n    for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n      extend(flatCoordinates, lineStrings[i].getFlatCoordinates());\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiSurface(node, objectStack) {\n    /** @type {Array<Polygon>} */\n    const polygons = pushParseAndPop(\n      [],\n      this.MULTISURFACE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  curveMemberParser(node, objectStack) {\n    parseNode(this.CURVEMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  surfaceMemberParser(node, objectStack) {\n    parseNode(this.SURFACEMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  readPatch(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.PATCHES_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  readSegment(node, objectStack) {\n    return pushParseAndPop([], this.SEGMENTS_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  readPolygonPatch(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.FLAT_LINEAR_RINGS_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  readLineStringSegment(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  interiorParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  exteriorParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n  readSurface(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const flatLinearRings = pushParseAndPop(\n      [null],\n      this.SURFACE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, 'XYZ', ends);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n  readCurve(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.CURVE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, 'XYZ');\n      return lineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  readEnvelope(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.ENVELOPE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    return createOrUpdate(\n      flatCoordinates[1][0],\n      flatCoordinates[1][1],\n      flatCoordinates[2][0],\n      flatCoordinates[2][1]\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatPos(node, objectStack) {\n    let s = getAllTextContent(node, false);\n    const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n    /** @type {Array<number>} */\n    const flatCoordinates = [];\n    let m;\n    while ((m = re.exec(s))) {\n      flatCoordinates.push(parseFloat(m[1]));\n      s = s.substr(m[0].length);\n    }\n    if (s !== '') {\n      return undefined;\n    }\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    if (axisOrientation === 'neu') {\n      let i, ii;\n      for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n        const y = flatCoordinates[i];\n        const x = flatCoordinates[i + 1];\n        flatCoordinates[i] = x;\n        flatCoordinates[i + 1] = y;\n      }\n    }\n    const len = flatCoordinates.length;\n    if (len == 2) {\n      flatCoordinates.push(0);\n    }\n    if (len === 0) {\n      return undefined;\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatPosList(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    const contextDimension = context['srsDimension'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    const coords = s.split(/\\s+/);\n    // The \"dimension\" attribute is from the GML 3.0.1 spec.\n    let dim = 2;\n    if (node.getAttribute('srsDimension')) {\n      dim = readNonNegativeIntegerString(node.getAttribute('srsDimension'));\n    } else if (node.getAttribute('dimension')) {\n      dim = readNonNegativeIntegerString(node.getAttribute('dimension'));\n    } else if (\n      /** @type {Element} */ (node.parentNode).getAttribute('srsDimension')\n    ) {\n      dim = readNonNegativeIntegerString(\n        /** @type {Element} */ (node.parentNode).getAttribute('srsDimension')\n      );\n    } else if (contextDimension) {\n      dim = readNonNegativeIntegerString(contextDimension);\n    }\n    let x, y, z;\n    const flatCoordinates = [];\n    for (let i = 0, ii = coords.length; i < ii; i += dim) {\n      x = parseFloat(coords[i]);\n      y = parseFloat(coords[i + 1]);\n      z = dim === 3 ? parseFloat(coords[i + 2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} value Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePos_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    const point = value.getCoordinates();\n    let coords;\n    // only 2d for simple features profile\n    if (axisOrientation.substr(0, 2) === 'en') {\n      coords = point[0] + ' ' + point[1];\n    } else {\n      coords = point[1] + ' ' + point[0];\n    }\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n    writeStringTextNode(node, coords);\n  }\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string} [srsName] Optional srsName\n   * @param {boolean} [hasZ] whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, srsName, hasZ) {\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    let coords =\n      axisOrientation.substr(0, 2) === 'en'\n        ? point[0] + ' ' + point[1]\n        : point[1] + ' ' + point[0];\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePosList_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    let point;\n    for (let i = 0; i < len; ++i) {\n      point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const pos = createElementNS(node.namespaceURI, 'pos');\n    node.appendChild(pos);\n    this.writePos_(pos, geometry, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}),\n      this.ENVELOPE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack,\n      keys,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLinearRing(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const posList = createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(\n      parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'interior' : 'exterior'\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS,\n        this.RING_NODE_FACTORY_,\n        rings,\n        objectStack,\n        undefined,\n        this\n      );\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (\n      node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment'\n    ) {\n      const posList = createElementNS(node.namespaceURI, 'posList');\n      node.appendChild(posList);\n      this.writePosList_(posList, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiPolygon} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      polygons,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiPoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    const hasZ = context['hasZ'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS,\n      makeSimpleNodeFactory('pointMember'),\n      points,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiLineString} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      lines,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeRing(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygonMember(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePointMember(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint(child, point, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLineStringOrCurveMember(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString(child, line, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const item = Object.assign({}, context);\n    item['node'] = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      value = transformExtentWithOptions(\n        /** @type {import(\"../extent.js\").Extent} */ (geometry),\n        context\n      );\n    } else {\n      value = transformGeometryWithOptions(\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry),\n        true,\n        context\n      );\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      this.GEOMETRY_SERIALIZERS,\n      this.GEOMETRY_NODE_FACTORY_,\n      [value],\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const keys = [];\n    const values = [];\n    if (feature.hasProperties()) {\n      const properties = feature.getProperties();\n      for (const key in properties) {\n        const value = properties[key];\n        if (value !== null) {\n          keys.push(key);\n          values.push(value);\n          if (\n            key == geometryName ||\n            typeof (/** @type {?} */ (value).getSimplifiedGeometry) ===\n              'function'\n          ) {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] = makeChildAppender(\n                this.writeGeometryElement,\n                this\n              );\n            }\n          } else {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] =\n                makeChildAppender(writeStringTextNode);\n            }\n          }\n        }\n      }\n    }\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack,\n      keys\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeFeatureMembers_(node, features, objectStack) {\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureType = context['featureType'];\n    const featureNS = context['featureNS'];\n    /** @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>} */\n    const serializers = {};\n    serializers[featureNS] = {};\n    serializers[featureNS][featureType] = makeChildAppender(\n      this.writeFeatureElement,\n      this\n    );\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      serializers,\n      makeSimpleNodeFactory(featureType, featureNS),\n      features,\n      objectStack\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      this.namespace,\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const curve = context['curve'];\n    const multiCurve = context['multiCurve'];\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        value\n      ).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'LineString' && curve === true) {\n        nodeName = 'Curve';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS(this.namespace, nodeName);\n  }\n\n  /**\n   * Encode a geometry in GML 3.1.1 Simple Features.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeGeometryNode(geometry, options) {\n    options = this.adaptOptions(options);\n    const geom = createElementNS(this.namespace, 'geom');\n    const context = {\n      node: geom,\n      hasZ: this.hasZ,\n      srsName: this.srsName,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n    };\n    if (options) {\n      Object.assign(context, options);\n    }\n    this.writeGeometryElement(geom, geometry, [context]);\n    return geom;\n  }\n\n  /**\n   * Encode an array of features in the GML 3.1.1 format as an XML node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Element} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    const node = createElementNS(this.namespace, 'featureMembers');\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      this.schemaLocation\n    );\n    const context = {\n      srsName: this.srsName,\n      hasZ: this.hasZ,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n      featureNS: this.featureNS,\n      featureType: this.featureType,\n    };\n    if (options) {\n      Object.assign(context, options);\n    }\n    this.writeFeatureMembers_(node, features, [context]);\n    return node;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList),\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser,\n    'exterior': GML3.prototype.exteriorParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML3.prototype.readSurface),\n    'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface),\n    'Curve': makeReplacer(GML3.prototype.readCurve),\n    'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve),\n    'Envelope': makeReplacer(GML3.prototype.readEnvelope),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.MULTICURVE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser),\n    'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.MULTISURFACE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n    'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.CURVEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SURFACEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SURFACE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'patches': makeReplacer(GML3.prototype.readPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.CURVE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'segments': makeReplacer(GML3.prototype.readSegment),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.ENVELOPE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n    'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.PATCHES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SEGMENTS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': makeArrayExtender(\n      GML3.prototype.readLineStringSegment\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n    'Ring': makeReplacer(GML3.prototype.readFlatCurveRing),\n  },\n};\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing),\n    'interior': makeChildAppender(GML3.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember\n    ),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(GML3.prototype.writePointMember),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember\n    ),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML3.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString\n    ),\n    'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Envelope': makeChildAppender(GML3.prototype.writeEnvelope),\n  },\n};\n\nexport default GML3;\n","/**\n * @module ol/format/GML32\n */\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GMLBase from './GMLBase.js';\nimport {\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n} from '../xml.js';\nimport {writeStringTextNode} from '../format/xsd.js';\n\n/**\n * @classdesc Feature format for reading and writing data in the GML format\n *            version 3.2.1.\n * @api\n */\nclass GML32 extends GML3 {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : this.namespace + ' http://schemas.opengis.net/gml/3.2.1/gml.xsd';\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    objectStack[objectStack.length - 1] = Object.assign(\n      {multiCurve: true, multiSurface: true},\n      context\n    );\n    super.writeGeometryElement(node, geometry, objectStack);\n  }\n}\n\nGML32.prototype.namespace = 'http://www.opengis.net/gml/3.2';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList),\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'interior': GML3.prototype.interiorParser,\n    'exterior': GML3.prototype.exteriorParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML32.prototype.readSurface),\n    'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface),\n    'Curve': makeReplacer(GML32.prototype.readCurve),\n    'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve),\n    'Envelope': makeReplacer(GML32.prototype.readEnvelope),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTICURVE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser),\n    'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTISURFACE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n    'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.CURVEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SURFACEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SURFACE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'patches': makeReplacer(GML3.prototype.readPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.CURVE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'segments': makeReplacer(GML3.prototype.readSegment),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.ENVELOPE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n    'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.PATCHES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SEGMENTS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineStringSegment': makeArrayExtender(\n      GML3.prototype.readLineStringSegment\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTIPOINT_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTILINESTRING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser\n    ),\n    'lineStringMembers': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTIPOLYGON_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.POINTMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.LINESTRINGMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.POLYGONMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n    'Ring': makeReplacer(GML32.prototype.readFlatCurveRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing),\n    'interior': makeChildAppender(GML3.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember\n    ),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeChildAppender(GML3.prototype.writePointMember),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember\n    ),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML32.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString\n    ),\n    'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Envelope': makeChildAppender(GML3.prototype.writeEnvelope),\n  },\n};\n\nexport default GML32;\n","/**\n * @module ol/format/filter/Filter\n */\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @abstract\n */\nclass Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   */\n  constructor(tagName) {\n    /**\n     * @private\n     * @type {!string}\n     */\n    this.tagName_ = tagName;\n  }\n\n  /**\n   * The XML tag name for a filter.\n   * @return {!string} Name.\n   */\n  getTagName() {\n    return this.tagName_;\n  }\n}\n\nexport default Filter;\n","/**\n * @module ol/format/filter/LogicalNary\n */\nimport Filter from './Filter.js';\nimport {assert} from '../../asserts.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @abstract\n */\nclass LogicalNary extends Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   * @param {Array<import(\"./Filter.js\").default>} conditions Conditions.\n   */\n  constructor(tagName, conditions) {\n    super(tagName);\n\n    /**\n     * @type {Array<import(\"./Filter.js\").default>}\n     */\n    this.conditions = conditions;\n    assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n  }\n}\n\nexport default LogicalNary;\n","/**\n * @module ol/format/filter/And\n */\nimport LogicalNary from './LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @abstract\n */\nclass And extends LogicalNary {\n  /**\n   * @param {...import(\"./Filter.js\").default} conditions Conditions.\n   */\n  constructor(conditions) {\n    super('And', Array.prototype.slice.call(arguments));\n  }\n}\n\nexport default And;\n","/**\n * @module ol/format/filter/Bbox\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @api\n */\nclass Bbox extends Filter {\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../../extent.js\").Extent} extent Extent.\n   * @param {string} [srsName] SRS name. No srsName attribute will be set\n   * on geometries when this is not provided.\n   */\n  constructor(geometryName, extent, srsName) {\n    super('BBOX');\n\n    /**\n     * @type {!string}\n     */\n    this.geometryName = geometryName;\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent = extent;\n    if (extent.length !== 4) {\n      throw new Error(\n        'Expected an extent with four values ([minX, minY, maxX, maxY])'\n      );\n    }\n\n    /**\n     * @type {string|undefined}\n     */\n    this.srsName = srsName;\n  }\n}\n\nexport default Bbox;\n","/**\n * @module ol/format/WFS\n */\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GML32 from './GML32.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  isDocument,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSimpleNodeFactory,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {and as andFilterFn, bbox as bboxFilterFn} from './filter.js';\nimport {assert} from '../asserts.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readNonNegativeIntegerString,\n  readPositiveInteger,\n  writeStringTextNode,\n} from './xsd.js';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst FEATURE_COLLECTION_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': makeObjectPropertySetter(\n      GMLBase.prototype.readExtentElement,\n      'bounds'\n    ),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'member': makeArrayPusher(GMLBase.prototype.readFeaturesInternal),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst TRANSACTION_SUMMARY_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst TRANSACTION_RESPONSE_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary,\n      'transactionSummary'\n    ),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds'),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary,\n      'transactionSummary'\n    ),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds'),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst QUERY_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': makeChildAppender(writeStringTextNode),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'PropertyName': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst TRANSACTION_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative),\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] The namespace URI used for features.\n * @property {Array<string>|string} [featureType] The feature type to parse. Only used for read operations.\n * @property {GMLBase} [gmlFormat] The GML format to use to parse the response.\n * Default is `ol/format/GML2` for WFS 1.0.0, `ol/format/GML3` for WFS 1.1.0 and `ol/format/GML32` for WFS 2.0.0.\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\n * @property {string} [version='1.1.0'] WFS version to use. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * @typedef {Object} WriteGetFeatureOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {Array<string|FeatureType>} featureTypes The feature type names or FeatureType objects to\n * define a unique bbox filter per feature type name (in this case, options `bbox` and `geometryName` are\n * ignored.).\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {string} [outputFormat] Output format.\n * @property {number} [maxFeatures] Maximum number of features to fetch.\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\n * @property {Array<string>} [propertyNames] Optional list of property names to serialize.\n * @property {string} [viewParams] viewParams GeoServer vendor parameter.\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\n * @property {number} [count] Number of features to retrieve when paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\n * Web Feature Services have repurposed `maxfeatures` instead.\n * @property {import(\"../extent.js\").Extent} [bbox] Extent to use for the BBOX filter. The `geometryName`\n * option must be set.\n * @property {import(\"./filter/Filter.js\").default} [filter] Filter condition. See\n * {@link module:ol/format/filter} for more information.\n * @property {string} [resultType] Indicates what response should be returned,\n * e.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\n */\n\n/**\n * @typedef {Object} FeatureType\n * @property {!string} name The feature type name.\n * @property {!import(\"../extent.js\").Extent} bbox Extent to use for the BBOX filter.\n * @property {!string} geometryName Geometry name to use in the BBOX filter.\n */\n\n/**\n * @typedef {Object} WriteTransactionOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {string} featureType The feature type name.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\n * @property {Array<Object>} nativeElements Native elements. Currently not supported.\n * @property {import(\"./GMLBase.js\").Options} [gmlOptions] GML options for the WFS transaction writer.\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * Number of features; bounds/extent.\n * @typedef {Object} FeatureCollectionMetadata\n * @property {number} numberOfFeatures NumberOfFeatures.\n * @property {import(\"../extent.js\").Extent} bounds Bounds.\n */\n\n/**\n * Total deleted; total inserted; total updated; array of insert ids.\n * @typedef {Object} TransactionResponse\n * @property {number} totalDeleted TotalDeleted.\n * @property {number} totalInserted TotalInserted.\n * @property {number} totalUpdated TotalUpdated.\n * @property {Array<string>} insertIds InsertIds.\n */\n\n/**\n * @type {string}\n */\nconst FEATURE_PREFIX = 'feature';\n\n/**\n * @type {string}\n */\nconst XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n/**\n * @type {Object<string, string>}\n */\nconst OGCNS = {\n  '2.0.0': 'http://www.opengis.net/ogc/1.1',\n  '1.1.0': 'http://www.opengis.net/ogc',\n  '1.0.0': 'http://www.opengis.net/ogc',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst WFSNS = {\n  '2.0.0': 'http://www.opengis.net/wfs/2.0',\n  '1.1.0': 'http://www.opengis.net/wfs',\n  '1.0.0': 'http://www.opengis.net/wfs',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst FESNS = {\n  '2.0.0': 'http://www.opengis.net/fes/2.0',\n  '1.1.0': 'http://www.opengis.net/fes',\n  '1.0.0': 'http://www.opengis.net/fes',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst SCHEMA_LOCATIONS = {\n  '2.0.0':\n    'http://www.opengis.net/wfs/2.0 http://schemas.opengis.net/wfs/2.0/wfs.xsd',\n  '1.1.0':\n    'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0':\n    'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd',\n};\n\n/**\n * @type {Object<string, object>}\n */\nconst GML_FORMATS = {\n  '2.0.0': GML32,\n  '1.1.0': GML3,\n  '1.0.0': GML2,\n};\n\n/**\n * @const\n * @type {string}\n */\nconst DEFAULT_VERSION = '1.1.0';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option to override the default.\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\n *\n * @api\n */\nclass WFS extends XMLFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version ? options.version : DEFAULT_VERSION;\n\n    /**\n     * @private\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType_ = options.featureType;\n\n    /**\n     * @private\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS_ = options.featureNS;\n\n    /**\n     * @private\n     * @type {GMLBase}\n     */\n    this.gmlFormat_ = options.gmlFormat\n      ? options.gmlFormat\n      : new GML_FORMATS[this.version_]();\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.schemaLocation_ = options.schemaLocation\n      ? options.schemaLocation\n      : SCHEMA_LOCATIONS[this.version_];\n  }\n\n  /**\n   * @return {Array<string>|string|undefined} featureType\n   */\n  getFeatureType() {\n    return this.featureType_;\n  }\n\n  /**\n   * @param {Array<string>|string|undefined} featureType Feature type(s) to parse.\n   */\n  setFeatureType(featureType) {\n    this.featureType_ = featureType;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    const context = {\n      node,\n    };\n    Object.assign(context, {\n      'featureType': this.featureType_,\n      'featureNS': this.featureNS_,\n    });\n\n    Object.assign(context, this.getReadOptions(node, options ? options : {}));\n    const objectStack = [context];\n    let featuresNS;\n    if (this.version_ === '2.0.0') {\n      featuresNS = FEATURE_COLLECTION_PARSERS;\n    } else {\n      featuresNS = this.gmlFormat_.FEATURE_COLLECTION_PARSERS;\n    }\n    let features = pushParseAndPop(\n      [],\n      featuresNS,\n      node,\n      objectStack,\n      this.gmlFormat_\n    );\n    if (!features) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * Read transaction response of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {TransactionResponse|undefined} Transaction response.\n   * @api\n   */\n  readTransactionResponse(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readTransactionResponseFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readTransactionResponseFromDocument(\n        /** @type {Document} */ (source)\n      );\n    }\n    return this.readTransactionResponseFromNode(\n      /** @type {Element} */ (source)\n    );\n  }\n\n  /**\n   * Read feature collection metadata of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   * @api\n   */\n  readFeatureCollectionMetadata(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureCollectionMetadataFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readFeatureCollectionMetadataFromDocument(\n        /** @type {Document} */ (source)\n      );\n    }\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Element} */ (source)\n    );\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFeatureCollectionMetadataFromNode(\n          /** @type {Element} */ (n)\n        );\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromNode(node) {\n    const result = {};\n    const value = readNonNegativeIntegerString(\n      node.getAttribute('numberOfFeatures')\n    );\n    result['numberOfFeatures'] = value;\n    return pushParseAndPop(\n      /** @type {FeatureCollectionMetadata} */ (result),\n      FEATURE_COLLECTION_PARSERS,\n      node,\n      [],\n      this.gmlFormat_\n    );\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readTransactionResponseFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromNode(node) {\n    return pushParseAndPop(\n      /** @type {TransactionResponse} */ ({}),\n      TRANSACTION_RESPONSE_PARSERS,\n      node,\n      []\n    );\n  }\n\n  /**\n   * Encode format as WFS `GetFeature` and return the Node.\n   *\n   * @param {WriteGetFeatureOptions} options Options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeGetFeature(options) {\n    const node = createElementNS(WFSNS[this.version_], 'GetFeature');\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', this.version_);\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', String(options.maxFeatures));\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', String(options.startIndex));\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', String(options.count));\n    }\n    if (options.viewParams !== undefined) {\n      node.setAttribute('viewParams', options.viewParams);\n    }\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      this.schemaLocation_\n    );\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    const context = {\n      node,\n    };\n    Object.assign(context, {\n      'version': this.version_,\n      'srsName': options.srsName,\n      'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n      'featurePrefix': options.featurePrefix,\n      'propertyNames': options.propertyNames ? options.propertyNames : [],\n    });\n    assert(Array.isArray(options.featureTypes), 11); // `options.featureTypes` must be an Array\n    if (typeof options.featureTypes[0] === 'string') {\n      let filter = options.filter;\n      if (options.bbox) {\n        assert(options.geometryName, 12); // `options.geometryName` must also be provided when `options.bbox` is set\n        filter = this.combineBboxAndFilter(\n          options.geometryName,\n          options.bbox,\n          options.srsName,\n          filter\n        );\n      }\n      Object.assign(context, {\n        'geometryName': options.geometryName,\n        'filter': filter,\n      });\n      writeGetFeature(\n        node,\n        /** @type {!Array<string>} */ (options.featureTypes),\n        [context]\n      );\n    } else {\n      // Write one query node per element in featuresType.\n      options.featureTypes.forEach((/** @type {FeatureType} */ featureType) => {\n        const completeFilter = this.combineBboxAndFilter(\n          featureType.geometryName,\n          featureType.bbox,\n          options.srsName,\n          options.filter\n        );\n        Object.assign(context, {\n          'geometryName': featureType.geometryName,\n          'filter': completeFilter,\n        });\n        writeGetFeature(node, [featureType.name], [context]);\n      });\n    }\n    return node;\n  }\n\n  /**\n   * Create a bbox filter and combine it with another optional filter.\n   *\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../extent.js\").Extent} extent Extent.\n   * @param {string} [srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   * @param {import(\"./filter/Filter.js\").default} [filter] Filter condition.\n   * @return {import(\"./filter/Filter.js\").default} The filter.\n   */\n  combineBboxAndFilter(geometryName, extent, srsName, filter) {\n    const bboxFilter = bboxFilterFn(geometryName, extent, srsName);\n    if (filter) {\n      // if bbox and filter are both set, combine the two into a single filter\n      return andFilterFn(filter, bboxFilter);\n    }\n    return bboxFilter;\n  }\n\n  /**\n   * Encode format as WFS `Transaction` and return the Node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} inserts The features to insert.\n   * @param {Array<import(\"../Feature.js\").default>} updates The features to update.\n   * @param {Array<import(\"../Feature.js\").default>} deletes The features to delete.\n   * @param {WriteTransactionOptions} options Write options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeTransaction(inserts, updates, deletes, options) {\n    const objectStack = [];\n    const version = options.version ? options.version : this.version_;\n    const node = createElementNS(WFSNS[version], 'Transaction');\n\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', version);\n    let baseObj;\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    if (options) {\n      baseObj = options.gmlOptions ? options.gmlOptions : {};\n      if (options.handle) {\n        node.setAttribute('handle', options.handle);\n      }\n    }\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATIONS[version]\n    );\n\n    const request = createTransactionRequest(node, baseObj, version, options);\n    if (inserts) {\n      serializeTransactionRequest('Insert', inserts, objectStack, request);\n    }\n    if (updates) {\n      serializeTransactionRequest('Update', updates, objectStack, request);\n    }\n    if (deletes) {\n      serializeTransactionRequest('Delete', deletes, objectStack, request);\n    }\n    if (options.nativeElements) {\n      serializeTransactionRequest(\n        'Native',\n        options.nativeElements,\n        objectStack,\n        request\n      );\n    }\n    return node;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readProjectionFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    if (node.firstElementChild && node.firstElementChild.firstElementChild) {\n      node = node.firstElementChild.firstElementChild;\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        if (\n          !(\n            n.childNodes.length === 0 ||\n            (n.childNodes.length === 1 && n.firstChild.nodeType === 3)\n          )\n        ) {\n          const objectStack = [{}];\n          this.gmlFormat_.readGeometryElement(n, objectStack);\n          return getProjection(objectStack.pop().srsName);\n        }\n      }\n    }\n\n    return null;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {*} baseObj Base object.\n * @param {string} version Version.\n * @param {WriteTransactionOptions} options Options.\n * @return {Object} Request object.\n */\nfunction createTransactionRequest(node, baseObj, version, options) {\n  const featurePrefix = options.featurePrefix\n    ? options.featurePrefix\n    : FEATURE_PREFIX;\n  let gmlVersion;\n  if (version === '1.0.0') {\n    gmlVersion = 2;\n  } else if (version === '1.1.0') {\n    gmlVersion = 3;\n  } else if (version === '2.0.0') {\n    gmlVersion = 3.2;\n  }\n  const obj = Object.assign(\n    {node},\n    {\n      version,\n      'featureNS': options.featureNS,\n      'featureType': options.featureType,\n      'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion,\n      'hasZ': options.hasZ,\n      'srsName': options.srsName,\n    },\n    baseObj\n  );\n  return obj;\n}\n\n/**\n * @param {string} type Request type.\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @param {Element} request Transaction Request.\n */\nfunction serializeTransactionRequest(type, features, objectStack, request) {\n  pushSerializeAndPop(\n    request,\n    TRANSACTION_SERIALIZERS,\n    makeSimpleNodeFactory(type),\n    features,\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n */\nfunction readTransactionSummary(node, objectStack) {\n  return pushParseAndPop({}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst OGC_FID_PARSERS = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    }),\n  },\n  'http://www.opengis.net/ogc/1.1': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    }),\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction fidParser(node, objectStack) {\n  parseNode(OGC_FID_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst INSERT_RESULTS_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'Feature': fidParser,\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Feature': fidParser,\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Insert results.\n */\nfunction readInsertResults(node, objectStack) {\n  return pushParseAndPop([], INSERT_RESULTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFeature(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else if (gmlVersion === 3) {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML32.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeOgcFidFilter(node, fid, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const version = context['version'];\n  const ns = OGCNS[version];\n  const filter = createElementNS(ns, 'Filter');\n  const child = createElementNS(ns, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', /** @type {string} */ (fid));\n  node.appendChild(filter);\n}\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @return {string} The value of the typeName property.\n */\nfunction getTypeName(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.startsWith(prefix)) {\n    return featureType;\n  }\n  return prefix + featureType;\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDelete(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeUpdate(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const version = context['version'];\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (\n          value &&\n          typeof (/** @type {?} */ (value).getSimplifiedGeometry) === 'function'\n        ) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */ ({\n        version,\n        'gmlVersion': context['gmlVersion'],\n        node,\n        'hasZ': context['hasZ'],\n        'srsName': context['srsName'],\n      }),\n      TRANSACTION_SERIALIZERS,\n      makeSimpleNodeFactory('Property'),\n      values,\n      objectStack\n    );\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeProperty(node, pair, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const version = context['version'];\n  const ns = WFSNS[version];\n  const name = createElementNS(ns, 'Name');\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = createElementNS(ns, 'Value');\n    node.appendChild(value);\n    if (\n      pair.value &&\n      typeof (/** @type {?} */ (pair.value).getSimplifiedGeometry) ===\n        'function'\n    ) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else if (gmlVersion === 3) {\n        GML3.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else {\n        GML32.prototype.writeGeometryElement(value, pair.value, objectStack);\n      }\n    } else {\n      writeStringTextNode(value, pair.value);\n    }\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}} nativeElement The native element.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNative(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', String(nativeElement.safeToIgnore));\n  }\n  if (nativeElement.value !== undefined) {\n    writeStringTextNode(node, nativeElement.value);\n  }\n}\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst GETFEATURE_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Query': makeChildAppender(writeQuery),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Query': makeChildAppender(writeQuery),\n  },\n  'http://www.opengis.net/ogc': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter),\n  },\n  'http://www.opengis.net/fes/2.0': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Disjoint': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'ResourceId': makeChildAppender(writeResourceIdFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter),\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {string} featureType Feature type.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeQuery(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const version = context['version'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = getTypeName(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  let typeNameAttr;\n  if (version === '2.0.0') {\n    typeNameAttr = 'typeNames';\n  } else {\n    typeNameAttr = 'typeName';\n  }\n  node.setAttribute(typeNameAttr, typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  }\n  const item = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n    Object.assign({}, context)\n  );\n  item.node = node;\n  pushSerializeAndPop(\n    item,\n    QUERY_SERIALIZERS,\n    makeSimpleNodeFactory('PropertyName'),\n    propertyNames,\n    objectStack\n  );\n  const filter = context['filter'];\n  if (filter) {\n    const child = createElementNS(getFilterNS(version), 'Filter');\n    node.appendChild(child);\n    writeFilterCondition(child, filter, objectStack);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFilterCondition(node, filter, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(filter.getTagName()),\n    [filter],\n    objectStack\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Bbox.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeBboxFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  parent['srsName'] = filter.srsName;\n  const format = GML_FORMATS[version];\n\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.extent, objectStack);\n}\n\n/**\n * @param {Element} node Element.\n * @param {import(\"./filter/ResourceId.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeResourceIdFilter(node, filter, objectStack) {\n  node.setAttribute('rid', /** @type {string} */ (filter.rid));\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Spatial.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeSpatialFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  parent['srsName'] = filter.srsName;\n  const format = GML_FORMATS[version];\n\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/DWithin.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDWithinFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  writeSpatialFilter(node, filter, objectStack);\n  const distance = createElementNS(getFilterNS(version), 'Distance');\n  writeStringTextNode(distance, filter.distance.toString());\n  if (version === '2.0.0') {\n    distance.setAttribute('uom', filter.unit);\n  } else {\n    distance.setAttribute('units', filter.unit);\n  }\n  node.appendChild(distance);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/During.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDuringFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n\n  writeExpression(FESNS[version], 'ValueReference', node, filter.propertyName);\n  const timePeriod = createElementNS(GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = createElementNS(GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  writeTimeInstant(begin, filter.begin);\n\n  const end = createElementNS(GMLNS, 'end');\n  timePeriod.appendChild(end);\n  writeTimeInstant(end, filter.end);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/LogicalNary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLogicalFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    pushSerializeAndPop(\n      item,\n      GETFEATURE_SERIALIZERS,\n      makeSimpleNodeFactory(condition.getTagName()),\n      [condition],\n      objectStack\n    );\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/Not.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNotFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  const condition = filter.condition;\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(condition.getTagName()),\n    [condition],\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/ComparisonBinary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeComparisonFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.expression);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsNull.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsNullFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  writePropertyName(version, node, filter.propertyName);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsBetween.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsBetweenFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  const ns = getFilterNS(version);\n\n  writePropertyName(version, node, filter.propertyName);\n\n  const lowerBoundary = createElementNS(ns, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  writeLiteral(version, lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = createElementNS(ns, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  writeLiteral(version, upperBoundary, '' + filter.upperBoundary);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/IsLike.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsLikeFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.pattern);\n}\n\n/**\n * @param {string} ns Namespace.\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n */\nfunction writeExpression(ns, tagName, node, value) {\n  const property = createElementNS(ns, tagName);\n  writeStringTextNode(property, value);\n  node.appendChild(property);\n}\n\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeLiteral(version, node, value) {\n  writeExpression(getFilterNS(version), 'Literal', node, value);\n}\n\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writePropertyName(version, node, value) {\n  if (version === '2.0.0') {\n    writeExpression(FESNS[version], 'ValueReference', node, value);\n  } else {\n    writeExpression(OGCNS[version], 'PropertyName', node, value);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n */\nfunction writeTimeInstant(node, time) {\n  const timeInstant = createElementNS(GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = createElementNS(GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  writeStringTextNode(timePosition, time);\n}\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {string} version WFS version. If not provided defaults to '1.1.0'\n * @return {Node} Result.\n * @api\n */\nexport function writeFilter(filter, version) {\n  version = version || '1.1.0';\n  const child = createElementNS(getFilterNS(version), 'Filter');\n  const context = {\n    node: child,\n  };\n  Object.assign(context, {\n    'version': version,\n    'filter': filter,\n  });\n  writeFilterCondition(child, filter, [context]);\n  return child;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<string>} featureTypes Feature types.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeGetFeature(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n    Object.assign({}, context)\n  );\n  item.node = node;\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory('Query'),\n    featureTypes,\n    objectStack\n  );\n}\n\nfunction getFilterNS(version) {\n  let ns;\n  if (version === '2.0.0') {\n    ns = FESNS[version];\n  } else {\n    ns = OGCNS[version];\n  }\n  return ns;\n}\n\nexport default WFS;\n","/**\n * @module ol/format/filter\n */\nimport And from './filter/And.js';\nimport Bbox from './filter/Bbox.js';\nimport Contains from './filter/Contains.js';\nimport DWithin from './filter/DWithin.js';\nimport Disjoint from './filter/Disjoint.js';\nimport During from './filter/During.js';\nimport EqualTo from './filter/EqualTo.js';\nimport GreaterThan from './filter/GreaterThan.js';\nimport GreaterThanOrEqualTo from './filter/GreaterThanOrEqualTo.js';\nimport Intersects from './filter/Intersects.js';\nimport IsBetween from './filter/IsBetween.js';\nimport IsLike from './filter/IsLike.js';\nimport IsNull from './filter/IsNull.js';\nimport LessThan from './filter/LessThan.js';\nimport LessThanOrEqualTo from './filter/LessThanOrEqualTo.js';\nimport Not from './filter/Not.js';\nimport NotEqualTo from './filter/NotEqualTo.js';\nimport Or from './filter/Or.js';\nimport ResourceId from './filter/ResourceId.js';\nimport Within from './filter/Within.js';\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @return {!And} `<And>` operator.\n * @api\n */\nexport function and(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(And, params))();\n}\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @return {!Or} `<Or>` operator.\n * @api\n */\nexport function or(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(Or, params))();\n}\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!import(\"./filter/Filter.js\").default} condition Filter condition.\n * @return {!Not} `<Not>` operator.\n * @api\n */\nexport function not(condition) {\n  return new Not(condition);\n}\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../extent.js\").Extent} extent Extent.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Bbox} `<BBOX>` operator.\n * @api\n */\nexport function bbox(geometryName, extent, srsName) {\n  return new Bbox(geometryName, extent, srsName);\n}\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Contains} `<Contains>` operator.\n * @api\n */\nexport function contains(geometryName, geometry, srsName) {\n  return new Contains(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Intersects} `<Intersects>` operator.\n * @api\n */\nexport function intersects(geometryName, geometry, srsName) {\n  return new Intersects(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Disjoint>` operator to test whether a geometry-valued property\n * is disjoint to a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Disjoint} `<Disjoint>` operator.\n * @api\n */\nexport function disjoint(geometryName, geometry, srsName) {\n  return new Disjoint(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Within} `<Within>` operator.\n * @api\n */\nexport function within(geometryName, geometry, srsName) {\n  return new Within(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<DWithin>` operator to test whether a geometry-valued property\n * is within a distance to a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {!number} distance Distance.\n * @param {!string} unit Unit.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!DWithin} `<DWithin>` operator.\n * @api\n */\nexport function dwithin(geometryName, geometry, distance, unit, srsName) {\n  return new DWithin(geometryName, geometry, distance, unit, srsName);\n}\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\nexport function equalTo(propertyName, expression, matchCase) {\n  return new EqualTo(propertyName, expression, matchCase);\n}\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\nexport function notEqualTo(propertyName, expression, matchCase) {\n  return new NotEqualTo(propertyName, expression, matchCase);\n}\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\nexport function lessThan(propertyName, expression) {\n  return new LessThan(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\nexport function lessThanOrEqualTo(propertyName, expression) {\n  return new LessThanOrEqualTo(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\nexport function greaterThan(propertyName, expression) {\n  return new GreaterThan(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\nexport function greaterThanOrEqualTo(propertyName, expression) {\n  return new GreaterThanOrEqualTo(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @return {!IsNull} `<PropertyIsNull>` operator.\n * @api\n */\nexport function isNull(propertyName) {\n  return new IsNull(propertyName);\n}\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @return {!IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\nexport function between(propertyName, lowerBoundary, upperBoundary) {\n  return new IsBetween(propertyName, lowerBoundary, upperBoundary);\n}\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string} [wildCard] Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string} [singleChar] pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string} [escapeChar] Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!IsLike} `<PropertyIsLike>` operator.\n * @api\n */\nexport function like(\n  propertyName,\n  pattern,\n  wildCard,\n  singleChar,\n  escapeChar,\n  matchCase\n) {\n  return new IsLike(\n    propertyName,\n    pattern,\n    wildCard,\n    singleChar,\n    escapeChar,\n    matchCase\n  );\n}\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @return {!During} `<During>` operator.\n * @api\n */\nexport function during(propertyName, begin, end) {\n  return new During(propertyName, begin, end);\n}\n\nexport function resourceId(rid) {\n  return new ResourceId(rid);\n}\n","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport GML2 from './GML2.js';\nimport XMLFeature from './XMLFeature.js';\nimport {extend} from '../array.js';\nimport {makeArrayPusher, makeStructureNS, pushParseAndPop} from '../xml.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<string>} [layers] If set, only features of the given layers will be returned by the format when read.\n */\n\n/**\n * @const\n * @type {string}\n */\nconst featureIdentifier = '_feature';\n\n/**\n * @const\n * @type {string}\n */\nconst layerIdentifier = '_layer';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link module:ol/format/GML2~GML2} to read features.\n *\n * @api\n */\nclass WMSGetFeatureInfo extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n    /**\n     * @private\n     * @type {GML2}\n     */\n    this.gmlFormat_ = new GML2();\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n  }\n\n  /**\n   * @return {Array<string>|null} layers\n   */\n  getLayers() {\n    return this.layers_;\n  }\n\n  /**\n   * @param {Array<string>|null} layers Layers to parse.\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  readFeatures_(node, objectStack) {\n    node.setAttribute('namespaceURI', this.featureNS_);\n    const localName = node.localName;\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = [];\n    if (node.childNodes.length === 0) {\n      return features;\n    }\n    if (localName == 'msGMLOutput') {\n      for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n        const layer = node.childNodes[i];\n        if (layer.nodeType !== Node.ELEMENT_NODE) {\n          continue;\n        }\n\n        const layerElement = /** @type {Element} */ (layer);\n        const context = objectStack[0];\n\n        const toRemove = layerIdentifier;\n        const layerName = layerElement.localName.replace(toRemove, '');\n\n        if (this.layers_ && !this.layers_.includes(layerName)) {\n          continue;\n        }\n\n        const featureType = layerName + featureIdentifier;\n\n        context['featureType'] = featureType;\n        context['featureNS'] = this.featureNS_;\n\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        const parsers = {};\n        parsers[featureType] = makeArrayPusher(\n          this.gmlFormat_.readFeatureElement,\n          this.gmlFormat_\n        );\n        const parsersNS = makeStructureNS(\n          [context['featureNS'], null],\n          parsers\n        );\n        layerElement.setAttribute('namespaceURI', this.featureNS_);\n        const layerFeatures = pushParseAndPop(\n          [],\n          // @ts-ignore\n          parsersNS,\n          layerElement,\n          objectStack,\n          this.gmlFormat_\n        );\n        if (layerFeatures) {\n          extend(features, layerFeatures);\n        }\n      }\n    }\n    if (localName == 'FeatureCollection') {\n      const gmlFeatures = pushParseAndPop(\n        [],\n        this.gmlFormat_.FEATURE_COLLECTION_PARSERS,\n        node,\n        [{}],\n        this.gmlFormat_\n      );\n      if (gmlFeatures) {\n        features = gmlFeatures;\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    const internalOptions = {};\n    if (options) {\n      Object.assign(internalOptions, this.getReadOptions(node, options));\n    }\n    return this.readFeatures_(node, [internalOptions]);\n  }\n}\n\nexport default WMSGetFeatureInfo;\n","/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceNode} from '../dom.js';\n\nconst events = [\n  'fullscreenchange',\n  'webkitfullscreenchange',\n  'MSFullscreenChange',\n];\n\n/**\n * @enum {string}\n */\nconst FullScreenEventType = {\n  /**\n   * Triggered after the map entered fullscreen.\n   * @event FullScreenEventType#enterfullscreen\n   * @api\n   */\n  ENTERFULLSCREEN: 'enterfullscreen',\n\n  /**\n   * Triggered after the map leave fullscreen.\n   * @event FullScreenEventType#leavefullscreen\n   * @api\n   */\n  LEAVEFULLSCREEN: 'leavefullscreen',\n};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen', import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen'|import(\"../ObjectEventType\").Types, Return>} FullScreenOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text|HTMLElement} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [activeClassName=className + '-true'] CSS class name for the button\n * when full-screen is active.\n * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button\n * when full-screen is inactive.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](https://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @fires FullScreenEventType#enterfullscreen\n * @fires FullScreenEventType#leavefullscreen\n * @api\n */\nclass FullScreen extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FullScreenOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.isInFullscreen_ = false;\n\n    /**\n     * @private\n     */\n    this.boundHandleMapTargetChange_ = this.handleMapTargetChange_.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ =\n      options.className !== undefined ? options.className : 'ol-full-screen';\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.documentListeners_ = [];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.activeClassName_ =\n      options.activeClassName !== undefined\n        ? options.activeClassName.split(' ')\n        : [this.cssClassName_ + '-true'];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.inactiveClassName_ =\n      options.inactiveClassName !== undefined\n        ? options.inactiveClassName.split(' ')\n        : [this.cssClassName_ + '-false'];\n\n    const label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelNode_ =\n      typeof label === 'string' ? document.createTextNode(label) : label;\n\n    const labelActive =\n      options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelActiveNode_ =\n      typeof labelActive === 'string'\n        ? document.createTextNode(labelActive)\n        : labelActive;\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n    this.button_.title = tipLabel;\n    this.button_.setAttribute('type', 'button');\n    this.button_.appendChild(this.labelNode_);\n    this.button_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n    this.setClassName_(this.button_, this.isInFullscreen_);\n\n    this.element.className = `${this.cssClassName_} ${CLASS_UNSELECTABLE} ${CLASS_CONTROL}`;\n    this.element.appendChild(this.button_);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreen_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const doc = map.getOwnerDocument();\n    if (!isFullScreenSupported(doc)) {\n      return;\n    }\n    if (isFullScreen(doc)) {\n      exitFullScreen(doc);\n    } else {\n      let element;\n      if (this.source_) {\n        element =\n          typeof this.source_ === 'string'\n            ? doc.getElementById(this.source_)\n            : this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreenChange_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const wasInFullscreen = this.isInFullscreen_;\n    this.isInFullscreen_ = isFullScreen(map.getOwnerDocument());\n    if (wasInFullscreen !== this.isInFullscreen_) {\n      this.setClassName_(this.button_, this.isInFullscreen_);\n      if (this.isInFullscreen_) {\n        replaceNode(this.labelActiveNode_, this.labelNode_);\n        this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\n      } else {\n        replaceNode(this.labelNode_, this.labelActiveNode_);\n        this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\n      }\n      map.updateSize();\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  setClassName_(element, fullscreen) {\n    if (fullscreen) {\n      element.classList.remove(...this.inactiveClassName_);\n      element.classList.add(...this.activeClassName_);\n    } else {\n      element.classList.remove(...this.activeClassName_);\n      element.classList.add(...this.inactiveClassName_);\n    }\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (oldMap) {\n      oldMap.removeChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_\n      );\n    }\n\n    super.setMap(map);\n\n    this.handleMapTargetChange_();\n    if (map) {\n      map.addChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleMapTargetChange_() {\n    const listeners = this.documentListeners_;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      unlistenByKey(listeners[i]);\n    }\n    listeners.length = 0;\n\n    const map = this.getMap();\n    if (map) {\n      const doc = map.getOwnerDocument();\n      if (isFullScreenSupported(doc)) {\n        this.element.classList.remove(CLASS_UNSUPPORTED);\n      } else {\n        this.element.classList.add(CLASS_UNSUPPORTED);\n      }\n\n      for (let i = 0, ii = events.length; i < ii; ++i) {\n        listeners.push(\n          listen(doc, events[i], this.handleFullScreenChange_, this)\n        );\n      }\n      this.handleFullScreenChange_();\n    }\n  }\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported(doc) {\n  const body = doc.body;\n  return !!(\n    body['webkitRequestFullscreen'] ||\n    (body.requestFullscreen && doc.fullscreenEnabled)\n  );\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen(doc) {\n  return !!(doc['webkitIsFullScreen'] || doc.fullscreenElement);\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n * @param {Document} doc The document to exit fullscren from\n */\nfunction exitFullScreen(doc) {\n  if (doc.exitFullscreen) {\n    doc.exitFullscreen();\n  } else if (doc['webkitExitFullscreen']) {\n    doc['webkitExitFullscreen']();\n  }\n}\n\nexport default FullScreen;\n","/**\n * @module ol/control/MousePosition\n */\n\nimport Control from './Control.js';\nimport EventType from '../pointer/EventType.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  getUserProjection,\n  identityTransform,\n} from '../proj.js';\nimport {listen} from '../events.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', Return>} MousePositionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [placeholder] Markup to show when the mouse position is not\n * available (e.g. when the pointer leaves the map viewport).  By default, a non-breaking space is rendered\n * initially and the last position is retained when the mouse leaves the viewport.\n * When a string is provided (e.g. `'no position'` or `''` for an empty string) it is used as a\n * placeholder.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the projection's antimeridian, if it\n * is a global projection.\n */\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nclass MousePosition extends Control {\n  /**\n   * @param {Options} [options] Mouse position options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.className =\n      options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MousePositionOnSignature<void>}\n     */\n    this.un;\n\n    this.addChangeListener(PROJECTION, this.handleProjectionChanged_);\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = options.placeholder !== undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.placeholder_ = this.renderOnMouseOut_ ? options.placeholder : '&#160;';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {?import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX === false ? false : true;\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    this.transform_ = null;\n  }\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  getCoordinateFormat() {\n    return /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (\n      this.get(COORDINATE_FORMAT)\n    );\n  }\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"../proj/Projection.js\").default|undefined} */ (\n      this.get(PROJECTION)\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event Browser event.\n   * @protected\n   */\n  handleMouseMove(event) {\n    const map = this.getMap();\n    this.updateHTML_(map.getEventPixel(event));\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseOut(event) {\n    this.updateHTML_(null);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      const viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this)\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this)\n        );\n      }\n      this.updateHTML_(null);\n    }\n  }\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  setCoordinateFormat(format) {\n    this.set(COORDINATE_FORMAT, format);\n  }\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  updateHTML_(pixel) {\n    let html = this.placeholder_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        const projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            projection\n          );\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      const map = this.getMap();\n      const coordinate = map.getCoordinateFromPixelInternal(pixel);\n      if (coordinate) {\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            userProjection\n          );\n        }\n        this.transform_(coordinate, coordinate);\n        if (this.wrapX_) {\n          const projection =\n            userProjection || this.getProjection() || this.mapProjection_;\n          wrapX(coordinate, projection);\n        }\n        const coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  }\n\n  /**\n   * Update the projection. Rendering of the coordinates is done in\n   * `handleMouseMove` and `handleMouseUp`.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.mapProjection_ = null;\n    } else {\n      if (this.mapProjection_ != frameState.viewState.projection) {\n        this.mapProjection_ = frameState.viewState.projection;\n        this.transform_ = null;\n      }\n    }\n  }\n}\n\nexport default MousePosition;\n","/**\n * @module ol/control/OverviewMap\n */\nimport Collection from '../Collection.js';\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport View from '../View.js';\nimport ViewProperty from '../ViewProperty.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {\n  containsExtent,\n  equals as equalsExtent,\n  getBottomRight,\n  getTopLeft,\n  scaleFromCenter,\n} from '../extent.js';\nimport {listen, listenOnce} from '../events.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {replaceNode} from '../dom.js';\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nconst MAX_RATIO = 0.75;\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nconst MIN_RATIO = 0.1;\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='‹'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='›'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Base.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Base.js\").default>} [layers]\n * Layers for the overview map.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {boolean} [rotateWithView=false] Whether the control view should rotate with the main map view.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {View} [view] Custom view for the overview map (should use same projection as main map). If not provided,\n * a default view with the same projection as the main map will be used.\n */\n\n/**\n * Create a new control with a map acting as an overview map for another\n * defined map.\n *\n * @api\n */\nclass OverviewMap extends Control {\n  /**\n   * @param {Options} [options] OverviewMap options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     */\n    this.boundHandleRotationChanged_ = this.handleRotationChanged_.bind(this);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.viewExtent_ = undefined;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u2039';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : '\\u203A';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('div');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * Explicitly given view to be used instead of a view derived from the main map.\n     * @type {View}\n     * @private\n     */\n    this.view_ = options.view;\n\n    const ovmap = new Map({\n      view: options.view,\n      controls: new Collection(),\n      interactions: new Collection(),\n    });\n\n    /**\n     * @type {Map}\n     * @private\n     */\n    this.ovmap_ = ovmap;\n\n    if (options.layers) {\n      options.layers.forEach(function (layer) {\n        ovmap.addLayer(layer);\n      });\n    }\n\n    const box = document.createElement('div');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {import(\"../Overlay.js\").default}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: 'center-center',\n      element: box,\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    const scope = this;\n\n    const overlay = this.boxOverlay_;\n    const overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    const computeDesiredMousePosition = function (mousePosition) {\n      return {\n        clientX: mousePosition.clientX,\n        clientY: mousePosition.clientY,\n      };\n    };\n\n    const move = function (event) {\n      const position = /** @type {?} */ (computeDesiredMousePosition(event));\n      const coordinates = ovmap.getEventCoordinateInternal(\n        /** @type {MouseEvent} */ (position)\n      );\n\n      overlay.setPosition(coordinates);\n    };\n\n    const endMoving = function (event) {\n      const coordinates = ovmap.getEventCoordinateInternal(event);\n\n      scope.getMap().getView().setCenterInternal(coordinates);\n\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', endMoving);\n    };\n\n    /* Binding */\n\n    overlayBox.addEventListener('mousedown', function () {\n      window.addEventListener('mousemove', move);\n      window.addEventListener('mouseup', endMoving);\n    });\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      const oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    super.setMap(map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(\n        listen(\n          map,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleMapPropertyChange_,\n          this\n        )\n      );\n\n      const view = map.getView();\n      if (view) {\n        this.bindView_(view);\n        if (view.isDef()) {\n          this.ovmap_.updateSize();\n          this.resetExtent_();\n        }\n      }\n\n      if (!this.ovmap_.isRendered()) {\n        this.updateBoxAfterOvmapIsRendered_();\n      }\n    }\n  }\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n   * @private\n   */\n  handleMapPropertyChange_(event) {\n    if (event.key === MapProperty.VIEW) {\n      const oldView = /** @type {import(\"../View.js\").default} */ (\n        event.oldValue\n      );\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      const newView = this.getMap().getView();\n      this.bindView_(newView);\n    } else if (\n      !this.ovmap_.isRendered() &&\n      (event.key === MapProperty.TARGET || event.key === MapProperty.SIZE)\n    ) {\n      this.ovmap_.updateSize();\n    }\n  }\n\n  /**\n   * Register listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  bindView_(view) {\n    if (!this.view_) {\n      // Unless an explicit view definition was given, derive default from whatever main map uses.\n      const newView = new View({\n        projection: view.getProjection(),\n      });\n      this.ovmap_.setView(newView);\n    }\n\n    view.addChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_\n    );\n    // Sync once with the new view\n    this.handleRotationChanged_();\n  }\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  unbindView_(view) {\n    view.removeChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_\n    );\n  }\n\n  /**\n   * Handle rotation changes to the main map.\n   * @private\n   */\n  handleRotationChanged_() {\n    if (this.rotateWithView_) {\n      this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n    }\n  }\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  validateExtent_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    if (this.viewExtent_ && equalsExtent(extent, this.viewExtent_)) {\n      // repeats of the same extent may indicate constraint conflicts leading to an endless cycle\n      return;\n    }\n    this.viewExtent_ = extent;\n\n    const ovmapSize = /** @type {import(\"../size.js\").Size} */ (\n      ovmap.getSize()\n    );\n\n    const ovview = ovmap.getView();\n    const ovextent = ovview.calculateExtentInternal(ovmapSize);\n\n    const topLeftPixel = ovmap.getPixelFromCoordinateInternal(\n      getTopLeft(extent)\n    );\n    const bottomRightPixel = ovmap.getPixelFromCoordinateInternal(\n      getBottomRight(extent)\n    );\n\n    const boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    const boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    const ovmapWidth = ovmapSize[0];\n    const ovmapHeight = ovmapSize[1];\n\n    if (\n      boxWidth < ovmapWidth * MIN_RATIO ||\n      boxHeight < ovmapHeight * MIN_RATIO ||\n      boxWidth > ovmapWidth * MAX_RATIO ||\n      boxHeight > ovmapHeight * MAX_RATIO\n    ) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  }\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  resetExtent_() {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    const ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    const steps = Math.log(MAX_RATIO / MIN_RATIO) / Math.LN2;\n    const ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fitInternal(polygonFromExtent(extent));\n  }\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  recenter_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    ovview.setCenterInternal(view.getCenterInternal());\n  }\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  updateBox_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    const rotation = this.rotateWithView_ ? 0 : -view.getRotation();\n\n    const overlay = this.boxOverlay_;\n    const box = this.boxOverlay_.getElement();\n    const center = view.getCenterInternal();\n    const resolution = view.getResolution();\n    const ovresolution = ovview.getResolution();\n    const width = (mapSize[0] * resolution) / ovresolution;\n    const height = (mapSize[1] * resolution) / ovresolution;\n\n    // set position using center coordinates\n    overlay.setPosition(center);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = width + 'px';\n      box.style.height = height + 'px';\n      const transform = 'rotate(' + rotation + 'rad)';\n      box.style.transform = transform;\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateBoxAfterOvmapIsRendered_() {\n    if (this.ovmapPostrenderKey_) {\n      return;\n    }\n    this.ovmapPostrenderKey_ = listenOnce(\n      this.ovmap_,\n      MapEventType.POSTRENDER,\n      function (event) {\n        delete this.ovmapPostrenderKey_;\n        this.updateBox_();\n      },\n      this\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    const ovmap = this.ovmap_;\n    if (!this.collapsed_) {\n      if (ovmap.isRendered()) {\n        this.viewExtent_ = undefined;\n        ovmap.render();\n        return;\n      }\n      ovmap.updateSize();\n      this.resetExtent_();\n      this.updateBoxAfterOvmapIsRendered_();\n    }\n  }\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the overview map view can rotate, `false` otherwise.\n   * @return {boolean} True if the control view can rotate.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Set whether the overview map view should rotate with the main map view.\n   * @param {boolean} rotateWithView True if the control view should rotate.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    if (this.rotateWithView_ === rotateWithView) {\n      return;\n    }\n    this.rotateWithView_ = rotateWithView;\n    if (this.getMap().getView().getRotation() !== 0) {\n      if (this.rotateWithView_) {\n        this.handleRotationChanged_();\n      } else {\n        this.ovmap_.getView().setRotation(0);\n      }\n      this.viewExtent_ = undefined;\n      this.validateExtent_();\n      this.updateBox_();\n    }\n  }\n\n  /**\n   * Return the overview map.\n   * @return {import(\"../Map.js\").default} Overview map.\n   * @api\n   */\n  getOverviewMap() {\n    return this.ovmap_;\n  }\n\n  /**\n   * Update the overview map element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.validateExtent_();\n    this.updateBox_();\n  }\n}\n\nexport default OverviewMap;\n","/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * @typedef {'degrees' | 'imperial' | 'nautical' | 'metric' | 'us'} Units\n * Units for the scale line.\n */\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className] CSS class name. The default is `ol-scale-bar` when configured with\n * `bar: true`. Otherwise the default is `ol-scale-line`.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {number} [maxWidth] Maximum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options} [options] Scale line options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.style.pointerEvents = 'none';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ScaleLineOnSignature<void>}\n     */\n    this.un;\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n        ? 'ol-scale-bar'\n        : 'ol-scale-line';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.maxWidth_ = options.maxWidth;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addChangeListener(UNITS_PROP, this.handleUnitsChanged_);\n\n    this.setUnits(options.units || 'metric');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits = units == 'degrees' ? 'degrees' : 'm';\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    const maxWidth =\n      this.maxWidth_ !== undefined\n        ? (this.maxWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI\n        : undefined;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == 'degrees') {\n      const metersPerDegree = METERS_PER_UNIT.degrees;\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == 'imperial') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == 'nautical') {\n      pointResolution /= 1852;\n      suffix = 'NM';\n    } else if (units == 'metric') {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == 'us') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    let previousCount, previousWidth, previousDecimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      }\n      if (maxWidth !== undefined && width >= maxWidth) {\n        count = previousCount;\n        width = previousWidth;\n        decimalCount = previousDecimalCount;\n        break;\n      } else if (width >= minWidth) {\n        break;\n      }\n      previousCount = count;\n      previousWidth = width;\n      previousDecimalCount = decimalCount;\n      ++i;\n    }\n    const html = this.scaleBar_\n      ? this.createScaleBar(width, count, suffix)\n      : count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @return {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const resolutionScale = this.getScaleForResolution();\n    const mapScale =\n      resolutionScale < 1\n        ? Math.round(1 / resolutionScale).toLocaleString() + ' : 1'\n        : '1 : ' + Math.round(resolutionScale).toLocaleString();\n    const steps = this.scaleBarSteps_;\n    const stepWidth = width / steps;\n    const scaleSteps = [this.createMarker('absolute')];\n    for (let i = 0; i < steps; ++i) {\n      const cls =\n        i % 2 === 0 ? 'ol-scale-singlebar-odd' : 'ol-scale-singlebar-even';\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          `class=\"ol-scale-singlebar ${cls}\" ` +\n          `style=\"width: ${stepWidth}px;\"` +\n          '>' +\n          '</div>' +\n          this.createMarker('relative') +\n          // render text every second step, except when only 2 steps\n          (i % 2 === 0 || steps === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>'\n      );\n    }\n    // render text at the end\n    scaleSteps.push(this.createStepText(steps, width, true, scale, suffix));\n\n    const scaleBarText = this.scaleBarText_\n      ? `<div class=\"ol-scale-text\" style=\"width: ${width}px;\">` +\n        mapScale +\n        '</div>'\n      : '';\n    return scaleBarText + scaleSteps.join('');\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {'absolute'|'relative'} position The position, absolute or relative\n   * @return {string} The stringified div containing the marker\n   */\n  createMarker(position) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      `style=\"position: ${position}; top: ${top}px;\"` +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i The iterator\n   * @param {number} width The width the scalebar will currently use\n   * @param {boolean} isLast Flag indicating if we add the last step text\n   * @param {number} scale The current scale for the whole scalebar\n   * @param {string} suffix The suffix for the scale\n   * @return {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      `margin-left: ${margin}px;` +\n      `text-align: ${i === 0 ? 'left' : 'center'};` +\n      `min-width: ${minWidth}px;` +\n      `left: ${isLast ? width + 'px' : 'unset'};` +\n      '\">' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center,\n      'm'\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const inchesPerMeter = 1000 / 25.4;\n    return resolution * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n","/**\n * @module ol/control/ZoomSlider\n */\n\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {clamp} from '../math.js';\nimport {easeOut} from '../easing.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nconst Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1,\n};\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n */\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nclass ZoomSlider extends Control {\n  /**\n   * @param {Options} [options] Zoom slider options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n    });\n\n    /**\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    this.currentResolution_ = undefined;\n\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    this.direction_ = Direction.VERTICAL;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.heightLimit_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.widthLimit_ = 0;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startX_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startY_;\n\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.thumbSize_ = null;\n\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    this.sliderInitialized_ = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoomslider';\n    const thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    const containerElement = this.element;\n    containerElement.className =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n\n    containerElement.addEventListener(\n      PointerEventType.POINTERDOWN,\n      this.handleDraggerStart_.bind(this),\n      false\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERMOVE,\n      this.handleDraggerDrag_.bind(this),\n      false\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERUP,\n      this.handleDraggerEnd_.bind(this),\n      false\n    );\n\n    containerElement.addEventListener(\n      EventType.CLICK,\n      this.handleContainerClick_.bind(this),\n      false\n    );\n    thumbElement.addEventListener(EventType.CLICK, stopPropagation, false);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      map.render();\n    }\n  }\n\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @return {boolean} Initialization successful\n   * @private\n   */\n  initSlider_() {\n    const container = this.element;\n    let containerWidth = container.offsetWidth;\n    let containerHeight = container.offsetHeight;\n    if (containerWidth === 0 && containerHeight === 0) {\n      return (this.sliderInitialized_ = false);\n    }\n\n    const containerStyle = getComputedStyle(container);\n    containerWidth -=\n      parseFloat(containerStyle['paddingRight']) +\n      parseFloat(containerStyle['paddingLeft']);\n    containerHeight -=\n      parseFloat(containerStyle['paddingTop']) +\n      parseFloat(containerStyle['paddingBottom']);\n    const thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n    const thumbStyle = getComputedStyle(thumb);\n    const thumbWidth =\n      thumb.offsetWidth +\n      parseFloat(thumbStyle['marginRight']) +\n      parseFloat(thumbStyle['marginLeft']);\n    const thumbHeight =\n      thumb.offsetHeight +\n      parseFloat(thumbStyle['marginTop']) +\n      parseFloat(thumbStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerWidth > containerHeight) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerWidth - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerHeight - thumbHeight;\n    }\n    return (this.sliderInitialized_ = true);\n  }\n\n  /**\n   * @param {PointerEvent} event The browser event to handle.\n   * @private\n   */\n  handleContainerClick_(event) {\n    const view = this.getMap().getView();\n\n    const relativePosition = this.getRelativePosition_(\n      event.offsetX - this.thumbSize_[0] / 2,\n      event.offsetY - this.thumbSize_[1] / 2\n    );\n\n    const resolution = this.getResolutionForPosition_(relativePosition);\n    const zoom = view.getConstrainedZoom(view.getZoomForResolution(resolution));\n\n    view.animateInternal({\n      zoom: zoom,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n\n  /**\n   * Handle dragger start events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerStart_(event) {\n    if (!this.dragging_ && event.target === this.element.firstElementChild) {\n      const element = /** @type {HTMLElement} */ (\n        this.element.firstElementChild\n      );\n      this.getMap().getView().beginInteraction();\n      this.startX_ = event.clientX - parseFloat(element.style.left);\n      this.startY_ = event.clientY - parseFloat(element.style.top);\n      this.dragging_ = true;\n\n      if (this.dragListenerKeys_.length === 0) {\n        const drag = this.handleDraggerDrag_;\n        const end = this.handleDraggerEnd_;\n        const doc = this.getMap().getOwnerDocument();\n        this.dragListenerKeys_.push(\n          listen(doc, PointerEventType.POINTERMOVE, drag, this),\n          listen(doc, PointerEventType.POINTERUP, end, this)\n        );\n      }\n    }\n  }\n\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerDrag_(event) {\n    if (this.dragging_) {\n      const deltaX = event.clientX - this.startX_;\n      const deltaY = event.clientY - this.startY_;\n      const relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ =\n        this.getResolutionForPosition_(relativePosition);\n      this.getMap().getView().setResolution(this.currentResolution_);\n    }\n  }\n\n  /**\n   * Handle dragger end events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerEnd_(event) {\n    if (this.dragging_) {\n      const view = this.getMap().getView();\n      view.endInteraction();\n\n      this.dragging_ = false;\n      this.startX_ = undefined;\n      this.startY_ = undefined;\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n    }\n  }\n\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  setThumbPosition_(res) {\n    const position = this.getPositionForResolution_(res);\n    const thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  }\n\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  getRelativePosition_(x, y) {\n    let amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  }\n\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  getResolutionForPosition_(position) {\n    const fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  }\n\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  getPositionForResolution_(res) {\n    const fn = this.getMap().getView().getValueForResolutionFunction();\n    return clamp(1 - fn(res), 0, 1);\n  }\n\n  /**\n   * Update the zoomslider element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    if (!mapEvent.frameState) {\n      return;\n    }\n    if (!this.sliderInitialized_ && !this.initSlider_()) {\n      return;\n    }\n    const res = mapEvent.frameState.viewState.resolution;\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\nexport default ZoomSlider;\n","/**\n * @module ol/control/ZoomToExtent\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nclass ZoomToExtent extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent|null}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    const label = options.label !== undefined ? options.label : 'E';\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label\n    );\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  }\n\n  /**\n   * @protected\n   */\n  handleZoomToExtent() {\n    const map = this.getMap();\n    const view = map.getView();\n    const extent = !this.extent\n      ? view.getProjection().getExtent()\n      : this.extent;\n    view.fitInternal(polygonFromExtent(extent));\n  }\n}\n\nexport default ZoomToExtent;\n","import $ol$AssertionError from './ol/AssertionError.js';\nimport {CollectionEvent as _ol_Collection$CollectionEvent} from './ol/Collection.js';\nimport $ol$Collection from './ol/Collection.js';\nimport {asImageLike as _ol_DataTile$asImageLike} from './ol/DataTile.js';\nimport {asArrayLike as _ol_DataTile$asArrayLike} from './ol/DataTile.js';\nimport {toArray as _ol_DataTile$toArray} from './ol/DataTile.js';\nimport $ol$DataTile from './ol/DataTile.js';\nimport $ol$Disposable from './ol/Disposable.js';\nimport $ol$Feature from './ol/Feature.js';\nimport {createStyleFunction as _ol_Feature$createStyleFunction} from './ol/Feature.js';\nimport {GeolocationError as _ol_Geolocation$GeolocationError} from './ol/Geolocation.js';\nimport $ol$Geolocation from './ol/Geolocation.js';\nimport $ol$Image from './ol/Image.js';\nimport {listenImage as _ol_Image$listenImage} from './ol/Image.js';\nimport $ol$ImageBase from './ol/ImageBase.js';\nimport $ol$ImageCanvas from './ol/ImageCanvas.js';\nimport $ol$ImageTile from './ol/ImageTile.js';\nimport $ol$Kinetic from './ol/Kinetic.js';\nimport $ol$Map from './ol/Map.js';\nimport $ol$MapBrowserEvent from './ol/MapBrowserEvent.js';\nimport $ol$MapBrowserEventHandler from './ol/MapBrowserEventHandler.js';\nimport $ol$MapEvent from './ol/MapEvent.js';\nimport {ObjectEvent as _ol_Object$ObjectEvent} from './ol/Object.js';\nimport $ol$Object from './ol/Object.js';\nimport $ol$Observable from './ol/Observable.js';\nimport {unByKey as _ol_Observable$unByKey} from './ol/Observable.js';\nimport $ol$Overlay from './ol/Overlay.js';\nimport $ol$Tile from './ol/Tile.js';\nimport $ol$TileCache from './ol/TileCache.js';\nimport $ol$TileQueue from './ol/TileQueue.js';\nimport {getTilePriority as _ol_TileQueue$getTilePriority} from './ol/TileQueue.js';\nimport $ol$TileRange from './ol/TileRange.js';\nimport {createOrUpdate as _ol_TileRange$createOrUpdate} from './ol/TileRange.js';\nimport $ol$VectorRenderTile from './ol/VectorRenderTile.js';\nimport $ol$View from './ol/View.js';\nimport {createCenterConstraint as _ol_View$createCenterConstraint} from './ol/View.js';\nimport {createResolutionConstraint as _ol_View$createResolutionConstraint} from './ol/View.js';\nimport {createRotationConstraint as _ol_View$createRotationConstraint} from './ol/View.js';\nimport {isNoopAnimation as _ol_View$isNoopAnimation} from './ol/View.js';\nimport {binarySearch as _ol_array$binarySearch} from './ol/array.js';\nimport {ascending as _ol_array$ascending} from './ol/array.js';\nimport {linearFindNearest as _ol_array$linearFindNearest} from './ol/array.js';\nimport {reverseSubArray as _ol_array$reverseSubArray} from './ol/array.js';\nimport {extend as _ol_array$extend} from './ol/array.js';\nimport {remove as _ol_array$remove} from './ol/array.js';\nimport {equals as _ol_array$equals} from './ol/array.js';\nimport {stableSort as _ol_array$stableSort} from './ol/array.js';\nimport {isSorted as _ol_array$isSorted} from './ol/array.js';\nimport {assert as _ol_asserts$assert} from './ol/asserts.js';\nimport {createExtent as _ol_centerconstraint$createExtent} from './ol/centerconstraint.js';\nimport {none as _ol_centerconstraint$none} from './ol/centerconstraint.js';\nimport {asString as _ol_color$asString} from './ol/color.js';\nimport {fromString as _ol_color$fromString} from './ol/color.js';\nimport {asArray as _ol_color$asArray} from './ol/color.js';\nimport {normalize as _ol_color$normalize} from './ol/color.js';\nimport {toString as _ol_color$toString} from './ol/color.js';\nimport {isStringColor as _ol_color$isStringColor} from './ol/color.js';\nimport {asColorLike as _ol_colorlike$asColorLike} from './ol/colorlike.js';\nimport {setLevel as _ol_console$setLevel} from './ol/console.js';\nimport {log as _ol_console$log} from './ol/console.js';\nimport {warn as _ol_console$warn} from './ol/console.js';\nimport {error as _ol_console$error} from './ol/console.js';\nimport {add as _ol_coordinate$add} from './ol/coordinate.js';\nimport {closestOnCircle as _ol_coordinate$closestOnCircle} from './ol/coordinate.js';\nimport {closestOnSegment as _ol_coordinate$closestOnSegment} from './ol/coordinate.js';\nimport {createStringXY as _ol_coordinate$createStringXY} from './ol/coordinate.js';\nimport {degreesToStringHDMS as _ol_coordinate$degreesToStringHDMS} from './ol/coordinate.js';\nimport {format as _ol_coordinate$format} from './ol/coordinate.js';\nimport {equals as _ol_coordinate$equals} from './ol/coordinate.js';\nimport {rotate as _ol_coordinate$rotate} from './ol/coordinate.js';\nimport {scale as _ol_coordinate$scale} from './ol/coordinate.js';\nimport {squaredDistance as _ol_coordinate$squaredDistance} from './ol/coordinate.js';\nimport {distance as _ol_coordinate$distance} from './ol/coordinate.js';\nimport {squaredDistanceToSegment as _ol_coordinate$squaredDistanceToSegment} from './ol/coordinate.js';\nimport {toStringHDMS as _ol_coordinate$toStringHDMS} from './ol/coordinate.js';\nimport {toStringXY as _ol_coordinate$toStringXY} from './ol/coordinate.js';\nimport {wrapX as _ol_coordinate$wrapX} from './ol/coordinate.js';\nimport {getWorldsAway as _ol_coordinate$getWorldsAway} from './ol/coordinate.js';\nimport {CLASS_HIDDEN as _ol_css$CLASS_HIDDEN} from './ol/css.js';\nimport {CLASS_SELECTABLE as _ol_css$CLASS_SELECTABLE} from './ol/css.js';\nimport {CLASS_UNSELECTABLE as _ol_css$CLASS_UNSELECTABLE} from './ol/css.js';\nimport {CLASS_UNSUPPORTED as _ol_css$CLASS_UNSUPPORTED} from './ol/css.js';\nimport {CLASS_CONTROL as _ol_css$CLASS_CONTROL} from './ol/css.js';\nimport {CLASS_COLLAPSED as _ol_css$CLASS_COLLAPSED} from './ol/css.js';\nimport {getFontParameters as _ol_css$getFontParameters} from './ol/css.js';\nimport {createCanvasContext2D as _ol_dom$createCanvasContext2D} from './ol/dom.js';\nimport {releaseCanvas as _ol_dom$releaseCanvas} from './ol/dom.js';\nimport {outerWidth as _ol_dom$outerWidth} from './ol/dom.js';\nimport {outerHeight as _ol_dom$outerHeight} from './ol/dom.js';\nimport {replaceNode as _ol_dom$replaceNode} from './ol/dom.js';\nimport {removeNode as _ol_dom$removeNode} from './ol/dom.js';\nimport {removeChildren as _ol_dom$removeChildren} from './ol/dom.js';\nimport {replaceChildren as _ol_dom$replaceChildren} from './ol/dom.js';\nimport {easeIn as _ol_easing$easeIn} from './ol/easing.js';\nimport {easeOut as _ol_easing$easeOut} from './ol/easing.js';\nimport {inAndOut as _ol_easing$inAndOut} from './ol/easing.js';\nimport {linear as _ol_easing$linear} from './ol/easing.js';\nimport {upAndDown as _ol_easing$upAndDown} from './ol/easing.js';\nimport {listen as _ol_events$listen} from './ol/events.js';\nimport {listenOnce as _ol_events$listenOnce} from './ol/events.js';\nimport {unlistenByKey as _ol_events$unlistenByKey} from './ol/events.js';\nimport {boundingExtent as _ol_extent$boundingExtent} from './ol/extent.js';\nimport {buffer as _ol_extent$buffer} from './ol/extent.js';\nimport {clone as _ol_extent$clone} from './ol/extent.js';\nimport {closestSquaredDistanceXY as _ol_extent$closestSquaredDistanceXY} from './ol/extent.js';\nimport {containsCoordinate as _ol_extent$containsCoordinate} from './ol/extent.js';\nimport {containsExtent as _ol_extent$containsExtent} from './ol/extent.js';\nimport {containsXY as _ol_extent$containsXY} from './ol/extent.js';\nimport {coordinateRelationship as _ol_extent$coordinateRelationship} from './ol/extent.js';\nimport {createEmpty as _ol_extent$createEmpty} from './ol/extent.js';\nimport {createOrUpdate as _ol_extent$createOrUpdate} from './ol/extent.js';\nimport {createOrUpdateEmpty as _ol_extent$createOrUpdateEmpty} from './ol/extent.js';\nimport {createOrUpdateFromCoordinate as _ol_extent$createOrUpdateFromCoordinate} from './ol/extent.js';\nimport {createOrUpdateFromCoordinates as _ol_extent$createOrUpdateFromCoordinates} from './ol/extent.js';\nimport {createOrUpdateFromFlatCoordinates as _ol_extent$createOrUpdateFromFlatCoordinates} from './ol/extent.js';\nimport {createOrUpdateFromRings as _ol_extent$createOrUpdateFromRings} from './ol/extent.js';\nimport {equals as _ol_extent$equals} from './ol/extent.js';\nimport {approximatelyEquals as _ol_extent$approximatelyEquals} from './ol/extent.js';\nimport {extend as _ol_extent$extend} from './ol/extent.js';\nimport {extendCoordinate as _ol_extent$extendCoordinate} from './ol/extent.js';\nimport {extendCoordinates as _ol_extent$extendCoordinates} from './ol/extent.js';\nimport {extendFlatCoordinates as _ol_extent$extendFlatCoordinates} from './ol/extent.js';\nimport {extendRings as _ol_extent$extendRings} from './ol/extent.js';\nimport {extendXY as _ol_extent$extendXY} from './ol/extent.js';\nimport {forEachCorner as _ol_extent$forEachCorner} from './ol/extent.js';\nimport {getArea as _ol_extent$getArea} from './ol/extent.js';\nimport {getBottomLeft as _ol_extent$getBottomLeft} from './ol/extent.js';\nimport {getBottomRight as _ol_extent$getBottomRight} from './ol/extent.js';\nimport {getCenter as _ol_extent$getCenter} from './ol/extent.js';\nimport {getCorner as _ol_extent$getCorner} from './ol/extent.js';\nimport {getEnlargedArea as _ol_extent$getEnlargedArea} from './ol/extent.js';\nimport {getForViewAndSize as _ol_extent$getForViewAndSize} from './ol/extent.js';\nimport {getRotatedViewport as _ol_extent$getRotatedViewport} from './ol/extent.js';\nimport {getHeight as _ol_extent$getHeight} from './ol/extent.js';\nimport {getIntersectionArea as _ol_extent$getIntersectionArea} from './ol/extent.js';\nimport {getIntersection as _ol_extent$getIntersection} from './ol/extent.js';\nimport {getMargin as _ol_extent$getMargin} from './ol/extent.js';\nimport {getSize as _ol_extent$getSize} from './ol/extent.js';\nimport {getTopLeft as _ol_extent$getTopLeft} from './ol/extent.js';\nimport {getTopRight as _ol_extent$getTopRight} from './ol/extent.js';\nimport {getWidth as _ol_extent$getWidth} from './ol/extent.js';\nimport {intersects as _ol_extent$intersects} from './ol/extent.js';\nimport {isEmpty as _ol_extent$isEmpty} from './ol/extent.js';\nimport {returnOrUpdate as _ol_extent$returnOrUpdate} from './ol/extent.js';\nimport {scaleFromCenter as _ol_extent$scaleFromCenter} from './ol/extent.js';\nimport {intersectsSegment as _ol_extent$intersectsSegment} from './ol/extent.js';\nimport {applyTransform as _ol_extent$applyTransform} from './ol/extent.js';\nimport {wrapX as _ol_extent$wrapX} from './ol/extent.js';\nimport {wrapAndSliceX as _ol_extent$wrapAndSliceX} from './ol/extent.js';\nimport {loadFeaturesXhr as _ol_featureloader$loadFeaturesXhr} from './ol/featureloader.js';\nimport {xhr as _ol_featureloader$xhr} from './ol/featureloader.js';\nimport {setWithCredentials as _ol_featureloader$setWithCredentials} from './ol/featureloader.js';\nimport {TRUE as _ol_functions$TRUE} from './ol/functions.js';\nimport {FALSE as _ol_functions$FALSE} from './ol/functions.js';\nimport {VOID as _ol_functions$VOID} from './ol/functions.js';\nimport {memoizeOne as _ol_functions$memoizeOne} from './ol/functions.js';\nimport {toPromise as _ol_functions$toPromise} from './ol/functions.js';\nimport {FIREFOX as _ol_has$FIREFOX} from './ol/has.js';\nimport {SAFARI as _ol_has$SAFARI} from './ol/has.js';\nimport {SAFARI_BUG_237906 as _ol_has$SAFARI_BUG_237906} from './ol/has.js';\nimport {WEBKIT as _ol_has$WEBKIT} from './ol/has.js';\nimport {MAC as _ol_has$MAC} from './ol/has.js';\nimport {DEVICE_PIXEL_RATIO as _ol_has$DEVICE_PIXEL_RATIO} from './ol/has.js';\nimport {WORKER_OFFSCREEN_CANVAS as _ol_has$WORKER_OFFSCREEN_CANVAS} from './ol/has.js';\nimport {IMAGE_DECODE as _ol_has$IMAGE_DECODE} from './ol/has.js';\nimport {PASSIVE_EVENT_LISTENERS as _ol_has$PASSIVE_EVENT_LISTENERS} from './ol/has.js';\nimport {all as _ol_loadingstrategy$all} from './ol/loadingstrategy.js';\nimport {bbox as _ol_loadingstrategy$bbox} from './ol/loadingstrategy.js';\nimport {tile as _ol_loadingstrategy$tile} from './ol/loadingstrategy.js';\nimport {clamp as _ol_math$clamp} from './ol/math.js';\nimport {squaredSegmentDistance as _ol_math$squaredSegmentDistance} from './ol/math.js';\nimport {squaredDistance as _ol_math$squaredDistance} from './ol/math.js';\nimport {solveLinearSystem as _ol_math$solveLinearSystem} from './ol/math.js';\nimport {toDegrees as _ol_math$toDegrees} from './ol/math.js';\nimport {toRadians as _ol_math$toRadians} from './ol/math.js';\nimport {modulo as _ol_math$modulo} from './ol/math.js';\nimport {lerp as _ol_math$lerp} from './ol/math.js';\nimport {toFixed as _ol_math$toFixed} from './ol/math.js';\nimport {round as _ol_math$round} from './ol/math.js';\nimport {floor as _ol_math$floor} from './ol/math.js';\nimport {ceil as _ol_math$ceil} from './ol/math.js';\nimport {jsonp as _ol_net$jsonp} from './ol/net.js';\nimport {ResponseError as _ol_net$ResponseError} from './ol/net.js';\nimport {ClientError as _ol_net$ClientError} from './ol/net.js';\nimport {getJSON as _ol_net$getJSON} from './ol/net.js';\nimport {resolveUrl as _ol_net$resolveUrl} from './ol/net.js';\nimport {overrideXHR as _ol_net$overrideXHR} from './ol/net.js';\nimport {restoreXHR as _ol_net$restoreXHR} from './ol/net.js';\nimport {clear as _ol_obj$clear} from './ol/obj.js';\nimport {isEmpty as _ol_obj$isEmpty} from './ol/obj.js';\nimport {disableCoordinateWarning as _ol_proj$disableCoordinateWarning} from './ol/proj.js';\nimport {cloneTransform as _ol_proj$cloneTransform} from './ol/proj.js';\nimport {identityTransform as _ol_proj$identityTransform} from './ol/proj.js';\nimport {addProjection as _ol_proj$addProjection} from './ol/proj.js';\nimport {addProjections as _ol_proj$addProjections} from './ol/proj.js';\nimport {get as _ol_proj$get} from './ol/proj.js';\nimport {getPointResolution as _ol_proj$getPointResolution} from './ol/proj.js';\nimport {addEquivalentProjections as _ol_proj$addEquivalentProjections} from './ol/proj.js';\nimport {addEquivalentTransforms as _ol_proj$addEquivalentTransforms} from './ol/proj.js';\nimport {clearAllProjections as _ol_proj$clearAllProjections} from './ol/proj.js';\nimport {createProjection as _ol_proj$createProjection} from './ol/proj.js';\nimport {createTransformFromCoordinateTransform as _ol_proj$createTransformFromCoordinateTransform} from './ol/proj.js';\nimport {addCoordinateTransforms as _ol_proj$addCoordinateTransforms} from './ol/proj.js';\nimport {fromLonLat as _ol_proj$fromLonLat} from './ol/proj.js';\nimport {toLonLat as _ol_proj$toLonLat} from './ol/proj.js';\nimport {equivalent as _ol_proj$equivalent} from './ol/proj.js';\nimport {getTransformFromProjections as _ol_proj$getTransformFromProjections} from './ol/proj.js';\nimport {getTransform as _ol_proj$getTransform} from './ol/proj.js';\nimport {transform as _ol_proj$transform} from './ol/proj.js';\nimport {transformExtent as _ol_proj$transformExtent} from './ol/proj.js';\nimport {transformWithProjections as _ol_proj$transformWithProjections} from './ol/proj.js';\nimport {setUserProjection as _ol_proj$setUserProjection} from './ol/proj.js';\nimport {clearUserProjection as _ol_proj$clearUserProjection} from './ol/proj.js';\nimport {getUserProjection as _ol_proj$getUserProjection} from './ol/proj.js';\nimport {useGeographic as _ol_proj$useGeographic} from './ol/proj.js';\nimport {toUserCoordinate as _ol_proj$toUserCoordinate} from './ol/proj.js';\nimport {fromUserCoordinate as _ol_proj$fromUserCoordinate} from './ol/proj.js';\nimport {toUserExtent as _ol_proj$toUserExtent} from './ol/proj.js';\nimport {fromUserExtent as _ol_proj$fromUserExtent} from './ol/proj.js';\nimport {toUserResolution as _ol_proj$toUserResolution} from './ol/proj.js';\nimport {fromUserResolution as _ol_proj$fromUserResolution} from './ol/proj.js';\nimport {createSafeCoordinateTransform as _ol_proj$createSafeCoordinateTransform} from './ol/proj.js';\nimport {addCommon as _ol_proj$addCommon} from './ol/proj.js';\nimport {toContext as _ol_render$toContext} from './ol/render.js';\nimport {getVectorContext as _ol_render$getVectorContext} from './ol/render.js';\nimport {getRenderPixel as _ol_render$getRenderPixel} from './ol/render.js';\nimport {canvasPool as _ol_reproj$canvasPool} from './ol/reproj.js';\nimport {calculateSourceResolution as _ol_reproj$calculateSourceResolution} from './ol/reproj.js';\nimport {calculateSourceExtentResolution as _ol_reproj$calculateSourceExtentResolution} from './ol/reproj.js';\nimport {render as _ol_reproj$render} from './ol/reproj.js';\nimport {createSnapToResolutions as _ol_resolutionconstraint$createSnapToResolutions} from './ol/resolutionconstraint.js';\nimport {createSnapToPower as _ol_resolutionconstraint$createSnapToPower} from './ol/resolutionconstraint.js';\nimport {createMinMaxResolution as _ol_resolutionconstraint$createMinMaxResolution} from './ol/resolutionconstraint.js';\nimport {disable as _ol_rotationconstraint$disable} from './ol/rotationconstraint.js';\nimport {none as _ol_rotationconstraint$none} from './ol/rotationconstraint.js';\nimport {createSnapToN as _ol_rotationconstraint$createSnapToN} from './ol/rotationconstraint.js';\nimport {createSnapToZero as _ol_rotationconstraint$createSnapToZero} from './ol/rotationconstraint.js';\nimport {buffer as _ol_size$buffer} from './ol/size.js';\nimport {hasArea as _ol_size$hasArea} from './ol/size.js';\nimport {scale as _ol_size$scale} from './ol/size.js';\nimport {toSize as _ol_size$toSize} from './ol/size.js';\nimport {sourcesFromTileGrid as _ol_source$sourcesFromTileGrid} from './ol/source.js';\nimport {DEFAULT_RADIUS as _ol_sphere$DEFAULT_RADIUS} from './ol/sphere.js';\nimport {getDistance as _ol_sphere$getDistance} from './ol/sphere.js';\nimport {getLength as _ol_sphere$getLength} from './ol/sphere.js';\nimport {getArea as _ol_sphere$getArea} from './ol/sphere.js';\nimport {offset as _ol_sphere$offset} from './ol/sphere.js';\nimport {padNumber as _ol_string$padNumber} from './ol/string.js';\nimport {compareVersions as _ol_string$compareVersions} from './ol/string.js';\nimport {createOrUpdate as _ol_tilecoord$createOrUpdate} from './ol/tilecoord.js';\nimport {getKeyZXY as _ol_tilecoord$getKeyZXY} from './ol/tilecoord.js';\nimport {getKey as _ol_tilecoord$getKey} from './ol/tilecoord.js';\nimport {getCacheKeyForTileKey as _ol_tilecoord$getCacheKeyForTileKey} from './ol/tilecoord.js';\nimport {fromKey as _ol_tilecoord$fromKey} from './ol/tilecoord.js';\nimport {hash as _ol_tilecoord$hash} from './ol/tilecoord.js';\nimport {withinExtentAndZ as _ol_tilecoord$withinExtentAndZ} from './ol/tilecoord.js';\nimport {getForProjection as _ol_tilegrid$getForProjection} from './ol/tilegrid.js';\nimport {wrapX as _ol_tilegrid$wrapX} from './ol/tilegrid.js';\nimport {createForExtent as _ol_tilegrid$createForExtent} from './ol/tilegrid.js';\nimport {createXYZ as _ol_tilegrid$createXYZ} from './ol/tilegrid.js';\nimport {createForProjection as _ol_tilegrid$createForProjection} from './ol/tilegrid.js';\nimport {extentFromProjection as _ol_tilegrid$extentFromProjection} from './ol/tilegrid.js';\nimport {createFromTemplate as _ol_tileurlfunction$createFromTemplate} from './ol/tileurlfunction.js';\nimport {createFromTemplates as _ol_tileurlfunction$createFromTemplates} from './ol/tileurlfunction.js';\nimport {createFromTileUrlFunctions as _ol_tileurlfunction$createFromTileUrlFunctions} from './ol/tileurlfunction.js';\nimport {nullTileUrlFunction as _ol_tileurlfunction$nullTileUrlFunction} from './ol/tileurlfunction.js';\nimport {expandUrl as _ol_tileurlfunction$expandUrl} from './ol/tileurlfunction.js';\nimport {create as _ol_transform$create} from './ol/transform.js';\nimport {reset as _ol_transform$reset} from './ol/transform.js';\nimport {multiply as _ol_transform$multiply} from './ol/transform.js';\nimport {set as _ol_transform$set} from './ol/transform.js';\nimport {setFromArray as _ol_transform$setFromArray} from './ol/transform.js';\nimport {apply as _ol_transform$apply} from './ol/transform.js';\nimport {rotate as _ol_transform$rotate} from './ol/transform.js';\nimport {scale as _ol_transform$scale} from './ol/transform.js';\nimport {makeScale as _ol_transform$makeScale} from './ol/transform.js';\nimport {translate as _ol_transform$translate} from './ol/transform.js';\nimport {compose as _ol_transform$compose} from './ol/transform.js';\nimport {composeCssTransform as _ol_transform$composeCssTransform} from './ol/transform.js';\nimport {invert as _ol_transform$invert} from './ol/transform.js';\nimport {makeInverse as _ol_transform$makeInverse} from './ol/transform.js';\nimport {determinant as _ol_transform$determinant} from './ol/transform.js';\nimport {toString as _ol_transform$toString} from './ol/transform.js';\nimport {appendParams as _ol_uri$appendParams} from './ol/uri.js';\nimport {abstract as _ol_util$abstract} from './ol/util.js';\nimport {getUid as _ol_util$getUid} from './ol/util.js';\nimport {VERSION as _ol_util$VERSION} from './ol/util.js';\nimport {XML_SCHEMA_INSTANCE_URI as _ol_xml$XML_SCHEMA_INSTANCE_URI} from './ol/xml.js';\nimport {createElementNS as _ol_xml$createElementNS} from './ol/xml.js';\nimport {getAllTextContent as _ol_xml$getAllTextContent} from './ol/xml.js';\nimport {getAllTextContent_ as _ol_xml$getAllTextContent_} from './ol/xml.js';\nimport {isDocument as _ol_xml$isDocument} from './ol/xml.js';\nimport {getAttributeNS as _ol_xml$getAttributeNS} from './ol/xml.js';\nimport {parse as _ol_xml$parse} from './ol/xml.js';\nimport {makeArrayExtender as _ol_xml$makeArrayExtender} from './ol/xml.js';\nimport {makeArrayPusher as _ol_xml$makeArrayPusher} from './ol/xml.js';\nimport {makeReplacer as _ol_xml$makeReplacer} from './ol/xml.js';\nimport {makeObjectPropertyPusher as _ol_xml$makeObjectPropertyPusher} from './ol/xml.js';\nimport {makeObjectPropertySetter as _ol_xml$makeObjectPropertySetter} from './ol/xml.js';\nimport {makeChildAppender as _ol_xml$makeChildAppender} from './ol/xml.js';\nimport {makeArraySerializer as _ol_xml$makeArraySerializer} from './ol/xml.js';\nimport {makeSimpleNodeFactory as _ol_xml$makeSimpleNodeFactory} from './ol/xml.js';\nimport {OBJECT_PROPERTY_NODE_FACTORY as _ol_xml$OBJECT_PROPERTY_NODE_FACTORY} from './ol/xml.js';\nimport {makeSequence as _ol_xml$makeSequence} from './ol/xml.js';\nimport {makeStructureNS as _ol_xml$makeStructureNS} from './ol/xml.js';\nimport {parseNode as _ol_xml$parseNode} from './ol/xml.js';\nimport {pushParseAndPop as _ol_xml$pushParseAndPop} from './ol/xml.js';\nimport {serialize as _ol_xml$serialize} from './ol/xml.js';\nimport {pushSerializeAndPop as _ol_xml$pushSerializeAndPop} from './ol/xml.js';\nimport {registerXMLSerializer as _ol_xml$registerXMLSerializer} from './ol/xml.js';\nimport {getXMLSerializer as _ol_xml$getXMLSerializer} from './ol/xml.js';\nimport {registerDocument as _ol_xml$registerDocument} from './ol/xml.js';\nimport {getDocument as _ol_xml$getDocument} from './ol/xml.js';\nimport {create as _ol_vec_mat4$create} from './ol/vec/mat4.js';\nimport {fromTransform as _ol_vec_mat4$fromTransform} from './ol/vec/mat4.js';\nimport $ol$tilegrid$TileGrid from './ol/tilegrid/TileGrid.js';\nimport $ol$tilegrid$WMTS from './ol/tilegrid/WMTS.js';\nimport {createFromCapabilitiesMatrixSet as _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet} from './ol/tilegrid/WMTS.js';\nimport {DEFAULT_MAX_ZOOM as _ol_tilegrid_common$DEFAULT_MAX_ZOOM} from './ol/tilegrid/common.js';\nimport {DEFAULT_TILE_SIZE as _ol_tilegrid_common$DEFAULT_TILE_SIZE} from './ol/tilegrid/common.js';\nimport $ol$style$Circle from './ol/style/Circle.js';\nimport $ol$style$Fill from './ol/style/Fill.js';\nimport $ol$style$Icon from './ol/style/Icon.js';\nimport $ol$style$IconImage from './ol/style/IconImage.js';\nimport {get as _ol_style_IconImage$get} from './ol/style/IconImage.js';\nimport $ol$style$IconImageCache from './ol/style/IconImageCache.js';\nimport {shared as _ol_style_IconImageCache$shared} from './ol/style/IconImageCache.js';\nimport $ol$style$Image from './ol/style/Image.js';\nimport $ol$style$RegularShape from './ol/style/RegularShape.js';\nimport $ol$style$Stroke from './ol/style/Stroke.js';\nimport $ol$style$Style from './ol/style/Style.js';\nimport {toFunction as _ol_style_Style$toFunction} from './ol/style/Style.js';\nimport {createDefaultStyle as _ol_style_Style$createDefaultStyle} from './ol/style/Style.js';\nimport {createEditingStyle as _ol_style_Style$createEditingStyle} from './ol/style/Style.js';\nimport $ol$style$Text from './ol/style/Text.js';\nimport {Operators as _ol_style_expressions$Operators} from './ol/style/expressions.js';\nimport {getValueType as _ol_style_expressions$getValueType} from './ol/style/expressions.js';\nimport {isTypeUnique as _ol_style_expressions$isTypeUnique} from './ol/style/expressions.js';\nimport {numberToGlsl as _ol_style_expressions$numberToGlsl} from './ol/style/expressions.js';\nimport {arrayToGlsl as _ol_style_expressions$arrayToGlsl} from './ol/style/expressions.js';\nimport {colorToGlsl as _ol_style_expressions$colorToGlsl} from './ol/style/expressions.js';\nimport {getStringNumberEquivalent as _ol_style_expressions$getStringNumberEquivalent} from './ol/style/expressions.js';\nimport {stringToGlsl as _ol_style_expressions$stringToGlsl} from './ol/style/expressions.js';\nimport {expressionToGlsl as _ol_style_expressions$expressionToGlsl} from './ol/style/expressions.js';\nimport {uniformNameForVariable as _ol_style_expressions$uniformNameForVariable} from './ol/style/expressions.js';\nimport {PALETTE_TEXTURE_ARRAY as _ol_style_expressions$PALETTE_TEXTURE_ARRAY} from './ol/style/expressions.js';\nimport {toStyle as _ol_style_flat$toStyle} from './ol/style/flat.js';\nimport $ol$structs$LRUCache from './ol/structs/LRUCache.js';\nimport $ol$structs$LinkedList from './ol/structs/LinkedList.js';\nimport {DROP as _ol_structs_PriorityQueue$DROP} from './ol/structs/PriorityQueue.js';\nimport $ol$structs$PriorityQueue from './ol/structs/PriorityQueue.js';\nimport $ol$structs$RBush from './ol/structs/RBush.js';\nimport {quadKey as _ol_source_BingMaps$quadKey} from './ol/source/BingMaps.js';\nimport $ol$source$BingMaps from './ol/source/BingMaps.js';\nimport $ol$source$Cluster from './ol/source/Cluster.js';\nimport $ol$source$DataTile from './ol/source/DataTile.js';\nimport {ImageSourceEvent as _ol_source_Image$ImageSourceEvent} from './ol/source/Image.js';\nimport $ol$source$Image from './ol/source/Image.js';\nimport {defaultImageLoadFunction as _ol_source_Image$defaultImageLoadFunction} from './ol/source/Image.js';\nimport $ol$source$ImageArcGISRest from './ol/source/ImageArcGISRest.js';\nimport $ol$source$ImageCanvas from './ol/source/ImageCanvas.js';\nimport $ol$source$ImageStatic from './ol/source/ImageStatic.js';\nimport $ol$source$ImageWMS from './ol/source/ImageWMS.js';\nimport $ol$source$OGCMapTile from './ol/source/OGCMapTile.js';\nimport {ATTRIBUTION as _ol_source_OSM$ATTRIBUTION} from './ol/source/OSM.js';\nimport $ol$source$OSM from './ol/source/OSM.js';\nimport {newImageData as _ol_source_Raster$newImageData} from './ol/source/Raster.js';\nimport {Processor as _ol_source_Raster$Processor} from './ol/source/Raster.js';\nimport {RasterSourceEvent as _ol_source_Raster$RasterSourceEvent} from './ol/source/Raster.js';\nimport $ol$source$Raster from './ol/source/Raster.js';\nimport $ol$source$Source from './ol/source/Source.js';\nimport $ol$source$Stamen from './ol/source/Stamen.js';\nimport $ol$source$Tile from './ol/source/Tile.js';\nimport {TileSourceEvent as _ol_source_Tile$TileSourceEvent} from './ol/source/Tile.js';\nimport $ol$source$TileArcGISRest from './ol/source/TileArcGISRest.js';\nimport $ol$source$TileDebug from './ol/source/TileDebug.js';\nimport $ol$source$TileImage from './ol/source/TileImage.js';\nimport $ol$source$TileJSON from './ol/source/TileJSON.js';\nimport $ol$source$TileWMS from './ol/source/TileWMS.js';\nimport {CustomTile as _ol_source_UTFGrid$CustomTile} from './ol/source/UTFGrid.js';\nimport $ol$source$UTFGrid from './ol/source/UTFGrid.js';\nimport $ol$source$UrlTile from './ol/source/UrlTile.js';\nimport {VectorSourceEvent as _ol_source_Vector$VectorSourceEvent} from './ol/source/Vector.js';\nimport $ol$source$Vector from './ol/source/Vector.js';\nimport $ol$source$WMTS from './ol/source/WMTS.js';\nimport {optionsFromCapabilities as _ol_source_WMTS$optionsFromCapabilities} from './ol/source/WMTS.js';\nimport $ol$source$XYZ from './ol/source/XYZ.js';\nimport {DEFAULT_WMS_VERSION as _ol_source_common$DEFAULT_WMS_VERSION} from './ol/source/common.js';\nimport {getMapTileUrlTemplate as _ol_source_ogcTileUtil$getMapTileUrlTemplate} from './ol/source/ogcTileUtil.js';\nimport {getVectorTileUrlTemplate as _ol_source_ogcTileUtil$getVectorTileUrlTemplate} from './ol/source/ogcTileUtil.js';\nimport {getTileSetInfo as _ol_source_ogcTileUtil$getTileSetInfo} from './ol/source/ogcTileUtil.js';\nimport {DEFAULT_VERSION as _ol_source_wms$DEFAULT_VERSION} from './ol/source/wms.js';\nimport $ol$reproj$DataTile from './ol/reproj/DataTile.js';\nimport $ol$reproj$Image from './ol/reproj/Image.js';\nimport $ol$reproj$Tile from './ol/reproj/Tile.js';\nimport $ol$reproj$Triangulation from './ol/reproj/Triangulation.js';\nimport {ERROR_THRESHOLD as _ol_reproj_common$ERROR_THRESHOLD} from './ol/reproj/common.js';\nimport $ol$renderer$Composite from './ol/renderer/Composite.js';\nimport $ol$renderer$Layer from './ol/renderer/Layer.js';\nimport $ol$renderer$Map from './ol/renderer/Map.js';\nimport {defaultOrder as _ol_renderer_vector$defaultOrder} from './ol/renderer/vector.js';\nimport {getSquaredTolerance as _ol_renderer_vector$getSquaredTolerance} from './ol/renderer/vector.js';\nimport {getTolerance as _ol_renderer_vector$getTolerance} from './ol/renderer/vector.js';\nimport {renderFeature as _ol_renderer_vector$renderFeature} from './ol/renderer/vector.js';\nimport $ol$renderer$canvas$ImageLayer from './ol/renderer/canvas/ImageLayer.js';\nimport {canvasPool as _ol_renderer_canvas_Layer$canvasPool} from './ol/renderer/canvas/Layer.js';\nimport $ol$renderer$canvas$Layer from './ol/renderer/canvas/Layer.js';\nimport $ol$renderer$canvas$TileLayer from './ol/renderer/canvas/TileLayer.js';\nimport $ol$renderer$canvas$VectorImageLayer from './ol/renderer/canvas/VectorImageLayer.js';\nimport $ol$renderer$canvas$VectorLayer from './ol/renderer/canvas/VectorLayer.js';\nimport $ol$render$Box from './ol/render/Box.js';\nimport $ol$render$Event from './ol/render/Event.js';\nimport $ol$render$Feature from './ol/render/Feature.js';\nimport {toGeometry as _ol_render_Feature$toGeometry} from './ol/render/Feature.js';\nimport {toFeature as _ol_render_Feature$toFeature} from './ol/render/Feature.js';\nimport $ol$render$VectorContext from './ol/render/VectorContext.js';\nimport {defaultFont as _ol_render_canvas$defaultFont} from './ol/render/canvas.js';\nimport {defaultFillStyle as _ol_render_canvas$defaultFillStyle} from './ol/render/canvas.js';\nimport {defaultLineCap as _ol_render_canvas$defaultLineCap} from './ol/render/canvas.js';\nimport {defaultLineDash as _ol_render_canvas$defaultLineDash} from './ol/render/canvas.js';\nimport {defaultLineDashOffset as _ol_render_canvas$defaultLineDashOffset} from './ol/render/canvas.js';\nimport {defaultLineJoin as _ol_render_canvas$defaultLineJoin} from './ol/render/canvas.js';\nimport {defaultMiterLimit as _ol_render_canvas$defaultMiterLimit} from './ol/render/canvas.js';\nimport {defaultStrokeStyle as _ol_render_canvas$defaultStrokeStyle} from './ol/render/canvas.js';\nimport {defaultTextAlign as _ol_render_canvas$defaultTextAlign} from './ol/render/canvas.js';\nimport {defaultTextBaseline as _ol_render_canvas$defaultTextBaseline} from './ol/render/canvas.js';\nimport {defaultPadding as _ol_render_canvas$defaultPadding} from './ol/render/canvas.js';\nimport {defaultLineWidth as _ol_render_canvas$defaultLineWidth} from './ol/render/canvas.js';\nimport {checkedFonts as _ol_render_canvas$checkedFonts} from './ol/render/canvas.js';\nimport {textHeights as _ol_render_canvas$textHeights} from './ol/render/canvas.js';\nimport {registerFont as _ol_render_canvas$registerFont} from './ol/render/canvas.js';\nimport {measureTextHeight as _ol_render_canvas$measureTextHeight} from './ol/render/canvas.js';\nimport {measureTextWidth as _ol_render_canvas$measureTextWidth} from './ol/render/canvas.js';\nimport {measureAndCacheTextWidth as _ol_render_canvas$measureAndCacheTextWidth} from './ol/render/canvas.js';\nimport {getTextDimensions as _ol_render_canvas$getTextDimensions} from './ol/render/canvas.js';\nimport {rotateAtOffset as _ol_render_canvas$rotateAtOffset} from './ol/render/canvas.js';\nimport {drawImageOrLabel as _ol_render_canvas$drawImageOrLabel} from './ol/render/canvas.js';\nimport $ol$render$canvas$Builder from './ol/render/canvas/Builder.js';\nimport $ol$render$canvas$BuilderGroup from './ol/render/canvas/BuilderGroup.js';\nimport $ol$render$canvas$Executor from './ol/render/canvas/Executor.js';\nimport $ol$render$canvas$ExecutorGroup from './ol/render/canvas/ExecutorGroup.js';\nimport {getPixelIndexArray as _ol_render_canvas_ExecutorGroup$getPixelIndexArray} from './ol/render/canvas/ExecutorGroup.js';\nimport $ol$render$canvas$ImageBuilder from './ol/render/canvas/ImageBuilder.js';\nimport $ol$render$canvas$Immediate from './ol/render/canvas/Immediate.js';\nimport {fillInstruction as _ol_render_canvas_Instruction$fillInstruction} from './ol/render/canvas/Instruction.js';\nimport {strokeInstruction as _ol_render_canvas_Instruction$strokeInstruction} from './ol/render/canvas/Instruction.js';\nimport {beginPathInstruction as _ol_render_canvas_Instruction$beginPathInstruction} from './ol/render/canvas/Instruction.js';\nimport {closePathInstruction as _ol_render_canvas_Instruction$closePathInstruction} from './ol/render/canvas/Instruction.js';\nimport $ol$render$canvas$LineStringBuilder from './ol/render/canvas/LineStringBuilder.js';\nimport $ol$render$canvas$PolygonBuilder from './ol/render/canvas/PolygonBuilder.js';\nimport $ol$render$canvas$TextBuilder from './ol/render/canvas/TextBuilder.js';\nimport {HIT_DETECT_RESOLUTION as _ol_render_canvas_hitdetect$HIT_DETECT_RESOLUTION} from './ol/render/canvas/hitdetect.js';\nimport {createHitDetectionImageData as _ol_render_canvas_hitdetect$createHitDetectionImageData} from './ol/render/canvas/hitdetect.js';\nimport {hitDetect as _ol_render_canvas_hitdetect$hitDetect} from './ol/render/canvas/hitdetect.js';\nimport $ol$proj$Projection from './ol/proj/Projection.js';\nimport {fromCode as _ol_proj_Units$fromCode} from './ol/proj/Units.js';\nimport {METERS_PER_UNIT as _ol_proj_Units$METERS_PER_UNIT} from './ol/proj/Units.js';\nimport {RADIUS as _ol_proj_epsg3857$RADIUS} from './ol/proj/epsg3857.js';\nimport {HALF_SIZE as _ol_proj_epsg3857$HALF_SIZE} from './ol/proj/epsg3857.js';\nimport {EXTENT as _ol_proj_epsg3857$EXTENT} from './ol/proj/epsg3857.js';\nimport {WORLD_EXTENT as _ol_proj_epsg3857$WORLD_EXTENT} from './ol/proj/epsg3857.js';\nimport {MAX_SAFE_Y as _ol_proj_epsg3857$MAX_SAFE_Y} from './ol/proj/epsg3857.js';\nimport {PROJECTIONS as _ol_proj_epsg3857$PROJECTIONS} from './ol/proj/epsg3857.js';\nimport {fromEPSG4326 as _ol_proj_epsg3857$fromEPSG4326} from './ol/proj/epsg3857.js';\nimport {toEPSG4326 as _ol_proj_epsg3857$toEPSG4326} from './ol/proj/epsg3857.js';\nimport {RADIUS as _ol_proj_epsg4326$RADIUS} from './ol/proj/epsg4326.js';\nimport {EXTENT as _ol_proj_epsg4326$EXTENT} from './ol/proj/epsg4326.js';\nimport {METERS_PER_UNIT as _ol_proj_epsg4326$METERS_PER_UNIT} from './ol/proj/epsg4326.js';\nimport {PROJECTIONS as _ol_proj_epsg4326$PROJECTIONS} from './ol/proj/epsg4326.js';\nimport {isRegistered as _ol_proj_proj4$isRegistered} from './ol/proj/proj4.js';\nimport {unregister as _ol_proj_proj4$unregister} from './ol/proj/proj4.js';\nimport {register as _ol_proj_proj4$register} from './ol/proj/proj4.js';\nimport {setEPSGLookup as _ol_proj_proj4$setEPSGLookup} from './ol/proj/proj4.js';\nimport {getEPSGLookup as _ol_proj_proj4$getEPSGLookup} from './ol/proj/proj4.js';\nimport {fromEPSGCode as _ol_proj_proj4$fromEPSGCode} from './ol/proj/proj4.js';\nimport {clear as _ol_proj_projections$clear} from './ol/proj/projections.js';\nimport {get as _ol_proj_projections$get} from './ol/proj/projections.js';\nimport {add as _ol_proj_projections$add} from './ol/proj/projections.js';\nimport {clear as _ol_proj_transforms$clear} from './ol/proj/transforms.js';\nimport {add as _ol_proj_transforms$add} from './ol/proj/transforms.js';\nimport {remove as _ol_proj_transforms$remove} from './ol/proj/transforms.js';\nimport {get as _ol_proj_transforms$get} from './ol/proj/transforms.js';\nimport $ol$layer$Base from './ol/layer/Base.js';\nimport $ol$layer$BaseImage from './ol/layer/BaseImage.js';\nimport $ol$layer$BaseTile from './ol/layer/BaseTile.js';\nimport $ol$layer$BaseVector from './ol/layer/BaseVector.js';\nimport $ol$layer$Graticule from './ol/layer/Graticule.js';\nimport {GroupEvent as _ol_layer_Group$GroupEvent} from './ol/layer/Group.js';\nimport $ol$layer$Group from './ol/layer/Group.js';\nimport $ol$layer$Heatmap from './ol/layer/Heatmap.js';\nimport $ol$layer$Image from './ol/layer/Image.js';\nimport $ol$layer$Layer from './ol/layer/Layer.js';\nimport {inView as _ol_layer_Layer$inView} from './ol/layer/Layer.js';\nimport $ol$layer$Tile from './ol/layer/Tile.js';\nimport $ol$layer$Vector from './ol/layer/Vector.js';\nimport $ol$layer$VectorImage from './ol/layer/VectorImage.js';\nimport $ol$interaction$DblClickDragZoom from './ol/interaction/DblClickDragZoom.js';\nimport $ol$interaction$DoubleClickZoom from './ol/interaction/DoubleClickZoom.js';\nimport {DragAndDropEvent as _ol_interaction_DragAndDrop$DragAndDropEvent} from './ol/interaction/DragAndDrop.js';\nimport $ol$interaction$DragAndDrop from './ol/interaction/DragAndDrop.js';\nimport {DragBoxEvent as _ol_interaction_DragBox$DragBoxEvent} from './ol/interaction/DragBox.js';\nimport $ol$interaction$DragBox from './ol/interaction/DragBox.js';\nimport $ol$interaction$DragPan from './ol/interaction/DragPan.js';\nimport $ol$interaction$DragRotate from './ol/interaction/DragRotate.js';\nimport $ol$interaction$DragRotateAndZoom from './ol/interaction/DragRotateAndZoom.js';\nimport $ol$interaction$DragZoom from './ol/interaction/DragZoom.js';\nimport {DrawEvent as _ol_interaction_Draw$DrawEvent} from './ol/interaction/Draw.js';\nimport $ol$interaction$Draw from './ol/interaction/Draw.js';\nimport {createRegularPolygon as _ol_interaction_Draw$createRegularPolygon} from './ol/interaction/Draw.js';\nimport {createBox as _ol_interaction_Draw$createBox} from './ol/interaction/Draw.js';\nimport {ExtentEvent as _ol_interaction_Extent$ExtentEvent} from './ol/interaction/Extent.js';\nimport $ol$interaction$Extent from './ol/interaction/Extent.js';\nimport $ol$interaction$Interaction from './ol/interaction/Interaction.js';\nimport {pan as _ol_interaction_Interaction$pan} from './ol/interaction/Interaction.js';\nimport {zoomByDelta as _ol_interaction_Interaction$zoomByDelta} from './ol/interaction/Interaction.js';\nimport $ol$interaction$KeyboardPan from './ol/interaction/KeyboardPan.js';\nimport $ol$interaction$KeyboardZoom from './ol/interaction/KeyboardZoom.js';\nimport $ol$interaction$Link from './ol/interaction/Link.js';\nimport {ModifyEvent as _ol_interaction_Modify$ModifyEvent} from './ol/interaction/Modify.js';\nimport $ol$interaction$Modify from './ol/interaction/Modify.js';\nimport $ol$interaction$MouseWheelZoom from './ol/interaction/MouseWheelZoom.js';\nimport $ol$interaction$PinchRotate from './ol/interaction/PinchRotate.js';\nimport $ol$interaction$PinchZoom from './ol/interaction/PinchZoom.js';\nimport $ol$interaction$Pointer from './ol/interaction/Pointer.js';\nimport {centroid as _ol_interaction_Pointer$centroid} from './ol/interaction/Pointer.js';\nimport {SelectEvent as _ol_interaction_Select$SelectEvent} from './ol/interaction/Select.js';\nimport $ol$interaction$Select from './ol/interaction/Select.js';\nimport $ol$interaction$Snap from './ol/interaction/Snap.js';\nimport {TranslateEvent as _ol_interaction_Translate$TranslateEvent} from './ol/interaction/Translate.js';\nimport $ol$interaction$Translate from './ol/interaction/Translate.js';\nimport {defaults as _ol_interaction_defaults$defaults} from './ol/interaction/defaults.js';\nimport $ol$geom$Circle from './ol/geom/Circle.js';\nimport $ol$geom$Geometry from './ol/geom/Geometry.js';\nimport $ol$geom$GeometryCollection from './ol/geom/GeometryCollection.js';\nimport $ol$geom$LineString from './ol/geom/LineString.js';\nimport $ol$geom$LinearRing from './ol/geom/LinearRing.js';\nimport $ol$geom$MultiLineString from './ol/geom/MultiLineString.js';\nimport $ol$geom$MultiPoint from './ol/geom/MultiPoint.js';\nimport $ol$geom$MultiPolygon from './ol/geom/MultiPolygon.js';\nimport $ol$geom$Point from './ol/geom/Point.js';\nimport $ol$geom$Polygon from './ol/geom/Polygon.js';\nimport {circular as _ol_geom_Polygon$circular} from './ol/geom/Polygon.js';\nimport {fromExtent as _ol_geom_Polygon$fromExtent} from './ol/geom/Polygon.js';\nimport {fromCircle as _ol_geom_Polygon$fromCircle} from './ol/geom/Polygon.js';\nimport {makeRegular as _ol_geom_Polygon$makeRegular} from './ol/geom/Polygon.js';\nimport $ol$geom$SimpleGeometry from './ol/geom/SimpleGeometry.js';\nimport {getStrideForLayout as _ol_geom_SimpleGeometry$getStrideForLayout} from './ol/geom/SimpleGeometry.js';\nimport {transformGeom2D as _ol_geom_SimpleGeometry$transformGeom2D} from './ol/geom/SimpleGeometry.js';\nimport {linearRing as _ol_geom_flat_area$linearRing} from './ol/geom/flat/area.js';\nimport {linearRings as _ol_geom_flat_area$linearRings} from './ol/geom/flat/area.js';\nimport {linearRingss as _ol_geom_flat_area$linearRingss} from './ol/geom/flat/area.js';\nimport {linearRingss as _ol_geom_flat_center$linearRingss} from './ol/geom/flat/center.js';\nimport {maxSquaredDelta as _ol_geom_flat_closest$maxSquaredDelta} from './ol/geom/flat/closest.js';\nimport {arrayMaxSquaredDelta as _ol_geom_flat_closest$arrayMaxSquaredDelta} from './ol/geom/flat/closest.js';\nimport {multiArrayMaxSquaredDelta as _ol_geom_flat_closest$multiArrayMaxSquaredDelta} from './ol/geom/flat/closest.js';\nimport {assignClosestPoint as _ol_geom_flat_closest$assignClosestPoint} from './ol/geom/flat/closest.js';\nimport {assignClosestArrayPoint as _ol_geom_flat_closest$assignClosestArrayPoint} from './ol/geom/flat/closest.js';\nimport {assignClosestMultiArrayPoint as _ol_geom_flat_closest$assignClosestMultiArrayPoint} from './ol/geom/flat/closest.js';\nimport {linearRingContainsExtent as _ol_geom_flat_contains$linearRingContainsExtent} from './ol/geom/flat/contains.js';\nimport {linearRingContainsXY as _ol_geom_flat_contains$linearRingContainsXY} from './ol/geom/flat/contains.js';\nimport {linearRingsContainsXY as _ol_geom_flat_contains$linearRingsContainsXY} from './ol/geom/flat/contains.js';\nimport {linearRingssContainsXY as _ol_geom_flat_contains$linearRingssContainsXY} from './ol/geom/flat/contains.js';\nimport {deflateCoordinate as _ol_geom_flat_deflate$deflateCoordinate} from './ol/geom/flat/deflate.js';\nimport {deflateCoordinates as _ol_geom_flat_deflate$deflateCoordinates} from './ol/geom/flat/deflate.js';\nimport {deflateCoordinatesArray as _ol_geom_flat_deflate$deflateCoordinatesArray} from './ol/geom/flat/deflate.js';\nimport {deflateMultiCoordinatesArray as _ol_geom_flat_deflate$deflateMultiCoordinatesArray} from './ol/geom/flat/deflate.js';\nimport {flipXY as _ol_geom_flat_flip$flipXY} from './ol/geom/flat/flip.js';\nimport {greatCircleArc as _ol_geom_flat_geodesic$greatCircleArc} from './ol/geom/flat/geodesic.js';\nimport {meridian as _ol_geom_flat_geodesic$meridian} from './ol/geom/flat/geodesic.js';\nimport {parallel as _ol_geom_flat_geodesic$parallel} from './ol/geom/flat/geodesic.js';\nimport {inflateCoordinates as _ol_geom_flat_inflate$inflateCoordinates} from './ol/geom/flat/inflate.js';\nimport {inflateCoordinatesArray as _ol_geom_flat_inflate$inflateCoordinatesArray} from './ol/geom/flat/inflate.js';\nimport {inflateMultiCoordinatesArray as _ol_geom_flat_inflate$inflateMultiCoordinatesArray} from './ol/geom/flat/inflate.js';\nimport {getInteriorPointOfArray as _ol_geom_flat_interiorpoint$getInteriorPointOfArray} from './ol/geom/flat/interiorpoint.js';\nimport {getInteriorPointsOfMultiArray as _ol_geom_flat_interiorpoint$getInteriorPointsOfMultiArray} from './ol/geom/flat/interiorpoint.js';\nimport {interpolatePoint as _ol_geom_flat_interpolate$interpolatePoint} from './ol/geom/flat/interpolate.js';\nimport {lineStringCoordinateAtM as _ol_geom_flat_interpolate$lineStringCoordinateAtM} from './ol/geom/flat/interpolate.js';\nimport {lineStringsCoordinateAtM as _ol_geom_flat_interpolate$lineStringsCoordinateAtM} from './ol/geom/flat/interpolate.js';\nimport {intersectsLineString as _ol_geom_flat_intersectsextent$intersectsLineString} from './ol/geom/flat/intersectsextent.js';\nimport {intersectsLineStringArray as _ol_geom_flat_intersectsextent$intersectsLineStringArray} from './ol/geom/flat/intersectsextent.js';\nimport {intersectsLinearRing as _ol_geom_flat_intersectsextent$intersectsLinearRing} from './ol/geom/flat/intersectsextent.js';\nimport {intersectsLinearRingArray as _ol_geom_flat_intersectsextent$intersectsLinearRingArray} from './ol/geom/flat/intersectsextent.js';\nimport {intersectsLinearRingMultiArray as _ol_geom_flat_intersectsextent$intersectsLinearRingMultiArray} from './ol/geom/flat/intersectsextent.js';\nimport {lineStringLength as _ol_geom_flat_length$lineStringLength} from './ol/geom/flat/length.js';\nimport {linearRingLength as _ol_geom_flat_length$linearRingLength} from './ol/geom/flat/length.js';\nimport {linearRingIsClockwise as _ol_geom_flat_orient$linearRingIsClockwise} from './ol/geom/flat/orient.js';\nimport {linearRingsAreOriented as _ol_geom_flat_orient$linearRingsAreOriented} from './ol/geom/flat/orient.js';\nimport {linearRingssAreOriented as _ol_geom_flat_orient$linearRingssAreOriented} from './ol/geom/flat/orient.js';\nimport {orientLinearRings as _ol_geom_flat_orient$orientLinearRings} from './ol/geom/flat/orient.js';\nimport {orientLinearRingsArray as _ol_geom_flat_orient$orientLinearRingsArray} from './ol/geom/flat/orient.js';\nimport {inflateEnds as _ol_geom_flat_orient$inflateEnds} from './ol/geom/flat/orient.js';\nimport {coordinates as _ol_geom_flat_reverse$coordinates} from './ol/geom/flat/reverse.js';\nimport {forEach as _ol_geom_flat_segments$forEach} from './ol/geom/flat/segments.js';\nimport {simplifyLineString as _ol_geom_flat_simplify$simplifyLineString} from './ol/geom/flat/simplify.js';\nimport {douglasPeucker as _ol_geom_flat_simplify$douglasPeucker} from './ol/geom/flat/simplify.js';\nimport {douglasPeuckerArray as _ol_geom_flat_simplify$douglasPeuckerArray} from './ol/geom/flat/simplify.js';\nimport {douglasPeuckerMultiArray as _ol_geom_flat_simplify$douglasPeuckerMultiArray} from './ol/geom/flat/simplify.js';\nimport {radialDistance as _ol_geom_flat_simplify$radialDistance} from './ol/geom/flat/simplify.js';\nimport {snap as _ol_geom_flat_simplify$snap} from './ol/geom/flat/simplify.js';\nimport {quantize as _ol_geom_flat_simplify$quantize} from './ol/geom/flat/simplify.js';\nimport {quantizeArray as _ol_geom_flat_simplify$quantizeArray} from './ol/geom/flat/simplify.js';\nimport {quantizeMultiArray as _ol_geom_flat_simplify$quantizeMultiArray} from './ol/geom/flat/simplify.js';\nimport {matchingChunk as _ol_geom_flat_straightchunk$matchingChunk} from './ol/geom/flat/straightchunk.js';\nimport {drawTextOnPath as _ol_geom_flat_textpath$drawTextOnPath} from './ol/geom/flat/textpath.js';\nimport {lineStringIsClosed as _ol_geom_flat_topology$lineStringIsClosed} from './ol/geom/flat/topology.js';\nimport {transform2D as _ol_geom_flat_transform$transform2D} from './ol/geom/flat/transform.js';\nimport {rotate as _ol_geom_flat_transform$rotate} from './ol/geom/flat/transform.js';\nimport {scale as _ol_geom_flat_transform$scale} from './ol/geom/flat/transform.js';\nimport {translate as _ol_geom_flat_transform$translate} from './ol/geom/flat/transform.js';\nimport $ol$format$EsriJSON from './ol/format/EsriJSON.js';\nimport $ol$format$Feature from './ol/format/Feature.js';\nimport {transformGeometryWithOptions as _ol_format_Feature$transformGeometryWithOptions} from './ol/format/Feature.js';\nimport {transformExtentWithOptions as _ol_format_Feature$transformExtentWithOptions} from './ol/format/Feature.js';\nimport $ol$format$GPX from './ol/format/GPX.js';\nimport $ol$format$GeoJSON from './ol/format/GeoJSON.js';\nimport $ol$format$IGC from './ol/format/IGC.js';\nimport $ol$format$JSONFeature from './ol/format/JSONFeature.js';\nimport {getDefaultFillStyle as _ol_format_KML$getDefaultFillStyle} from './ol/format/KML.js';\nimport {getDefaultImageStyle as _ol_format_KML$getDefaultImageStyle} from './ol/format/KML.js';\nimport {getDefaultStrokeStyle as _ol_format_KML$getDefaultStrokeStyle} from './ol/format/KML.js';\nimport {getDefaultTextStyle as _ol_format_KML$getDefaultTextStyle} from './ol/format/KML.js';\nimport {getDefaultStyle as _ol_format_KML$getDefaultStyle} from './ol/format/KML.js';\nimport {getDefaultStyleArray as _ol_format_KML$getDefaultStyleArray} from './ol/format/KML.js';\nimport $ol$format$KML from './ol/format/KML.js';\nimport {readFlatCoordinates as _ol_format_KML$readFlatCoordinates} from './ol/format/KML.js';\nimport $ol$format$MVT from './ol/format/MVT.js';\nimport $ol$format$OSMXML from './ol/format/OSMXML.js';\nimport $ol$format$OWS from './ol/format/OWS.js';\nimport $ol$format$Polyline from './ol/format/Polyline.js';\nimport {encodeDeltas as _ol_format_Polyline$encodeDeltas} from './ol/format/Polyline.js';\nimport {decodeDeltas as _ol_format_Polyline$decodeDeltas} from './ol/format/Polyline.js';\nimport {encodeFloats as _ol_format_Polyline$encodeFloats} from './ol/format/Polyline.js';\nimport {decodeFloats as _ol_format_Polyline$decodeFloats} from './ol/format/Polyline.js';\nimport {encodeSignedIntegers as _ol_format_Polyline$encodeSignedIntegers} from './ol/format/Polyline.js';\nimport {decodeSignedIntegers as _ol_format_Polyline$decodeSignedIntegers} from './ol/format/Polyline.js';\nimport {encodeUnsignedIntegers as _ol_format_Polyline$encodeUnsignedIntegers} from './ol/format/Polyline.js';\nimport {decodeUnsignedIntegers as _ol_format_Polyline$decodeUnsignedIntegers} from './ol/format/Polyline.js';\nimport {encodeUnsignedInteger as _ol_format_Polyline$encodeUnsignedInteger} from './ol/format/Polyline.js';\nimport $ol$format$TextFeature from './ol/format/TextFeature.js';\nimport $ol$format$TopoJSON from './ol/format/TopoJSON.js';\nimport $ol$format$WFS from './ol/format/WFS.js';\nimport {writeFilter as _ol_format_WFS$writeFilter} from './ol/format/WFS.js';\nimport $ol$format$WMSGetFeatureInfo from './ol/format/WMSGetFeatureInfo.js';\nimport {readHref as _ol_format_xlink$readHref} from './ol/format/xlink.js';\nimport {readBoolean as _ol_format_xsd$readBoolean} from './ol/format/xsd.js';\nimport {readBooleanString as _ol_format_xsd$readBooleanString} from './ol/format/xsd.js';\nimport {readDateTime as _ol_format_xsd$readDateTime} from './ol/format/xsd.js';\nimport {readDecimal as _ol_format_xsd$readDecimal} from './ol/format/xsd.js';\nimport {readDecimalString as _ol_format_xsd$readDecimalString} from './ol/format/xsd.js';\nimport {readPositiveInteger as _ol_format_xsd$readPositiveInteger} from './ol/format/xsd.js';\nimport {readNonNegativeIntegerString as _ol_format_xsd$readNonNegativeIntegerString} from './ol/format/xsd.js';\nimport {readString as _ol_format_xsd$readString} from './ol/format/xsd.js';\nimport {writeBooleanTextNode as _ol_format_xsd$writeBooleanTextNode} from './ol/format/xsd.js';\nimport {writeCDATASection as _ol_format_xsd$writeCDATASection} from './ol/format/xsd.js';\nimport {writeDateTimeTextNode as _ol_format_xsd$writeDateTimeTextNode} from './ol/format/xsd.js';\nimport {writeDecimalTextNode as _ol_format_xsd$writeDecimalTextNode} from './ol/format/xsd.js';\nimport {writeNonNegativeIntegerTextNode as _ol_format_xsd$writeNonNegativeIntegerTextNode} from './ol/format/xsd.js';\nimport {writeStringTextNode as _ol_format_xsd$writeStringTextNode} from './ol/format/xsd.js';\nimport $ol$events$Event from './ol/events/Event.js';\nimport {stopPropagation as _ol_events_Event$stopPropagation} from './ol/events/Event.js';\nimport {preventDefault as _ol_events_Event$preventDefault} from './ol/events/Event.js';\nimport $ol$events$Target from './ol/events/Target.js';\nimport {all as _ol_events_condition$all} from './ol/events/condition.js';\nimport {altKeyOnly as _ol_events_condition$altKeyOnly} from './ol/events/condition.js';\nimport {altShiftKeysOnly as _ol_events_condition$altShiftKeysOnly} from './ol/events/condition.js';\nimport {focus as _ol_events_condition$focus} from './ol/events/condition.js';\nimport {focusWithTabindex as _ol_events_condition$focusWithTabindex} from './ol/events/condition.js';\nimport {always as _ol_events_condition$always} from './ol/events/condition.js';\nimport {click as _ol_events_condition$click} from './ol/events/condition.js';\nimport {mouseActionButton as _ol_events_condition$mouseActionButton} from './ol/events/condition.js';\nimport {never as _ol_events_condition$never} from './ol/events/condition.js';\nimport {pointerMove as _ol_events_condition$pointerMove} from './ol/events/condition.js';\nimport {singleClick as _ol_events_condition$singleClick} from './ol/events/condition.js';\nimport {doubleClick as _ol_events_condition$doubleClick} from './ol/events/condition.js';\nimport {noModifierKeys as _ol_events_condition$noModifierKeys} from './ol/events/condition.js';\nimport {platformModifierKeyOnly as _ol_events_condition$platformModifierKeyOnly} from './ol/events/condition.js';\nimport {shiftKeyOnly as _ol_events_condition$shiftKeyOnly} from './ol/events/condition.js';\nimport {targetNotEditable as _ol_events_condition$targetNotEditable} from './ol/events/condition.js';\nimport {mouseOnly as _ol_events_condition$mouseOnly} from './ol/events/condition.js';\nimport {touchOnly as _ol_events_condition$touchOnly} from './ol/events/condition.js';\nimport {penOnly as _ol_events_condition$penOnly} from './ol/events/condition.js';\nimport {primaryAction as _ol_events_condition$primaryAction} from './ol/events/condition.js';\nimport $ol$control$Attribution from './ol/control/Attribution.js';\nimport $ol$control$Control from './ol/control/Control.js';\nimport $ol$control$FullScreen from './ol/control/FullScreen.js';\nimport $ol$control$MousePosition from './ol/control/MousePosition.js';\nimport $ol$control$OverviewMap from './ol/control/OverviewMap.js';\nimport $ol$control$Rotate from './ol/control/Rotate.js';\nimport $ol$control$ScaleLine from './ol/control/ScaleLine.js';\nimport $ol$control$Zoom from './ol/control/Zoom.js';\nimport $ol$control$ZoomSlider from './ol/control/ZoomSlider.js';\nimport $ol$control$ZoomToExtent from './ol/control/ZoomToExtent.js';\nimport {defaults as _ol_control_defaults$defaults} from './ol/control/defaults.js';\n\nvar ol = {};\nol.AssertionError = $ol$AssertionError;\nol.Collection = $ol$Collection;\nol.Collection.CollectionEvent = _ol_Collection$CollectionEvent;\nol.DataTile = $ol$DataTile;\nol.DataTile.asArrayLike = _ol_DataTile$asArrayLike;\nol.DataTile.asImageLike = _ol_DataTile$asImageLike;\nol.DataTile.toArray = _ol_DataTile$toArray;\nol.Disposable = $ol$Disposable;\nol.Feature = $ol$Feature;\nol.Feature.createStyleFunction = _ol_Feature$createStyleFunction;\nol.Geolocation = $ol$Geolocation;\nol.Geolocation.GeolocationError = _ol_Geolocation$GeolocationError;\nol.Image = $ol$Image;\nol.Image.listenImage = _ol_Image$listenImage;\nol.ImageBase = $ol$ImageBase;\nol.ImageCanvas = $ol$ImageCanvas;\nol.ImageTile = $ol$ImageTile;\nol.Kinetic = $ol$Kinetic;\nol.Map = $ol$Map;\nol.MapBrowserEvent = $ol$MapBrowserEvent;\nol.MapBrowserEventHandler = $ol$MapBrowserEventHandler;\nol.MapEvent = $ol$MapEvent;\nol.Object = $ol$Object;\nol.Object.ObjectEvent = _ol_Object$ObjectEvent;\nol.Observable = $ol$Observable;\nol.Observable.unByKey = _ol_Observable$unByKey;\nol.Overlay = $ol$Overlay;\nol.Tile = $ol$Tile;\nol.TileCache = $ol$TileCache;\nol.TileQueue = $ol$TileQueue;\nol.TileQueue.getTilePriority = _ol_TileQueue$getTilePriority;\nol.TileRange = $ol$TileRange;\nol.TileRange.createOrUpdate = _ol_TileRange$createOrUpdate;\nol.VectorRenderTile = $ol$VectorRenderTile;\nol.View = $ol$View;\nol.View.createCenterConstraint = _ol_View$createCenterConstraint;\nol.View.createResolutionConstraint = _ol_View$createResolutionConstraint;\nol.View.createRotationConstraint = _ol_View$createRotationConstraint;\nol.View.isNoopAnimation = _ol_View$isNoopAnimation;\nol.array = {};\nol.array.ascending = _ol_array$ascending;\nol.array.binarySearch = _ol_array$binarySearch;\nol.array.equals = _ol_array$equals;\nol.array.extend = _ol_array$extend;\nol.array.isSorted = _ol_array$isSorted;\nol.array.linearFindNearest = _ol_array$linearFindNearest;\nol.array.remove = _ol_array$remove;\nol.array.reverseSubArray = _ol_array$reverseSubArray;\nol.array.stableSort = _ol_array$stableSort;\nol.asserts = {};\nol.asserts.assert = _ol_asserts$assert;\nol.centerconstraint = {};\nol.centerconstraint.createExtent = _ol_centerconstraint$createExtent;\nol.centerconstraint.none = _ol_centerconstraint$none;\nol.color = {};\nol.color.asArray = _ol_color$asArray;\nol.color.asString = _ol_color$asString;\nol.color.fromString = _ol_color$fromString;\nol.color.isStringColor = _ol_color$isStringColor;\nol.color.normalize = _ol_color$normalize;\nol.color.toString = _ol_color$toString;\nol.colorlike = {};\nol.colorlike.asColorLike = _ol_colorlike$asColorLike;\nol.console = {};\nol.console.error = _ol_console$error;\nol.console.log = _ol_console$log;\nol.console.setLevel = _ol_console$setLevel;\nol.console.warn = _ol_console$warn;\nol.control = {};\nol.control.Attribution = $ol$control$Attribution;\nol.control.Control = $ol$control$Control;\nol.control.FullScreen = $ol$control$FullScreen;\nol.control.MousePosition = $ol$control$MousePosition;\nol.control.OverviewMap = $ol$control$OverviewMap;\nol.control.Rotate = $ol$control$Rotate;\nol.control.ScaleLine = $ol$control$ScaleLine;\nol.control.Zoom = $ol$control$Zoom;\nol.control.ZoomSlider = $ol$control$ZoomSlider;\nol.control.ZoomToExtent = $ol$control$ZoomToExtent;\nol.control.defaults = {};\nol.control.defaults.defaults = _ol_control_defaults$defaults;\nol.coordinate = {};\nol.coordinate.add = _ol_coordinate$add;\nol.coordinate.closestOnCircle = _ol_coordinate$closestOnCircle;\nol.coordinate.closestOnSegment = _ol_coordinate$closestOnSegment;\nol.coordinate.createStringXY = _ol_coordinate$createStringXY;\nol.coordinate.degreesToStringHDMS = _ol_coordinate$degreesToStringHDMS;\nol.coordinate.distance = _ol_coordinate$distance;\nol.coordinate.equals = _ol_coordinate$equals;\nol.coordinate.format = _ol_coordinate$format;\nol.coordinate.getWorldsAway = _ol_coordinate$getWorldsAway;\nol.coordinate.rotate = _ol_coordinate$rotate;\nol.coordinate.scale = _ol_coordinate$scale;\nol.coordinate.squaredDistance = _ol_coordinate$squaredDistance;\nol.coordinate.squaredDistanceToSegment = _ol_coordinate$squaredDistanceToSegment;\nol.coordinate.toStringHDMS = _ol_coordinate$toStringHDMS;\nol.coordinate.toStringXY = _ol_coordinate$toStringXY;\nol.coordinate.wrapX = _ol_coordinate$wrapX;\nol.css = {};\nol.css.CLASS_COLLAPSED = _ol_css$CLASS_COLLAPSED;\nol.css.CLASS_CONTROL = _ol_css$CLASS_CONTROL;\nol.css.CLASS_HIDDEN = _ol_css$CLASS_HIDDEN;\nol.css.CLASS_SELECTABLE = _ol_css$CLASS_SELECTABLE;\nol.css.CLASS_UNSELECTABLE = _ol_css$CLASS_UNSELECTABLE;\nol.css.CLASS_UNSUPPORTED = _ol_css$CLASS_UNSUPPORTED;\nol.css.getFontParameters = _ol_css$getFontParameters;\nol.dom = {};\nol.dom.createCanvasContext2D = _ol_dom$createCanvasContext2D;\nol.dom.outerHeight = _ol_dom$outerHeight;\nol.dom.outerWidth = _ol_dom$outerWidth;\nol.dom.releaseCanvas = _ol_dom$releaseCanvas;\nol.dom.removeChildren = _ol_dom$removeChildren;\nol.dom.removeNode = _ol_dom$removeNode;\nol.dom.replaceChildren = _ol_dom$replaceChildren;\nol.dom.replaceNode = _ol_dom$replaceNode;\nol.easing = {};\nol.easing.easeIn = _ol_easing$easeIn;\nol.easing.easeOut = _ol_easing$easeOut;\nol.easing.inAndOut = _ol_easing$inAndOut;\nol.easing.linear = _ol_easing$linear;\nol.easing.upAndDown = _ol_easing$upAndDown;\nol.events = {};\nol.events.Event = $ol$events$Event;\nol.events.Event.preventDefault = _ol_events_Event$preventDefault;\nol.events.Event.stopPropagation = _ol_events_Event$stopPropagation;\nol.events.Target = $ol$events$Target;\nol.events.condition = {};\nol.events.condition.all = _ol_events_condition$all;\nol.events.condition.altKeyOnly = _ol_events_condition$altKeyOnly;\nol.events.condition.altShiftKeysOnly = _ol_events_condition$altShiftKeysOnly;\nol.events.condition.always = _ol_events_condition$always;\nol.events.condition.click = _ol_events_condition$click;\nol.events.condition.doubleClick = _ol_events_condition$doubleClick;\nol.events.condition.focus = _ol_events_condition$focus;\nol.events.condition.focusWithTabindex = _ol_events_condition$focusWithTabindex;\nol.events.condition.mouseActionButton = _ol_events_condition$mouseActionButton;\nol.events.condition.mouseOnly = _ol_events_condition$mouseOnly;\nol.events.condition.never = _ol_events_condition$never;\nol.events.condition.noModifierKeys = _ol_events_condition$noModifierKeys;\nol.events.condition.penOnly = _ol_events_condition$penOnly;\nol.events.condition.platformModifierKeyOnly = _ol_events_condition$platformModifierKeyOnly;\nol.events.condition.pointerMove = _ol_events_condition$pointerMove;\nol.events.condition.primaryAction = _ol_events_condition$primaryAction;\nol.events.condition.shiftKeyOnly = _ol_events_condition$shiftKeyOnly;\nol.events.condition.singleClick = _ol_events_condition$singleClick;\nol.events.condition.targetNotEditable = _ol_events_condition$targetNotEditable;\nol.events.condition.touchOnly = _ol_events_condition$touchOnly;\nol.events.listen = _ol_events$listen;\nol.events.listenOnce = _ol_events$listenOnce;\nol.events.unlistenByKey = _ol_events$unlistenByKey;\nol.extent = {};\nol.extent.applyTransform = _ol_extent$applyTransform;\nol.extent.approximatelyEquals = _ol_extent$approximatelyEquals;\nol.extent.boundingExtent = _ol_extent$boundingExtent;\nol.extent.buffer = _ol_extent$buffer;\nol.extent.clone = _ol_extent$clone;\nol.extent.closestSquaredDistanceXY = _ol_extent$closestSquaredDistanceXY;\nol.extent.containsCoordinate = _ol_extent$containsCoordinate;\nol.extent.containsExtent = _ol_extent$containsExtent;\nol.extent.containsXY = _ol_extent$containsXY;\nol.extent.coordinateRelationship = _ol_extent$coordinateRelationship;\nol.extent.createEmpty = _ol_extent$createEmpty;\nol.extent.createOrUpdate = _ol_extent$createOrUpdate;\nol.extent.createOrUpdateEmpty = _ol_extent$createOrUpdateEmpty;\nol.extent.createOrUpdateFromCoordinate = _ol_extent$createOrUpdateFromCoordinate;\nol.extent.createOrUpdateFromCoordinates = _ol_extent$createOrUpdateFromCoordinates;\nol.extent.createOrUpdateFromFlatCoordinates = _ol_extent$createOrUpdateFromFlatCoordinates;\nol.extent.createOrUpdateFromRings = _ol_extent$createOrUpdateFromRings;\nol.extent.equals = _ol_extent$equals;\nol.extent.extend = _ol_extent$extend;\nol.extent.extendCoordinate = _ol_extent$extendCoordinate;\nol.extent.extendCoordinates = _ol_extent$extendCoordinates;\nol.extent.extendFlatCoordinates = _ol_extent$extendFlatCoordinates;\nol.extent.extendRings = _ol_extent$extendRings;\nol.extent.extendXY = _ol_extent$extendXY;\nol.extent.forEachCorner = _ol_extent$forEachCorner;\nol.extent.getArea = _ol_extent$getArea;\nol.extent.getBottomLeft = _ol_extent$getBottomLeft;\nol.extent.getBottomRight = _ol_extent$getBottomRight;\nol.extent.getCenter = _ol_extent$getCenter;\nol.extent.getCorner = _ol_extent$getCorner;\nol.extent.getEnlargedArea = _ol_extent$getEnlargedArea;\nol.extent.getForViewAndSize = _ol_extent$getForViewAndSize;\nol.extent.getHeight = _ol_extent$getHeight;\nol.extent.getIntersection = _ol_extent$getIntersection;\nol.extent.getIntersectionArea = _ol_extent$getIntersectionArea;\nol.extent.getMargin = _ol_extent$getMargin;\nol.extent.getRotatedViewport = _ol_extent$getRotatedViewport;\nol.extent.getSize = _ol_extent$getSize;\nol.extent.getTopLeft = _ol_extent$getTopLeft;\nol.extent.getTopRight = _ol_extent$getTopRight;\nol.extent.getWidth = _ol_extent$getWidth;\nol.extent.intersects = _ol_extent$intersects;\nol.extent.intersectsSegment = _ol_extent$intersectsSegment;\nol.extent.isEmpty = _ol_extent$isEmpty;\nol.extent.returnOrUpdate = _ol_extent$returnOrUpdate;\nol.extent.scaleFromCenter = _ol_extent$scaleFromCenter;\nol.extent.wrapAndSliceX = _ol_extent$wrapAndSliceX;\nol.extent.wrapX = _ol_extent$wrapX;\nol.featureloader = {};\nol.featureloader.loadFeaturesXhr = _ol_featureloader$loadFeaturesXhr;\nol.featureloader.setWithCredentials = _ol_featureloader$setWithCredentials;\nol.featureloader.xhr = _ol_featureloader$xhr;\nol.format = {};\nol.format.EsriJSON = $ol$format$EsriJSON;\nol.format.Feature = $ol$format$Feature;\nol.format.Feature.transformExtentWithOptions = _ol_format_Feature$transformExtentWithOptions;\nol.format.Feature.transformGeometryWithOptions = _ol_format_Feature$transformGeometryWithOptions;\nol.format.GPX = $ol$format$GPX;\nol.format.GeoJSON = $ol$format$GeoJSON;\nol.format.IGC = $ol$format$IGC;\nol.format.JSONFeature = $ol$format$JSONFeature;\nol.format.KML = $ol$format$KML;\nol.format.KML.getDefaultFillStyle = _ol_format_KML$getDefaultFillStyle;\nol.format.KML.getDefaultImageStyle = _ol_format_KML$getDefaultImageStyle;\nol.format.KML.getDefaultStrokeStyle = _ol_format_KML$getDefaultStrokeStyle;\nol.format.KML.getDefaultStyle = _ol_format_KML$getDefaultStyle;\nol.format.KML.getDefaultStyleArray = _ol_format_KML$getDefaultStyleArray;\nol.format.KML.getDefaultTextStyle = _ol_format_KML$getDefaultTextStyle;\nol.format.KML.readFlatCoordinates = _ol_format_KML$readFlatCoordinates;\nol.format.MVT = $ol$format$MVT;\nol.format.OSMXML = $ol$format$OSMXML;\nol.format.OWS = $ol$format$OWS;\nol.format.Polyline = $ol$format$Polyline;\nol.format.Polyline.decodeDeltas = _ol_format_Polyline$decodeDeltas;\nol.format.Polyline.decodeFloats = _ol_format_Polyline$decodeFloats;\nol.format.Polyline.decodeSignedIntegers = _ol_format_Polyline$decodeSignedIntegers;\nol.format.Polyline.decodeUnsignedIntegers = _ol_format_Polyline$decodeUnsignedIntegers;\nol.format.Polyline.encodeDeltas = _ol_format_Polyline$encodeDeltas;\nol.format.Polyline.encodeFloats = _ol_format_Polyline$encodeFloats;\nol.format.Polyline.encodeSignedIntegers = _ol_format_Polyline$encodeSignedIntegers;\nol.format.Polyline.encodeUnsignedInteger = _ol_format_Polyline$encodeUnsignedInteger;\nol.format.Polyline.encodeUnsignedIntegers = _ol_format_Polyline$encodeUnsignedIntegers;\nol.format.TextFeature = $ol$format$TextFeature;\nol.format.TopoJSON = $ol$format$TopoJSON;\nol.format.WFS = $ol$format$WFS;\nol.format.WFS.writeFilter = _ol_format_WFS$writeFilter;\nol.format.WMSGetFeatureInfo = $ol$format$WMSGetFeatureInfo;\nol.format.xlink = {};\nol.format.xlink.readHref = _ol_format_xlink$readHref;\nol.format.xsd = {};\nol.format.xsd.readBoolean = _ol_format_xsd$readBoolean;\nol.format.xsd.readBooleanString = _ol_format_xsd$readBooleanString;\nol.format.xsd.readDateTime = _ol_format_xsd$readDateTime;\nol.format.xsd.readDecimal = _ol_format_xsd$readDecimal;\nol.format.xsd.readDecimalString = _ol_format_xsd$readDecimalString;\nol.format.xsd.readNonNegativeIntegerString = _ol_format_xsd$readNonNegativeIntegerString;\nol.format.xsd.readPositiveInteger = _ol_format_xsd$readPositiveInteger;\nol.format.xsd.readString = _ol_format_xsd$readString;\nol.format.xsd.writeBooleanTextNode = _ol_format_xsd$writeBooleanTextNode;\nol.format.xsd.writeCDATASection = _ol_format_xsd$writeCDATASection;\nol.format.xsd.writeDateTimeTextNode = _ol_format_xsd$writeDateTimeTextNode;\nol.format.xsd.writeDecimalTextNode = _ol_format_xsd$writeDecimalTextNode;\nol.format.xsd.writeNonNegativeIntegerTextNode = _ol_format_xsd$writeNonNegativeIntegerTextNode;\nol.format.xsd.writeStringTextNode = _ol_format_xsd$writeStringTextNode;\nol.functions = {};\nol.functions.FALSE = _ol_functions$FALSE;\nol.functions.TRUE = _ol_functions$TRUE;\nol.functions.VOID = _ol_functions$VOID;\nol.functions.memoizeOne = _ol_functions$memoizeOne;\nol.functions.toPromise = _ol_functions$toPromise;\nol.geom = {};\nol.geom.Circle = $ol$geom$Circle;\nol.geom.Geometry = $ol$geom$Geometry;\nol.geom.GeometryCollection = $ol$geom$GeometryCollection;\nol.geom.LineString = $ol$geom$LineString;\nol.geom.LinearRing = $ol$geom$LinearRing;\nol.geom.MultiLineString = $ol$geom$MultiLineString;\nol.geom.MultiPoint = $ol$geom$MultiPoint;\nol.geom.MultiPolygon = $ol$geom$MultiPolygon;\nol.geom.Point = $ol$geom$Point;\nol.geom.Polygon = $ol$geom$Polygon;\nol.geom.Polygon.circular = _ol_geom_Polygon$circular;\nol.geom.Polygon.fromCircle = _ol_geom_Polygon$fromCircle;\nol.geom.Polygon.fromExtent = _ol_geom_Polygon$fromExtent;\nol.geom.Polygon.makeRegular = _ol_geom_Polygon$makeRegular;\nol.geom.SimpleGeometry = $ol$geom$SimpleGeometry;\nol.geom.SimpleGeometry.getStrideForLayout = _ol_geom_SimpleGeometry$getStrideForLayout;\nol.geom.SimpleGeometry.transformGeom2D = _ol_geom_SimpleGeometry$transformGeom2D;\nol.geom.flat = {};\nol.geom.flat.area = {};\nol.geom.flat.area.linearRing = _ol_geom_flat_area$linearRing;\nol.geom.flat.area.linearRings = _ol_geom_flat_area$linearRings;\nol.geom.flat.area.linearRingss = _ol_geom_flat_area$linearRingss;\nol.geom.flat.center = {};\nol.geom.flat.center.linearRingss = _ol_geom_flat_center$linearRingss;\nol.geom.flat.closest = {};\nol.geom.flat.closest.arrayMaxSquaredDelta = _ol_geom_flat_closest$arrayMaxSquaredDelta;\nol.geom.flat.closest.assignClosestArrayPoint = _ol_geom_flat_closest$assignClosestArrayPoint;\nol.geom.flat.closest.assignClosestMultiArrayPoint = _ol_geom_flat_closest$assignClosestMultiArrayPoint;\nol.geom.flat.closest.assignClosestPoint = _ol_geom_flat_closest$assignClosestPoint;\nol.geom.flat.closest.maxSquaredDelta = _ol_geom_flat_closest$maxSquaredDelta;\nol.geom.flat.closest.multiArrayMaxSquaredDelta = _ol_geom_flat_closest$multiArrayMaxSquaredDelta;\nol.geom.flat.contains = {};\nol.geom.flat.contains.linearRingContainsExtent = _ol_geom_flat_contains$linearRingContainsExtent;\nol.geom.flat.contains.linearRingContainsXY = _ol_geom_flat_contains$linearRingContainsXY;\nol.geom.flat.contains.linearRingsContainsXY = _ol_geom_flat_contains$linearRingsContainsXY;\nol.geom.flat.contains.linearRingssContainsXY = _ol_geom_flat_contains$linearRingssContainsXY;\nol.geom.flat.deflate = {};\nol.geom.flat.deflate.deflateCoordinate = _ol_geom_flat_deflate$deflateCoordinate;\nol.geom.flat.deflate.deflateCoordinates = _ol_geom_flat_deflate$deflateCoordinates;\nol.geom.flat.deflate.deflateCoordinatesArray = _ol_geom_flat_deflate$deflateCoordinatesArray;\nol.geom.flat.deflate.deflateMultiCoordinatesArray = _ol_geom_flat_deflate$deflateMultiCoordinatesArray;\nol.geom.flat.flip = {};\nol.geom.flat.flip.flipXY = _ol_geom_flat_flip$flipXY;\nol.geom.flat.geodesic = {};\nol.geom.flat.geodesic.greatCircleArc = _ol_geom_flat_geodesic$greatCircleArc;\nol.geom.flat.geodesic.meridian = _ol_geom_flat_geodesic$meridian;\nol.geom.flat.geodesic.parallel = _ol_geom_flat_geodesic$parallel;\nol.geom.flat.inflate = {};\nol.geom.flat.inflate.inflateCoordinates = _ol_geom_flat_inflate$inflateCoordinates;\nol.geom.flat.inflate.inflateCoordinatesArray = _ol_geom_flat_inflate$inflateCoordinatesArray;\nol.geom.flat.inflate.inflateMultiCoordinatesArray = _ol_geom_flat_inflate$inflateMultiCoordinatesArray;\nol.geom.flat.interiorpoint = {};\nol.geom.flat.interiorpoint.getInteriorPointOfArray = _ol_geom_flat_interiorpoint$getInteriorPointOfArray;\nol.geom.flat.interiorpoint.getInteriorPointsOfMultiArray = _ol_geom_flat_interiorpoint$getInteriorPointsOfMultiArray;\nol.geom.flat.interpolate = {};\nol.geom.flat.interpolate.interpolatePoint = _ol_geom_flat_interpolate$interpolatePoint;\nol.geom.flat.interpolate.lineStringCoordinateAtM = _ol_geom_flat_interpolate$lineStringCoordinateAtM;\nol.geom.flat.interpolate.lineStringsCoordinateAtM = _ol_geom_flat_interpolate$lineStringsCoordinateAtM;\nol.geom.flat.intersectsextent = {};\nol.geom.flat.intersectsextent.intersectsLineString = _ol_geom_flat_intersectsextent$intersectsLineString;\nol.geom.flat.intersectsextent.intersectsLineStringArray = _ol_geom_flat_intersectsextent$intersectsLineStringArray;\nol.geom.flat.intersectsextent.intersectsLinearRing = _ol_geom_flat_intersectsextent$intersectsLinearRing;\nol.geom.flat.intersectsextent.intersectsLinearRingArray = _ol_geom_flat_intersectsextent$intersectsLinearRingArray;\nol.geom.flat.intersectsextent.intersectsLinearRingMultiArray = _ol_geom_flat_intersectsextent$intersectsLinearRingMultiArray;\nol.geom.flat.length = {};\nol.geom.flat.length.lineStringLength = _ol_geom_flat_length$lineStringLength;\nol.geom.flat.length.linearRingLength = _ol_geom_flat_length$linearRingLength;\nol.geom.flat.orient = {};\nol.geom.flat.orient.inflateEnds = _ol_geom_flat_orient$inflateEnds;\nol.geom.flat.orient.linearRingIsClockwise = _ol_geom_flat_orient$linearRingIsClockwise;\nol.geom.flat.orient.linearRingsAreOriented = _ol_geom_flat_orient$linearRingsAreOriented;\nol.geom.flat.orient.linearRingssAreOriented = _ol_geom_flat_orient$linearRingssAreOriented;\nol.geom.flat.orient.orientLinearRings = _ol_geom_flat_orient$orientLinearRings;\nol.geom.flat.orient.orientLinearRingsArray = _ol_geom_flat_orient$orientLinearRingsArray;\nol.geom.flat.reverse = {};\nol.geom.flat.reverse.coordinates = _ol_geom_flat_reverse$coordinates;\nol.geom.flat.segments = {};\nol.geom.flat.segments.forEach = _ol_geom_flat_segments$forEach;\nol.geom.flat.simplify = {};\nol.geom.flat.simplify.douglasPeucker = _ol_geom_flat_simplify$douglasPeucker;\nol.geom.flat.simplify.douglasPeuckerArray = _ol_geom_flat_simplify$douglasPeuckerArray;\nol.geom.flat.simplify.douglasPeuckerMultiArray = _ol_geom_flat_simplify$douglasPeuckerMultiArray;\nol.geom.flat.simplify.quantize = _ol_geom_flat_simplify$quantize;\nol.geom.flat.simplify.quantizeArray = _ol_geom_flat_simplify$quantizeArray;\nol.geom.flat.simplify.quantizeMultiArray = _ol_geom_flat_simplify$quantizeMultiArray;\nol.geom.flat.simplify.radialDistance = _ol_geom_flat_simplify$radialDistance;\nol.geom.flat.simplify.simplifyLineString = _ol_geom_flat_simplify$simplifyLineString;\nol.geom.flat.simplify.snap = _ol_geom_flat_simplify$snap;\nol.geom.flat.straightchunk = {};\nol.geom.flat.straightchunk.matchingChunk = _ol_geom_flat_straightchunk$matchingChunk;\nol.geom.flat.textpath = {};\nol.geom.flat.textpath.drawTextOnPath = _ol_geom_flat_textpath$drawTextOnPath;\nol.geom.flat.topology = {};\nol.geom.flat.topology.lineStringIsClosed = _ol_geom_flat_topology$lineStringIsClosed;\nol.geom.flat.transform = {};\nol.geom.flat.transform.rotate = _ol_geom_flat_transform$rotate;\nol.geom.flat.transform.scale = _ol_geom_flat_transform$scale;\nol.geom.flat.transform.transform2D = _ol_geom_flat_transform$transform2D;\nol.geom.flat.transform.translate = _ol_geom_flat_transform$translate;\nol.has = {};\nol.has.DEVICE_PIXEL_RATIO = _ol_has$DEVICE_PIXEL_RATIO;\nol.has.FIREFOX = _ol_has$FIREFOX;\nol.has.IMAGE_DECODE = _ol_has$IMAGE_DECODE;\nol.has.MAC = _ol_has$MAC;\nol.has.PASSIVE_EVENT_LISTENERS = _ol_has$PASSIVE_EVENT_LISTENERS;\nol.has.SAFARI = _ol_has$SAFARI;\nol.has.SAFARI_BUG_237906 = _ol_has$SAFARI_BUG_237906;\nol.has.WEBKIT = _ol_has$WEBKIT;\nol.has.WORKER_OFFSCREEN_CANVAS = _ol_has$WORKER_OFFSCREEN_CANVAS;\nol.interaction = {};\nol.interaction.DblClickDragZoom = $ol$interaction$DblClickDragZoom;\nol.interaction.DoubleClickZoom = $ol$interaction$DoubleClickZoom;\nol.interaction.DragAndDrop = $ol$interaction$DragAndDrop;\nol.interaction.DragAndDrop.DragAndDropEvent = _ol_interaction_DragAndDrop$DragAndDropEvent;\nol.interaction.DragBox = $ol$interaction$DragBox;\nol.interaction.DragBox.DragBoxEvent = _ol_interaction_DragBox$DragBoxEvent;\nol.interaction.DragPan = $ol$interaction$DragPan;\nol.interaction.DragRotate = $ol$interaction$DragRotate;\nol.interaction.DragRotateAndZoom = $ol$interaction$DragRotateAndZoom;\nol.interaction.DragZoom = $ol$interaction$DragZoom;\nol.interaction.Draw = $ol$interaction$Draw;\nol.interaction.Draw.DrawEvent = _ol_interaction_Draw$DrawEvent;\nol.interaction.Draw.createBox = _ol_interaction_Draw$createBox;\nol.interaction.Draw.createRegularPolygon = _ol_interaction_Draw$createRegularPolygon;\nol.interaction.Extent = $ol$interaction$Extent;\nol.interaction.Extent.ExtentEvent = _ol_interaction_Extent$ExtentEvent;\nol.interaction.Interaction = $ol$interaction$Interaction;\nol.interaction.Interaction.pan = _ol_interaction_Interaction$pan;\nol.interaction.Interaction.zoomByDelta = _ol_interaction_Interaction$zoomByDelta;\nol.interaction.KeyboardPan = $ol$interaction$KeyboardPan;\nol.interaction.KeyboardZoom = $ol$interaction$KeyboardZoom;\nol.interaction.Link = $ol$interaction$Link;\nol.interaction.Modify = $ol$interaction$Modify;\nol.interaction.Modify.ModifyEvent = _ol_interaction_Modify$ModifyEvent;\nol.interaction.MouseWheelZoom = $ol$interaction$MouseWheelZoom;\nol.interaction.PinchRotate = $ol$interaction$PinchRotate;\nol.interaction.PinchZoom = $ol$interaction$PinchZoom;\nol.interaction.Pointer = $ol$interaction$Pointer;\nol.interaction.Pointer.centroid = _ol_interaction_Pointer$centroid;\nol.interaction.Select = $ol$interaction$Select;\nol.interaction.Select.SelectEvent = _ol_interaction_Select$SelectEvent;\nol.interaction.Snap = $ol$interaction$Snap;\nol.interaction.Translate = $ol$interaction$Translate;\nol.interaction.Translate.TranslateEvent = _ol_interaction_Translate$TranslateEvent;\nol.interaction.defaults = {};\nol.interaction.defaults.defaults = _ol_interaction_defaults$defaults;\nol.layer = {};\nol.layer.Base = $ol$layer$Base;\nol.layer.BaseImage = $ol$layer$BaseImage;\nol.layer.BaseTile = $ol$layer$BaseTile;\nol.layer.BaseVector = $ol$layer$BaseVector;\nol.layer.Graticule = $ol$layer$Graticule;\nol.layer.Group = $ol$layer$Group;\nol.layer.Group.GroupEvent = _ol_layer_Group$GroupEvent;\nol.layer.Heatmap = $ol$layer$Heatmap;\nol.layer.Image = $ol$layer$Image;\nol.layer.Layer = $ol$layer$Layer;\nol.layer.Layer.inView = _ol_layer_Layer$inView;\nol.layer.Tile = $ol$layer$Tile;\nol.layer.Vector = $ol$layer$Vector;\nol.layer.VectorImage = $ol$layer$VectorImage;\nol.loadingstrategy = {};\nol.loadingstrategy.all = _ol_loadingstrategy$all;\nol.loadingstrategy.bbox = _ol_loadingstrategy$bbox;\nol.loadingstrategy.tile = _ol_loadingstrategy$tile;\nol.math = {};\nol.math.ceil = _ol_math$ceil;\nol.math.clamp = _ol_math$clamp;\nol.math.floor = _ol_math$floor;\nol.math.lerp = _ol_math$lerp;\nol.math.modulo = _ol_math$modulo;\nol.math.round = _ol_math$round;\nol.math.solveLinearSystem = _ol_math$solveLinearSystem;\nol.math.squaredDistance = _ol_math$squaredDistance;\nol.math.squaredSegmentDistance = _ol_math$squaredSegmentDistance;\nol.math.toDegrees = _ol_math$toDegrees;\nol.math.toFixed = _ol_math$toFixed;\nol.math.toRadians = _ol_math$toRadians;\nol.net = {};\nol.net.ClientError = _ol_net$ClientError;\nol.net.ResponseError = _ol_net$ResponseError;\nol.net.getJSON = _ol_net$getJSON;\nol.net.jsonp = _ol_net$jsonp;\nol.net.overrideXHR = _ol_net$overrideXHR;\nol.net.resolveUrl = _ol_net$resolveUrl;\nol.net.restoreXHR = _ol_net$restoreXHR;\nol.obj = {};\nol.obj.clear = _ol_obj$clear;\nol.obj.isEmpty = _ol_obj$isEmpty;\nol.proj = {};\nol.proj.Projection = $ol$proj$Projection;\nol.proj.Units = {};\nol.proj.Units.METERS_PER_UNIT = _ol_proj_Units$METERS_PER_UNIT;\nol.proj.Units.fromCode = _ol_proj_Units$fromCode;\nol.proj.addCommon = _ol_proj$addCommon;\nol.proj.addCoordinateTransforms = _ol_proj$addCoordinateTransforms;\nol.proj.addEquivalentProjections = _ol_proj$addEquivalentProjections;\nol.proj.addEquivalentTransforms = _ol_proj$addEquivalentTransforms;\nol.proj.addProjection = _ol_proj$addProjection;\nol.proj.addProjections = _ol_proj$addProjections;\nol.proj.clearAllProjections = _ol_proj$clearAllProjections;\nol.proj.clearUserProjection = _ol_proj$clearUserProjection;\nol.proj.cloneTransform = _ol_proj$cloneTransform;\nol.proj.createProjection = _ol_proj$createProjection;\nol.proj.createSafeCoordinateTransform = _ol_proj$createSafeCoordinateTransform;\nol.proj.createTransformFromCoordinateTransform = _ol_proj$createTransformFromCoordinateTransform;\nol.proj.disableCoordinateWarning = _ol_proj$disableCoordinateWarning;\nol.proj.epsg3857 = {};\nol.proj.epsg3857.EXTENT = _ol_proj_epsg3857$EXTENT;\nol.proj.epsg3857.HALF_SIZE = _ol_proj_epsg3857$HALF_SIZE;\nol.proj.epsg3857.MAX_SAFE_Y = _ol_proj_epsg3857$MAX_SAFE_Y;\nol.proj.epsg3857.PROJECTIONS = _ol_proj_epsg3857$PROJECTIONS;\nol.proj.epsg3857.RADIUS = _ol_proj_epsg3857$RADIUS;\nol.proj.epsg3857.WORLD_EXTENT = _ol_proj_epsg3857$WORLD_EXTENT;\nol.proj.epsg3857.fromEPSG4326 = _ol_proj_epsg3857$fromEPSG4326;\nol.proj.epsg3857.toEPSG4326 = _ol_proj_epsg3857$toEPSG4326;\nol.proj.epsg4326 = {};\nol.proj.epsg4326.EXTENT = _ol_proj_epsg4326$EXTENT;\nol.proj.epsg4326.METERS_PER_UNIT = _ol_proj_epsg4326$METERS_PER_UNIT;\nol.proj.epsg4326.PROJECTIONS = _ol_proj_epsg4326$PROJECTIONS;\nol.proj.epsg4326.RADIUS = _ol_proj_epsg4326$RADIUS;\nol.proj.equivalent = _ol_proj$equivalent;\nol.proj.fromLonLat = _ol_proj$fromLonLat;\nol.proj.fromUserCoordinate = _ol_proj$fromUserCoordinate;\nol.proj.fromUserExtent = _ol_proj$fromUserExtent;\nol.proj.fromUserResolution = _ol_proj$fromUserResolution;\nol.proj.get = _ol_proj$get;\nol.proj.getPointResolution = _ol_proj$getPointResolution;\nol.proj.getTransform = _ol_proj$getTransform;\nol.proj.getTransformFromProjections = _ol_proj$getTransformFromProjections;\nol.proj.getUserProjection = _ol_proj$getUserProjection;\nol.proj.identityTransform = _ol_proj$identityTransform;\nol.proj.proj4 = {};\nol.proj.proj4.fromEPSGCode = _ol_proj_proj4$fromEPSGCode;\nol.proj.proj4.getEPSGLookup = _ol_proj_proj4$getEPSGLookup;\nol.proj.proj4.isRegistered = _ol_proj_proj4$isRegistered;\nol.proj.proj4.register = _ol_proj_proj4$register;\nol.proj.proj4.setEPSGLookup = _ol_proj_proj4$setEPSGLookup;\nol.proj.proj4.unregister = _ol_proj_proj4$unregister;\nol.proj.projections = {};\nol.proj.projections.add = _ol_proj_projections$add;\nol.proj.projections.clear = _ol_proj_projections$clear;\nol.proj.projections.get = _ol_proj_projections$get;\nol.proj.setUserProjection = _ol_proj$setUserProjection;\nol.proj.toLonLat = _ol_proj$toLonLat;\nol.proj.toUserCoordinate = _ol_proj$toUserCoordinate;\nol.proj.toUserExtent = _ol_proj$toUserExtent;\nol.proj.toUserResolution = _ol_proj$toUserResolution;\nol.proj.transform = _ol_proj$transform;\nol.proj.transformExtent = _ol_proj$transformExtent;\nol.proj.transformWithProjections = _ol_proj$transformWithProjections;\nol.proj.transforms = {};\nol.proj.transforms.add = _ol_proj_transforms$add;\nol.proj.transforms.clear = _ol_proj_transforms$clear;\nol.proj.transforms.get = _ol_proj_transforms$get;\nol.proj.transforms.remove = _ol_proj_transforms$remove;\nol.proj.useGeographic = _ol_proj$useGeographic;\nol.render = {};\nol.render.Box = $ol$render$Box;\nol.render.Event = $ol$render$Event;\nol.render.Feature = $ol$render$Feature;\nol.render.Feature.toFeature = _ol_render_Feature$toFeature;\nol.render.Feature.toGeometry = _ol_render_Feature$toGeometry;\nol.render.VectorContext = $ol$render$VectorContext;\nol.render.canvas = {};\nol.render.canvas.Builder = $ol$render$canvas$Builder;\nol.render.canvas.BuilderGroup = $ol$render$canvas$BuilderGroup;\nol.render.canvas.Executor = $ol$render$canvas$Executor;\nol.render.canvas.ExecutorGroup = $ol$render$canvas$ExecutorGroup;\nol.render.canvas.ExecutorGroup.getPixelIndexArray = _ol_render_canvas_ExecutorGroup$getPixelIndexArray;\nol.render.canvas.ImageBuilder = $ol$render$canvas$ImageBuilder;\nol.render.canvas.Immediate = $ol$render$canvas$Immediate;\nol.render.canvas.Instruction = {};\nol.render.canvas.Instruction.beginPathInstruction = _ol_render_canvas_Instruction$beginPathInstruction;\nol.render.canvas.Instruction.closePathInstruction = _ol_render_canvas_Instruction$closePathInstruction;\nol.render.canvas.Instruction.fillInstruction = _ol_render_canvas_Instruction$fillInstruction;\nol.render.canvas.Instruction.strokeInstruction = _ol_render_canvas_Instruction$strokeInstruction;\nol.render.canvas.LineStringBuilder = $ol$render$canvas$LineStringBuilder;\nol.render.canvas.PolygonBuilder = $ol$render$canvas$PolygonBuilder;\nol.render.canvas.TextBuilder = $ol$render$canvas$TextBuilder;\nol.render.canvas.checkedFonts = _ol_render_canvas$checkedFonts;\nol.render.canvas.defaultFillStyle = _ol_render_canvas$defaultFillStyle;\nol.render.canvas.defaultFont = _ol_render_canvas$defaultFont;\nol.render.canvas.defaultLineCap = _ol_render_canvas$defaultLineCap;\nol.render.canvas.defaultLineDash = _ol_render_canvas$defaultLineDash;\nol.render.canvas.defaultLineDashOffset = _ol_render_canvas$defaultLineDashOffset;\nol.render.canvas.defaultLineJoin = _ol_render_canvas$defaultLineJoin;\nol.render.canvas.defaultLineWidth = _ol_render_canvas$defaultLineWidth;\nol.render.canvas.defaultMiterLimit = _ol_render_canvas$defaultMiterLimit;\nol.render.canvas.defaultPadding = _ol_render_canvas$defaultPadding;\nol.render.canvas.defaultStrokeStyle = _ol_render_canvas$defaultStrokeStyle;\nol.render.canvas.defaultTextAlign = _ol_render_canvas$defaultTextAlign;\nol.render.canvas.defaultTextBaseline = _ol_render_canvas$defaultTextBaseline;\nol.render.canvas.drawImageOrLabel = _ol_render_canvas$drawImageOrLabel;\nol.render.canvas.getTextDimensions = _ol_render_canvas$getTextDimensions;\nol.render.canvas.hitdetect = {};\nol.render.canvas.hitdetect.HIT_DETECT_RESOLUTION = _ol_render_canvas_hitdetect$HIT_DETECT_RESOLUTION;\nol.render.canvas.hitdetect.createHitDetectionImageData = _ol_render_canvas_hitdetect$createHitDetectionImageData;\nol.render.canvas.hitdetect.hitDetect = _ol_render_canvas_hitdetect$hitDetect;\nol.render.canvas.measureAndCacheTextWidth = _ol_render_canvas$measureAndCacheTextWidth;\nol.render.canvas.measureTextHeight = _ol_render_canvas$measureTextHeight;\nol.render.canvas.measureTextWidth = _ol_render_canvas$measureTextWidth;\nol.render.canvas.registerFont = _ol_render_canvas$registerFont;\nol.render.canvas.rotateAtOffset = _ol_render_canvas$rotateAtOffset;\nol.render.canvas.textHeights = _ol_render_canvas$textHeights;\nol.render.getRenderPixel = _ol_render$getRenderPixel;\nol.render.getVectorContext = _ol_render$getVectorContext;\nol.render.toContext = _ol_render$toContext;\nol.renderer = {};\nol.renderer.Composite = $ol$renderer$Composite;\nol.renderer.Layer = $ol$renderer$Layer;\nol.renderer.Map = $ol$renderer$Map;\nol.renderer.canvas = {};\nol.renderer.canvas.ImageLayer = $ol$renderer$canvas$ImageLayer;\nol.renderer.canvas.Layer = $ol$renderer$canvas$Layer;\nol.renderer.canvas.Layer.canvasPool = _ol_renderer_canvas_Layer$canvasPool;\nol.renderer.canvas.TileLayer = $ol$renderer$canvas$TileLayer;\nol.renderer.canvas.VectorImageLayer = $ol$renderer$canvas$VectorImageLayer;\nol.renderer.canvas.VectorLayer = $ol$renderer$canvas$VectorLayer;\nol.renderer.vector = {};\nol.renderer.vector.defaultOrder = _ol_renderer_vector$defaultOrder;\nol.renderer.vector.getSquaredTolerance = _ol_renderer_vector$getSquaredTolerance;\nol.renderer.vector.getTolerance = _ol_renderer_vector$getTolerance;\nol.renderer.vector.renderFeature = _ol_renderer_vector$renderFeature;\nol.reproj = {};\nol.reproj.DataTile = $ol$reproj$DataTile;\nol.reproj.Image = $ol$reproj$Image;\nol.reproj.Tile = $ol$reproj$Tile;\nol.reproj.Triangulation = $ol$reproj$Triangulation;\nol.reproj.calculateSourceExtentResolution = _ol_reproj$calculateSourceExtentResolution;\nol.reproj.calculateSourceResolution = _ol_reproj$calculateSourceResolution;\nol.reproj.canvasPool = _ol_reproj$canvasPool;\nol.reproj.common = {};\nol.reproj.common.ERROR_THRESHOLD = _ol_reproj_common$ERROR_THRESHOLD;\nol.reproj.render = _ol_reproj$render;\nol.resolutionconstraint = {};\nol.resolutionconstraint.createMinMaxResolution = _ol_resolutionconstraint$createMinMaxResolution;\nol.resolutionconstraint.createSnapToPower = _ol_resolutionconstraint$createSnapToPower;\nol.resolutionconstraint.createSnapToResolutions = _ol_resolutionconstraint$createSnapToResolutions;\nol.rotationconstraint = {};\nol.rotationconstraint.createSnapToN = _ol_rotationconstraint$createSnapToN;\nol.rotationconstraint.createSnapToZero = _ol_rotationconstraint$createSnapToZero;\nol.rotationconstraint.disable = _ol_rotationconstraint$disable;\nol.rotationconstraint.none = _ol_rotationconstraint$none;\nol.size = {};\nol.size.buffer = _ol_size$buffer;\nol.size.hasArea = _ol_size$hasArea;\nol.size.scale = _ol_size$scale;\nol.size.toSize = _ol_size$toSize;\nol.source = {};\nol.source.BingMaps = $ol$source$BingMaps;\nol.source.BingMaps.quadKey = _ol_source_BingMaps$quadKey;\nol.source.Cluster = $ol$source$Cluster;\nol.source.DataTile = $ol$source$DataTile;\nol.source.Image = $ol$source$Image;\nol.source.Image.ImageSourceEvent = _ol_source_Image$ImageSourceEvent;\nol.source.Image.defaultImageLoadFunction = _ol_source_Image$defaultImageLoadFunction;\nol.source.ImageArcGISRest = $ol$source$ImageArcGISRest;\nol.source.ImageCanvas = $ol$source$ImageCanvas;\nol.source.ImageStatic = $ol$source$ImageStatic;\nol.source.ImageWMS = $ol$source$ImageWMS;\nol.source.OGCMapTile = $ol$source$OGCMapTile;\nol.source.OSM = $ol$source$OSM;\nol.source.OSM.ATTRIBUTION = _ol_source_OSM$ATTRIBUTION;\nol.source.Raster = $ol$source$Raster;\nol.source.Raster.Processor = _ol_source_Raster$Processor;\nol.source.Raster.RasterSourceEvent = _ol_source_Raster$RasterSourceEvent;\nol.source.Raster.newImageData = _ol_source_Raster$newImageData;\nol.source.Source = $ol$source$Source;\nol.source.Stamen = $ol$source$Stamen;\nol.source.Tile = $ol$source$Tile;\nol.source.Tile.TileSourceEvent = _ol_source_Tile$TileSourceEvent;\nol.source.TileArcGISRest = $ol$source$TileArcGISRest;\nol.source.TileDebug = $ol$source$TileDebug;\nol.source.TileImage = $ol$source$TileImage;\nol.source.TileJSON = $ol$source$TileJSON;\nol.source.TileWMS = $ol$source$TileWMS;\nol.source.UTFGrid = $ol$source$UTFGrid;\nol.source.UTFGrid.CustomTile = _ol_source_UTFGrid$CustomTile;\nol.source.UrlTile = $ol$source$UrlTile;\nol.source.Vector = $ol$source$Vector;\nol.source.Vector.VectorSourceEvent = _ol_source_Vector$VectorSourceEvent;\nol.source.WMTS = $ol$source$WMTS;\nol.source.WMTS.optionsFromCapabilities = _ol_source_WMTS$optionsFromCapabilities;\nol.source.XYZ = $ol$source$XYZ;\nol.source.common = {};\nol.source.common.DEFAULT_WMS_VERSION = _ol_source_common$DEFAULT_WMS_VERSION;\nol.source.ogcTileUtil = {};\nol.source.ogcTileUtil.getMapTileUrlTemplate = _ol_source_ogcTileUtil$getMapTileUrlTemplate;\nol.source.ogcTileUtil.getTileSetInfo = _ol_source_ogcTileUtil$getTileSetInfo;\nol.source.ogcTileUtil.getVectorTileUrlTemplate = _ol_source_ogcTileUtil$getVectorTileUrlTemplate;\nol.source.sourcesFromTileGrid = _ol_source$sourcesFromTileGrid;\nol.source.wms = {};\nol.source.wms.DEFAULT_VERSION = _ol_source_wms$DEFAULT_VERSION;\nol.sphere = {};\nol.sphere.DEFAULT_RADIUS = _ol_sphere$DEFAULT_RADIUS;\nol.sphere.getArea = _ol_sphere$getArea;\nol.sphere.getDistance = _ol_sphere$getDistance;\nol.sphere.getLength = _ol_sphere$getLength;\nol.sphere.offset = _ol_sphere$offset;\nol.string = {};\nol.string.compareVersions = _ol_string$compareVersions;\nol.string.padNumber = _ol_string$padNumber;\nol.structs = {};\nol.structs.LRUCache = $ol$structs$LRUCache;\nol.structs.LinkedList = $ol$structs$LinkedList;\nol.structs.PriorityQueue = $ol$structs$PriorityQueue;\nol.structs.PriorityQueue.DROP = _ol_structs_PriorityQueue$DROP;\nol.structs.RBush = $ol$structs$RBush;\nol.style = {};\nol.style.Circle = $ol$style$Circle;\nol.style.Fill = $ol$style$Fill;\nol.style.Icon = $ol$style$Icon;\nol.style.IconImage = $ol$style$IconImage;\nol.style.IconImage.get = _ol_style_IconImage$get;\nol.style.IconImageCache = $ol$style$IconImageCache;\nol.style.IconImageCache.shared = _ol_style_IconImageCache$shared;\nol.style.Image = $ol$style$Image;\nol.style.RegularShape = $ol$style$RegularShape;\nol.style.Stroke = $ol$style$Stroke;\nol.style.Style = $ol$style$Style;\nol.style.Style.createDefaultStyle = _ol_style_Style$createDefaultStyle;\nol.style.Style.createEditingStyle = _ol_style_Style$createEditingStyle;\nol.style.Style.toFunction = _ol_style_Style$toFunction;\nol.style.Text = $ol$style$Text;\nol.style.expressions = {};\nol.style.expressions.Operators = _ol_style_expressions$Operators;\nol.style.expressions.PALETTE_TEXTURE_ARRAY = _ol_style_expressions$PALETTE_TEXTURE_ARRAY;\nol.style.expressions.arrayToGlsl = _ol_style_expressions$arrayToGlsl;\nol.style.expressions.colorToGlsl = _ol_style_expressions$colorToGlsl;\nol.style.expressions.expressionToGlsl = _ol_style_expressions$expressionToGlsl;\nol.style.expressions.getStringNumberEquivalent = _ol_style_expressions$getStringNumberEquivalent;\nol.style.expressions.getValueType = _ol_style_expressions$getValueType;\nol.style.expressions.isTypeUnique = _ol_style_expressions$isTypeUnique;\nol.style.expressions.numberToGlsl = _ol_style_expressions$numberToGlsl;\nol.style.expressions.stringToGlsl = _ol_style_expressions$stringToGlsl;\nol.style.expressions.uniformNameForVariable = _ol_style_expressions$uniformNameForVariable;\nol.style.flat = {};\nol.style.flat.toStyle = _ol_style_flat$toStyle;\nol.tilecoord = {};\nol.tilecoord.createOrUpdate = _ol_tilecoord$createOrUpdate;\nol.tilecoord.fromKey = _ol_tilecoord$fromKey;\nol.tilecoord.getCacheKeyForTileKey = _ol_tilecoord$getCacheKeyForTileKey;\nol.tilecoord.getKey = _ol_tilecoord$getKey;\nol.tilecoord.getKeyZXY = _ol_tilecoord$getKeyZXY;\nol.tilecoord.hash = _ol_tilecoord$hash;\nol.tilecoord.withinExtentAndZ = _ol_tilecoord$withinExtentAndZ;\nol.tilegrid = {};\nol.tilegrid.TileGrid = $ol$tilegrid$TileGrid;\nol.tilegrid.WMTS = $ol$tilegrid$WMTS;\nol.tilegrid.WMTS.createFromCapabilitiesMatrixSet = _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet;\nol.tilegrid.common = {};\nol.tilegrid.common.DEFAULT_MAX_ZOOM = _ol_tilegrid_common$DEFAULT_MAX_ZOOM;\nol.tilegrid.common.DEFAULT_TILE_SIZE = _ol_tilegrid_common$DEFAULT_TILE_SIZE;\nol.tilegrid.createForExtent = _ol_tilegrid$createForExtent;\nol.tilegrid.createForProjection = _ol_tilegrid$createForProjection;\nol.tilegrid.createXYZ = _ol_tilegrid$createXYZ;\nol.tilegrid.extentFromProjection = _ol_tilegrid$extentFromProjection;\nol.tilegrid.getForProjection = _ol_tilegrid$getForProjection;\nol.tilegrid.wrapX = _ol_tilegrid$wrapX;\nol.tileurlfunction = {};\nol.tileurlfunction.createFromTemplate = _ol_tileurlfunction$createFromTemplate;\nol.tileurlfunction.createFromTemplates = _ol_tileurlfunction$createFromTemplates;\nol.tileurlfunction.createFromTileUrlFunctions = _ol_tileurlfunction$createFromTileUrlFunctions;\nol.tileurlfunction.expandUrl = _ol_tileurlfunction$expandUrl;\nol.tileurlfunction.nullTileUrlFunction = _ol_tileurlfunction$nullTileUrlFunction;\nol.transform = {};\nol.transform.apply = _ol_transform$apply;\nol.transform.compose = _ol_transform$compose;\nol.transform.composeCssTransform = _ol_transform$composeCssTransform;\nol.transform.create = _ol_transform$create;\nol.transform.determinant = _ol_transform$determinant;\nol.transform.invert = _ol_transform$invert;\nol.transform.makeInverse = _ol_transform$makeInverse;\nol.transform.makeScale = _ol_transform$makeScale;\nol.transform.multiply = _ol_transform$multiply;\nol.transform.reset = _ol_transform$reset;\nol.transform.rotate = _ol_transform$rotate;\nol.transform.scale = _ol_transform$scale;\nol.transform.set = _ol_transform$set;\nol.transform.setFromArray = _ol_transform$setFromArray;\nol.transform.toString = _ol_transform$toString;\nol.transform.translate = _ol_transform$translate;\nol.uri = {};\nol.uri.appendParams = _ol_uri$appendParams;\nol.util = {};\nol.util.VERSION = _ol_util$VERSION;\nol.util.abstract = _ol_util$abstract;\nol.util.getUid = _ol_util$getUid;\nol.vec = {};\nol.vec.mat4 = {};\nol.vec.mat4.create = _ol_vec_mat4$create;\nol.vec.mat4.fromTransform = _ol_vec_mat4$fromTransform;\nol.xml = {};\nol.xml.OBJECT_PROPERTY_NODE_FACTORY = _ol_xml$OBJECT_PROPERTY_NODE_FACTORY;\nol.xml.XML_SCHEMA_INSTANCE_URI = _ol_xml$XML_SCHEMA_INSTANCE_URI;\nol.xml.createElementNS = _ol_xml$createElementNS;\nol.xml.getAllTextContent = _ol_xml$getAllTextContent;\nol.xml.getAllTextContent_ = _ol_xml$getAllTextContent_;\nol.xml.getAttributeNS = _ol_xml$getAttributeNS;\nol.xml.getDocument = _ol_xml$getDocument;\nol.xml.getXMLSerializer = _ol_xml$getXMLSerializer;\nol.xml.isDocument = _ol_xml$isDocument;\nol.xml.makeArrayExtender = _ol_xml$makeArrayExtender;\nol.xml.makeArrayPusher = _ol_xml$makeArrayPusher;\nol.xml.makeArraySerializer = _ol_xml$makeArraySerializer;\nol.xml.makeChildAppender = _ol_xml$makeChildAppender;\nol.xml.makeObjectPropertyPusher = _ol_xml$makeObjectPropertyPusher;\nol.xml.makeObjectPropertySetter = _ol_xml$makeObjectPropertySetter;\nol.xml.makeReplacer = _ol_xml$makeReplacer;\nol.xml.makeSequence = _ol_xml$makeSequence;\nol.xml.makeSimpleNodeFactory = _ol_xml$makeSimpleNodeFactory;\nol.xml.makeStructureNS = _ol_xml$makeStructureNS;\nol.xml.parse = _ol_xml$parse;\nol.xml.parseNode = _ol_xml$parseNode;\nol.xml.pushParseAndPop = _ol_xml$pushParseAndPop;\nol.xml.pushSerializeAndPop = _ol_xml$pushSerializeAndPop;\nol.xml.registerDocument = _ol_xml$registerDocument;\nol.xml.registerXMLSerializer = _ol_xml$registerXMLSerializer;\nol.xml.serialize = _ol_xml$serialize;\n\nexport default ol;","/**\n * @module ol/geom/flat/topology\n */\nimport {linearRing as linearRingArea} from './area.js';\n\n/**\n * Check if the linestring is a boundary.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} The linestring is a boundary.\n */\nexport function lineStringIsClosed(flatCoordinates, offset, end, stride) {\n  const lastCoord = end - stride;\n  if (\n    flatCoordinates[offset] === flatCoordinates[lastCoord] &&\n    flatCoordinates[offset + 1] === flatCoordinates[lastCoord + 1] &&\n    (end - offset) / stride > 3\n  ) {\n    return !!linearRingArea(flatCoordinates, offset, end, stride);\n  }\n  return false;\n}\n","/**\n * @module ol/source\n */\n\nimport LRUCache from './structs/LRUCache.js';\nimport {getIntersection} from './extent.js';\n\nexport {default as BingMaps} from './source/BingMaps.js';\nexport {default as CartoDB} from './source/CartoDB.js';\nexport {default as Cluster} from './source/Cluster.js';\nexport {default as DataTile} from './source/DataTile.js';\nexport {default as GeoTIFF} from './source/GeoTIFF.js';\nexport {default as IIIF} from './source/IIIF.js';\nexport {default as Image} from './source/Image.js';\nexport {default as ImageArcGISRest} from './source/ImageArcGISRest.js';\nexport {default as ImageCanvas} from './source/ImageCanvas.js';\nexport {default as ImageMapGuide} from './source/ImageMapGuide.js';\nexport {default as ImageStatic} from './source/ImageStatic.js';\nexport {default as ImageWMS} from './source/ImageWMS.js';\nexport {default as OSM} from './source/OSM.js';\nexport {default as Raster} from './source/Raster.js';\nexport {default as Source} from './source/Source.js';\nexport {default as Stamen} from './source/Stamen.js';\nexport {default as Tile} from './source/Tile.js';\nexport {default as TileArcGISRest} from './source/TileArcGISRest.js';\nexport {default as TileDebug} from './source/TileDebug.js';\nexport {default as TileImage} from './source/TileImage.js';\nexport {default as TileJSON} from './source/TileJSON.js';\nexport {default as TileWMS} from './source/TileWMS.js';\nexport {default as UrlTile} from './source/UrlTile.js';\nexport {default as UTFGrid} from './source/UTFGrid.js';\nexport {default as Vector} from './source/Vector.js';\nexport {default as VectorTile} from './source/VectorTile.js';\nexport {default as WMTS} from './source/WMTS.js';\nexport {default as XYZ} from './source/XYZ.js';\nexport {default as Zoomify} from './source/Zoomify.js';\n\n/**\n * Creates a sources function from a tile grid. This function can be used as value for the\n * `sources` property of the {@link module:ol/layer/Layer~Layer} subclasses that support it.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @param {function(import(\"./tilecoord.js\").TileCoord): import(\"./source/Source.js\").default} factory Source factory.\n * This function takes a {@link module:ol/tilecoord~TileCoord} as argument and is expected to return a\n * {@link module:ol/source/Source~Source}. **Note**: The returned sources should have a tile grid with\n * a limited set of resolutions, matching the resolution range of a single zoom level of the pyramid\n * `tileGrid` that `sourcesFromTileGrid` was called with.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./source/Source.js\").default>} Sources function.\n * @api\n */\nexport function sourcesFromTileGrid(tileGrid, factory) {\n  const sourceCache = new LRUCache(32);\n  const tileGridExtent = tileGrid.getExtent();\n  return function (extent, resolution) {\n    sourceCache.expireCache();\n    if (tileGridExtent) {\n      extent = getIntersection(tileGridExtent, extent);\n    }\n    const z = tileGrid.getZForResolution(resolution);\n    const wantedSources = [];\n    tileGrid.forEachTileCoord(extent, z, (tileCoord) => {\n      const key = tileCoord.toString();\n      if (!sourceCache.containsKey(key)) {\n        const source = factory(tileCoord);\n        sourceCache.set(key, source);\n      }\n      wantedSources.push(sourceCache.get(key));\n    });\n    return wantedSources;\n  };\n}\n"],"names":["messages","AssertionError","Error","constructor","code","message","super","this","name","$ol$AssertionError","stopPropagation","evt","$ol$events$Event","type","propagationStopped","defaultPrevented","target","preventDefault","ObjectEventType","$ol$Disposable","disposed","dispose","disposeInternal","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","length","found","a","b","linearFindNearest","arr","direction","n","i","candidate","reverseSubArray","begin","end","tmp","extend","data","extension","Array","isArray","equals","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","index","res","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","called","nextArgs","prototype","slice","call","arguments","arrayEquals","apply","toPromise","getter","value","err","Promise","reject","resolve","promiseGetter","clear","object","property","isEmpty","$ol$events$Target","Disposable","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","push","dispatchEvent","event","isString","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","Object","keys","indexOf","splice","EventType$1","CHANGE","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","listen","thisArg","once","bind","originalListener","eventsKey","listenOnce","unlistenByKey","key","Observable","EventTarget","on","un","revision_","changed","EventType","getRevision","onInternal","len","onceInternal","ol_key","unInternal","unByKey","$ol$Observable","abstract","uidCounter_","getUid","obj","ol_uid","String","ObjectEvent","oldValue","$ol$Object","values","values_","setProperties","get","hasOwnProperty","getKeys","getProperties","assign","hasProperties","notify","eventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","CollectionEventType","Property","CollectionEvent","element","Collection","BaseObject","array","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","forEach","f","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","except","TileState","easeIn","t","Math","pow","easeOut","inAndOut","linear","$ol$Tile","tileCoord","state","interimTile","transition_","transition","transitionStarts_","interpolate","release","setState","getKey","getInterimTile","tile","getState","refreshInterimChain","getTileCoord","load","getAlpha","id","time","start","delta","inTransition","endTransition","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","SAFARI_BUG_237906","test","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","PASSIVE_EVENT_LISTENERS","passive","defineProperty","window","error","createCanvasContext2D","width","height","canvasPool","settings","canvas","shift","document","createElement","getContext","releaseCanvas","context","clearRect","outerWidth","offsetWidth","style","getComputedStyle","parseInt","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","insertBefore","appendChild","asImageLike","HTMLCanvasElement","HTMLVideoElement","asArrayLike","Uint8Array","Uint8ClampedArray","Float32Array","DataView","sharedContext","toArray","image","willReadFrequently","drawImage","getImageData","defaultSize","$ol$DataTile","Tile","loader_","loader","data_","error_","size_","size","getSize","imageData","getData","getError","then","catch","assert","assertion","errorCode","Feature","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","createStyleFunction","setId","styles","$ol$Feature","tmp_","create","reset","transform","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","d","e","setFromArray","coordinate","x","y","rotate","angle","cos","sin","scale","makeScale","translate","dx","dy","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","det","determinant","mat","transformStringDiv","toString","transformString","join","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","buffer","dest","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","Infinity","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","approximatelyEquals","tolerance","abs","extendCoordinates","extendXY","extendRings","rings","min","max","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","resolution","rotation","x0","y0","x1","y1","x2","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","xs","ys","l","_boundingExtentXYs","wrapX","projection","projectionExtent","getExtent","canWrapX","worldWidth","floor","wrapAndSliceX","isFinite","unitByCode","METERS_PER_UNIT","radians","PI","degrees","ft","m","$ol$proj$Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection","Projection","units","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","atan","exp","EPSG4326Projection","cache","replace","add","transforms","destination","sourceCode","destinationCode","clamp","squaredSegmentDistance","squaredDistance","solveLinearSystem","maxRow","maxEl","r","absValue","j","coef","k","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","factor","round","ceil","padNumber","number","precision","numberString","decimal","compareVersions","v1","v2","s1","split","s2","n1","n2","closestOnCircle","circle","getRadius","sqrt","closestOnSegment","segment","along","degreesToStringHDMS","hemispheres","fractionDigits","normalizedDegrees","deg","sec","hdms","charAt","format","template","coordinate1","coordinate2","cosAngle","sinAngle","coord1","coord2","distance","squaredDistanceToSegment","toStringXY","worldsAway","getWorldsAway","sourceExtentWidth","DEFAULT_RADIUS","getDistance","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","getLengthInternal","getAreaInternal","bearing","lon1","dByR","lat","asin","levels","info","warn","none","level","args","console","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","pointResolution","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","jj","addCoordinateTransforms","forward","inverse","sourceProj","destProj","equivalent","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","transformExtent","userProjection","setUserProjection","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","sourceUnits","userUnits","fromUserResolution","createSafeCoordinateTransform","coord","transformed","sourceExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","transform2D","anchor","anchorX","anchorY","tmpTransform","$ol$geom$Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getSimplifiedGeometry","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","getClosestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","simplify","getType","intersectsExtent","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","getStrideForLayout","layout","transformGeom2D","simpleGeometry","getFlatCoordinates","getStride","$ol$geom$SimpleGeometry","Geometry","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","setLayout","nesting","getLayoutForStride","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","multiArrayMaxSquaredDelta","endss","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","radialDistance","snap","quantize","quantizeArray","quantizeMultiArray","simplifiedEndss","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","linearRing","twiceArea","linearRings","linearRingss","LinearRing","SimpleGeometry","maxDelta_","maxDeltaRevision_","linearRingArea","$ol$geom$LinearRing","Point","$ol$geom$Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","ret","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","reverseCoordinates","orientLinearRingsArray","inflateEnds","prevEndIndex","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","linearRingsArea","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","$ol$geom$Polygon","circular","sphereRadius","sphereOffset","fromExtent","fromCircle","sides","arrayLength","makeRegular","startAngle","GeolocationErrorType","GeolocationError","BaseEvent","$ol$Geolocation","position_","transform_","watchId_","handleProjectionChanged_","handleTrackingChanged_","setProjection","trackingOptions","setTrackingOptions","setTracking","tracking","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","position","coords","accuracy","altitude","altitudeAccuracy","heading","longitude","latitude","projectedPosition","speed","circularPolygon","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getPosition","getSpeed","$ol$ImageBase","pixelRatio","pixelRatio_","getImage","getPixelRatio","getResolution","ImageState","IDLE","LOADING","LOADED","EMPTY","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","src","$ol$Image","ImageBase","crossOrigin","imageLoadFunction","src_","image_","context_","unlisten_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","setImage","$ol$ImageCanvas","canvas_","handleLoad_","$ol$ImageTile","tileLoadFunction","crossOrigin_","tileLoadFunction_","ctx","fillStyle","fillRect","getBlankImage","naturalWidth","naturalHeight","$ol$Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","Date","now","lastIndex","firstIndex","duration","getAngle","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","fromNamed","el","body","rgb","fromString","cacheSize","s","g","exec","hasAlpha","substr","startsWith","map","Number","normalize","fromStringInternal_","asArray","isStringColor","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","setSize","maxCacheSize","$ol$style$IconImageCache","shared","LayerProperty","$ol$layer$Base","background_","background","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getBackground","getClassName","getLayerState","managed","layer","getZIndex","getOpacity","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","ViewHint","ViewProperty","CENTER","RESOLUTION","ROTATION","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","result","createSnapToResolutions","resolutions","cappedMaxRes","capped","z","createSnapToPower","power","minZoomLevel","cappedZoomLevel","zoomLevel","createMinMaxResolution","createSnapToN","theta","createSnapToZero","animationCallback","returnValue","setTimeout","createCenterConstraint","smoothExtentConstraint","constrainOnlyCenter","multiWorld","centerNone","createResolutionConstraint","resolutionConstraint","zoomFactor","smoothResolutionConstraint","projExtent","constrainResolution","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","constraint","createRotationConstraint","enableRotation","constrainRotation","rotationNone","isNoopAnimation","animation","sourceCenter","targetCenter","coordinatesEqual","sourceResolution","targetResolution","sourceRotation","targetRotation","calculateCenterOn","rotX","rotY","$ol$View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","rotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","zoom","setZoom","oldPadding","getCenterInternal","newPadding","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","animateInternal","animationCount","series","complete","easing","getResolutionForZoom","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","rotateCoordinate","addCoordinate","currentResolution","w","h","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","viewState","nearest","baseLevel","fit","geometryOrExtent","polygonFromExtent","fitInternal","rotatedExtentForGeometry","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","inView","layerState","$ol$layer$Layer","BaseLayer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","render","setMap","handleSourcePropertyChange_","setSource","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","isVisible","view","frameState","getMapInternal","getView","View","layerStatesArray","getLayerGroup","find","layerExtent","getAttributions","attributions","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","setMapInternal","RenderEventType","some","arrayLayerState","createRenderer","hasRenderer","expireIconCache","iconImageCache","$ol$renderer$Map","map_","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","layerFilter","thisArg2","feature","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","getWrapX","order","distanceSq","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$ol$render$Event","inversePixelTransform","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","weight","variant","families","family","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","checkedFonts","measureFont","measureContext","textHeights","registerFont","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","border","display","left","measureAndCacheTextWidth","reduce","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","originX","originY","save","globalAlpha","setTransform","contextInstructions","label","executeLabelInstructions","restore","$ol$renderer$Composite","MapRenderer","fontChangeListenerKey_","redrawText","element_","container","getViewport","firstChild","children_","renderedVisible_","RenderEvent","declutterLayers","previousElement","layerIndex","sourceState","renderDeclutter","GroupEvent","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","$ol$layer$Group","$ol$MapEvent","$ol$MapBrowserEvent","MapEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","MapBrowserEventType","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","PointerEventType","$ol$MapBrowserEventHandler","Target","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","MapBrowserEvent","clearTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","MapEventType","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","$ol$structs$PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$ol$TileQueue","PriorityQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","$ol$control$Control","pointerEvents","target_","setTarget","getOverlayContainerStopEvent","mapEvent","getElementById","$ol$control$Attribution","Control","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","visibleAttributions","from","Set","getAllLayers","flatMap","getAttributionsCollapsible","setCollapsible","updateElement_","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$ol$control$Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","contains","$ol$control$Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","defaults","controls","Zoom","zoomOptions","Rotate","rotateOptions","attribution","Attribution","attributionOptions","InteractionProperty","pan","zoomByDelta","$ol$interaction$Interaction","setActive","getActive","mapBrowserEvent","active","$ol$interaction$DoubleClickZoom","Interaction","delta_","stopEvent","browserEvent","shiftKey","centroid","$ol$interaction$Pointer","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","all","conditions","pass","altKeyOnly","altKey","metaKey","ctrlKey","altShiftKeysOnly","focus","targetElement","getTargetElement","activeElement","focusWithTabindex","hasAttribute","always","mouseActionButton","never","singleClick","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","$ol$interaction$DragPan","PointerInteraction","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroidFromPointers","scaleCoordinate","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","$ol$interaction$DragRotate","lastAngle_","$ol$render$Box","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","top","getOverlayContainer","setPixels","createOrUpdateGeometry","DragBoxEventType","DragBoxEvent","$ol$interaction$DragBox","box_","RenderBox","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$ol$interaction$DragZoom","DragBox","out_","out","Key","$ol$interaction$KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","mapUnitsDelta","$ol$interaction$KeyboardZoom","$ol$interaction$MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$ol$interaction$PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","$ol$interaction$PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","interactions","Kinetic","altShiftDragRotate","DragRotate","doubleClickZoom","DoubleClickZoom","zoomDelta","zoomDuration","dragPan","DragPan","pinchRotate","PinchRotate","pinchZoom","PinchZoom","keyboard","KeyboardPan","KeyboardZoom","mouseWheelZoom","MouseWheelZoom","shiftDragZoom","DragZoom","num","hasArea","toSize","removeLayerMapProperty","Layer","setLayerMapProperty","$ol$Map","optionsInternal","keyboardEventTarget","layerGroup","overlays","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","defaultControls","defaultInteractions","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","TileQueue","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","ownerDocument","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","handlePostRender","tileQueue","viewHints","lowOnFrameBudget","unobserve","ShadowRoot","host","CompositeMapRenderer","MapBrowserEventHandler","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","mapId","renderTargets","nextExtent","equalsExtent","setLayerGroup","oldLayerGroup","computedStyle","parseFloat","getClientRects","oldSize","$ol$Overlay","insertFirst","autoPan","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPositioning","updatePixelPosition","performAutoPan","panIntoView","panIntoViewOptions","mapRect","getRect","overlayRect","myMargin","margin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","box","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","posX","posY","getOptions","$ol$structs$LRUCache","highWaterMark","count_","entries_","oldest_","newest_","expireCache","keep","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","getKeyZXY","fromKey","hash","withinExtentAndZ","tileRange","getFullTileRange","$ol$TileCache","LRUCache","pruneExceptNewestZ","TileRange","containsTileRange","$ol$TileRange","$ol$VectorRenderTile","urlTileCoord","getSourceTiles","executorGroups","declutterExecutorGroups","loadingSourceTiles","hitDetectionImageData","replayState_","sourceTiles","errorTileKeys","wantedResolution","wrappedTileCoord","hasContext","getReplayState","dirty","renderedRenderOrder","renderedResolution","renderedRevision","renderedTileResolution","renderedTileRevision","renderedTileZ","asColorLike","originalXHR","withCredentials","loadFeaturesXhr","url","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","addFeatures","jsonp","errback","callbackParam","script","cleanup","async","timer","head","ResponseError","response","ClientError","client","getJSON","JSON","parse","setRequestHeader","resolveUrl","base","URL","href","$ol$render$VectorContext","drawCustom","hitDetectionRenderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","strokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","$ol$render$canvas$Immediate","VectorContext","viewRotation","userTransform","transformRotation_","viewRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","alpha","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","lineTo","closePath","drawRings_","beginPath","arc","fill","stroke","getFill","getStroke","getText","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","getFlatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","lineCap","lineDash","setLineDash","lineDashOffset","lineJoin","miterLimit","textState","contextTextState","textAlign","textBaseline","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","imageSize","imagePixelRatio","imageAnchor","getAnchor","imageOrigin","getOrigin","getRotateWithView","imageScale","getScaleArray","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","acc","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","declutterBuilderGroup","getImageState","imageBuilderGroup","declutterMode","getDeclutterMode","imageReplay","getBuilder","textBuilderGroup","textReplay","LineString","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","replayGroup","geometryRenderer","Circle","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","imageState","unlistenImageChange","listenImageChange","renderGeometry","renderFeatureInternal","getGeometries","getHitDetectionRenderer","getVectorContext","CanvasRenderingContext2D","canvasPixelRatio","multiplyTransform","CanvasImmediateRenderer","brokenDiagonalRendering_","drawTestTriangle","u1","u2","clip","verifyBrokenDiagonalRendering","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","calculateSourceExtentResolution","targetExtent","triangulation","sources","gutter","renderEdges","imageSmoothingEnabled","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","isBrokenDiagonalRendering","steps","ud","vd","step","ERROR_THRESHOLD","$ol$reproj$Triangulation","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","$ol$reproj$Tile","sourceTileGrid","targetTileGrid","getTileFunction","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","Triangulation","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","TileEventType","adaptAttributions","attributionLike","$ol$source$Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","getInterpolate","refresh","setAttributions","tmpTileCoord","$ol$tilegrid$TileGrid","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","getTileCoordForCoordAndZ","getTileCoordResolution","opt_direction","tileCoordIntersectsViewport","viewport","fullTileRanges","getForProjection","createForProjection","extentFromProjection","createForExtent","resolutionsFromExtent","TileGrid","createXYZ","xyzOptions","gridOptions","half","TileSourceEvent","$ol$source$Tile","Source","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","TileCache","tmpSize","tileOptions","zDirection","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","covered","getGutterForProjection","setKey","getOpaque","getTileGridForProjection","getTile","getTileGrid","getTilePixelRatio","getTilePixelSize","scaleSize","getTileCoordForTileUrlFunction","updateCacheSize","tileCount","useTile","createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","range","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","nullTileUrlFunction","expandUrl","urls","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","stop","UrlTile","TileSource","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","uid","tileState","setTileLoadFunction","setTileUrlFunction","$ol$source$UrlTile","defaultTileLoadFunction","imageTile","$ol$source$TileImage","tileClass","ImageTile","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","tileUrl","getTileInternal","newTile","ReprojTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","quadKey","digits","mask","$ol$source$BingMaps","TileImage","hidpi","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","fetch","json","handleImageryMetadataResponse","getApiKey","getImagerySet","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","resource","zoomMax","imageWidth","imageHeight","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","imageryProviders","imageryProvider","intersecting","coverageAreas","coverageArea","bbox","$ol$source$XYZ","quickselect","quickselectStep","defaultCompare","sd","swap","RBush","maxEntries","_maxEntries","_minEntries","_all","search","toBBox","nodesToSearch","child","childBBox","leaf","collides","insert","_build","_splitRoot","tmpNode","_insert","createNode","equalsFn","path","indexes","goingUp","findItem","_condense","compareMinX","compareMinY","toJSON","fromJSON","items","N","M","calcBBox","N2","N1","multiSelect","right2","right3","_chooseSubtree","targetNode","minEnlargement","bboxArea","enlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareNodeMinX","compareNodeMinY","_allDistMargin","leftBBox","rightBBox","bboxMargin","siblings","p","destNode","$ol$structs$RBush","rbush_","RBush_","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","concat","rbush","VectorEventType","VectorSourceEvent","$ol$source$Vector","format_","overlaps_","overlaps","url_","strategy_","strategy","allStrategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","featureChangeKeys","removed","setLoader","$ol$source$Cluster","VectorSource","interpolationRatio","geometryFunction","createCustomCluster_","createCluster","boundRefresh_","updateDistance","setDistance","setMinDistance","getMinDistance","cluster","mapDistance","clustered","neighbors","neighbor","searchCenter","$ol$reproj$DataTile","DataTile","reprojData_","reprojError_","reprojSize_","dataSources","tileData","arrayData","pixelSize","isFloat","pixelCount","DataType","tileDataR","bytesPerElement","BYTES_PER_ELEMENT","bytesPerPixel","bytesPerRow","byteLength","bandCount","packedLength","packedData","dataIndex","rowOffset","colCount","rowIndex","colIndex","dataType","targetWidth","targetHeight","dataR","dataU","reproj","dataSource","createImageData","putImageData","$ol$source$DataTile","tileGridForProjection_","tileCacheForProjection_","setTileSizes","getReprojTile_","reprojTilePixelRatio","textureSize","ReprojDataTile","sourceLoader","$ol$reproj$Image","getImageFunction","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","ImageSourceEventType","ImageSourceEvent","defaultImageLoadFunction","$ol$source$Image","reprojectedImage_","reprojectedRevision_","setResolutions","findNearestResolution","getImageInternal","ReprojImage","handleImageChange","appendParams","uri","params","keyParams","encodeURIComponent","qs","$ol$source$ImageArcGISRest","ImageSource","params_","imageSize_","renderedRevision_","ratio_","getParams","F","FORMAT","TRANSPARENT","halfWidth","halfHeight","imageResolution","getRequestUrl_","ImageWrapper","getImageLoadFunction","srid","modifiedUrl","setImageLoadFunction","updateParams","$ol$source$ImageCanvas","canvasFunction_","canvasFunction","canvasElement","ImageCanvas","$ol$source$ImageStatic","imageExtent_","imageExtent","getImageExtent","extentWidth","extentHeight","DEFAULT_VERSION","GETFEATUREINFO_IMAGE_SIZE","$ol$source$ImageWMS","v13_","updateV13_","serverType_","serverType","getFeatureInfoUrl","projectionObj","sourceProjectionObj","baseParams","SERVICE","VERSION","REQUEST","QUERY_LAYERS","getLegendUrl","LAYERS","mpu","viewExtent","requestExtent","dpi","version","ATTRIBUTION","$ol$source$OSM","XYZ","$ol$layer$BaseImage","$ol$renderer$Layer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","createLoadedTileFinder","getLayer","renderIfReadyAndVisible","loadImage","pixelContext","$ol$renderer$canvas$Layer","LayerRenderer","tempTransform","pixelTransform","containerReused","pixelContext_","col","row","useContainer","backgroundColor","layerClassName","firstElementChild","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","$ol$renderer$canvas$ImageLayer","CanvasLayerRenderer","imageLayer","viewResolution","imageSource","renderedExtent","imageMapWidth","imageMapHeight","viewCenter","canvasTransform","toTransformString","clipped","dw","dh","previousAlpha","$ol$layer$Image","BaseImageLayer","CanvasImageLayerRenderer","TileProperty","$ol$layer$BaseTile","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","$ol$renderer$canvas$TileLayer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileOrigin","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","clips","clipZs","currentClip","zs","reverse","currentZ","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","postRenderFunction","tileCallback","$ol$layer$Tile","BaseTileLayer","CanvasTileLayerRenderer","hasImageData","ImageData","_","newImageData","createMinion","operation","workerHasImageData","newWorkerImageData","buffers","meta","imageOps","numBuffers","numBytes","images","arrays","pixels","createWorker","config","onMessage","lines","lib","worker","Worker","Blob","Buffer","createObjectURL","Processor","threads","_imageOps","workers","_onWorkerMessage","minion","terminated","postMessage","terminate","createFauxWorker","_workers","_queue","_maxQueueLength","queue","_running","_dataLookup","_job","process","inputs","_enqueue","_dispatch","job","slices","_resolveJob","RasterEventType","RasterSourceEvent","RasterSource","processor_","operationType_","operationType","threads_","layers_","createLayer","createLayers","useResolutions_","requestedFrameState_","renderedImageCanvas_","iMax","sourceOrLayer","attributionGetter","sourceAttribution","setOperation","updateFrameState_","allSourcesReady_","processSources_","imageDatas","onWorkerComplete_","layerOrSource","TileLayer","ImageLayer","$ol$source$Raster","ATTRIBUTIONS","OSM_ATTRIBUTION","LayerConfig","terrain","toner","watercolor","ProviderConfig","$ol$source$Stamen","provider","providerConfig","layerConfig","$ol$source$TileArcGISRest","getKeyForParams_","tileExtent","$ol$source$TileDebug","strokeRect","$ol$source$TileJSON","tileJSON_","requestJSONP","handleTileJSONResponse","handleTileJSONError","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","epsg4326Projection","gridExtent","attributionExtent","$ol$source$TileWMS","transparent","bufferSize","CustomTile","preemptive","preemptive_","grid_","keys_","jsonp_","xRelative","yRelative","forDataAtCoordinate","request","loadInternal_","handleError_","$ol$source$UTFGrid","tileUrlFunction_","template_","getTemplate","forDataAtCoordinateAndResolution","grids","WMTSTileGrid","matrixIds_","matrixIds","getMatrixId","getMatrixIds","$ol$tilegrid$WMTS","createFromCapabilitiesMatrixSet","matrixSet","matrixLimits","matrixIdsPropName","identifierPropName","scaleDenominatorPropName","topLeftCornerPropName","switchOriginXY","elt","matrixAvailable","elt_ml","tileWidth","tileHeight","$ol$source$WMTS","requestEncoding","version_","dimensions_","dimensions","matrixSet_","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","tilematrixset","Service","Request","Version","Format","localContext","TileMatrix","TileCol","TileRow","XML_SCHEMA_INSTANCE_URI","createElementNS","namespaceURI","qualifiedName","getDocument","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","nextSibling","isDocument","getAttributeNS","xml","makeArrayExtender","valueReader","objectStack","makeArrayPusher","makeReplacer","makeObjectPropertyPusher","localName","makeObjectPropertySetter","makeChildAppender","nodeWriter","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","fixedNodeName","fixedNamespaceURI","newNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","structureNS","parseNode","parsersNS","nextElementSibling","parsers","parser","pushParseAndPop","pushSerializeAndPop","xmlSerializer_","document_","getXMLSerializer","XMLSerializer","implementation","createDocument","fromTransform","mat4","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","declutterMode_","getScale","getDisplacement","getHitDetectionImage","getImageSize","setDisplacement","setRotateWithView","setScale","$ol$style$Image","RegularShape","hitDetectionCanvas_","fill_","points","radius_","radius1","radius2_","radius2","stroke_","renderOptions_","getPoints","getRadius2","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","strokeWidth","r1","r2","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","maxRadius","createPath_","drawHitDetectionCanvas_","angle0","radiusC","$ol$style$RegularShape","CircleStyle","setRadius","$ol$style$Circle","Fill","color_","setColor","$ol$style$Fill","taintedTestContext","IconImage","hitDetectionImage_","imageState_","tainted_","initializeImage_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","$ol$style$IconImage","calculateScale","wantedWidth","wantedHeight","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","imgSize_","imgSize","iconImage_","getIconImage","offset_","offsetOrigin_","offsetOrigin","initialOptions_","setAnchor","iconImageSize","$ol$style$Icon","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$ol$style$Stroke","Style","geometryFunction_","defaultGeometryFunction","hitDetectionRenderer_","zIndex_","setRenderer","setHitDetectionRenderer","setText","toFunction","styleFunction","defaultStyles","createDefaultStyle","createEditingStyle","white","blue","$ol$style$Style","Text","font_","textAlign_","justify_","justify","repeat_","repeat","textBaseline_","maxAngle_","maxAngle","placement_","placement","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getPlacement","getRepeat","getMaxAngle","getOverflow","getJustify","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","$ol$style$Text","PaletteTexture$1","texture_","getTexture","gl","texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","UNSIGNED_BYTE","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","DYNAMIC_DRAW","CONTEXT_IDS","attributes","preserveDrawingBuffer","antialias","BufferUsage","getArrayClassForType","Uint32Array","WebGLArrayBuffer$1","usage","ofSize","fromArray","fromArrayBuffer","getUsage","ContextEventType","WebGLPostProcessingPass$1","gl_","webGlContext","scaleRatio_","scaleRatio","renderTargetTexture_","renderTargetTextureSize_","frameBuffer_","createFramebuffer","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","renderTargetProgram_","createProgram","attachShader","linkProgram","renderTargetVerticesBuffer_","createBuffer","bindBuffer","bufferData","STATIC_DRAW","renderTargetAttribLocation_","getAttribLocation","renderTargetUniformLocation_","getUniformLocation","renderTargetOpacityLocation_","renderTargetTextureLocation_","uniforms_","uniforms","location","getGL","init","drawingBufferWidth","drawingBufferHeight","bindFramebuffer","FRAMEBUFFER","getFrameBuffer","internalFormat","LINEAR","framebufferTexture2D","COLOR_ATTACHMENT0","nextPass","preCompose","postCompose","activeTexture","TEXTURE0","canvasId","getContextAttributes","clearColor","COLOR_BUFFER_BIT","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform2f","uniform1i","uniform1f","applyUniforms","drawArrays","TRIANGLES","textureSlot","uniform","uniform3f","uniform4f","DefaultUniform","AttributeType","UNSIGNED_SHORT","UNSIGNED_INT","canvasCache","getSharedCanvasCacheKey","uniqueCanvasCacheKeyCount","WebGLHelper","boundHandleWebGLContextLost_","handleWebGLContextLost","boundHandleWebGLContextRestored_","handleWebGLContextRestored","canvasCacheKey_","canvasCacheKey","getUniqueCanvasCacheKey","cacheItem","users","getCanvas","bufferCache_","extensionCache_","currentProgram_","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","uniformLocationsByProgram_","attribLocationsByProgram_","setUniforms","postProcessPasses_","postProcesses","WebGLPostProcessingPass","shaderCompileErrors_","canvasCacheKeyMatches","getExtension","bufferKey","bufferCache","webGlBuffer","flushBufferData","deleteBuffer","buf","bufferCacheEntry","isContextLost","loseContext","prepareDraw","disableAlphaBlend","ZERO","slot","uniformName","prepareDrawToRenderTarget","renderTarget","getFramebuffer","drawElements","elementType","numItems","offsetInBytes","finalizeDraw","applyFrameState","offsetScaleMatrix","resetTransform","scaleTransform","offsetRotateMatrix","rotateTransform","setUniformMatrixValue","setUniformFloatValue","setUniformFloatVec2","HTMLImageElement","prevValue","program","shader","getProgram","fragmentShaderSource","vertexShaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","getProgramParameter","LINK_STATUS","getProgramInfoLog","programUid","getAttributeLocation","makeProjectionTransform","uniform2fv","setUniformFloatVec4","uniform4fv","uniformMatrix4fv","enableAttributeArray_","attribName","enableAttributes","attr","getByteSizeFromType","computeAttributesStride","Uint16Array","WebGLLayerRenderer","inversePixelTransform_","postProcesses_","helper","removeHelper","dispatchPreComposeEvent","dispatchPostComposeEvent","incrementGroup","groupNumber","afterHelperCreated","prepareFrameInternal","WebGLLayerRenderer$1","Uniforms","TILE_TRANSFORM","TRANSITION_ALPHA","DEPTH","RENDER_EXTENT","ZOOM","GLOBAL_ALPHA","PROJECTION_MATRIX","SCREEN_TO_WORLD_MATRIX","TILE_TEXTURE_ARRAY","TEXTURE_PIXEL_WIDTH","TEXTURE_PIXEL_HEIGHT","TEXTURE_RESOLUTION","TEXTURE_ORIGIN_X","TEXTURE_ORIGIN_Y","ValueTypes","NUMBER","STRING","COLOR","BOOLEAN","NUMBER_ARRAY","ANY","NONE","Operators","getValueType","stringify","valueArr","v","operator","getReturnType","isTypeUnique","valueType","printTypes","numberToGlsl","arrayToGlsl","colorToGlsl","getStringNumberEquivalent","string","stringLiteralsMap","stringToGlsl","expressionToGlsl","expectedType","returnType","toGlsl","possibleType","assertNotEmptyType","assertNumber","assertNumbers","assertString","assertBoolean","assertArgsCount","assertArgsMinCount","assertArgsMaxCount","assertArgsEven","types","descriptor","assertSingleType","assertOfType","expectedTypes","uniformNameForVariable","variableName","typeHint","getTypeFromHint","outputType","existing","inFragmentShader","variables","PALETTE_TEXTURE_ARRAY","colors","numColors","palette","paletteTextures","paletteName","paletteTexture","PaletteTexture","GET_BAND_VALUE_FUNC","getEqualOperator","getDecisionOperator","arg","toStyle","flatStyle","prefix","iconSrc","iconImg","shapePoints","circleRadius","band","functions","ifBlocks","colorIndex","bandIndex","bandExpression","xOffsetExpression","yOffsetExpression","parsedArgs","interpolation","inputType","exponent","stop1","output1","stop2","fallback","assertArgsOdd","$ol$structs$LinkedList","first_","last_","head_","circular_","length_","insertItem","next","removeItem","firstItem","lastItem","nextItem","getNextItem","prevItem","getPrevItem","getCurrItem","setFirstItem","list","knownMapMediaTypes","knownVectorMediaTypes","getMapTileUrlTemplate","links","mediaType","tileUrlTemplate","fallbackUrlTemplate","link","rel","getVectorTileUrlTemplate","supportedMediaTypes","hrefLookup","supportedMediaType","parseTileMatrixSet","sourceInfo","tileMatrixSet","tileMatrixSetLimits","crs","backwards","matrices","tileMatrices","matrixLookup","matrix","limitLookup","limit","tileMatrix","pointOfOrigin","cellSize","matrixWidth","matrixHeight","tileMapWidth","minTileCol","maxTileCol","tileMapHeight","cornerOfOrigin","minTileRow","maxTileRow","intersectExtents","grid","urlTemplate","urlFunction","upsideDown","tileCol","tileRow","getTileSetInfo","tileSet","tileMatrixSetLink","tileMatrixSetDefinition","parseTileSetMetadata","$ol$source$OGCMapTile","handleTileSetInfo_","tileSetInfo","logError","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","$ol$render$canvas$Builder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","CanvasInstruction","endGeometry","finish","reverseHitDetectionInstructions","instruction","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$ol$render$canvas$ImageBuilder","CanvasBuilder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","sharedData","$ol$render$canvas$LineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$ol$render$canvas$PolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","$ol$render$canvas$TextBuilder","labels_","fillStates","strokeStates","textStates","textKey_","fillKey_","strokeKey_","geometryType","geometryWidths","beg","saveTextStates_","p0","p1","p2","p3","flatOffset","o","oo","cc","chunk","chunkBegin","drawChars_","strokeKey","textKey","fillKey","baseline","BATCH_CONSTRUCTORS","PolygonBuilder","Default","Builder","ImageBuilder","LineStringBuilder","TextBuilder","$ol$render$canvas$BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","substring","lineStringLength","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","line","$ol$render$canvas$Executor","alignFill_","coordinateCache_","renderedTransform_","widths_","createLabel","textIsArray","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","strokePadding","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","transformSetFromArray","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","part","execute","executeHitDetection","ORDER","circlePixelIndexArrayCache","getPixelIndexArray","maxDistanceSq","distances","pixelIndex","$ol$render$canvas$ExecutorGroup","allInstructions","renderBuffer","renderBuffer_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","Executor","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","idx","executor","builderTypes","HIT_DETECT_RESOLUTION","createHitDetectionImageData","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgContext","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","$ol$renderer$canvas$VectorLayer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","compositionContext_","renderWorlds","executorGroup","vectorSource","endWorld","world","setupCompositionContext_","compositionContext","releaseCompositionContext_","transformToString","lastIndexOf","animating","interacting","updateWhileAnimating","getUpdateWhileAnimating","updateWhileInteracting","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","defaultRenderOrder","loadExtents","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","getDeclutter","userExtent","getSquaredRenderTolerance","replayGroupInstructions","ExecutorGroup","$ol$renderer$canvas$VectorImageLayer","vectorRenderer_","CanvasVectorLayerRenderer","layerImageRatio_","getImageRatio","coordinateToVectorPixelTransform_","renderedPixelToCoordinateTransform_","vectorPixel","vectorRenderer","imageLayerState","imageFrameState","emptyImage","setCenterAndRadius","getRadiusSquared_","$ol$geom$Circle","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","cloneGeometries","geometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","clonedGeometries","$ol$geom$GeometryCollection","interpolatePoint","cumulativeLengths","lineStringCoordinateAtM","extrapolate","lo","hi","m0","lineStringsCoordinateAtM","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","getCoordinateAtM","getCoordinateAt","$ol$geom$LineString","lineStrings","appendLineString","multiLineString","getLineString","getLineStrings","midpoints","$ol$geom$MultiLineString","appendPoint","multiPoint","getPoint","$ol$geom$MultiPoint","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","thisLayout","polygons","thisEndss","appendPolygon","newEndss","multiPolygon","linearRingssArea","linearRingssCenter","getInteriorPoints","getPolygon","prevEnds","getPolygons","lastEnds","$ol$geom$MultiPolygon","RenderFeature","type_","flatCoordinates_","flatMidpoints_","properties_","midpoint","toGeometry","$ol$render$Feature","registered","register","proj4","projCodes","defs","def","projName","axis","to_meter","code1","proj1","code2","proj2","epsgLookup","ok","$ol$layer$BaseVector","declutter_","declutter","updateWhileAnimating_","updateWhileInteracting_","setRenderOrder","renderOrder","styleLike","toStyleFunction","$ol$layer$Vector","BaseVectorLayer","geoA","geoB","geoStack","fractionStack","fractions","geoM","fracA","fracB","fracM","maxIterations","meridian","lon","frac","parallel","lon2","DEFAULT_STROKE_STYLE","INTERVALS","$ol$layer$Graticule","VectorLayer","maxLines","targetSize","showLabels","lonLabelFormatter","latLabelFormatter","lonLabelPosition","latLabelPosition","lonLabelStyle","latLabelStyle","intervals","maxLat_","maxLon_","minLat_","minLon_","maxX_","maxY_","minX_","minY_","targetSize_","maxLines_","meridians_","parallels_","strokeStyle_","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","bottomLeft_","bottomRight_","topLeft_","topRight_","meridiansLabels_","parallelsLabels_","lonLabelFormatter_","latLabelFormatter_","lonLabelPosition_","latLabelPosition_","lonLabelStyleBase_","lonLabelStyle_","latLabelStyleBase_","latLabelStyle_","drawLabels_","intervals_","loaderFunction","strategyFunction","featurePool_","lineStyle_","loadedExtent_","realWorldExtent","renderExtent","equivalentProjection","updateProjectionInfo_","createGraticule_","featuresColl","poolIndex","addMeridian_","minLat","maxLat","getMeridian_","geom","addParallel_","minLon","maxLon","getParallel_","rotationCenter","rotationExtent","unrotatedWidth","unrotatedHeight","startWorld","labelsAtStart","vectorContext","textPoint","getMeridianPoint_","getParallelPoint_","getInterval_","validCenterP","centerLonLat","centerLon","centerLat","cnt","validExtentP","validExtent","clampedLat","clampedBottom","clampedTop","getMeridians","clampedLeft","clampedRight","getParallels","toLonLatTransform","lonLatCoordinates","worldExtentP","tmpArray4","WebGLRenderTarget$1","helper_","framebuffer_","dataCacheDirty_","updateSize_","clearCachedData","readAll","readPixels","readPixel","WebGLWorkerMessageType","earcut","holeIndices","dim","invSize","hasHoles","outerLen","outerNode","linkedList","triangles","steiner","getLeftmost","compareX","eliminateHole","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","filterPoints","again","ear","zOrder","prevZ","nextZ","q","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","ax","bx","cx","ay","by","cy","pointInTriangle","minZ","maxZ","locallyInside","isValidDiagonal","splitPolygon","hole","bridge","hx","hy","qx","mx","my","tanMin","sectorContainsSector","findHoleBridge","bridgeReverse","leftmost","py","intersectsPolygon","inside","middleInside","q1","q2","o1","sign","o2","o3","o4","onSegment","an","bp","sum","colorEncodeId","radix","divide","earcutModule","exports","default","deviation","polygonArea","trianglesArea","flatten","holes","holeIndex","WebGLPointsLayerRenderer$1","projectionMatrixTransform","sourceRevision_","verticesBuffer_","WebGLArrayBuffer","hitVerticesBuffer_","indicesBuffer_","vertexShader_","fragmentShader_","program_","hitDetectionEnabled_","hitFragmentShader","hitVertexShader","hitVertexShader_","hitFragmentShader_","hitProgram_","customAttributes","attribute","hitDetectionAttributes","currentTransform_","renderTransform_","invertRenderTransform_","renderInstructions_","hitRenderInstructions_","hitRenderTarget_","lastSentId","worker_","createWebGLWorker","received","projectionTransform","hitDetection","vertexBuffer","indexBuffer","makeInverseTransform","renderInstructions","featureCache_","featureCount_","sourceListenKeys_","handleSourceFeatureAdded_","handleSourceFeatureChanged_","handleSourceFeatureDelete_","handleSourceFeatureClear_","WebGLRenderTarget","renderCount","translateTransform","renderHitDetection","viewNotMoving","sourceChanged","BaseVector","rebuildBuffers_","totalInstructionsCount","totalHitInstructionsCount","featureCache","tmpCoords","tmpColor","hitColor","renderIndex","hitIndex","featureUid","customAttributesSize","hitMessage","mult","colorDecodeId","DEFAULT_GRADIENT","$ol$layer$Heatmap","gradient","blur","gradient_","handleGradientChanged_","setGradient","setBlur","weightFunction_","getBlur","getGradient","createLinearGradient","addColorStop","createGradient","WebGLPointsLayerRenderer","u_size","u_blurSlope","u_gradientTexture","u_opacity","$ol$layer$VectorImage","imageRatio","imageRatio_","CanvasVectorImageLayerRenderer","$ol$interaction$DblClickDragZoom","opt_options","scaleDeltaByPixel_","handlingDownUpSequence_","handlingDoubleDownSequence_","trackedPointers_","waitForDblTap","isPointerDraggingEvent","doubleTapTimeoutId_","DragAndDropEventType","DragAndDropEvent","file","$ol$interaction$DragAndDrop","readAsBuffer_","formats_","formatConstructors","dropListenKeys_","source_","handleResult_","formats","TextDecoder","tryReadFeatures_","registerListeners_","dropArea","handleDrop","handleStop","unregisterListeners_","files","dataTransfer","reader","FileReader","readAsArrayBuffer","readAsText","dropEffect","$ol$interaction$DragRotateAndZoom","lastMagnitude_","magnitude","angleDelta","DrawEventType","DrawEvent","getSquaredDistance","getCoordinate","getCumulativeSquaredDistance","endIndex","lowIndex","highIndex","lowWholeIndex","highWholeIndex","interpolateCoordinate","appendGeometryTraceTargets","targets","appendTraceTarget","polys","sharedUpdateInfo","ring","getPointSegmentRelationship","sharedRel","getDefaultStyleFunction","$ol$interaction$Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","pointerType_","freehand_","features_","snapTolerance_","snapTolerance","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryLayout_","geometryLayout","mode","squaredLength","squaredCoordinateDistance","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","geometryName","freehandCondition_","freehand","freehandCondition","traceCondition_","setTrace","trace","traceState_","traceSource_","traceSource","updateState_","getOverlay","move","addToDrawing_","startDrawing_","deactivateTrace_","toggleTraceState_","getTraceTargets","startPx","targetIndex","addOrRemoveTracedCoordinates_","previouslyForward","addTracedCoordinates_","removeTracedCoordinates_","fromIndex","toIndex","removeLastPoints_","appendCoordinates","updateTrace_","traceState","updatedTraceTarget","closestTargetDistance","newTargetIndex","newEndIndex","minSegmentDistance","coordinateIndex","newTarget","considerBothDirections","newCoordinate","forwardDistance","reverseDistance","getTraceTargetUpdate","oldTarget","tracing","startingToDraw","finishDrawing","atFinish_","abortDrawing","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","createOrUpdateCustomSketchLine_","sketchLineGeom","removeLastPoint","sketchFeature","abortDrawing_","newDrawing","ending","sketchFeatures","overlaySource","ExtentEventType","ExtentEvent","getDefaultExtentStyleFunction","getDefaultPointerStyleFunction","getPointHandler","fixedPoint","getEdgeHandler","fixedP1","fixedP2","$ol$interaction$Extent","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","vertexOverlay_","pointerStyle","snapToVertex_","pixelCoordinate","sortByDistance","getExtentInternal","segments","getSegments","closestSegment","vertex","vertexPixel","coordinateDistance","pixel1","pixel2","squaredDist1","squaredDist2","dist","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","vertexFeature","getOpposingPoint","x_","y_","readNumber","writeNumber","to5","differentNumber","$ol$interaction$Link","animationOptions","animationOptions_","replace_","prefix_","initial_","getParamName_","get_","set_","delete_","delete","oldMap","updateUrl_","handleChangeLayerGroup_","searchParams","history","replaceState","updateView","viewProperties","layersParam","initial","visibilities","pushState","CIRCLE_CIRCUMFERENCE_INDEX","tempSegment","ModifyEventType","ModifyEvent","compareIndexes","projectedDistanceToSegmentDataSquared","pointCoordinates","segmentData","distanceToCenterSquared","distanceToCircumference","closestOnSegmentData","$ol$interaction$Modify","boundHandleFeatureChange_","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","featuresBeingModified_","rBush_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","hitDetection_","handleSourceAdd_","handleSourceRemove_","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","snapToPointer_","snapToPointer","writer","handlePointerAtPixel_","willModifyFeatures_","ss","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","nodeToRemove","depth","centerSegmentData","circumferenceSegmentData","featureSegments","createOrUpdateVertexFeature_","removePoint","dragSegment","setGeometryCoordinates_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","insertVertex_","nodes","hitPointGeometry","bufferExtent","vertexSegments","geometryUid","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","dragSegments","segmentsByFeature","component","newIndex","deleted","SelectEventType","SelectEvent","selected","deselected","originalFeatureStyles","Select","boundAddFeature_","boundRemoveFeature_","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","getHitTolerance","setHitTolerance","restorePreviousStyle_","applySelectedStyle_","removeFeatureLayerAssociation_","$ol$interaction$Select","getFeatureFromEvent","$ol$interaction$Snap","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","GEOMETRY_SEGMENTERS_","segmentPointGeometry_","segmentLineStringGeometry_","segmentPolygonGeometry_","segmentMultiPointGeometry_","segmentMultiLineStringGeometry_","segmentMultiPolygonGeometry_","segmentGeometryCollectionGeometry_","segmentCircleGeometry_","feature_uid","segmenter","segmentsData","getFeatures_","snapTo","updateFeature_","featuresToUpdate","unlisten","unregister","currentMap","projectedCoordinate","segmentsLength","closestVertex","squaredPixelTolerance","getResult","tempVertexCoord","segmentStart","segmentEnd","TranslateEventType","TranslateEvent","startCoordinate","$ol$interaction$Translate","lastCoordinate_","startCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","newViewCoordinate","lastViewCoordinate","flipXY","destOffset","$ol$format$Feature","defaultFeatureProjection","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","write","transformExtentWithOptions","getObject","$ol$format$JSONFeature","FeatureFormat","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","writeFeatureObject","writeFeaturesObject","writeGeometryObject","GEOMETRY_READERS","getGeometryLayout","paths","GEOMETRY_WRITERS","esriJSON","hasZM","getHasZM","hasZ","hasM","esriJSONPolygon","flatRing","outerRings","matched","outerRing","convertRings","geometryReader","geometryWriter","$ol$format$EsriJSON","JSONFeature","idField","esriJSONFeature","esriJSONFeatures","objectIdFieldName","wkid","objects","XMLFeature$1","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","readBoolean","readBooleanString","readDateTime","dateTime","readDecimal","readDecimalString","readPositiveInteger","readNonNegativeIntegerString","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","writeDecimalTextNode","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","GPX_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","TRK_SEQUENCE","TRK_SERIALIZERS","writeWptType","RTE_PARSERS","cmt","desc","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","writeLink","RTEPT_TYPE_SEQUENCE","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","GEOMETRY_TYPE_TO_NODENAME","GPX_NODE_FACTORY","layoutOptions","getAttribute","applyLayoutOptions","setAttributeNS","$ol$format$GPX","XMLFeature","readExtensions_","readExtensions","handleReadExtensions_","extensionsNode","featureReader","gpx","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","$ol$format$GeoJSON","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","$ol$format$TextFeature","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","B_RECORD_RE","H_RECORD_RE","HFDTE_RECORD_RE","NEWLINE_RE","$ol$format$IGC","TextFeature","altitudeMode_","altitudeMode","year","month","day","lastDateTime","hour","minute","second","UTC","GX_NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","insetPixels","PLACEMARK_PARSERS","ExtendedData","extendedDataParser","Region","regionParser","MultiGeometry","readMultiGeometry","readLineString","readLinearRing","readPoint","readPolygon","readStyle","StyleMap","styleMapValue","readStyleMapValue","placemarkObject","address","description","phoneNumber","styleUrl","readStyleURL","visibility","MultiTrack","GX_MULTITRACK_GEOMETRY_PARSERS","Track","readGxTrack","NETWORK_LINK_PARSERS","Link","readURI","CAMERA_PARSERS","Altitude","Longitude","Latitude","Tilt","AltitudeMode","Heading","Roll","REGION_PARSERS","LatLonAltBox","LAT_LON_ALT_BOX_PARSERS","regionObject","Lod","LOD_PARSERS","lodObject","KML_SEQUENCE","KML_SERIALIZERS","Document","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","Placemark","writePlacemark","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_FILL_STYLE","DEFAULT_NO_IMAGE_STYLE","DEFAULT_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","DEFAULT_TEXT_STYLE","DEFAULT_STYLE","TEXTAREA","DEFAULT_STYLE_ARRAY","scaleForSize","defaultIconUrlFunction","findStyle","styleValue","defaultStyle","sharedStyles","readColor","hexColor","readFlatCoordinates","re","baseURI","readScale","STYLE_MAP_PARSERS","Pair","pairObject","PAIR_PARSERS","ICON_STYLE_PARSERS","iconObject","ICON_PARSERS","hotSpot","xunits","yunits","LABEL_STYLE_PARSERS","LINE_STYLE_PARSERS","POLY_STYLE_PARSERS","outline","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","GX_TRACK_PARSERS","when","whens","gxTrackObject","GEOMETRY_FLAT_COORDINATES_PARSERS","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","extrude","tessellate","MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","setCommonGeometryProperties","FLAT_LINEAR_RINGS_PARSERS","innerBoundaryIs","innerBoundaryFlatLinearRings","INNER_BOUNDARY_IS_PARSERS","outerBoundaryIs","flatLinearRing","OUTER_BOUNDARY_IS_PARSERS","flatLinearRings","STYLE_PARSERS","IconStyle","styleObject","IconObject","drawIcon","iconUrlFunction_","resizeScale","LabelStyle","LineStyle","PolyStyle","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DATA_PARSERS","displayName","EXTENDED_DATA_PARSERS","Data","featureObject","SchemaData","SCHEMA_DATA_PARSERS","SimpleData","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","writeColorTextNode","rgba","abgr","hex","EXTENDEDDATA_NODE_SERIALIZERS","pair","DATA_NODE_FACTORY","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","icon","vec2","writeScaleTextNode","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","factory","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","namesAndValues","names","pointStyles","lineStyles","polyStyles","STYLE_SEQUENCE","STYLE_SERIALIZERS","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","styleArray","writeStyles_","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","POLY_STYLE_SEQUENCE","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","POLY_STYLE_SERIALIZERS","iconProperties","$ol$format$KML","defaultStyle_","extractStyles_","extractStyles","writeStyles","sharedStyles_","showPointNames_","showPointNames","iconUrlFunction","readDocumentOrFolder_","Folder","readPlacemark_","readSharedStyle_","readSharedStyleMap_","drawName","multiGeometryPoints","featureStyle","nameStyle","foundStyle","textOffset","createNameStyleFunction","createFeatureStyleFunction","styleUri","fs","readName","readNameFromDocument","readNameFromNode","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","readCamera","cameras","readCameraFromDocument","readCameraFromNode","kml","xmlnsUri","ieee754","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","LN2","pbf","Pbf","require$$0","ArrayBuffer","isView","Varint","Fixed64","Bytes","Fixed32","SHIFT_LEFT_32","SHIFT_RIGHT_32","utf8TextDecoder","readPackedEnd","readVarint","toNum","isSigned","makeRoomForExtraLength","startPos","extraLen","realloc","writePackedVarint","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","readInt32","destroy","readFields","readField","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","read","readDouble","readVarintRemainder","readVarint64","readSVarint","subarray","readUtf8TextDecoder","str","b3","b0","bytesPerSequence","readUtf8","readBytes","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","writeUtf8","writeBytes","writeRawMessage","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","layersPBFReader","layerPBFReader","featurePBFReader","readRawFeature","$ol$format$MVT","featureClass_","featureClass","layerName_","layerName","idProperty_","idProperty","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","ctor","PBF","pbfLayers","pbfLayer","WAY_PARSERS","nd","ndrefs","readTag","PARSERS","tags","NODE_PARSERS","way","ways","$ol$format$OSMXML","XML$1","readFromDocument","readFromNode","NAMESPACE_URI","readHref","ServiceIdentification","SERVICE_IDENTIFICATION_PARSERS","ServiceProvider","SERVICE_PROVIDER_PARSERS","OperationsMetadata","OPERATIONS_METADATA_PARSERS","ADDRESS_PARSERS","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","ALLOWED_VALUES_PARSERS","Value","CONSTRAINT_PARSERS","AllowedValues","CONTACT_INFO_PARSERS","Phone","PHONE_PARSERS","Address","DCP_PARSERS","HTTP","HTTP_PARSERS","Get","REQUEST_METHOD_PARSERS","Post","OPERATION_PARSERS","DCP","Operation","Voice","Facsimile","Constraint","SERVICE_CONTACT_PARSERS","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","$ol$format$OWS","XML","owsObject","encodeDeltas","numbers","lastNumbers","encodeFloats","decodeDeltas","encoded","decodeFloats","encodeSignedIntegers","decodeSignedIntegers","encodeUnsignedIntegers","decodeUnsignedIntegers","encodeUnsignedInteger","current","$ol$format$Polyline","factor_","transformVertex","arcs","concatenateArcs","polyArray","ringCoords","indices","readFeaturesFromGeometryCollection","readFeatureFromGeometry","transformArc","$ol$format$TopoJSON","topoJSONTopology","transformArcs","topoJSONFeatures","objectName","GMLNS","ONLY_WHITESPACE_RE","GMLBase","featureType","featureNS","srsName","schemaLocation","FEATURE_COLLECTION_PARSERS","namespace","featureMember","readFeaturesInternal","featureMembers","defaultPrefix","ns","featureTypes","readFeatureElement","readGeometryOrExtent","GEOMETRY_PARSERS","readExtentElement","readGeometryElement","readFeatureElementInternal","asFeature","_content_","fid","readMultiPoint","MULTIPOINT_PARSERS","readMultiLineString","MULTILINESTRING_PARSERS","readMultiPolygon","MULTIPOLYGON_PARSERS","pointMemberParser","POINTMEMBER_PARSERS","lineStringMemberParser","LINESTRINGMEMBER_PARSERS","polygonMemberParser","POLYGONMEMBER_PARSERS","internalOptions","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","GMLBase$1","MULTIGEOMETRY_TO_MEMBER_NODENAME","MultiCurve","MultiSurface","GML2","containerSrs","coordsGroups","readBox","BOX_PARSERS_","innerBoundaryIsParser","outerBoundaryIsParser","GEOMETRY_NODE_FACTORY_","multiSurface","surface","multiCurve","writeFeatureElement","writeGeometryElement","writeCurveOrLineString","createCoordinatesNode_","writeCoordinates_","writeCurveSegments_","writeLineStringOrCurveMember","writeMultiCurveOrLineString","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","GEOMETRY_SERIALIZERS","getCoords_","writeSurfaceOrPolygon","RING_SERIALIZERS","RING_NODE_FACTORY_","patches","writeSurfacePatches_","exteriorWritten","writeRing","writeLinearRing","writePoint","writeMultiPoint","POINTMEMBER_SERIALIZERS","writePointMember","writeMultiSurfaceOrPolygon","SURFACEORPOLYGONMEMBER_SERIALIZERS","writeSurfaceOrPolygonMember","writeEnvelope","ENVELOPE_SERIALIZERS","Box","Curve","Surface","Envelope","curveMember","surfaceMember","lowerCorner","upperCorner","GML2$1","GML3","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve","MULTICURVE_PARSERS","readFlatCurveRing","readMultiSurface","MULTISURFACE_PARSERS","curveMemberParser","CURVEMEMBER_PARSERS","surfaceMemberParser","SURFACEMEMBER_PARSERS","readPatch","PATCHES_PARSERS","readSegment","SEGMENTS_PARSERS","readPolygonPatch","readLineStringSegment","interiorParser","exteriorParser","readSurface","SURFACE_PARSERS","readCurve","CURVE_PARSERS","readEnvelope","ENVELOPE_PARSERS","readFlatPos","readFlatPosList","contextDimension","writePos_","srsDimension","writePosList_","posList","writeFeatureMembers_","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","Ring","GML3$1","GML32","GML32$1","Filter$1","tagName_","getTagName","LogicalNary$1","Filter","And$1","LogicalNary","Bbox$1","boundedBy","member","TRANSACTION_SUMMARY_PARSERS","totalInserted","totalUpdated","totalDeleted","TRANSACTION_RESPONSE_PARSERS","TransactionSummary","readTransactionSummary","InsertResults","readInsertResults","QUERY_SERIALIZERS","PropertyName","TRANSACTION_SERIALIZERS","Insert","Update","writeUpdate","Delete","writeDelete","writeProperty","Native","writeNative","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","SCHEMA_LOCATIONS","GML_FORMATS","serializeTransactionRequest","OGC_FID_PARSERS","FeatureId","fidParser","INSERT_RESULTS_PARSERS","gmlVersion","writeOgcFidFilter","getTypeName","featurePrefix","typeName","nativeElement","vendorId","safeToIgnore","GETFEATURE_SERIALIZERS","Query","writeQuery","During","writeDuringFilter","And","writeLogicalFilter","Or","Not","writeNotFilter","BBOX","writeBboxFilter","Contains","writeSpatialFilter","Intersects","Within","DWithin","writeDWithinFilter","PropertyIsEqualTo","writeComparisonFilter","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","writeIsNullFilter","PropertyIsBetween","writeIsBetweenFilter","PropertyIsLike","writeIsLikeFilter","Disjoint","ResourceId","propertyNames","typeNameAttr","getFilterNS","writeFilterCondition","writePropertyName","unit","writeExpression","propertyName","timePeriod","writeTimeInstant","matchCase","writeLiteral","expression","lowerBoundary","upperBoundary","wildCard","singleChar","escapeChar","pattern","timeInstant","timePosition","writeGetFeature","$ol$format$WFS","featureType_","featureNS_","gmlFormat_","gmlFormat","schemaLocation_","getFeatureType","setFeatureType","featuresNS","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","handle","outputFormat","maxFeatures","resultType","viewParams","combineBboxAndFilter","completeFilter","bboxFilter","Bbox","bboxFilterFn","Function","andFilterFn","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","createTransactionRequest","nativeElements","$ol$format$WMSGetFeatureInfo","readFeatures_","layerElement","toRemove","layerFeatures","gmlFeatures","events","FullScreenEventType","isFullScreenSupported","requestFullscreen","fullscreenEnabled","isFullScreen","fullscreenElement","requestFullScreen","$ol$control$FullScreen","isInFullscreen_","boundHandleMapTargetChange_","handleMapTargetChange_","cssClassName_","documentListeners_","activeClassName_","activeClassName","inactiveClassName_","inactiveClassName","labelNode_","labelActive","labelActiveNode_","button_","setClassName_","handleFullScreen_","exitFullscreen","exitFullScreen","requestFullScreenWithKeys","handleFullScreenChange_","wasInFullscreen","fullscreen","PROJECTION","COORDINATE_FORMAT","$ol$control$MousePosition","coordinateFormat","setCoordinateFormat","renderOnMouseOut_","placeholder","placeholder_","renderedHTML_","mapProjection_","getCoordinateFormat","handleMouseMove","updateHTML_","handleMouseOut","html","MAX_RATIO","MIN_RATIO","$ol$control$OverviewMap","boundHandleRotationChanged_","handleRotationChanged_","viewExtent_","ovmapDiv_","view_","ovmap","Map","ovmap_","boxSizing","boxOverlay_","Overlay","scope","overlayBox","mousePosition","endMoving","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","updateBoxAfterOvmapIsRendered_","newView","validateExtent_","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","updateBox_","ovresolution","ovmapPostrenderKey_","getOverviewMap","UNITS_PROP","LEADING_DIGITS","DEFAULT_DPI","$ol$control$ScaleLine","bar","innerElement_","viewState_","minWidth_","minWidth","maxWidth_","maxWidth","renderedWidth_","handleUnitsChanged_","setUnits","scaleBar_","scaleBarSteps_","scaleBarText_","dpi_","setDpi","pointResolutionUnits","nominalCount","suffix","metersPerDegree","decimalCount","previousCount","previousWidth","previousDecimalCount","createScaleBar","resolutionScale","getScaleForResolution","mapScale","toLocaleString","stepWidth","scaleSteps","createMarker","cls","createStepText","isLast","lengthString","Direction","$ol$control$ZoomSlider","currentResolution_","direction_","heightLimit_","widthLimit_","startX_","startY_","thumbSize_","sliderInitialized_","thumbElement","containerElement","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","initSlider_","containerWidth","containerHeight","containerStyle","thumb","thumbStyle","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","drag","setThumbPosition_","getPositionForResolution_","amount","$ol$control$ZoomToExtent","handleZoomToExtent","ol","$ol$Collection","_ol_Collection$CollectionEvent","_ol_DataTile$asArrayLike","_ol_DataTile$asImageLike","_ol_DataTile$toArray","_ol_Feature$createStyleFunction","Geolocation","_ol_Geolocation$GeolocationError","_ol_Image$listenImage","_ol_Object$ObjectEvent","_ol_Observable$unByKey","_ol_TileQueue$getTilePriority","_ol_TileRange$createOrUpdate","VectorRenderTile","_ol_View$createCenterConstraint","_ol_View$createResolutionConstraint","_ol_View$createRotationConstraint","_ol_View$isNoopAnimation","_ol_array$ascending","_ol_array$binarySearch","_ol_array$equals","_ol_array$extend","_ol_array$isSorted","_ol_array$linearFindNearest","_ol_array$reverseSubArray","stableSort","compareFnc","asserts","_ol_asserts$assert","centerconstraint","_ol_centerconstraint$createExtent","_ol_centerconstraint$none","_ol_color$asArray","_ol_color$asString","_ol_color$fromString","_ol_color$isStringColor","_ol_color$normalize","_ol_color$toString","colorlike","_ol_colorlike$asColorLike","_ol_console$error","setLevel","_ol_console$warn","FullScreen","MousePosition","OverviewMap","ScaleLine","ZoomSlider","ZoomToExtent","_ol_control_defaults$defaults","_ol_coordinate$add","_ol_coordinate$closestOnCircle","_ol_coordinate$closestOnSegment","createStringXY","_ol_coordinate$degreesToStringHDMS","_ol_coordinate$distance","_ol_coordinate$equals","_ol_coordinate$format","_ol_coordinate$getWorldsAway","_ol_coordinate$rotate","_ol_coordinate$scale","_ol_coordinate$squaredDistance","_ol_coordinate$squaredDistanceToSegment","toStringHDMS","_ol_coordinate$toStringXY","_ol_coordinate$wrapX","css","_ol_css$CLASS_COLLAPSED","_ol_css$CLASS_CONTROL","_ol_css$CLASS_HIDDEN","_ol_css$CLASS_SELECTABLE","_ol_css$CLASS_UNSELECTABLE","_ol_css$CLASS_UNSUPPORTED","_ol_css$getFontParameters","dom","_ol_dom$createCanvasContext2D","_ol_dom$outerHeight","_ol_dom$outerWidth","_ol_dom$releaseCanvas","_ol_dom$removeChildren","_ol_dom$removeNode","_ol_dom$replaceChildren","_ol_dom$replaceNode","_ol_easing$easeIn","_ol_easing$easeOut","_ol_easing$inAndOut","_ol_easing$linear","upAndDown","_ol_events_Event$stopPropagation","_ol_events_condition$all","_ol_events_condition$altKeyOnly","_ol_events_condition$altShiftKeysOnly","_ol_events_condition$always","click","doubleClick","_ol_events_condition$focus","_ol_events_condition$focusWithTabindex","_ol_events_condition$mouseActionButton","_ol_events_condition$mouseOnly","_ol_events_condition$never","_ol_events_condition$noModifierKeys","penOnly","pointerEvt","platformModifierKeyOnly","pointerMove","_ol_events_condition$primaryAction","_ol_events_condition$shiftKeyOnly","_ol_events_condition$singleClick","_ol_events_condition$targetNotEditable","touchOnly","_ol_events$listen","_ol_events$listenOnce","_ol_events$unlistenByKey","_ol_extent$applyTransform","_ol_extent$approximatelyEquals","_ol_extent$boundingExtent","_ol_extent$buffer","_ol_extent$clone","_ol_extent$closestSquaredDistanceXY","_ol_extent$containsCoordinate","_ol_extent$containsExtent","_ol_extent$containsXY","_ol_extent$coordinateRelationship","_ol_extent$createEmpty","_ol_extent$createOrUpdate","_ol_extent$createOrUpdateEmpty","_ol_extent$createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","_ol_extent$createOrUpdateFromFlatCoordinates","createOrUpdateFromRings","_ol_extent$equals","_ol_extent$extend","_ol_extent$extendCoordinate","_ol_extent$extendCoordinates","_ol_extent$extendFlatCoordinates","_ol_extent$extendRings","_ol_extent$extendXY","_ol_extent$forEachCorner","_ol_extent$getArea","_ol_extent$getBottomLeft","_ol_extent$getBottomRight","_ol_extent$getCenter","_ol_extent$getCorner","getEnlargedArea","_ol_extent$getForViewAndSize","_ol_extent$getHeight","_ol_extent$getIntersection","getIntersectionArea","getMargin","_ol_extent$getRotatedViewport","_ol_extent$getTopLeft","_ol_extent$getTopRight","_ol_extent$getWidth","_ol_extent$intersects","_ol_extent$intersectsSegment","_ol_extent$isEmpty","_ol_extent$returnOrUpdate","_ol_extent$scaleFromCenter","_ol_extent$wrapAndSliceX","_ol_extent$wrapX","featureloader","_ol_featureloader$loadFeaturesXhr","setWithCredentials","xhrWithCredentials","_ol_featureloader$xhr","EsriJSON","_ol_format_Feature$transformExtentWithOptions","_ol_format_Feature$transformGeometryWithOptions","GPX","GeoJSON","IGC","KML","getDefaultFillStyle","getDefaultImageStyle","getDefaultStrokeStyle","getDefaultStyle","getDefaultStyleArray","getDefaultTextStyle","_ol_format_KML$readFlatCoordinates","MVT","OSMXML","OWS","Polyline","_ol_format_Polyline$decodeDeltas","_ol_format_Polyline$decodeFloats","_ol_format_Polyline$decodeSignedIntegers","_ol_format_Polyline$decodeUnsignedIntegers","_ol_format_Polyline$encodeDeltas","_ol_format_Polyline$encodeFloats","_ol_format_Polyline$encodeSignedIntegers","_ol_format_Polyline$encodeUnsignedInteger","_ol_format_Polyline$encodeUnsignedIntegers","TopoJSON","WFS","writeFilter","WMSGetFeatureInfo","xlink","_ol_format_xlink$readHref","xsd","_ol_format_xsd$readBoolean","_ol_format_xsd$readBooleanString","_ol_format_xsd$readDateTime","_ol_format_xsd$readDecimal","_ol_format_xsd$readDecimalString","_ol_format_xsd$readNonNegativeIntegerString","_ol_format_xsd$readPositiveInteger","_ol_format_xsd$readString","_ol_format_xsd$writeBooleanTextNode","_ol_format_xsd$writeCDATASection","_ol_format_xsd$writeDateTimeTextNode","_ol_format_xsd$writeDecimalTextNode","_ol_format_xsd$writeNonNegativeIntegerTextNode","_ol_format_xsd$writeStringTextNode","_ol_functions$FALSE","_ol_functions$TRUE","_ol_functions$VOID","_ol_functions$memoizeOne","_ol_functions$toPromise","_ol_geom_Polygon$circular","_ol_geom_Polygon$fromCircle","_ol_geom_Polygon$fromExtent","_ol_geom_Polygon$makeRegular","_ol_geom_SimpleGeometry$getStrideForLayout","_ol_geom_SimpleGeometry$transformGeom2D","_ol_geom_flat_area$linearRing","_ol_geom_flat_area$linearRings","_ol_geom_flat_area$linearRingss","_ol_geom_flat_center$linearRingss","closest","_ol_geom_flat_closest$arrayMaxSquaredDelta","_ol_geom_flat_closest$assignClosestArrayPoint","_ol_geom_flat_closest$assignClosestMultiArrayPoint","_ol_geom_flat_closest$assignClosestPoint","_ol_geom_flat_closest$maxSquaredDelta","_ol_geom_flat_closest$multiArrayMaxSquaredDelta","_ol_geom_flat_contains$linearRingContainsExtent","_ol_geom_flat_contains$linearRingContainsXY","_ol_geom_flat_contains$linearRingsContainsXY","_ol_geom_flat_contains$linearRingssContainsXY","deflate","_ol_geom_flat_deflate$deflateCoordinate","_ol_geom_flat_deflate$deflateCoordinates","_ol_geom_flat_deflate$deflateCoordinatesArray","_ol_geom_flat_deflate$deflateMultiCoordinatesArray","flip","_ol_geom_flat_flip$flipXY","geodesic","greatCircleArc","geoProjection","cosLat1","sinLat1","cosLat2","sinLat2","cosDeltaLon","sinDeltaLon","D","cosD","sinD","_ol_geom_flat_geodesic$meridian","_ol_geom_flat_geodesic$parallel","inflate","_ol_geom_flat_inflate$inflateCoordinates","_ol_geom_flat_inflate$inflateCoordinatesArray","_ol_geom_flat_inflate$inflateMultiCoordinatesArray","interiorpoint","_ol_geom_flat_interiorpoint$getInteriorPointOfArray","_ol_geom_flat_interiorpoint$getInteriorPointsOfMultiArray","_ol_geom_flat_interpolate$interpolatePoint","_ol_geom_flat_interpolate$lineStringCoordinateAtM","_ol_geom_flat_interpolate$lineStringsCoordinateAtM","intersectsextent","_ol_geom_flat_intersectsextent$intersectsLineString","_ol_geom_flat_intersectsextent$intersectsLineStringArray","_ol_geom_flat_intersectsextent$intersectsLinearRing","_ol_geom_flat_intersectsextent$intersectsLinearRingArray","_ol_geom_flat_intersectsextent$intersectsLinearRingMultiArray","_ol_geom_flat_length$lineStringLength","linearRingLength","perimeter","orient","_ol_geom_flat_orient$inflateEnds","_ol_geom_flat_orient$linearRingIsClockwise","_ol_geom_flat_orient$linearRingsAreOriented","_ol_geom_flat_orient$linearRingssAreOriented","_ol_geom_flat_orient$orientLinearRings","_ol_geom_flat_orient$orientLinearRingsArray","_ol_geom_flat_reverse$coordinates","_ol_geom_flat_segments$forEach","_ol_geom_flat_simplify$douglasPeucker","_ol_geom_flat_simplify$douglasPeuckerArray","douglasPeuckerMultiArray","_ol_geom_flat_simplify$quantize","_ol_geom_flat_simplify$quantizeArray","_ol_geom_flat_simplify$quantizeMultiArray","_ol_geom_flat_simplify$radialDistance","simplifyLineString","highQuality","_ol_geom_flat_simplify$snap","straightchunk","_ol_geom_flat_straightchunk$matchingChunk","textpath","_ol_geom_flat_textpath$drawTextOnPath","topology","lineStringIsClosed","lastCoord","_ol_geom_flat_transform$rotate","_ol_geom_flat_transform$scale","_ol_geom_flat_transform$transform2D","_ol_geom_flat_transform$translate","has","_ol_has$DEVICE_PIXEL_RATIO","_ol_has$FIREFOX","_ol_has$IMAGE_DECODE","_ol_has$MAC","_ol_has$PASSIVE_EVENT_LISTENERS","_ol_has$SAFARI","_ol_has$SAFARI_BUG_237906","_ol_has$WEBKIT","_ol_has$WORKER_OFFSCREEN_CANVAS","DblClickDragZoom","DragAndDrop","_ol_interaction_DragAndDrop$DragAndDropEvent","_ol_interaction_DragBox$DragBoxEvent","DragRotateAndZoom","Draw","_ol_interaction_Draw$DrawEvent","createBox","boxCoordinates","createRegularPolygon","internalAngle","Extent","_ol_interaction_Extent$ExtentEvent","_ol_interaction_Interaction$pan","_ol_interaction_Interaction$zoomByDelta","Modify","_ol_interaction_Modify$ModifyEvent","Pointer","_ol_interaction_Pointer$centroid","_ol_interaction_Select$SelectEvent","Snap","Translate","_ol_interaction_Translate$TranslateEvent","_ol_interaction_defaults$defaults","Base","BaseImage","BaseTile","Graticule","Group","_ol_layer_Group$GroupEvent","Heatmap","_ol_layer_Layer$inView","Vector","VectorImage","loadingstrategy","_ol_loadingstrategy$all","math","_ol_math$ceil","_ol_math$clamp","_ol_math$floor","_ol_math$lerp","_ol_math$modulo","_ol_math$round","_ol_math$solveLinearSystem","_ol_math$squaredDistance","_ol_math$squaredSegmentDistance","_ol_math$toDegrees","_ol_math$toFixed","_ol_math$toRadians","net","_ol_net$ClientError","_ol_net$ResponseError","_ol_net$getJSON","_ol_net$jsonp","overrideXHR","_ol_net$resolveUrl","restoreXHR","_ol_obj$clear","_ol_obj$isEmpty","Units","_ol_proj_Units$METERS_PER_UNIT","fromCode","_ol_proj$addCommon","_ol_proj$addCoordinateTransforms","_ol_proj$addEquivalentProjections","_ol_proj$addEquivalentTransforms","_ol_proj$addProjection","_ol_proj$addProjections","clearAllProjections","clearProj","clearTransformFuncs","clearUserProjection","_ol_proj$cloneTransform","_ol_proj$createProjection","_ol_proj$createSafeCoordinateTransform","_ol_proj$createTransformFromCoordinateTransform","_ol_proj$disableCoordinateWarning","epsg3857","_ol_proj_epsg3857$EXTENT","_ol_proj_epsg3857$HALF_SIZE","_ol_proj_epsg3857$MAX_SAFE_Y","_ol_proj_epsg3857$PROJECTIONS","_ol_proj_epsg3857$RADIUS","_ol_proj_epsg3857$WORLD_EXTENT","_ol_proj_epsg3857$fromEPSG4326","_ol_proj_epsg3857$toEPSG4326","epsg4326","_ol_proj_epsg4326$EXTENT","_ol_proj_epsg4326$METERS_PER_UNIT","_ol_proj_epsg4326$PROJECTIONS","_ol_proj_epsg4326$RADIUS","_ol_proj$equivalent","fromLonLat","_ol_proj$fromUserCoordinate","_ol_proj$fromUserExtent","_ol_proj$fromUserResolution","_ol_proj$get","_ol_proj$getPointResolution","_ol_proj$getTransform","_ol_proj$getTransformFromProjections","_ol_proj$getUserProjection","_ol_proj$identityTransform","fromEPSGCode","epsgCode","getEPSGLookup","isRegistered","_ol_proj_proj4$register","setEPSGLookup","_ol_proj_projections$add","_ol_proj_projections$clear","_ol_proj_projections$get","_ol_proj$setUserProjection","toLonLat","lonLat","_ol_proj$toUserCoordinate","_ol_proj$toUserExtent","_ol_proj$toUserResolution","_ol_proj$transform","_ol_proj$transformExtent","transformWithProjections","_ol_proj_transforms$add","_ol_proj_transforms$clear","_ol_proj_transforms$get","useGeographic","toFeature","_ol_render_Feature$toGeometry","BuilderGroup","_ol_render_canvas_ExecutorGroup$getPixelIndexArray","Immediate","_ol_render_canvas_Instruction$beginPathInstruction","_ol_render_canvas_Instruction$closePathInstruction","_ol_render_canvas_Instruction$fillInstruction","_ol_render_canvas_Instruction$strokeInstruction","_ol_render_canvas$checkedFonts","_ol_render_canvas$defaultFillStyle","_ol_render_canvas$defaultFont","_ol_render_canvas$defaultLineCap","_ol_render_canvas$defaultLineDash","defaultLineDashOffset","_ol_render_canvas$defaultLineJoin","defaultLineWidth","_ol_render_canvas$defaultMiterLimit","_ol_render_canvas$defaultPadding","_ol_render_canvas$defaultStrokeStyle","_ol_render_canvas$defaultTextAlign","_ol_render_canvas$defaultTextBaseline","_ol_render_canvas$drawImageOrLabel","_ol_render_canvas$getTextDimensions","hitdetect","_ol_render_canvas_hitdetect$HIT_DETECT_RESOLUTION","_ol_render_canvas_hitdetect$createHitDetectionImageData","_ol_render_canvas_hitdetect$hitDetect","_ol_render_canvas$measureAndCacheTextWidth","_ol_render_canvas$measureTextHeight","_ol_render_canvas$measureTextWidth","_ol_render_canvas$registerFont","rotateAtOffset","_ol_render_canvas$textHeights","getRenderPixel","_ol_render$getVectorContext","toContext","Composite","_ol_renderer_canvas_Layer$canvasPool","VectorImageLayer","vector","_ol_renderer_vector$defaultOrder","_ol_renderer_vector$getSquaredTolerance","_ol_renderer_vector$getTolerance","_ol_renderer_vector$renderFeature","_ol_reproj$calculateSourceExtentResolution","_ol_reproj$calculateSourceResolution","_ol_reproj$canvasPool","common","_ol_reproj_common$ERROR_THRESHOLD","_ol_reproj$render","resolutionconstraint","_ol_resolutionconstraint$createMinMaxResolution","_ol_resolutionconstraint$createSnapToPower","_ol_resolutionconstraint$createSnapToResolutions","rotationconstraint","_ol_rotationconstraint$createSnapToN","_ol_rotationconstraint$createSnapToZero","_ol_rotationconstraint$disable","_ol_rotationconstraint$none","_ol_size$buffer","_ol_size$hasArea","_ol_size$scale","_ol_size$toSize","BingMaps","_ol_source_BingMaps$quadKey","Cluster","_ol_source_Image$ImageSourceEvent","_ol_source_Image$defaultImageLoadFunction","ImageArcGISRest","ImageStatic","ImageWMS","OGCMapTile","OSM","_ol_source_OSM$ATTRIBUTION","Raster","_ol_source_Raster$Processor","_ol_source_Raster$RasterSourceEvent","_ol_source_Raster$newImageData","Stamen","_ol_source_Tile$TileSourceEvent","TileArcGISRest","TileDebug","TileJSON","TileWMS","UTFGrid","_ol_source_UTFGrid$CustomTile","_ol_source_Vector$VectorSourceEvent","WMTS","optionsFromCapabilities","wmtsCap","tileMatrixSets","findIndex","supportedCRS","matrixSetObj","projConfig","switchXY","selectedMatrixLimit","MinTileCol","MinTileRow","MaxTileCol","MatrixWidth","MaxTileRow","MatrixHeight","tileMatrixValue","Identifier","ScaleDenominator","TopLeftCorner","tileSpanX","TileWidth","tileSpanY","TileHeight","matrixSetExtent","wgs84BoundingBox","wgs84ProjectionExtent","wgs84MatrixSetExtent","gets","encodings","DEFAULT_WMS_VERSION","ogcTileUtil","_ol_source_ogcTileUtil$getMapTileUrlTemplate","_ol_source_ogcTileUtil$getTileSetInfo","_ol_source_ogcTileUtil$getVectorTileUrlTemplate","sourcesFromTileGrid","sourceCache","tileGridExtent","wantedSources","wms","_ol_source_wms$DEFAULT_VERSION","sphere","_ol_sphere$DEFAULT_RADIUS","_ol_sphere$getDistance","_ol_sphere$offset","_ol_string$compareVersions","_ol_string$padNumber","structs","LinkedList","_ol_structs_PriorityQueue$DROP","_ol_style_IconImage$get","_ol_style_IconImageCache$shared","_ol_style_Style$createDefaultStyle","_ol_style_Style$createEditingStyle","_ol_style_Style$toFunction","expressions","_ol_style_expressions$Operators","_ol_style_expressions$PALETTE_TEXTURE_ARRAY","_ol_style_expressions$arrayToGlsl","_ol_style_expressions$colorToGlsl","_ol_style_expressions$expressionToGlsl","_ol_style_expressions$getStringNumberEquivalent","_ol_style_expressions$getValueType","_ol_style_expressions$isTypeUnique","_ol_style_expressions$numberToGlsl","_ol_style_expressions$stringToGlsl","_ol_style_expressions$uniformNameForVariable","_ol_style_flat$toStyle","tilecoord","_ol_tilecoord$createOrUpdate","_ol_tilecoord$fromKey","getCacheKeyForTileKey","_ol_tilecoord$getKey","_ol_tilecoord$getKeyZXY","_ol_tilecoord$hash","_ol_tilecoord$withinExtentAndZ","_ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet","_ol_tilegrid_common$DEFAULT_MAX_ZOOM","_ol_tilegrid_common$DEFAULT_TILE_SIZE","_ol_tilegrid$createForExtent","_ol_tilegrid$createForProjection","_ol_tilegrid$createXYZ","_ol_tilegrid$extentFromProjection","_ol_tilegrid$getForProjection","_ol_tilegrid$wrapX","tileurlfunction","_ol_tileurlfunction$createFromTemplate","_ol_tileurlfunction$createFromTemplates","_ol_tileurlfunction$createFromTileUrlFunctions","_ol_tileurlfunction$expandUrl","_ol_tileurlfunction$nullTileUrlFunction","_ol_transform$apply","_ol_transform$compose","composeCssTransform","_ol_transform$create","_ol_transform$determinant","invert","_ol_transform$makeInverse","_ol_transform$makeScale","_ol_transform$multiply","_ol_transform$reset","_ol_transform$rotate","_ol_transform$scale","_ol_transform$set","_ol_transform$setFromArray","_ol_transform$toString","_ol_transform$translate","_ol_uri$appendParams","util","_ol_util$abstract","_ol_util$getUid","vec","_ol_vec_mat4$create","_ol_vec_mat4$fromTransform","_ol_xml$OBJECT_PROPERTY_NODE_FACTORY","_ol_xml$XML_SCHEMA_INSTANCE_URI","_ol_xml$createElementNS","_ol_xml$getAllTextContent","_ol_xml$getAllTextContent_","_ol_xml$getAttributeNS","_ol_xml$getDocument","_ol_xml$getXMLSerializer","_ol_xml$isDocument","_ol_xml$makeArrayExtender","_ol_xml$makeArrayPusher","_ol_xml$makeArraySerializer","_ol_xml$makeChildAppender","_ol_xml$makeObjectPropertyPusher","_ol_xml$makeObjectPropertySetter","_ol_xml$makeReplacer","_ol_xml$makeSequence","_ol_xml$makeSimpleNodeFactory","_ol_xml$makeStructureNS","_ol_xml$parse","_ol_xml$parseNode","_ol_xml$pushParseAndPop","_ol_xml$pushSerializeAndPop","registerDocument","registerXMLSerializer","xmlSerializer","_ol_xml$serialize"],"mappings":"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"}