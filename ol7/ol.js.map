{"version":3,"file":"ol.js","sources":["../ol/AssertionError.js","../ol/events/Event.js","../ol/ObjectEventType.js","../ol/Disposable.js","../ol/array.js","../ol/functions.js","../ol/obj.js","../ol/events/Target.js","../ol/events/EventType.js","../ol/events.js","../ol/Observable.js","../ol/util.js","../ol/Object.js","../ol/CollectionEventType.js","../ol/Collection.js","../ol/TileState.js","../ol/easing.js","../ol/Tile.js","../ol/has.js","../ol/dom.js","../ol/DataTile.js","../ol/asserts.js","../ol/Feature.js","../ol/transform.js","../ol/extent/Relationship.js","../ol/extent.js","../ol/proj/Units.js","../ol/proj/Projection.js","../ol/proj/epsg3857.js","../ol/proj/epsg4326.js","../ol/proj/projections.js","../ol/proj/transforms.js","../ol/math.js","../ol/string.js","../ol/coordinate.js","../ol/sphere.js","../ol/console.js","../ol/proj.js","../ol/geom/flat/transform.js","../ol/geom/Geometry.js","../ol/geom/SimpleGeometry.js","../ol/geom/flat/closest.js","../ol/geom/flat/deflate.js","../ol/geom/flat/simplify.js","../ol/geom/flat/inflate.js","../ol/geom/flat/area.js","../ol/geom/LinearRing.js","../ol/geom/Point.js","../ol/geom/flat/contains.js","../ol/geom/flat/interiorpoint.js","../ol/geom/flat/segments.js","../ol/geom/flat/intersectsextent.js","../ol/geom/flat/reverse.js","../ol/geom/flat/orient.js","../ol/geom/Polygon.js","../ol/Geolocation.js","../ol/ImageBase.js","../ol/ImageState.js","../ol/Image.js","../ol/ImageCanvas.js","../ol/ImageTile.js","../ol/Kinetic.js","../ol/color.js","../ol/style/IconImageCache.js","../ol/layer/Property.js","../ol/layer/Base.js","../ol/render/EventType.js","../ol/ViewHint.js","../ol/ViewProperty.js","../ol/tilegrid/common.js","../ol/centerconstraint.js","../ol/resolutionconstraint.js","../ol/rotationconstraint.js","../ol/View.js","../ol/layer/Layer.js","../ol/renderer/Map.js","../ol/render/Event.js","../ol/css.js","../ol/render/canvas.js","../ol/renderer/Composite.js","../ol/layer/Group.js","../ol/MapEvent.js","../ol/MapBrowserEvent.js","../ol/MapBrowserEventType.js","../ol/pointer/EventType.js","../ol/MapBrowserEventHandler.js","../ol/MapEventType.js","../ol/MapProperty.js","../ol/structs/PriorityQueue.js","../ol/TileQueue.js","../ol/control/Control.js","../ol/control/Attribution.js","../ol/control/Rotate.js","../ol/control/Zoom.js","../ol/control/defaults.js","../ol/interaction/Property.js","../ol/interaction/Interaction.js","../ol/interaction/DoubleClickZoom.js","../ol/interaction/Pointer.js","../ol/events/condition.js","../ol/interaction/DragPan.js","../ol/interaction/DragRotate.js","../ol/render/Box.js","../ol/interaction/DragBox.js","../ol/interaction/DragZoom.js","../ol/events/Key.js","../ol/interaction/KeyboardPan.js","../ol/interaction/KeyboardZoom.js","../ol/interaction/MouseWheelZoom.js","../ol/interaction/PinchRotate.js","../ol/interaction/PinchZoom.js","../ol/interaction/defaults.js","../ol/size.js","../ol/Map.js","../ol/Overlay.js","../ol/structs/LRUCache.js","../ol/tilecoord.js","../ol/TileCache.js","../ol/TileRange.js","../ol/VectorRenderTile.js","../ol/colorlike.js","../ol/featureloader.js","../ol/net.js","../ol/loadingstrategy.js","../ol/render/VectorContext.js","../ol/render/canvas/Immediate.js","../ol/renderer/vector.js","../ol/render.js","../ol/reproj.js","../ol/reproj/common.js","../ol/reproj/Triangulation.js","../ol/reproj/Tile.js","../ol/source/TileEventType.js","../ol/source/Source.js","../ol/tilegrid/TileGrid.js","../ol/tilegrid.js","../ol/source/Tile.js","../ol/tileurlfunction.js","../ol/source/UrlTile.js","../ol/source/TileImage.js","../ol/source/BingMaps.js","../ol/source/XYZ.js","../../node_modules/quickselect/index.js","../../node_modules/rbush/index.js","../ol/structs/RBush.js","../ol/source/VectorEventType.js","../ol/source/Vector.js","../ol/source/Cluster.js","../ol/reproj/DataTile.js","../ol/source/DataTile.js","../ol/reproj/Image.js","../ol/source/Image.js","../ol/uri.js","../ol/source/ImageArcGISRest.js","../ol/source/ImageCanvas.js","../ol/source/ImageStatic.js","../ol/source/wms.js","../ol/source/ImageWMS.js","../ol/source/ogcTileUtil.js","../ol/source/OGCMapTile.js","../ol/source/OSM.js","../ol/layer/BaseImage.js","../ol/renderer/Layer.js","../ol/renderer/canvas/Layer.js","../ol/renderer/canvas/ImageLayer.js","../ol/layer/Image.js","../ol/layer/TileProperty.js","../ol/layer/BaseTile.js","../ol/renderer/canvas/TileLayer.js","../ol/layer/Tile.js","../ol/source/Raster.js","../ol/source/Stamen.js","../ol/source/TileArcGISRest.js","../ol/source/TileDebug.js","../ol/source/TileJSON.js","../ol/source/TileWMS.js","../ol/source/UTFGrid.js","../ol/tilegrid/WMTS.js","../ol/source/WMTS.js","../ol/xml.js","../ol/vec/mat4.js","../ol/style/Image.js","../ol/style/RegularShape.js","../ol/style/Circle.js","../ol/style/Fill.js","../ol/style/IconImage.js","../ol/style/Icon.js","../ol/style/Stroke.js","../ol/style/Style.js","../ol/style/Text.js","../ol/webgl/PaletteTexture.js","../ol/webgl.js","../ol/webgl/Buffer.js","../ol/webgl/ContextEventType.js","../ol/webgl/PostProcessingPass.js","../ol/webgl/Helper.js","../ol/renderer/webgl/Layer.js","../ol/renderer/webgl/TileLayerBase.js","../ol/renderer/webgl/TileLayer.js","../ol/style/expressions.js","../ol/style/flat.js","../ol/structs/LinkedList.js","../ol/source/common.js","../ol/render/canvas/Instruction.js","../ol/render/canvas/Builder.js","../ol/render/canvas/ImageBuilder.js","../ol/render/canvas/LineStringBuilder.js","../ol/render/canvas/PolygonBuilder.js","../ol/geom/flat/linechunk.js","../ol/geom/flat/straightchunk.js","../ol/render/canvas/TextBuilder.js","../ol/render/canvas/BuilderGroup.js","../ol/geom/flat/textpath.js","../ol/geom/flat/length.js","../ol/render/canvas/Executor.js","../ol/render/canvas/ExecutorGroup.js","../ol/render/canvas/hitdetect.js","../ol/renderer/canvas/VectorLayer.js","../ol/renderer/canvas/VectorImageLayer.js","../ol/geom/Circle.js","../ol/geom/GeometryCollection.js","../ol/geom/flat/interpolate.js","../ol/geom/LineString.js","../ol/geom/MultiLineString.js","../ol/geom/MultiPoint.js","../ol/geom/flat/center.js","../ol/geom/MultiPolygon.js","../ol/render/Feature.js","../ol/proj/proj4.js","../ol/layer/BaseVector.js","../ol/layer/Vector.js","../ol/geom/flat/geodesic.js","../ol/layer/Graticule.js","../ol/webgl/RenderTarget.js","../ol/render/webgl/constants.js","../../node_modules/earcut/src/earcut.js","../ol/render/webgl/utils.js","../ol/renderer/webgl/PointsLayer.js","../ol/worker/webgl.js","../ol/layer/Heatmap.js","../ol/layer/VectorImage.js","../ol/interaction/DblClickDragZoom.js","../ol/interaction/DragAndDrop.js","../ol/interaction/DragRotateAndZoom.js","../ol/interaction/Draw.js","../ol/interaction/Extent.js","../ol/interaction/Link.js","../ol/interaction/Modify.js","../ol/interaction/Select.js","../ol/events/SnapEvent.js","../ol/interaction/Snap.js","../ol/interaction/Translate.js","../ol/geom/flat/flip.js","../ol/format/Feature.js","../ol/format/XMLFeature.js","../ol/format/xsd.js","../ol/format/GPX.js","../ol/format/JSONFeature.js","../ol/format/GeoJSON.js","../ol/format/TextFeature.js","../ol/format/IGC.js","../ol/format/KML.js","../../node_modules/ieee754/index.js","../../node_modules/pbf/index.js","../ol/format/MVT.js","../ol/format/OSMXML.js","../ol/format/XML.js","../ol/format/xlink.js","../ol/format/OWS.js","../ol/format/Polyline.js","../ol/format/TopoJSON.js","../ol/format/GMLBase.js","../ol/format/GML2.js","../ol/format/GML3.js","../ol/format/GML32.js","../ol/format/filter/Filter.js","../ol/format/filter/LogicalNary.js","../ol/format/filter/And.js","../ol/format/filter/Bbox.js","../ol/format/WFS.js","../ol/format/filter.js","../ol/format/WMSGetFeatureInfo.js","../ol/format/WMTSCapabilities.js","../ol/control/FullScreen.js","../ol/control/MousePosition.js","../ol/control/OverviewMap.js","../ol/control/ScaleLine.js","../ol/control/ZoomSlider.js","../ol/control/ZoomToExtent.js","../index.js","../ol/geom/flat/topology.js","../ol/source.js"],"sourcesContent":["/**\n * @module ol/AssertionError\n */\n\n/** @type {Object<number, string>} */\nconst messages = {\n  1: 'The view center is not defined',\n  2: 'The view resolution is not defined',\n  3: 'The view rotation is not defined',\n  4: '`image` and `src` cannot be provided at the same time',\n  5: '`imgSize` must be set when `image` is provided',\n  7: '`format` must be set when `url` is set',\n  8: 'Unknown `serverType` configured',\n  9: '`url` must be configured or set using `#setUrl()`',\n  10: 'The default `geometryFunction` can only handle `Point` geometries',\n  11: '`options.featureTypes` must be an Array',\n  12: '`options.geometryName` must also be provided when `options.bbox` is set',\n  13: 'Invalid corner',\n  14: 'Invalid color',\n  15: 'Tried to get a value for a key that does not exist in the cache',\n  16: 'Tried to set a value for a key that is used already',\n  17: '`resolutions` must be sorted in descending order',\n  18: 'Either `origin` or `origins` must be configured, never both',\n  19: 'Number of `tileSizes` and `resolutions` must be equal',\n  20: 'Number of `origins` and `resolutions` must be equal',\n  22: 'Either `tileSize` or `tileSizes` must be configured, never both',\n  24: 'Invalid extent or geometry provided as `geometry`',\n  25: 'Cannot fit empty extent provided as `geometry`',\n  26: 'Features must have an id set',\n  27: 'Features must have an id set',\n  28: '`renderMode` must be `\"hybrid\"` or `\"vector\"`',\n  30: 'The passed `feature` was already added to the source',\n  31: 'Tried to enqueue an `element` that was already added to the queue',\n  32: 'Transformation matrix cannot be inverted',\n  33: 'Invalid units',\n  34: 'Invalid geometry layout',\n  36: 'Unknown SRS type',\n  37: 'Unknown geometry type found',\n  38: '`styleMapValue` has an unknown type',\n  39: 'Unknown geometry type',\n  40: 'Expected `feature` to have a geometry',\n  41: 'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n  42: 'Question unknown, the answer is 42',\n  43: 'Expected `layers` to be an array or a `Collection`',\n  47: 'Expected `controls` to be an array or an `ol/Collection`',\n  48: 'Expected `interactions` to be an array or an `ol/Collection`',\n  49: 'Expected `overlays` to be an array or an `ol/Collection`',\n  50: '`options.featureTypes` should be an Array',\n  51: 'Either `url` or `tileJSON` options must be provided',\n  52: 'Unknown `serverType` configured',\n  53: 'Unknown `tierSizeCalculation` configured',\n  55: 'The {-y} placeholder requires a tile grid with extent',\n  56: 'mapBrowserEvent must originate from a pointer event',\n  57: 'At least 2 conditions are required',\n  59: 'Invalid command found in the PBF',\n  60: 'Missing or invalid `size`',\n  61: 'Cannot determine IIIF Image API version from provided image information JSON',\n  62: 'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n  64: 'Layer opacity must be a number',\n  66: '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`',\n  67: 'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both',\n  68: 'A VectorTile source can only be rendered if it has a projection compatible with the view projection',\n  69: '`width` or `height` cannot be provided together with `scale`',\n};\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const message = messages[code];\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @deprecated ol/AssertionError and error codes will be removed in v8.0\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '7.5.1';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true}\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, precision) {\n  const numberString =\n    precision !== undefined ? number.toFixed(precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/Geolocation\n */\nimport BaseEvent from './events/Event.js';\nimport BaseObject from './Object.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  identityTransform,\n} from './proj.js';\nimport {toRadians} from './math.js';\n\n/**\n * @enum {string}\n */\nconst Property = {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions',\n};\n\n/**\n * @enum string\n */\nconst GeolocationErrorType = {\n  /**\n   * Triggered when a `GeolocationPositionError` occurs.\n   * @event module:ol/Geolocation.GeolocationError#error\n   * @api\n   */\n  ERROR: 'error',\n};\n\n/**\n * @classdesc\n * Events emitted on [GeolocationPositionError](https://developer.mozilla.org/en-US/docs/Web/API/GeolocationPositionError).\n */\nexport class GeolocationError extends BaseEvent {\n  /**\n   * @param {GeolocationPositionError} error error object.\n   */\n  constructor(error) {\n    super(GeolocationErrorType.ERROR);\n\n    /**\n     * Code of the underlying `GeolocationPositionError`.\n     * @type {number}\n     * @api\n     */\n    this.code = error.code;\n\n    /**\n     * Message of the underlying `GeolocationPositionError`.\n     * @type {string}\n     * @api\n     */\n    this.message = error.message;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See https://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {import(\"./proj.js\").ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:accuracy'|'change:accuracyGeometry'|'change:altitude'|\n *    'change:altitudeAccuracy'|'change:heading'|'change:position'|'change:projection'|'change:speed'|'change:tracking'|\n *    'change:trackingOptions'} GeolocationObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<GeolocationObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'error', GeolocationError, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|GeolocationObjectEventTypes, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return>} GeolocationOnSignature\n */\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](https://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes and errors, register listeners for the generic\n * `change` event and the `error` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     const geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       console.log(geolocation.getPosition());\n *     });\n *     // listen to error\n *     geolocation.on('error', function(evt) {\n *       window.console.log(evt.message);\n *     });\n *\n * @fires GeolocationError\n * @api\n */\nclass Geolocation extends BaseObject {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GeolocationOnSignature<void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * The unprojected (EPSG:4326) device position.\n     * @private\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.position_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./proj.js\").TransformFunction}\n     */\n    this.transform_ = identityTransform;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.watchId_ = undefined;\n\n    this.addChangeListener(Property.PROJECTION, this.handleProjectionChanged_);\n    this.addChangeListener(Property.TRACKING, this.handleTrackingChanged_);\n\n    if (options.projection !== undefined) {\n      this.setProjection(options.projection);\n    }\n    if (options.trackingOptions !== undefined) {\n      this.setTrackingOptions(options.trackingOptions);\n    }\n\n    this.setTracking(options.tracking !== undefined ? options.tracking : false);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTracking(false);\n    super.disposeInternal();\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    const projection = this.getProjection();\n    if (projection) {\n      this.transform_ = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        projection\n      );\n      if (this.position_) {\n        this.set(Property.POSITION, this.transform_(this.position_));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleTrackingChanged_() {\n    if ('geolocation' in navigator) {\n      const tracking = this.getTracking();\n      if (tracking && this.watchId_ === undefined) {\n        this.watchId_ = navigator.geolocation.watchPosition(\n          this.positionChange_.bind(this),\n          this.positionError_.bind(this),\n          this.getTrackingOptions()\n        );\n      } else if (!tracking && this.watchId_ !== undefined) {\n        navigator.geolocation.clearWatch(this.watchId_);\n        this.watchId_ = undefined;\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPosition} position position event.\n   */\n  positionChange_(position) {\n    const coords = position.coords;\n    this.set(Property.ACCURACY, coords.accuracy);\n    this.set(\n      Property.ALTITUDE,\n      coords.altitude === null ? undefined : coords.altitude\n    );\n    this.set(\n      Property.ALTITUDE_ACCURACY,\n      coords.altitudeAccuracy === null ? undefined : coords.altitudeAccuracy\n    );\n    this.set(\n      Property.HEADING,\n      coords.heading === null ? undefined : toRadians(coords.heading)\n    );\n    if (!this.position_) {\n      this.position_ = [coords.longitude, coords.latitude];\n    } else {\n      this.position_[0] = coords.longitude;\n      this.position_[1] = coords.latitude;\n    }\n    const projectedPosition = this.transform_(this.position_);\n    this.set(Property.POSITION, projectedPosition.slice());\n    this.set(Property.SPEED, coords.speed === null ? undefined : coords.speed);\n    const geometry = circularPolygon(this.position_, coords.accuracy);\n    geometry.applyTransform(this.transform_);\n    this.set(Property.ACCURACY_GEOMETRY, geometry);\n    this.changed();\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPositionError} error error object.\n   */\n  positionError_(error) {\n    this.dispatchEvent(new GeolocationError(error));\n  }\n\n  /**\n   * Get the accuracy of the position in meters.\n   * @return {number|undefined} The accuracy of the position measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAccuracy() {\n    return /** @type {number|undefined} */ (this.get(Property.ACCURACY));\n  }\n\n  /**\n   * Get a geometry of the position accuracy.\n   * @return {?import(\"./geom/Polygon.js\").default} A geometry of the position accuracy.\n   * @observable\n   * @api\n   */\n  getAccuracyGeometry() {\n    return /** @type {?import(\"./geom/Polygon.js\").default} */ (\n      this.get(Property.ACCURACY_GEOMETRY) || null\n    );\n  }\n\n  /**\n   * Get the altitude associated with the position.\n   * @return {number|undefined} The altitude of the position in meters above mean\n   *     sea level.\n   * @observable\n   * @api\n   */\n  getAltitude() {\n    return /** @type {number|undefined} */ (this.get(Property.ALTITUDE));\n  }\n\n  /**\n   * Get the altitude accuracy of the position.\n   * @return {number|undefined} The accuracy of the altitude measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAltitudeAccuracy() {\n    return /** @type {number|undefined} */ (\n      this.get(Property.ALTITUDE_ACCURACY)\n    );\n  }\n\n  /**\n   * Get the heading as radians clockwise from North.\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n   * is set to `true` in the tracking options.\n   * @return {number|undefined} The heading of the device in radians from north.\n   * @observable\n   * @api\n   */\n  getHeading() {\n    return /** @type {number|undefined} */ (this.get(Property.HEADING));\n  }\n\n  /**\n   * Get the position of the device.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The current position of the device reported\n   *     in the current projection.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the projection associated with the position.\n   * @return {import(\"./proj/Projection.js\").default|undefined} The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"./proj/Projection.js\").default|undefined} */ (\n      this.get(Property.PROJECTION)\n    );\n  }\n\n  /**\n   * Get the speed in meters per second.\n   * @return {number|undefined} The instantaneous speed of the device in meters\n   *     per second.\n   * @observable\n   * @api\n   */\n  getSpeed() {\n    return /** @type {number|undefined} */ (this.get(Property.SPEED));\n  }\n\n  /**\n   * Determine if the device location is being tracked.\n   * @return {boolean} The device location is being tracked.\n   * @observable\n   * @api\n   */\n  getTracking() {\n    return /** @type {boolean} */ (this.get(Property.TRACKING));\n  }\n\n  /**\n   * Get the tracking options.\n   * See https://www.w3.org/TR/geolocation-API/#position-options.\n   * @return {PositionOptions|undefined} PositionOptions as defined by\n   *     the [HTML5 Geolocation spec\n   *     ](https://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  getTrackingOptions() {\n    return /** @type {PositionOptions|undefined} */ (\n      this.get(Property.TRACKING_OPTIONS)\n    );\n  }\n\n  /**\n   * Set the projection to use for transforming the coordinates.\n   * @param {import(\"./proj.js\").ProjectionLike} projection The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(Property.PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * Enable or disable tracking.\n   * @param {boolean} tracking Enable tracking.\n   * @observable\n   * @api\n   */\n  setTracking(tracking) {\n    this.set(Property.TRACKING, tracking);\n  }\n\n  /**\n   * Set the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @param {PositionOptions} options PositionOptions as defined by the\n   *     [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  setTrackingOptions(options) {\n    this.set(Property.TRACKING_OPTIONS, options);\n  }\n}\n\nexport default Geolocation;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   * @param {CanvasRenderingContext2D} [context] Canvas context. When provided, the image will be\n   *    drawn into the context's canvas, and `getImage()` will return the canvas once the image\n   *    has finished loading.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction,\n    context\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    if (\n      this.state == ImageState.LOADED &&\n      this.context_ &&\n      !(this.image_ instanceof HTMLCanvasElement)\n    ) {\n      const canvas = this.context_.canvas;\n      canvas.width = this.image_.width;\n      canvas.height = this.image_.height;\n      this.context_.drawImage(this.image_, 0, 0);\n      this.image_ = this.context_.canvas;\n    }\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nclass ImageCanvas extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, loader) {\n    const state = loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = loader !== undefined ? loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\nexport default ImageCanvas;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {}\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    this.declutterLayers_ = [];\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const declutterLayers = this.declutterLayers_;\n    declutterLayers.length = 0;\n\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    this.flushDeclutterItems(frameState);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {\n    const layers = this.declutterLayers_;\n    for (let i = layers.length - 1; i >= 0; --i) {\n      layers[i].renderDeclutter(frameState);\n    }\n    frameState.declutterTree = null;\n    layers.length = 0;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * This method is meant to be called in a layer's `prerender` listener. It causes all collected\n   * declutter items to be decluttered and rendered on the map immediately. This is useful for\n   * layers that need to appear entirely above the decluttered items of layers lower in the layer\n   * stack.\n   * @api\n   */\n  flushDeclutterItems() {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return;\n    }\n    this.renderer_.flushDeclutterItems(frameState);\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_();\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Executor groups for decluttering, by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.declutterExecutorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      const context = this.context_[key];\n      releaseCanvas(context);\n      canvasPool.push(context.canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {Function} [errback] Callback on error.\n * @param {string} [callbackParam] Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, errback, callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src =\n    url +\n    (url.includes('?') ? '&' : '?') +\n    (callbackParam || 'callback') +\n    '=' +\n    key;\n  const timer = setTimeout(function () {\n    cleanup();\n    if (errback) {\n      errback();\n    }\n  }, 10000);\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.head.appendChild(script);\n}\n\nexport class ResponseError extends Error {\n  /**\n   * @param {XMLHttpRequest} response The XHR object.\n   */\n  constructor(response) {\n    const message = 'Unexpected response status: ' + response.status;\n    super(message);\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ResponseError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.response = response;\n  }\n}\n\nexport class ClientError extends Error {\n  /**\n   * @param {XMLHttpRequest} client The XHR object.\n   */\n  constructor(client) {\n    super('Failed to issue request');\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ClientError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.client = client;\n  }\n}\n\n/**\n * @param {string} url The URL.\n * @return {Promise<Object>} A promise that resolves to the JSON response.\n */\nexport function getJSON(url) {\n  return new Promise(function (resolve, reject) {\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The load event.\n     */\n    function onLoad(event) {\n      const client = event.target;\n      // status will be 0 for file:// urls\n      if (!client.status || (client.status >= 200 && client.status < 300)) {\n        let data;\n        try {\n          data = JSON.parse(client.responseText);\n        } catch (err) {\n          const message = 'Error parsing response text as JSON: ' + err.message;\n          reject(new Error(message));\n          return;\n        }\n        resolve(data);\n        return;\n      }\n\n      reject(new ResponseError(client));\n    }\n\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The error event.\n     */\n    function onError(event) {\n      reject(new ClientError(event.target));\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener('load', onLoad);\n    client.addEventListener('error', onError);\n    client.open('GET', url);\n    client.setRequestHeader('Accept', 'application/json');\n    client.send();\n  });\n}\n\n/**\n * @param {string} base The base URL.\n * @param {string} url The potentially relative URL.\n * @return {string} The full URL.\n */\nexport function resolveUrl(base, url) {\n  if (url.includes('://')) {\n    return url;\n  }\n  return new URL(url, base).href;\n}\n\nlet originalXHR;\nexport function overrideXHR(xhr) {\n  if (typeof XMLHttpRequest !== 'undefined') {\n    originalXHR = XMLHttpRequest;\n  }\n  global.XMLHttpRequest = xhr;\n}\n\nexport function restoreXHR() {\n  global.XMLHttpRequest = originalXHR;\n}\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/render\n */\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply as multiplyTransform,\n  scale as scaleTransform,\n} from './transform.js';\nimport {getSquaredTolerance} from './renderer/vector.js';\nimport {getTransformFromProjections, getUserProjection} from './proj.js';\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render.js';\n * import Fill from 'ol/style/Fill.js';\n * import Polygon from 'ol/geom/Polygon.js';\n *\n * const canvas = document.createElement('canvas');\n * const render = toContext(\n *     canvas.getContext('2d'),\n *     {size: [100, 100]}\n * );\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]])\n * );\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions} [options] Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, options) {\n  const canvas = context.canvas;\n  options = options ? options : {};\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  const size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  const extent = [0, 0, canvas.width, canvas.height];\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @return {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n  if (!(event.context instanceof CanvasRenderingContext2D)) {\n    throw new Error('Only works for render events from Canvas 2D layers');\n  }\n\n  // canvas may be at a different pixel ratio than frameState.pixelRatio\n  const a = event.inversePixelTransform[0];\n  const b = event.inversePixelTransform[1];\n  const canvasPixelRatio = Math.sqrt(a * a + b * b);\n  const frameState = event.frameState;\n  const transform = multiplyTransform(\n    event.inversePixelTransform.slice(),\n    frameState.coordinateToPixelTransform\n  );\n  const squaredTolerance = getSquaredTolerance(\n    frameState.viewState.resolution,\n    canvasPixelRatio\n  );\n  let userTransform;\n  const userProjection = getUserProjection();\n  if (userProjection) {\n    userTransform = getTransformFromProjections(\n      userProjection,\n      frameState.viewState.projection\n    );\n  }\n\n  return new CanvasImmediateRenderer(\n    event.context,\n    canvasPixelRatio,\n    frameState.extent,\n    transform,\n    frameState.viewState.rotation,\n    squaredTolerance,\n    userTransform\n  );\n}\n\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @return {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n  return applyTransform(event.inversePixelTransform, pixel.slice(0));\n}\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.getInterpolate()\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/BingMaps\n */\n\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {createOrUpdate} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\n\n/**\n * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  const z = tileCoord[0];\n  const digits = new Array(z);\n  let mask = 1 << (z - 1);\n  let i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nconst TOS_ATTRIBUTION =\n  '<a class=\"ol-attribution-bing-tos\" ' +\n  'href=\"https://www.microsoft.com/maps/product/terms.html\" target=\"_blank\">' +\n  'Terms of Use</a>';\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at https://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n * @property {boolean} placeholderTiles Whether to show BingMaps placeholder tiles when zoomed past the maximum level provided in an area. When `false`, requests beyond\n * the maximum zoom level will return no tile. When `true`, the placeholder tile will be returned.\n */\n\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources Resources.\n */\n\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nclass BingMaps extends TileImage {\n  /**\n   * @param {Options} options Bing Maps options.\n   */\n  constructor(options) {\n    const hidpi = options.hidpi !== undefined ? options.hidpi : false;\n\n    super({\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: options.interpolate,\n      opaque: true,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: hidpi ? 2 : 1,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = hidpi;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.apiKey_ = options.key;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.imagerySet_ = options.imagerySet;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.placeholderTiles_ = options.placeholderTiles;\n\n    const url =\n      'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n      this.imagerySet_ +\n      '?uriScheme=https&include=ImageryProviders&key=' +\n      this.apiKey_ +\n      '&c=' +\n      this.culture_;\n\n    fetch(url)\n      .then((response) => response.json())\n      .then((json) => this.handleImageryMetadataResponse(json));\n  }\n\n  /**\n   * Get the api key used for this source.\n   *\n   * @return {string} The api key.\n   * @api\n   */\n  getApiKey() {\n    return this.apiKey_;\n  }\n\n  /**\n   * Get the imagery set associated with this source.\n   *\n   * @return {string} The imagery set.\n   * @api\n   */\n  getImagerySet() {\n    return this.imagerySet_;\n  }\n\n  /**\n   * @param {BingMapsImageryMetadataResponse} response Response.\n   */\n  handleImageryMetadataResponse(response) {\n    if (\n      response.statusCode != 200 ||\n      response.statusDescription != 'OK' ||\n      response.authenticationResultCode != 'ValidCredentials' ||\n      response.resourceSets.length != 1 ||\n      response.resourceSets[0].resources.length != 1\n    ) {\n      this.setState('error');\n      return;\n    }\n\n    const resource = response.resourceSets[0].resources[0];\n    const maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n\n    const sourceProjection = this.getProjection();\n    const extent = extentFromProjection(sourceProjection);\n    const scale = this.hidpi_ ? 2 : 1;\n    const tileSize =\n      resource.imageWidth == resource.imageHeight\n        ? resource.imageWidth / scale\n        : [resource.imageWidth / scale, resource.imageHeight / scale];\n\n    const tileGrid = createXYZ({\n      extent: extent,\n      minZoom: resource.zoomMin,\n      maxZoom: maxZoom,\n      tileSize: tileSize,\n    });\n    this.tileGrid = tileGrid;\n\n    const culture = this.culture_;\n    const hidpi = this.hidpi_;\n    const placeholderTiles = this.placeholderTiles_;\n    this.tileUrlFunction = createFromTileUrlFunctions(\n      resource.imageUrlSubdomains.map(function (subdomain) {\n        /** @type {import('../tilecoord.js').TileCoord} */\n        const quadKeyTileCoord = [0, 0, 0];\n        const imageUrl = resource.imageUrl\n          .replace('{subdomain}', subdomain)\n          .replace('{culture}', culture);\n        return (\n          /**\n           * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n           * @param {number} pixelRatio Pixel ratio.\n           * @param {import(\"../proj/Projection.js\").default} projection Projection.\n           * @return {string|undefined} Tile URL.\n           */\n          function (tileCoord, pixelRatio, projection) {\n            if (!tileCoord) {\n              return undefined;\n            }\n            createOrUpdate(\n              tileCoord[0],\n              tileCoord[1],\n              tileCoord[2],\n              quadKeyTileCoord\n            );\n            const url = new URL(\n              imageUrl.replace('{quadkey}', quadKey(quadKeyTileCoord))\n            );\n            const params = url.searchParams;\n            if (hidpi) {\n              params.set('dpi', 'd1');\n              params.set('device', 'mobile');\n            }\n            if (placeholderTiles === true) {\n              params.delete('n');\n            } else if (placeholderTiles === false) {\n              params.set('n', 'z');\n            }\n            return url.toString();\n          }\n        );\n      })\n    );\n\n    if (resource.imageryProviders) {\n      const transform = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        this.getProjection()\n      );\n\n      this.setAttributions((frameState) => {\n        const attributions = [];\n        const viewState = frameState.viewState;\n        const tileGrid = this.getTileGrid();\n        const z = tileGrid.getZForResolution(\n          viewState.resolution,\n          this.zDirection\n        );\n        const tileCoord = tileGrid.getTileCoordForCoordAndZ(\n          viewState.center,\n          z\n        );\n        const zoom = tileCoord[0];\n        resource.imageryProviders.map(function (imageryProvider) {\n          let intersecting = false;\n          const coverageAreas = imageryProvider.coverageAreas;\n          for (let i = 0, ii = coverageAreas.length; i < ii; ++i) {\n            const coverageArea = coverageAreas[i];\n            if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\n              const bbox = coverageArea.bbox;\n              const epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n              const extent = applyTransform(epsg4326Extent, transform);\n              if (intersects(extent, frameState.extent)) {\n                intersecting = true;\n                break;\n              }\n            }\n          }\n          if (intersecting) {\n            attributions.push(imageryProvider.attribution);\n          }\n        });\n\n        attributions.push(TOS_ATTRIBUTION);\n        return attributions;\n      });\n    }\n\n    this.setState('ready');\n  }\n}\n\nexport default BingMaps;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/source/Cluster\n */\n\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from './Vector.js';\nimport {add as addCoordinate, scale as scaleCoordinate} from '../coordinate.js';\nimport {assert} from '../asserts.js';\nimport {\n  buffer,\n  createEmpty,\n  createOrUpdateFromCoordinate,\n  getCenter,\n} from '../extent.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Distance in pixels within which features will\n * be clustered together.\n * @property {number} [minDistance=0] Minimum distance in pixels between clusters.\n * Will be capped at the configured distance.\n * By default no minimum distance is guaranteed. This config can be used to avoid\n * overlapping icons. As a tradoff, the cluster feature's position will no longer be\n * the center of all its features.\n * @property {function(Feature):Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Point~Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underlying source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {function(Point, Array<Feature>):Feature} [createCluster]\n * Function that takes the cluster's center {@link module:ol/geom/Point~Point} and an array\n * of {@link module:ol/Feature~Feature} included in this cluster. Must return a\n * {@link module:ol/Feature~Feature} that will be used to render. Default implementation is:\n * ```js\n * function(point, features) {\n *   return new Feature({\n *     geometry: point,\n *     features: features\n *   });\n * }\n * ```\n * @property {VectorSource} [source=null] Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n *\n * If the instance is disposed without also disposing the underlying\n * source `setSource(null)` has to be called to remove the listener reference\n * from the wrapped source.\n * @api\n */\nclass Cluster extends VectorSource {\n  /**\n   * @param {Options} options Cluster options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.resolution = undefined;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.distance = options.distance !== undefined ? options.distance : 20;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.minDistance = options.minDistance || 0;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.interpolationRatio = 0;\n\n    /**\n     * @type {Array<Feature>}\n     * @protected\n     */\n    this.features = [];\n\n    /**\n     * @param {Feature} feature Feature.\n     * @return {Point} Cluster calculation point.\n     * @protected\n     */\n    this.geometryFunction =\n      options.geometryFunction ||\n      function (feature) {\n        const geometry = /** @type {Point} */ (feature.getGeometry());\n        assert(!geometry || geometry.getType() === 'Point', 10); // The default `geometryFunction` can only handle `Point` or null geometries\n        return geometry;\n      };\n\n    /**\n     * @type {function(Point, Array<Feature>):Feature}\n     * @private\n     */\n    this.createCustomCluster_ = options.createCluster;\n\n    /**\n     * @type {VectorSource|null}\n     * @protected\n     */\n    this.source = null;\n\n    /**\n     * @private\n     */\n    this.boundRefresh_ = this.refresh.bind(this);\n\n    this.updateDistance(this.distance, this.minDistance);\n    this.setSource(options.source || null);\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/VectorEventType~VectorEventType#removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    this.features.length = 0;\n    super.clear(fast);\n  }\n\n  /**\n   * Get the distance in pixels between clusters.\n   * @return {number} Distance.\n   * @api\n   */\n  getDistance() {\n    return this.distance;\n  }\n\n  /**\n   * Get a reference to the wrapped source.\n   * @return {VectorSource|null} Source.\n   * @api\n   */\n  getSource() {\n    return this.source;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    this.source.loadFeatures(extent, resolution, projection);\n    if (resolution !== this.resolution) {\n      this.resolution = resolution;\n      this.refresh();\n    }\n  }\n\n  /**\n   * Set the distance within which features will be clusterd together.\n   * @param {number} distance The distance in pixels.\n   * @api\n   */\n  setDistance(distance) {\n    this.updateDistance(distance, this.minDistance);\n  }\n\n  /**\n   * Set the minimum distance between clusters. Will be capped at the\n   * configured distance.\n   * @param {number} minDistance The minimum distance in pixels.\n   * @api\n   */\n  setMinDistance(minDistance) {\n    this.updateDistance(this.distance, minDistance);\n  }\n\n  /**\n   * The configured minimum distance between clusters.\n   * @return {number} The minimum distance in pixels.\n   * @api\n   */\n  getMinDistance() {\n    return this.minDistance;\n  }\n\n  /**\n   * Replace the wrapped source.\n   * @param {VectorSource|null} source The new source for this instance.\n   * @api\n   */\n  setSource(source) {\n    if (this.source) {\n      this.source.removeEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.source = source;\n    if (source) {\n      source.addEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.refresh();\n  }\n\n  /**\n   * Handle the source changing.\n   */\n  refresh() {\n    this.clear();\n    this.cluster();\n    this.addFeatures(this.features);\n  }\n\n  /**\n   * Update the distances and refresh the source if necessary.\n   * @param {number} distance The new distance.\n   * @param {number} minDistance The new minimum distance.\n   */\n  updateDistance(distance, minDistance) {\n    const ratio =\n      distance === 0 ? 0 : Math.min(minDistance, distance) / distance;\n    const changed =\n      distance !== this.distance || this.interpolationRatio !== ratio;\n    this.distance = distance;\n    this.minDistance = minDistance;\n    this.interpolationRatio = ratio;\n    if (changed) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  cluster() {\n    if (this.resolution === undefined || !this.source) {\n      return;\n    }\n    const extent = createEmpty();\n    const mapDistance = this.distance * this.resolution;\n    const features = this.source.getFeatures();\n\n    /** @type {Object<string, true>} */\n    const clustered = {};\n\n    for (let i = 0, ii = features.length; i < ii; i++) {\n      const feature = features[i];\n      if (!(getUid(feature) in clustered)) {\n        const geometry = this.geometryFunction(feature);\n        if (geometry) {\n          const coordinates = geometry.getCoordinates();\n          createOrUpdateFromCoordinate(coordinates, extent);\n          buffer(extent, mapDistance, extent);\n\n          const neighbors = this.source\n            .getFeaturesInExtent(extent)\n            .filter(function (neighbor) {\n              const uid = getUid(neighbor);\n              if (uid in clustered) {\n                return false;\n              }\n              clustered[uid] = true;\n              return true;\n            });\n          this.features.push(this.createCluster(neighbors, extent));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Feature>} features Features\n   * @param {import(\"../extent.js\").Extent} extent The searched extent for these features.\n   * @return {Feature} The cluster feature.\n   * @protected\n   */\n  createCluster(features, extent) {\n    const centroid = [0, 0];\n    for (let i = features.length - 1; i >= 0; --i) {\n      const geometry = this.geometryFunction(features[i]);\n      if (geometry) {\n        addCoordinate(centroid, geometry.getCoordinates());\n      } else {\n        features.splice(i, 1);\n      }\n    }\n    scaleCoordinate(centroid, 1 / features.length);\n    const searchCenter = getCenter(extent);\n    const ratio = this.interpolationRatio;\n    const geometry = new Point([\n      centroid[0] * (1 - ratio) + searchCenter[0] * ratio,\n      centroid[1] * (1 - ratio) + searchCenter[1] * ratio,\n    ]);\n    if (this.createCustomCluster_) {\n      return this.createCustomCluster_(geometry, features);\n    }\n    return new Feature({\n      geometry,\n      features,\n    });\n  }\n}\n\nexport default Cluster;\n","/**\n * @module ol/reproj/DataTile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport DataTile, {asArrayLike, asImageLike, toArray} from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D, releaseCanvas} from '../dom.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../DataTile.js\").default} TileGetter\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n * @property {import(\"../proj/Projection.js\").default} targetProj Target projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n * @property {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n * @property {import(\"../tilecoord.js\").TileCoord} [wrappedTileCoord] Coordinate of the tile wrapped in X.\n * @property {number} pixelRatio Pixel ratio.\n * @property {number} gutter Gutter of the source tiles.\n * @property {TileGetter} getTileFunction Function returning source tiles (z, x, y, pixelRatio).\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {number} [errorThreshold] Acceptable reprojection error (in px).\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected data tile.\n * See {@link module:ol/source/DataTile~DataTileSource}.\n *\n */\nclass ReprojDataTile extends DataTile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    super({\n      tileCoord: options.tileCoord,\n      loader: () => Promise.resolve(new Uint8Array(4)),\n      interpolate: options.interpolate,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter;\n\n    /**\n     * @type {import(\"../DataTile.js\").Data}\n     * @private\n     */\n    this.reprojData_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.reprojError_ = null;\n\n    /**\n     * @type {import('../size.js').Size}\n     * @private\n     */\n    this.reprojSize_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = options.sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = options.targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = options.wrappedTileCoord || options.tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<DataTile>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProj = options.sourceProj;\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = this.targetTileGrid_.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const targetProj = options.targetProj;\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      options.errorThreshold !== undefined\n        ? options.errorThreshold\n        : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = this.sourceTileGrid_.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = this.sourceTileGrid_.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n      const getTile = options.getTileFunction;\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTile(this.sourceZ_, srcX, srcY, this.pixelRatio_);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('../size.js').Size} Tile size.\n   */\n  getSize() {\n    return this.reprojSize_;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {import(\"../DataTile.js\").Data} Tile data.\n   */\n  getData() {\n    return this.reprojData_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   */\n  getError() {\n    return this.reprojError_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const dataSources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const size = tile.getSize();\n      const gutter = this.gutter_;\n      /**\n       * @type {import(\"../DataTile.js\").ArrayLike}\n       */\n      let tileData;\n      const arrayData = asArrayLike(tile.getData());\n      if (arrayData) {\n        tileData = arrayData;\n      } else {\n        tileData = toArray(asImageLike(tile.getData()));\n      }\n      const pixelSize = [size[0] + 2 * gutter, size[1] + 2 * gutter];\n      const isFloat = tileData instanceof Float32Array;\n      const pixelCount = pixelSize[0] * pixelSize[1];\n      const DataType = isFloat ? Float32Array : Uint8Array;\n      const tileDataR = new DataType(tileData.buffer);\n      const bytesPerElement = DataType.BYTES_PER_ELEMENT;\n      const bytesPerPixel = (bytesPerElement * tileDataR.length) / pixelCount;\n      const bytesPerRow = tileDataR.byteLength / pixelSize[1];\n      const bandCount = Math.floor(\n        bytesPerRow / bytesPerElement / pixelSize[0]\n      );\n      const packedLength = pixelCount * bandCount;\n      let packedData = tileDataR;\n      if (tileDataR.length !== packedLength) {\n        packedData = new DataType(packedLength);\n        let dataIndex = 0;\n        let rowOffset = 0;\n        const colCount = pixelSize[0] * bandCount;\n        for (let rowIndex = 0; rowIndex < pixelSize[1]; ++rowIndex) {\n          for (let colIndex = 0; colIndex < colCount; ++colIndex) {\n            packedData[dataIndex++] = tileDataR[rowOffset + colIndex];\n          }\n          rowOffset += bytesPerRow / bytesPerElement;\n        }\n      }\n      dataSources.push({\n        extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n        data: new Uint8Array(packedData.buffer),\n        dataType: DataType,\n        bytesPerPixel: bytesPerPixel,\n        pixelSize: pixelSize,\n      });\n    });\n    this.sourceTiles_.length = 0;\n\n    if (dataSources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const targetWidth = typeof size === 'number' ? size : size[0];\n      const targetHeight = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      let dataR, dataU;\n\n      const bytesPerPixel = dataSources[0].bytesPerPixel;\n\n      const reprojs = Math.ceil(bytesPerPixel / 3);\n      for (let reproj = reprojs - 1; reproj >= 0; --reproj) {\n        const sources = [];\n        for (let i = 0, len = dataSources.length; i < len; ++i) {\n          const dataSource = dataSources[i];\n          const buffer = dataSource.data;\n          const pixelSize = dataSource.pixelSize;\n          const width = pixelSize[0];\n          const height = pixelSize[1];\n          const context = createCanvasContext2D(width, height, canvasPool);\n          const imageData = context.createImageData(width, height);\n          const data = imageData.data;\n          let offset = reproj * 3;\n          for (let j = 0, len = data.length; j < len; j += 4) {\n            data[j] = buffer[offset];\n            data[j + 1] = buffer[offset + 1];\n            data[j + 2] = buffer[offset + 2];\n            data[j + 3] = 255;\n            offset += bytesPerPixel;\n          }\n          context.putImageData(imageData, 0, 0);\n          sources.push({\n            extent: dataSource.extent,\n            image: context.canvas,\n          });\n        }\n\n        const canvas = renderReprojected(\n          targetWidth,\n          targetHeight,\n          this.pixelRatio_,\n          sourceResolution,\n          this.sourceTileGrid_.getExtent(),\n          targetResolution,\n          targetExtent,\n          this.triangulation_,\n          sources,\n          this.gutter_,\n          false,\n          false\n        );\n\n        for (let i = 0, len = sources.length; i < len; ++i) {\n          const canvas = sources[i].image;\n          const context = canvas.getContext('2d');\n          releaseCanvas(context);\n          canvasPool.push(context.canvas);\n        }\n\n        const context = canvas.getContext('2d');\n        const imageData = context.getImageData(\n          0,\n          0,\n          canvas.width,\n          canvas.height\n        );\n\n        releaseCanvas(context);\n        canvasPool.push(canvas);\n\n        if (!dataR) {\n          dataU = new Uint8Array(\n            bytesPerPixel * imageData.width * imageData.height\n          );\n          dataR = new dataSources[0].dataType(dataU.buffer);\n        }\n\n        const data = imageData.data;\n        let offset = reproj * 3;\n        for (let i = 0, len = data.length; i < len; i += 4) {\n          if (data[i + 3] === 255) {\n            dataU[offset] = data[i];\n            dataU[offset + 1] = data[i + 1];\n            dataU[offset + 2] = data[i + 2];\n          } else {\n            dataU[offset] = 0;\n            dataU[offset + 1] = 0;\n            dataU[offset + 2] = 0;\n          }\n          offset += bytesPerPixel;\n        }\n      }\n\n      this.reprojData_ = dataR;\n      this.reprojSize_ = [\n        Math.round(targetWidth * this.pixelRatio_),\n        Math.round(targetHeight * this.pixelRatio_),\n      ];\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    let leftToLoad = 0;\n\n    this.sourcesListenerKeys_ = [];\n    this.sourceTiles_.forEach((tile) => {\n      const state = tile.getState();\n      if (state !== TileState.IDLE && state !== TileState.LOADING) {\n        return;\n      }\n      leftToLoad++;\n\n      const sourceListenKey = listen(\n        tile,\n        EventType.CHANGE,\n        function () {\n          const state = tile.getState();\n          if (\n            state == TileState.LOADED ||\n            state == TileState.ERROR ||\n            state == TileState.EMPTY\n          ) {\n            unlistenByKey(sourceListenKey);\n            leftToLoad--;\n            if (leftToLoad === 0) {\n              this.unlistenSources_();\n              this.reproject_();\n            }\n          }\n        },\n        this\n      );\n      this.sourcesListenerKeys_.push(sourceListenKey);\n    });\n\n    if (leftToLoad === 0) {\n      setTimeout(this.reproject_.bind(this), 0);\n    } else {\n      this.sourceTiles_.forEach(function (tile) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojDataTile;\n","/**\n * @module ol/source/DataTile\n */\nimport DataTile from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport ReprojDataTile from '../reproj/DataTile.js';\nimport TileCache from '../TileCache.js';\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {\n  createXYZ,\n  extentFromProjection,\n  getForProjection as getTileGridForProjection,\n} from '../tilegrid.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\nimport {toPromise} from '../functions.js';\nimport {toSize} from '../size.js';\n\n/**\n * Data tile loading function.  The function is called with z, x, and y tile coordinates and\n * returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * @typedef {function(number, number, number) : (import(\"../DataTile.js\").Data|Promise<import(\"../DataTile.js\").Data>)} Loader\n */\n\n/**\n * @typedef {Object} Options\n * @property {Loader} [loader] Data loader.  Called with z, x, and y tile coordinates.\n * Returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The pixel width and height of the source tiles.\n * This may be different than the rendered pixel size if a `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around data tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported data should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Tile projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"./Source.js\").State} [state] The source state.\n * @property {boolean} [wrapX=false] Render tiles beyond the antimeridian.\n * @property {number} [transition] Transition time when fading in new tiles (in milliseconds).\n * @property {number} [bandCount=4] Number of bands represented in the data.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * A source for typed array data tiles.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass DataTileSource extends TileSource {\n  /**\n   * @param {Options} options DataTile source options.\n   */\n  constructor(options) {\n    const projection =\n      options.projection === undefined ? 'EPSG:3857' : options.projection;\n\n    let tileGrid = options.tileGrid;\n    if (tileGrid === undefined && projection) {\n      tileGrid = createXYZ({\n        extent: extentFromProjection(projection),\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize,\n      });\n    }\n\n    super({\n      cacheSize: 0.1, // don't cache on the source\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: projection,\n      tileGrid: tileGrid,\n      opaque: options.opaque,\n      state: options.state,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {import('../size.js').Size|null}\n     */\n    this.tileSize_ = options.tileSize ? toSize(options.tileSize) : null;\n\n    /**\n     * @private\n     * @type {Array<import('../size.js').Size>|null}\n     */\n    this.tileSizes_ = null;\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n    /**\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    this.handleTileChange_ = this.handleTileChange_.bind(this);\n\n    /**\n     * @type {number}\n     */\n    this.bandCount = options.bandCount === undefined ? 4 : options.bandCount; // assume RGBA if undefined\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../TileCache.js\").default>}\n     */\n    this.tileCacheForProjection_ = {};\n  }\n\n  /**\n   * Set the source tile sizes.  The length of the array is expected to match the number of\n   * levels in the tile grid.\n   * @protected\n   * @param {Array<import('../size.js').Size>} tileSizes An array of tile sizes.\n   */\n  setTileSizes(tileSizes) {\n    this.tileSizes_ = tileSizes;\n  }\n\n  /**\n   * Get the source tile size at the given zoom level.  This may be different than the rendered tile\n   * size.\n   * @protected\n   * @param {number} z Tile zoom level.\n   * @return {import('../size.js').Size} The source tile size.\n   */\n  getTileSize(z) {\n    if (this.tileSizes_) {\n      return this.tileSizes_[z];\n    }\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    const tileGrid = this.getTileGrid();\n    return tileGrid ? toSize(tileGrid.getTileSize(z)) : [256, 256];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.gutter_;\n    }\n\n    return 0;\n  }\n\n  /**\n   * @param {Loader} loader The data loader.\n   * @protected\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} targetProj The output projection.\n   * @param {import(\"../proj/Projection.js\").default} sourceProj The input projection.\n   * @return {!DataTile} Tile.\n   */\n  getReprojTile_(z, x, y, targetProj, sourceProj) {\n    const cache = this.getTileCacheForProjection(targetProj);\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (cache.containsKey(tileCoordKey)) {\n      const tile = cache.get(tileCoordKey);\n      if (tile && tile.key == this.getKey()) {\n        return tile;\n      }\n    }\n\n    const tileGrid = this.getTileGrid();\n    const reprojTilePixelRatio = Math.max.apply(\n      null,\n      tileGrid.getResolutions().map((r, z) => {\n        const tileSize = toSize(tileGrid.getTileSize(z));\n        const textureSize = this.getTileSize(z);\n        return Math.max(\n          textureSize[0] / tileSize[0],\n          textureSize[1] / tileSize[1]\n        );\n      })\n    );\n\n    const sourceTileGrid = this.getTileGridForProjection(sourceProj);\n    const targetTileGrid = this.getTileGridForProjection(targetProj);\n    const tileCoord = [z, x, y];\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      targetProj\n    );\n\n    const options = Object.assign(\n      {\n        sourceProj,\n        sourceTileGrid,\n        targetProj,\n        targetTileGrid,\n        tileCoord,\n        wrappedTileCoord,\n        pixelRatio: reprojTilePixelRatio,\n        gutter: this.getGutterForProjection(sourceProj),\n        getTileFunction: (z, x, y, pixelRatio) =>\n          this.getTile(z, x, y, pixelRatio, sourceProj),\n      },\n      this.tileOptions\n    );\n    const newTile = new ReprojDataTile(options);\n    newTile.key = this.getKey();\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!DataTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      sourceProjection &&\n      projection &&\n      !equivalent(sourceProjection, projection)\n    ) {\n      return this.getReprojTile_(z, x, y, projection, sourceProjection);\n    }\n\n    const size = this.getTileSize(z);\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return this.tileCache.get(tileCoordKey);\n    }\n\n    const sourceLoader = this.loader_;\n\n    function loader() {\n      return toPromise(function () {\n        return sourceLoader(z, x, y);\n      });\n    }\n\n    const options = Object.assign(\n      {\n        tileCoord: [z, x, y],\n        loader: loader,\n        size: size,\n      },\n      this.tileOptions\n    );\n\n    const tile = new DataTile(options);\n    tile.key = this.getKey();\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange_);\n\n    this.tileCache.set(tileCoordKey, tile);\n    return tile;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   */\n  handleTileChange_(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection_)) {\n      this.tileGridForProjection_[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection_[projKey];\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection_)) {\n        this.tileGridForProjection_[projKey] = tilegrid;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection_)) {\n      this.tileCacheForProjection_[projKey] = new TileCache(0.1); // don't cache\n    }\n    return this.tileCacheForProjection_[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection_) {\n      const tileCache = this.tileCacheForProjection_[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection_) {\n      this.tileCacheForProjection_[id].clear();\n    }\n  }\n}\n\nexport default DataTileSource;\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {\n  getCenter,\n  getHeight,\n  getIntersection,\n  getWidth,\n  isEmpty,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageBase {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    interpolate\n  ) {\n    let maxSourceExtent = sourceProj.getExtent();\n    if (maxSourceExtent && sourceProj.canWrapX()) {\n      maxSourceExtent = maxSourceExtent.slice();\n      maxSourceExtent[0] = -Infinity;\n      maxSourceExtent[2] = Infinity;\n    }\n    let maxTargetExtent = targetProj.getExtent();\n    if (maxTargetExtent && targetProj.canWrapX()) {\n      maxTargetExtent = maxTargetExtent.slice();\n      maxTargetExtent[0] = -Infinity;\n      maxTargetExtent[2] = Infinity;\n    }\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = isEmpty(sourceExtent)\n      ? null\n      : getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../ImageBase.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        this.sourceImage_.getResolution(),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.interpolate_\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          function (e) {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n          this\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_)\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n","/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport ImageState from '../ImageState.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport {abstract} from '../util.js';\nimport {equals} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport {linearFindNearest} from '../array.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./Source.js\").State} [state] State.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n    });\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {Array<number>|null} resolutions Resolutions.\n   */\n  setResolutions(resolutions) {\n    this.resolutions_ = resolutions;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    const resolutions = this.getResolutions();\n    if (resolutions) {\n      const idx = linearFindNearest(resolutions, resolution, 0);\n      resolution = resolutions[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    }\n    if (this.reprojectedImage_) {\n      if (\n        this.reprojectedRevision_ == this.getRevision() &&\n        equivalent(this.reprojectedImage_.getProjection(), projection) &&\n        this.reprojectedImage_.getResolution() == resolution &&\n        equals(this.reprojectedImage_.getExtent(), extent)\n      ) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new ReprojImage(\n      sourceProjection,\n      projection,\n      extent,\n      resolution,\n      pixelRatio,\n      (extent, resolution, pixelRatio) =>\n        this.getImageInternal(extent, resolution, pixelRatio, sourceProjection),\n      this.getInterpolate()\n    );\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    let type;\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        type = ImageSourceEventType.IMAGELOADSTART;\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADEND;\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADERROR;\n        break;\n      default:\n        return;\n    }\n    if (this.hasListener(type)) {\n      this.dispatchEvent(new ImageSourceEvent(type, image));\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\nexport default ImageSource;\n","/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n","/**\n * @module ol/source/ImageArcGISRest\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageWrapper from '../Image.js';\nimport {appendParams} from '../uri.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, getHeight, getWidth} from '../extent.js';\nimport {createCanvasContext2D} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given\n * a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * The projection code must contain a numeric end portion separated by :\n * or the entire code must form a valid ArcGIS SpatialReference definition.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {Array<number>} [resolutions] Resolutions. If specified, requests will be made for\n * these resolutions only.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n */\n\n/**\n * @classdesc\n * Source for data from ArcGIS Rest services providing single, untiled images.\n * Useful when underlying map service has labels.\n *\n * If underlying map service is not using labels,\n * take advantage of ol image caching and use\n * {@link module:ol/source/TileArcGISRest~TileArcGISRest} data source.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageArcGISRest extends ImageSource {\n  /**\n   * @param {Options} [options] Image ArcGIS Rest Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D(1, 1);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n    pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n    const image = this.image_;\n    if (\n      image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), extent)\n    ) {\n      return image;\n    }\n\n    const params = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true,\n    };\n    Object.assign(params, this.params_);\n\n    extent = extent.slice();\n    const centerX = (extent[0] + extent[2]) / 2;\n    const centerY = (extent[1] + extent[3]) / 2;\n    if (this.ratio_ != 1) {\n      const halfWidth = (this.ratio_ * getWidth(extent)) / 2;\n      const halfHeight = (this.ratio_ * getHeight(extent)) / 2;\n      extent[0] = centerX - halfWidth;\n      extent[1] = centerY - halfHeight;\n      extent[2] = centerX + halfWidth;\n      extent[3] = centerY + halfHeight;\n    }\n\n    const imageResolution = resolution / pixelRatio;\n\n    // Compute an integer width and height.\n    const width = Math.ceil(getWidth(extent) / imageResolution);\n    const height = Math.ceil(getHeight(extent) / imageResolution);\n\n    // Modify the extent to match the integer width and height.\n    extent[0] = centerX - (imageResolution * width) / 2;\n    extent[2] = centerX + (imageResolution * width) / 2;\n    extent[1] = centerY - (imageResolution * height) / 2;\n    extent[3] = centerY + (imageResolution * height) / 2;\n\n    this.imageSize_[0] = width;\n    this.imageSize_[1] = height;\n\n    const url = this.getRequestUrl_(\n      extent,\n      this.imageSize_,\n      pixelRatio,\n      projection,\n      params\n    );\n\n    this.image_ = new ImageWrapper(\n      extent,\n      resolution,\n      pixelRatio,\n      url,\n      this.crossOrigin_,\n      this.imageLoadFunction_,\n      this.context_\n    );\n\n    this.renderedRevision_ = this.getRevision();\n\n    this.image_.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this)\n    );\n\n    return this.image_;\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  getRequestUrl_(extent, size, pixelRatio, projection, params) {\n    // ArcGIS Server only wants the numeric portion of the projection ID.\n    // (if there is no numeric portion the entire projection code must\n    // form a valid ArcGIS SpatialReference definition).\n    const srid = projection\n      .getCode()\n      .split(/:(?=\\d+$)/)\n      .pop();\n\n    params['SIZE'] = size[0] + ',' + size[1];\n    params['BBOX'] = extent.join(',');\n    params['BBOXSR'] = srid;\n    params['IMAGESR'] = srid;\n    params['DPI'] = Math.round(90 * pixelRatio);\n\n    const url = this.url_;\n\n    const modifiedUrl = url\n      .replace(/MapServer\\/?$/, 'MapServer/export')\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n    if (modifiedUrl == url) {\n      assert(false, 50); // `options.featureTypes` should be an Array\n    }\n    return appendParams(modifiedUrl, params);\n  }\n\n  /**\n   * Return the URL used for this ArcGIS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.image_ = null;\n    this.changed();\n  }\n}\n\nexport default ImageArcGISRest;\n","/**\n * @module ol/source/ImageCanvas\n */\n\nimport ImageCanvas from '../ImageCanvas.js';\nimport ImageSource from './Image.js';\nimport {\n  containsExtent,\n  getHeight,\n  getWidth,\n  scaleFromCenter,\n} from '../extent.js';\n\n/**\n * A function returning the canvas element (`{HTMLCanvasElement}`)\n * used by the source as an image. The arguments passed to the function are:\n * {@link module:ol/extent~Extent} the image extent, `{number}` the image resolution,\n * `{number}` the pixel ratio of the map, {@link module:ol/size~Size} the image size,\n * and {@link module:ol/proj/Projection~Projection} the image projection. The canvas returned by\n * this function is cached by the source. The this keyword inside the function\n * references the {@link module:ol/source/ImageCanvas~ImageCanvasSource}.\n *\n * @typedef {function(this:import(\"../ImageCanvas.js\").default, import(\"../extent.js\").Extent, number,\n *     number, import(\"../size.js\").Size, import(\"../proj/Projection.js\").default): HTMLCanvasElement} FunctionType\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {FunctionType} [canvasFunction] Canvas function.\n * The function returning the canvas element used by the source\n * as an image. The arguments passed to the function are: {@link import(\"../extent.js\").Extent} the\n * image extent, `{number}` the image resolution, `{number}` the pixel ratio of the map,\n * {@link import(\"../size.js\").Size} the image size, and {@link import(\"../proj/Projection.js\").default} the image\n * projection. The canvas returned by this function is cached by the source. If\n * the value returned by the function is later changed then\n * `changed` should be called on the source for the source to\n * invalidate the current cached image. See: {@link module:ol/Observable~Observable#changed}\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. 1 means canvases are the size of the map viewport, 2 means twice the\n * width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, new canvases will be created for these resolutions\n * @property {import(\"./Source.js\").State} [state] Source state.\n */\n\n/**\n * @classdesc\n * Base class for image sources where a canvas element is the image.\n * @api\n */\nclass ImageCanvasSource extends ImageSource {\n  /**\n   * @param {Options} [options] ImageCanvas options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n      state: options.state,\n    });\n\n    /**\n     * @private\n     * @type {FunctionType}\n     */\n    this.canvasFunction_ = options.canvasFunction;\n\n    /**\n     * @private\n     * @type {import(\"../ImageCanvas.js\").default}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n\n    let canvas = this.canvas_;\n    if (\n      canvas &&\n      this.renderedRevision_ == this.getRevision() &&\n      canvas.getResolution() == resolution &&\n      canvas.getPixelRatio() == pixelRatio &&\n      containsExtent(canvas.getExtent(), extent)\n    ) {\n      return canvas;\n    }\n\n    extent = extent.slice();\n    scaleFromCenter(extent, this.ratio_);\n    const width = getWidth(extent) / resolution;\n    const height = getHeight(extent) / resolution;\n    const size = [width * pixelRatio, height * pixelRatio];\n\n    const canvasElement = this.canvasFunction_.call(\n      this,\n      extent,\n      resolution,\n      pixelRatio,\n      size,\n      projection\n    );\n    if (canvasElement) {\n      canvas = new ImageCanvas(extent, resolution, pixelRatio, canvasElement);\n    }\n    this.canvas_ = canvas;\n    this.renderedRevision_ = this.getRevision();\n\n    return canvas;\n  }\n}\n\nexport default ImageCanvasSource;\n","/**\n * @module ol/source/ImageStatic\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getHeight, getWidth, intersects} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"../size.js\").Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nclass Static extends ImageSource {\n  /**\n   * @param {Options} options ImageStatic options.\n   */\n  constructor(options) {\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const /** @type {import(\"../Image.js\").LoadFunction} */ imageLoadFunction =\n        options.imageLoadFunction !== undefined\n          ? options.imageLoadFunction\n          : defaultImageLoadFunction;\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: getProjection(options.projection),\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.imageExtent_ = options.imageExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = new ImageWrapper(\n      this.imageExtent_,\n      undefined,\n      1,\n      this.url_,\n      crossOrigin,\n      imageLoadFunction,\n      createCanvasContext2D(1, 1)\n    );\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.imageSize_ = options.imageSize ? options.imageSize : null;\n\n    this.image_.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this)\n    );\n  }\n\n  /**\n   * Returns the image extent\n   * @return {import(\"../extent.js\").Extent} image extent.\n   * @api\n   */\n  getImageExtent() {\n    return this.imageExtent_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (intersects(extent, this.image_.getExtent())) {\n      return this.image_;\n    }\n    return null;\n  }\n\n  /**\n   * Return the URL used for this image source.\n   * @return {string} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   */\n  handleImageChange(evt) {\n    if (this.image_.getState() == ImageState.LOADED) {\n      const imageExtent = this.image_.getExtent();\n      const image = this.image_.getImage();\n      let imageWidth, imageHeight;\n      if (this.imageSize_) {\n        imageWidth = this.imageSize_[0];\n        imageHeight = this.imageSize_[1];\n      } else {\n        imageWidth = image.width;\n        imageHeight = image.height;\n      }\n      const extentWidth = getWidth(imageExtent);\n      const extentHeight = getHeight(imageExtent);\n      const xResolution = extentWidth / imageWidth;\n      const yResolution = extentHeight / imageHeight;\n      let targetWidth = imageWidth;\n      let targetHeight = imageHeight;\n      if (xResolution > yResolution) {\n        targetWidth = Math.round(extentWidth / yResolution);\n      } else {\n        targetHeight = Math.round(extentHeight / xResolution);\n      }\n      if (targetWidth !== imageWidth || targetHeight !== imageHeight) {\n        const context = createCanvasContext2D(targetWidth, targetHeight);\n        if (!this.getInterpolate()) {\n          context.imageSmoothingEnabled = false;\n        }\n        const canvas = context.canvas;\n        context.drawImage(\n          image,\n          0,\n          0,\n          imageWidth,\n          imageHeight,\n          0,\n          0,\n          canvas.width,\n          canvas.height\n        );\n        this.image_.setImage(canvas);\n      }\n    }\n    super.handleImageChange(evt);\n  }\n}\n\nexport default Static;\n","/**\n * @module ol/source/wms\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_VERSION = '1.3.0';\n\n/**\n * @api\n * @typedef {'carmentaserver' | 'geoserver' | 'mapserver' | 'qgis'} ServerType\n * Set the server type to use implementation-specific parameters beyond the WMS specification.\n *  - `'carmentaserver'`: HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n *  - `'geoserver'`: HiDPI support for [GeoServer](https://geoserver.org/)\n *  - `'mapserver'`: HiDPI support for [MapServer](https://mapserver.org/)\n *  - `'qgis'`: HiDPI support for [QGIS](https://qgis.org/)\n */\n","/**\n * @module ol/source/ImageWMS\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageWrapper from '../Image.js';\nimport {DEFAULT_VERSION} from './wms.js';\nimport {appendParams} from '../uri.js';\nimport {assert} from '../asserts.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {ceil, floor, round} from '../math.js';\nimport {compareVersions} from '../string.js';\nimport {\n  containsExtent,\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n} from '../extent.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {get as getProjection, transform} from '../proj.js';\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 4;\n\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nconst GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} [url] WMS service URL.\n */\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageWMS extends ImageSource {\n  /**\n   * @param {Options} [options] ImageWMS options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D(1, 1);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = Object.assign({}, options.params);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n    this.updateV13_();\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      resolution = calculateSourceResolution(\n        sourceProjectionObj,\n        projectionObj,\n        coordinate,\n        resolution\n      );\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const extent = getForViewAndSize(\n      coordinate,\n      resolution,\n      0,\n      GETFEATUREINFO_IMAGE_SIZE\n    );\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    Object.assign(baseParams, this.params_, params);\n\n    const x = floor((coordinate[0] - extent[0]) / resolution, DECIMALS);\n    const y = floor((extent[3] - coordinate[1]) / resolution, DECIMALS);\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      extent,\n      GETFEATUREINFO_IMAGE_SIZE,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    Object.assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.url_), baseParams);\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const imageResolution = resolution / pixelRatio;\n\n    const center = getCenter(extent);\n    const viewWidth = ceil(getWidth(extent) / imageResolution, DECIMALS);\n    const viewHeight = ceil(getHeight(extent) / imageResolution, DECIMALS);\n    const viewExtent = getForViewAndSize(center, imageResolution, 0, [\n      viewWidth,\n      viewHeight,\n    ]);\n    const marginWidth = ceil(((this.ratio_ - 1) * viewWidth) / 2, DECIMALS);\n    const requestWidth = viewWidth + 2 * marginWidth;\n    const marginHeight = ceil(((this.ratio_ - 1) * viewHeight) / 2, DECIMALS);\n    const requestHeight = viewHeight + 2 * marginHeight;\n    const requestExtent = getForViewAndSize(center, imageResolution, 0, [\n      requestWidth,\n      requestHeight,\n    ]);\n\n    const image = this.image_;\n    if (\n      image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)\n    ) {\n      return image;\n    }\n\n    const params = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n    };\n    Object.assign(params, this.params_);\n\n    this.imageSize_[0] = round(\n      getWidth(requestExtent) / imageResolution,\n      DECIMALS\n    );\n    this.imageSize_[1] = round(\n      getHeight(requestExtent) / imageResolution,\n      DECIMALS\n    );\n\n    const url = this.getRequestUrl_(\n      requestExtent,\n      this.imageSize_,\n      pixelRatio,\n      projection,\n      params\n    );\n\n    this.image_ = new ImageWrapper(\n      requestExtent,\n      resolution,\n      pixelRatio,\n      url,\n      this.crossOrigin_,\n      this.imageLoadFunction_,\n      this.context_\n    );\n\n    this.renderedRevision_ = this.getRevision();\n\n    this.image_.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this)\n    );\n\n    return this.image_;\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  getRequestUrl_(extent, size, pixelRatio, projection, params) {\n    assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case 'geoserver':\n          const dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case 'mapserver':\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case 'carmentaserver':\n        case 'qgis':\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default: // Unknown `serverType` configured\n          assert(false, 8);\n          break;\n      }\n    }\n\n    params['WIDTH'] = size[0];\n    params['HEIGHT'] = size[1];\n\n    const axisOrientation = projection.getAxisOrientation();\n    let bbox;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      bbox = [extent[1], extent[0], extent[3], extent[2]];\n    } else {\n      bbox = extent;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    return appendParams(/** @type {string} */ (this.url_), params);\n  }\n\n  /**\n   * Return the URL used for this WMS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.updateV13_();\n    this.image_ = null;\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n}\n\nexport default ImageWMS;\n","/**\n * @module ol/source/ogcTileUtil\n */\n\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport {getJSON, resolveUrl} from '../net.js';\nimport {get as getProjection} from '../proj.js';\nimport {getIntersection as intersectExtents} from '../extent.js';\n\n/**\n * See https://ogcapi.ogc.org/tiles/.\n */\n\n/**\n * @typedef {'map' | 'vector'} TileType\n */\n\n/**\n * @typedef {'topLeft' | 'bottomLeft'} CornerOfOrigin\n */\n\n/**\n * @typedef {Object} TileSet\n * @property {TileType} dataType Type of data represented in the tileset.\n * @property {string} [tileMatrixSetDefinition] Reference to a tile matrix set definition.\n * @property {TileMatrixSet} [tileMatrixSet] Tile matrix set definition.\n * @property {Array<TileMatrixSetLimit>} [tileMatrixSetLimits] Tile matrix set limits.\n * @property {Array<Link>} links Tileset links.\n */\n\n/**\n * @typedef {Object} Link\n * @property {string} rel The link rel attribute.\n * @property {string} href The link URL.\n * @property {string} type The link type.\n */\n\n/**\n * @typedef {Object} TileMatrixSetLimit\n * @property {string} tileMatrix The tile matrix id.\n * @property {number} minTileRow The minimum tile row.\n * @property {number} maxTileRow The maximum tile row.\n * @property {number} minTileCol The minimum tile column.\n * @property {number} maxTileCol The maximum tile column.\n */\n\n/**\n * @typedef {Object} TileMatrixSet\n * @property {string} id The tile matrix set identifier.\n * @property {string} crs The coordinate reference system.\n * @property {Array<TileMatrix>} tileMatrices Array of tile matrices.\n */\n\n/**\n * @typedef {Object} TileMatrix\n * @property {string} id The tile matrix identifier.\n * @property {number} cellSize The pixel resolution (map units per pixel).\n * @property {Array<number>} pointOfOrigin The map location of the matrix origin.\n * @property {CornerOfOrigin} [cornerOfOrigin='topLeft'] The corner of the matrix that represents the origin ('topLeft' or 'bottomLeft').\n * @property {number} matrixWidth The number of columns.\n * @property {number} matrixHeight The number of rows.\n * @property {number} tileWidth The pixel width of a tile.\n * @property {number} tileHeight The pixel height of a tile.\n */\n\n/**\n * @type {Object<string, boolean>}\n */\nconst knownMapMediaTypes = {\n  'image/png': true,\n  'image/jpeg': true,\n  'image/gif': true,\n  'image/webp': true,\n};\n\n/**\n * @type {Object<string, boolean>}\n */\nconst knownVectorMediaTypes = {\n  'application/vnd.mapbox-vector-tile': true,\n  'application/geo+json': true,\n};\n\n/**\n * @typedef {Object} TileSetInfo\n * @property {string} urlTemplate The tile URL template.\n * @property {import(\"../tilegrid/TileGrid.js\").default} grid The tile grid.\n * @property {import(\"../Tile.js\").UrlFunction} urlFunction The tile URL function.\n */\n\n/**\n * @typedef {Object} SourceInfo\n * @property {string} url The tile set URL.\n * @property {string} mediaType The preferred tile media type.\n * @property {Array<string>} [supportedMediaTypes] The supported media types.\n * @property {import(\"../proj/Projection.js\").default} projection The source projection.\n * @property {Object} [context] Optional context for constructing the URL.\n */\n\n/**\n * @param {Array<Link>} links Tileset links.\n * @param {string} [mediaType] The preferred media type.\n * @return {string} The tile URL template.\n */\nexport function getMapTileUrlTemplate(links, mediaType) {\n  let tileUrlTemplate;\n  let fallbackUrlTemplate;\n  for (let i = 0; i < links.length; ++i) {\n    const link = links[i];\n    if (link.rel === 'item') {\n      if (link.type === mediaType) {\n        tileUrlTemplate = link.href;\n        break;\n      }\n      if (knownMapMediaTypes[link.type]) {\n        fallbackUrlTemplate = link.href;\n      } else if (!fallbackUrlTemplate && link.type.startsWith('image/')) {\n        fallbackUrlTemplate = link.href;\n      }\n    }\n  }\n\n  if (!tileUrlTemplate) {\n    if (fallbackUrlTemplate) {\n      tileUrlTemplate = fallbackUrlTemplate;\n    } else {\n      throw new Error('Could not find \"item\" link');\n    }\n  }\n\n  return tileUrlTemplate;\n}\n\n/**\n * @param {Array<Link>} links Tileset links.\n * @param {string} [mediaType] The preferred media type.\n * @param {Array<string>} [supportedMediaTypes] The media types supported by the parser.\n * @return {string} The tile URL template.\n */\nexport function getVectorTileUrlTemplate(\n  links,\n  mediaType,\n  supportedMediaTypes\n) {\n  let tileUrlTemplate;\n  let fallbackUrlTemplate;\n\n  /**\n   * Lookup of URL by media type.\n   * @type {Object<string, string>}\n   */\n  const hrefLookup = {};\n\n  for (let i = 0; i < links.length; ++i) {\n    const link = links[i];\n    hrefLookup[link.type] = link.href;\n    if (link.rel === 'item') {\n      if (link.type === mediaType) {\n        tileUrlTemplate = link.href;\n        break;\n      }\n      if (knownVectorMediaTypes[link.type]) {\n        fallbackUrlTemplate = link.href;\n      }\n    }\n  }\n\n  if (!tileUrlTemplate && supportedMediaTypes) {\n    for (let i = 0; i < supportedMediaTypes.length; ++i) {\n      const supportedMediaType = supportedMediaTypes[i];\n      if (hrefLookup[supportedMediaType]) {\n        tileUrlTemplate = hrefLookup[supportedMediaType];\n        break;\n      }\n    }\n  }\n\n  if (!tileUrlTemplate) {\n    if (fallbackUrlTemplate) {\n      tileUrlTemplate = fallbackUrlTemplate;\n    } else {\n      throw new Error('Could not find \"item\" link');\n    }\n  }\n\n  return tileUrlTemplate;\n}\n\n/**\n * @param {SourceInfo} sourceInfo The source info.\n * @param {TileMatrixSet} tileMatrixSet Tile matrix set.\n * @param {string} tileUrlTemplate Tile URL template.\n * @param {Array<TileMatrixSetLimit>} [tileMatrixSetLimits] Tile matrix set limits.\n * @return {TileSetInfo} Tile set info.\n */\nfunction parseTileMatrixSet(\n  sourceInfo,\n  tileMatrixSet,\n  tileUrlTemplate,\n  tileMatrixSetLimits\n) {\n  let projection = sourceInfo.projection;\n  if (!projection) {\n    projection = getProjection(tileMatrixSet.crs);\n    if (!projection) {\n      throw new Error(`Unsupported CRS: ${tileMatrixSet.crs}`);\n    }\n  }\n  const backwards = projection.getAxisOrientation().substr(0, 2) !== 'en';\n\n  const matrices = tileMatrixSet.tileMatrices;\n\n  /**\n   * @type {Object<string, TileMatrix>}\n   */\n  const matrixLookup = {};\n  for (let i = 0; i < matrices.length; ++i) {\n    const matrix = matrices[i];\n    matrixLookup[matrix.id] = matrix;\n  }\n\n  /**\n   * @type {Object<string, TileMatrixSetLimit>}\n   */\n  const limitLookup = {};\n\n  /**\n   * @type {Array<string>}\n   */\n  const matrixIds = [];\n\n  if (tileMatrixSetLimits) {\n    for (let i = 0; i < tileMatrixSetLimits.length; ++i) {\n      const limit = tileMatrixSetLimits[i];\n      const id = limit.tileMatrix;\n      matrixIds.push(id);\n      limitLookup[id] = limit;\n    }\n  } else {\n    for (let i = 0; i < matrices.length; ++i) {\n      const id = matrices[i].id;\n      matrixIds.push(id);\n    }\n  }\n\n  const length = matrixIds.length;\n  const origins = new Array(length);\n  const resolutions = new Array(length);\n  const sizes = new Array(length);\n  const tileSizes = new Array(length);\n  const extent = [-Infinity, -Infinity, Infinity, Infinity];\n\n  for (let i = 0; i < length; ++i) {\n    const id = matrixIds[i];\n    const matrix = matrixLookup[id];\n    const origin = matrix.pointOfOrigin;\n    if (backwards) {\n      origins[i] = [origin[1], origin[0]];\n    } else {\n      origins[i] = origin;\n    }\n    resolutions[i] = matrix.cellSize;\n    sizes[i] = [matrix.matrixWidth, matrix.matrixHeight];\n    tileSizes[i] = [matrix.tileWidth, matrix.tileHeight];\n    const limit = limitLookup[id];\n    if (limit) {\n      const tileMapWidth = matrix.cellSize * matrix.tileWidth;\n      const minX = origins[i][0] + limit.minTileCol * tileMapWidth;\n      const maxX = origins[i][0] + (limit.maxTileCol + 1) * tileMapWidth;\n\n      const tileMapHeight = matrix.cellSize * matrix.tileHeight;\n      const upsideDown = matrix.cornerOfOrigin === 'bottomLeft';\n\n      let minY;\n      let maxY;\n      if (upsideDown) {\n        minY = origins[i][1] + limit.minTileRow * tileMapHeight;\n        maxY = origins[i][1] + (limit.maxTileRow + 1) * tileMapHeight;\n      } else {\n        minY = origins[i][1] - (limit.maxTileRow + 1) * tileMapHeight;\n        maxY = origins[i][1] - limit.minTileRow * tileMapHeight;\n      }\n\n      intersectExtents(extent, [minX, minY, maxX, maxY], extent);\n    }\n  }\n\n  const tileGrid = new TileGrid({\n    origins: origins,\n    resolutions: resolutions,\n    sizes: sizes,\n    tileSizes: tileSizes,\n    extent: tileMatrixSetLimits ? extent : undefined,\n  });\n\n  const context = sourceInfo.context;\n  const base = sourceInfo.url;\n\n  function tileUrlFunction(tileCoord, pixelRatio, projection) {\n    if (!tileCoord) {\n      return undefined;\n    }\n\n    const id = matrixIds[tileCoord[0]];\n    const matrix = matrixLookup[id];\n    const upsideDown = matrix.cornerOfOrigin === 'bottomLeft';\n\n    const localContext = {\n      tileMatrix: id,\n      tileCol: tileCoord[1],\n      tileRow: upsideDown ? -tileCoord[2] - 1 : tileCoord[2],\n    };\n\n    if (tileMatrixSetLimits) {\n      const limit = limitLookup[matrix.id];\n      if (\n        localContext.tileCol < limit.minTileCol ||\n        localContext.tileCol > limit.maxTileCol ||\n        localContext.tileRow < limit.minTileRow ||\n        localContext.tileRow > limit.maxTileRow\n      ) {\n        return undefined;\n      }\n    }\n\n    Object.assign(localContext, context);\n\n    const url = tileUrlTemplate.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n      return localContext[p];\n    });\n\n    return resolveUrl(base, url);\n  }\n\n  return {\n    grid: tileGrid,\n    urlTemplate: tileUrlTemplate,\n    urlFunction: tileUrlFunction,\n  };\n}\n\n/**\n * @param {SourceInfo} sourceInfo The source info.\n * @param {TileSet} tileSet Tile set.\n * @return {TileSetInfo|Promise<TileSetInfo>} Tile set info.\n */\nfunction parseTileSetMetadata(sourceInfo, tileSet) {\n  const tileMatrixSetLimits = tileSet.tileMatrixSetLimits;\n  let tileUrlTemplate;\n\n  if (tileSet.dataType === 'map') {\n    tileUrlTemplate = getMapTileUrlTemplate(\n      tileSet.links,\n      sourceInfo.mediaType\n    );\n  } else if (tileSet.dataType === 'vector') {\n    tileUrlTemplate = getVectorTileUrlTemplate(\n      tileSet.links,\n      sourceInfo.mediaType,\n      sourceInfo.supportedMediaTypes\n    );\n  } else {\n    throw new Error('Expected tileset data type to be \"map\" or \"vector\"');\n  }\n\n  if (tileSet.tileMatrixSet) {\n    return parseTileMatrixSet(\n      sourceInfo,\n      tileSet.tileMatrixSet,\n      tileUrlTemplate,\n      tileMatrixSetLimits\n    );\n  }\n\n  const tileMatrixSetLink = tileSet.links.find(\n    (link) =>\n      link.rel === 'http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme'\n  );\n  if (!tileMatrixSetLink) {\n    throw new Error(\n      'Expected http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme link or tileMatrixSet'\n    );\n  }\n  const tileMatrixSetDefinition = tileMatrixSetLink.href;\n\n  const url = resolveUrl(sourceInfo.url, tileMatrixSetDefinition);\n  return getJSON(url).then(function (tileMatrixSet) {\n    return parseTileMatrixSet(\n      sourceInfo,\n      tileMatrixSet,\n      tileUrlTemplate,\n      tileMatrixSetLimits\n    );\n  });\n}\n\n/**\n * @param {SourceInfo} sourceInfo Source info.\n * @return {Promise<TileSetInfo>} Tile set info.\n */\nexport function getTileSetInfo(sourceInfo) {\n  return getJSON(sourceInfo.url).then(function (tileSet) {\n    return parseTileSetMetadata(sourceInfo, tileSet);\n  });\n}\n","/**\n * @module ol/source/OGCMapTile\n */\nimport TileImage from './TileImage.js';\nimport {getTileSetInfo} from './ogcTileUtil.js';\nimport {error as logError} from '../console.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} url URL to the OGC Map Tileset endpoint.\n * @property {Object} [context] A lookup of values to use in the tile URL template.  The `{tileMatrix}`\n * (zoom level), `{tileRow}`, and `{tileCol}` variables in the URL will always be provided by the source.\n * @property {string} [mediaType] The content type for the tiles (e.g. \"image/png\").  If not provided,\n * the source will try to find a link with rel=\"item\" that uses a supported image type.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. By default, the projection\n * will be derived from the `crs` of the `tileMatrixSet`.  You can override this by supplying\n * a projection to the constructor.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will be ignored if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(tile, src) {\n *   tile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n/**\n * @classdesc\n * Layer source for map tiles from an [OGC API - Tiles](https://ogcapi.ogc.org/tiles/) service that provides \"map\" type tiles.\n * The service must conform to at least the core (http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/core)\n * and tileset (http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/tileset) conformance classes.\n * @api\n */\nclass OGCMapTile extends TileImage {\n  /**\n   * @param {Options} options OGC map tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n    });\n\n    const sourceInfo = {\n      url: options.url,\n      projection: this.getProjection(),\n      mediaType: options.mediaType,\n      context: options.context || null,\n    };\n\n    getTileSetInfo(sourceInfo)\n      .then(this.handleTileSetInfo_.bind(this))\n      .catch(this.handleError_.bind(this));\n  }\n\n  /**\n   * @param {import(\"./ogcTileUtil.js\").TileSetInfo} tileSetInfo Tile set info.\n   * @private\n   */\n  handleTileSetInfo_(tileSetInfo) {\n    this.tileGrid = tileSetInfo.grid;\n    this.setTileUrlFunction(tileSetInfo.urlFunction, tileSetInfo.urlTemplate);\n    this.setState('ready');\n  }\n\n  /**\n   * @private\n   * @param {Error} error The error.\n   */\n  handleError_(error) {\n    logError(error);\n    this.setState('error');\n  }\n}\n\nexport default OGCMapTile;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return this.image_ ? this.image_.getImage() : null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection)\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image_ = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image_ = null;\n          }\n        }\n      } else {\n        this.image_ = null;\n      }\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image_.getExtent();\n    const img = this.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth)\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight)\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scale =\n      (pixelRatio * imageResolution) / (viewResolution * imagePixelRatio);\n\n    const extent = frameState.extent;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.context;\n    const canvas = context.canvas;\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = this.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scale,\n      scale,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolution,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolution\n    );\n\n    this.renderedResolution = (imageResolution * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      let previousAlpha;\n      if (opacity !== 1) {\n        previousAlpha = context.globalAlpha;\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.globalAlpha = previousAlpha;\n      }\n    }\n    this.postRender(context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/source/Raster\n */\nimport Disposable from '../Disposable.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport ImageLayer from '../layer/Image.js';\nimport ImageSource from './Image.js';\nimport Source from './Source.js';\nimport TileLayer from '../layer/Tile.js';\nimport TileQueue from '../TileQueue.js';\nimport TileSource from './Tile.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {create as createTransform} from '../transform.js';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport {getUid} from '../util.js';\n\nlet hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet context;\n\n/**\n * @param {Uint8ClampedArray} data Image data.\n * @param {number} width Number of columns.\n * @param {number} height Number of rows.\n * @return {ImageData} Image data.\n */\nexport function newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  }\n\n  if (!context) {\n    context = document.createElement('canvas').getContext('2d');\n  }\n  const imageData = context.createImageData(width, height);\n  imageData.data.set(data);\n  return imageData;\n}\n\n/**\n * @typedef {Object} MinionData\n * @property {Array<ArrayBuffer>} buffers Array of buffers.\n * @property {Object} meta Operation metadata.\n * @property {boolean} imageOps The operation is an image operation.\n * @property {number} width The width of the image.\n * @property {number} height The height of the image.\n */\n\n/* istanbul ignore next */\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(MinionData):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  let workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    }\n    return {data: data, width: width, height: height};\n  }\n\n  return function (data) {\n    // bracket notation for minification support\n    const buffers = data['buffers'];\n    const meta = data['meta'];\n    const imageOps = data['imageOps'];\n    const width = data['width'];\n    const height = data['height'];\n\n    const numBuffers = buffers.length;\n    const numBytes = buffers[0].byteLength;\n\n    if (imageOps) {\n      const images = new Array(numBuffers);\n      for (let b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n          new Uint8ClampedArray(buffers[b]),\n          width,\n          height\n        );\n      }\n      const output = operation(images, meta).data;\n      return output.buffer;\n    }\n\n    const output = new Uint8ClampedArray(numBytes);\n    const arrays = new Array(numBuffers);\n    const pixels = new Array(numBuffers);\n    for (let b = 0; b < numBuffers; ++b) {\n      arrays[b] = new Uint8ClampedArray(buffers[b]);\n      pixels[b] = [0, 0, 0, 0];\n    }\n    for (let i = 0; i < numBytes; i += 4) {\n      for (let j = 0; j < numBuffers; ++j) {\n        const array = arrays[j];\n        pixels[j][0] = array[i];\n        pixels[j][1] = array[i + 1];\n        pixels[j][2] = array[i + 2];\n        pixels[j][3] = array[i + 3];\n      }\n      const pixel = operation(pixels, meta);\n      output[i] = pixel[0];\n      output[i + 1] = pixel[1];\n      output[i + 2] = pixel[2];\n      output[i + 3] = pixel[3];\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {ProcessorOptions} config Processor options.\n * @param {function(MessageEvent): void} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  const lib = Object.keys(config.lib || {}).map(function (name) {\n    return 'const ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  const lines = lib.concat([\n    'const __minion__ = (' + createMinion.toString() + ')(',\n    config.operation.toString(),\n    ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  const buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});',\n  ]);\n\n  const worker = new Worker(\n    typeof Blob === 'undefined'\n      ? 'data:text/javascript;base64,' +\n        Buffer.from(lines.join('\\n'), 'binary').toString('base64')\n      : URL.createObjectURL(new Blob(lines, {type: 'text/javascript'}))\n  );\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * @typedef {Object} FauxMessageEvent\n * @property {Object} data Message data.\n */\n\n/**\n * Create a faux worker for running operations.\n * @param {ProcessorOptions} config Configuration.\n * @param {function(FauxMessageEvent): void} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  const minion = createMinion(config.operation);\n  let terminated = false;\n  return {\n    postMessage: function (data) {\n      setTimeout(function () {\n        if (terminated) {\n          return;\n        }\n        onMessage({data: {buffer: minion(data), meta: data['meta']}});\n      }, 0);\n    },\n    terminate: function () {\n      terminated = true;\n    },\n  };\n}\n\n/**\n * @typedef {function(Error, ImageData, (Object|Array<Object>)): void} JobCallback\n */\n\n/**\n * @typedef {Object} Job\n * @property {Object} meta Job metadata.\n * @property {Array<ImageData>} inputs Array of input data.\n * @property {JobCallback} callback Called when the job is complete.\n */\n\n/**\n * @typedef {Object} ProcessorOptions\n * @property {number} threads Number of workers to spawn.\n * @property {Operation} operation The operation.\n * @property {Object<string, Function>} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} queue The number of queued jobs to allow.\n * @property {boolean} [imageOps=false] Pass all the image data to the operation instead of a single pixel.\n */\n\n/**\n * @classdesc\n * A processor runs pixel or image operations in workers.\n */\nexport class Processor extends Disposable {\n  /**\n   * @param {ProcessorOptions} config Configuration.\n   */\n  constructor(config) {\n    super();\n\n    this._imageOps = !!config.imageOps;\n    let threads;\n    if (config.threads === 0) {\n      threads = 0;\n    } else if (this._imageOps) {\n      threads = 1;\n    } else {\n      threads = config.threads || 1;\n    }\n\n    /**\n     * @type {Array<Worker>}\n     */\n    const workers = new Array(threads);\n    if (threads) {\n      for (let i = 0; i < threads; ++i) {\n        workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n      }\n    } else {\n      workers[0] = createFauxWorker(\n        config,\n        this._onWorkerMessage.bind(this, 0)\n      );\n    }\n    this._workers = workers;\n\n    /**\n     * @type {Array<Job>}\n     * @private\n     */\n    this._queue = [];\n\n    this._maxQueueLength = config.queue || Infinity;\n    this._running = 0;\n\n    /**\n     * @type {Object<number, any>}\n     * @private\n     */\n    this._dataLookup = {};\n\n    /**\n     * @type {Job}\n     * @private\n     */\n    this._job = null;\n  }\n\n  /**\n   * Run operation on input data.\n   * @param {Array<ImageData>} inputs Array of image data.\n   * @param {Object} meta A user data object.  This is passed to all operations\n   *     and must be serializable.\n   * @param {function(Error, ImageData, Object): void} callback Called when work\n   *     completes.  The first argument is any error.  The second is the ImageData\n   *     generated by operations.  The third is the user data object.\n   */\n  process(inputs, meta, callback) {\n    this._enqueue({\n      inputs: inputs,\n      meta: meta,\n      callback: callback,\n    });\n    this._dispatch();\n  }\n\n  /**\n   * Add a job to the queue.\n   * @param {Job} job The job.\n   */\n  _enqueue(job) {\n    this._queue.push(job);\n    while (this._queue.length > this._maxQueueLength) {\n      this._queue.shift().callback(null, null);\n    }\n  }\n\n  /**\n   * Dispatch a job.\n   */\n  _dispatch() {\n    if (this._running || this._queue.length === 0) {\n      return;\n    }\n\n    const job = this._queue.shift();\n    this._job = job;\n    const width = job.inputs[0].width;\n    const height = job.inputs[0].height;\n    const buffers = job.inputs.map(function (input) {\n      return input.data.buffer;\n    });\n    const threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage(\n        {\n          buffers: buffers,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        buffers\n      );\n      return;\n    }\n\n    const length = job.inputs[0].data.length;\n    const segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (let i = 0; i < threads; ++i) {\n      const offset = i * segmentLength;\n      const slices = [];\n      for (let j = 0, jj = buffers.length; j < jj; ++j) {\n        slices.push(buffers[j].slice(offset, offset + segmentLength));\n      }\n      this._workers[i].postMessage(\n        {\n          buffers: slices,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        slices\n      );\n    }\n  }\n\n  /**\n   * Handle messages from the worker.\n   * @param {number} index The worker index.\n   * @param {MessageEvent} event The message event.\n   */\n  _onWorkerMessage(index, event) {\n    if (this.disposed) {\n      return;\n    }\n    this._dataLookup[index] = event.data;\n    --this._running;\n    if (this._running === 0) {\n      this._resolveJob();\n    }\n  }\n\n  /**\n   * Resolve a job.  If there are no more worker threads, the processor callback\n   * will be called.\n   */\n  _resolveJob() {\n    const job = this._job;\n    const threads = this._workers.length;\n    let data, meta;\n    if (threads === 1) {\n      data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n      meta = this._dataLookup[0]['meta'];\n    } else {\n      const length = job.inputs[0].data.length;\n      data = new Uint8ClampedArray(length);\n      meta = new Array(threads);\n      const segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (let i = 0; i < threads; ++i) {\n        const buffer = this._dataLookup[i]['buffer'];\n        const offset = i * segmentLength;\n        data.set(new Uint8ClampedArray(buffer), offset);\n        meta[i] = this._dataLookup[i]['meta'];\n      }\n    }\n    this._job = null;\n    this._dataLookup = {};\n    job.callback(\n      null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height),\n      meta\n    );\n    this._dispatch();\n  }\n\n  /**\n   * Terminate all workers associated with the processor.\n   */\n  disposeInternal() {\n    for (let i = 0; i < this._workers.length; ++i) {\n      this._workers[i].terminate();\n    }\n    this._workers.length = 0;\n  }\n}\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData)\n * and should return a single\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData).\n * The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n\n/**\n * @enum {string}\n */\nconst RasterEventType = {\n  /**\n   * Triggered before operations are run.  Listeners will receive an event object with\n   * a `data` property that can be used to make data available to operations.\n   * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.  Listeners will receive an event object with\n   * a `data` property.  If more than one thread is used, `data` will be an array of\n   * objects.  If a single thread is used, `data` will be a single object.\n   * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations',\n};\n\n/**\n * @typedef {'pixel' | 'image'} RasterOperationType\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n */\n\n/**\n * @typedef {import(\"./Image.js\").ImageSourceEventTypes|'beforeoperations'|'afteroperations'} RasterSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster~RasterSource} instances are instances of this\n * type.\n */\nexport class RasterSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Object|Array<Object>} data An object made available to operations.  For \"afteroperations\" evenets\n   * this will be an array of objects if more than one thread is used.\n   */\n  constructor(type, frameState, data) {\n    super(type);\n\n    /**\n     * The raster extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n * @property {Array<number>|null} [resolutions] Resolutions. If specified, raster operations will only\n * be run at the given resolutions.  By default, the resolutions of the first source with resolutions\n * specified will be used, if any. Set to `null` to use any view resolution instead.\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Image.js\").ImageSourceEventTypes, import(\"./Image.js\").ImageSourceEvent, Return> &\n *   import(\"../Observable\").OnSignature<RasterSourceEventTypes, RasterSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |RasterSourceEventTypes, Return>} RasterSourceOnSignature\n */\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nclass RasterSource extends ImageSource {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      projection: null,\n    });\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {RasterSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Processor}\n     */\n    this.processor_ = null;\n\n    /**\n     * @private\n     * @type {RasterOperationType}\n     */\n    this.operationType_ =\n      options.operationType !== undefined ? options.operationType : 'pixel';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array<import(\"../layer/Layer.js\").default>}\n     */\n    this.layers_ = createLayers(options.sources);\n\n    const changed = this.changed.bind(this);\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      this.layers_[i].addEventListener(EventType.CHANGE, changed);\n    }\n\n    /** @type {boolean} */\n    this.useResolutions_ = options.resolutions !== null;\n\n    /**\n     * @private\n     * @type {import(\"../TileQueue.js\").default}\n     */\n    this.tileQueue_ = new TileQueue(function () {\n      return 1;\n    }, this.processSources_.bind(this));\n\n    /**\n     * The most recently requested frame state.\n     * @type {import(\"../Map.js\").FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {import(\"../ImageCanvas.js\").default}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      declutterTree: null,\n      extent: null,\n      index: 0,\n      layerIndex: 0,\n      layerStatesArray: getLayerStatesArray(this.layers_),\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {import(\"../View.js\").State} */ ({\n        rotation: 0,\n      }),\n      viewHints: [],\n      wantedTiles: {},\n      mapId: getUid(this),\n      renderTargets: {},\n    };\n\n    this.setAttributions(function (frameState) {\n      const attributions = [];\n      for (\n        let index = 0, iMax = options.sources.length;\n        index < iMax;\n        ++index\n      ) {\n        const sourceOrLayer = options.sources[index];\n        const source =\n          sourceOrLayer instanceof Source\n            ? sourceOrLayer\n            : sourceOrLayer.getSource();\n        if (!source) {\n          continue;\n        }\n        const attributionGetter = source.getAttributions();\n        if (typeof attributionGetter === 'function') {\n          const sourceAttribution = attributionGetter(frameState);\n          attributions.push.apply(attributions, sourceAttribution);\n        }\n      }\n      return attributions.length !== 0 ? attributions : null;\n    });\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n  }\n\n  /**\n   * Set the operation.\n   * @param {Operation} operation New operation.\n   * @param {Object} [lib] Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  setOperation(operation, lib) {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n\n    this.processor_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === 'image',\n      queue: 1,\n      lib: lib,\n      threads: this.threads_,\n    });\n    this.changed();\n  }\n\n  /**\n   * Update the stored frame state.\n   * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n   * @return {import(\"../Map.js\").FrameState} The updated frame state.\n   * @private\n   */\n  updateFrameState_(extent, resolution, projection) {\n    const frameState = /** @type {import(\"../Map.js\").FrameState} */ (\n      Object.assign({}, this.frameState_)\n    );\n\n    frameState.viewState = /** @type {import(\"../View.js\").State} */ (\n      Object.assign({}, frameState.viewState)\n    );\n\n    const center = getCenter(extent);\n\n    frameState.size[0] = Math.ceil(getWidth(extent) / resolution);\n    frameState.size[1] = Math.ceil(getHeight(extent) / resolution);\n    frameState.extent = [\n      center[0] - (frameState.size[0] * resolution) / 2,\n      center[1] - (frameState.size[1] * resolution) / 2,\n      center[0] + (frameState.size[0] * resolution) / 2,\n      center[1] + (frameState.size[1] * resolution) / 2,\n    ];\n    frameState.time = Date.now();\n\n    const viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  }\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  allSourcesReady_() {\n    let ready = true;\n    let source;\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      source = this.layers_[i].getSource();\n      if (!source || source.getState() !== 'ready') {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    this.tileQueue_.loadMoreTiles(16, 16);\n\n    resolution = this.findNearestResolution(resolution);\n    const frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      const renderedResolution = this.renderedImageCanvas_.getResolution();\n      const renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (\n        resolution !== renderedResolution ||\n        !equals(frameState.extent, renderedExtent)\n      ) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (\n      !this.renderedImageCanvas_ ||\n      this.getRevision() !== this.renderedRevision_\n    ) {\n      this.processSources_();\n    }\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  }\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  processSources_() {\n    const frameState = this.requestedFrameState_;\n    const len = this.layers_.length;\n    const imageDatas = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      frameState.layerIndex = i;\n      frameState.renderTargets = {};\n      const imageData = getImageData(this.layers_[i], frameState);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    const data = {};\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data)\n    );\n    this.processor_.process(\n      imageDatas,\n      data,\n      this.onWorkerComplete_.bind(this, frameState)\n    );\n  }\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object|Array<Object>} data The user data (or an array if more than one thread).\n   * @private\n   */\n  onWorkerComplete_(frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    if (\n      resolution !== this.requestedFrameState_.viewState.resolution ||\n      !equals(extent, this.requestedFrameState_.extent)\n    ) {\n      return;\n    }\n\n    let context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      const width = Math.round(getWidth(extent) / resolution);\n      const height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(\n        extent,\n        resolution,\n        1,\n        context.canvas\n      );\n    }\n    context.putImageData(output, 0, 0);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    } else {\n      this.changed();\n    }\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data)\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    if (!this.useResolutions_) {\n      return null;\n    }\n    let resolutions = super.getResolutions();\n    if (!resolutions) {\n      for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n        const source = this.layers_[i].getSource();\n        resolutions = source.getResolutions(projection);\n        if (resolutions) {\n          break;\n        }\n      }\n    }\n    return resolutions;\n  }\n\n  disposeInternal() {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n    super.disposeInternal();\n  }\n}\n\n/**\n * Clean up and unregister the worker.\n * @function\n * @api\n */\nRasterSource.prototype.dispose;\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nlet sharedContext = null;\n\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState) {\n  const renderer = layer.getRenderer();\n  if (!renderer) {\n    throw new Error('Unsupported layer type: ' + layer);\n  }\n\n  if (!renderer.prepareFrame(frameState)) {\n    return null;\n  }\n  const width = frameState.size[0];\n  const height = frameState.size[1];\n  if (width === 0 || height === 0) {\n    return null;\n  }\n  const container = renderer.renderFrame(frameState, null);\n  let element;\n  if (container instanceof HTMLCanvasElement) {\n    element = container;\n  } else {\n    if (container) {\n      element = container.firstElementChild;\n    }\n    if (!(element instanceof HTMLCanvasElement)) {\n      throw new Error('Unsupported rendered element: ' + element);\n    }\n    if (element.width === width && element.height === height) {\n      const context = element.getContext('2d');\n      return context.getImageData(0, 0, width, height);\n    }\n  }\n\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height, undefined, {\n      willReadFrequently: true,\n    });\n  } else {\n    const canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height, undefined, {\n        willReadFrequently: true,\n      });\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  sharedContext.drawImage(element, 0, 0, width, height);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n  return layers.map(function (layer) {\n    return layer.getLayerState();\n  });\n}\n\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n  const len = sources.length;\n  const layers = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    layers[i] = createLayer(sources[i]);\n  }\n  return layers;\n}\n\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n  // @type {import(\"../layer/Layer.js\").default}\n  let layer;\n  if (layerOrSource instanceof Source) {\n    if (layerOrSource instanceof TileSource) {\n      layer = new TileLayer({source: layerOrSource});\n    } else if (layerOrSource instanceof ImageSource) {\n      layer = new ImageLayer({source: layerOrSource});\n    }\n  } else {\n    layer = layerOrSource;\n  }\n  return layer;\n}\n\nexport default RasterSource;\n","/**\n * @module ol/source/Stamen\n */\n\nimport XYZ from './XYZ.js';\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from './OSM.js';\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst ATTRIBUTIONS = [\n  'Map tiles by <a href=\"https://stamen.com/\" target=\"_blank\">Stamen Design</a>, ' +\n    'under <a href=\"https://creativecommons.org/licenses/by/3.0/\" target=\"_blank\">CC BY' +\n    ' 3.0</a>.',\n  OSM_ATTRIBUTION,\n];\n\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nconst LayerConfig = {\n  'terrain': {\n    extension: 'png',\n    opaque: true,\n  },\n  'terrain-background': {\n    extension: 'png',\n    opaque: true,\n  },\n  'terrain-labels': {\n    extension: 'png',\n    opaque: false,\n  },\n  'terrain-lines': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-background': {\n    extension: 'png',\n    opaque: true,\n  },\n  'toner': {\n    extension: 'png',\n    opaque: true,\n  },\n  'toner-hybrid': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-labels': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-lines': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-lite': {\n    extension: 'png',\n    opaque: true,\n  },\n  'watercolor': {\n    extension: 'jpg',\n    opaque: true,\n  },\n};\n\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number}>}\n */\nconst ProviderConfig = {\n  'terrain': {\n    minZoom: 0,\n    maxZoom: 18,\n  },\n  'toner': {\n    minZoom: 0,\n    maxZoom: 20,\n  },\n  'watercolor': {\n    minZoom: 0,\n    maxZoom: 18,\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {string} layer Layer name.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n * @api\n */\nclass Stamen extends XYZ {\n  /**\n   * @param {Options} options Stamen options.\n   */\n  constructor(options) {\n    const i = options.layer.indexOf('-');\n    const provider = i == -1 ? options.layer : options.layer.slice(0, i);\n    const providerConfig = ProviderConfig[provider];\n\n    const layerConfig = LayerConfig[options.layer];\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' +\n          options.layer +\n          '/{z}/{x}/{y}.' +\n          layerConfig.extension;\n\n    super({\n      attributions: ATTRIBUTIONS,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: options.interpolate,\n      maxZoom:\n        options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n      minZoom:\n        options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n      opaque: layerConfig.opaque,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default Stamen;\n","/**\n * @module ol/source/TileArcGISRest\n */\n\nimport TileImage from './TileImage.js';\nimport {appendParams} from '../uri.js';\nimport {createEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\n * default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`,\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\n * override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * The projection code must contain a numeric end portion separated by :\n * or the entire code must form a valid ArcGIS SpatialReference definition.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\n * The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\n * url should include /MapServer or /ImageServer.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\n * transition, pass `transition: 0`.\n * @property {Array<string>} [urls] ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\n * Service supports multiple urls for export requests.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from ArcGIS Rest services. Map and Image\n * Services are supported.\n *\n * For cached ArcGIS services, better performance is available using the\n * {@link module:ol/source/XYZ~XYZ} data source.\n * @api\n */\nclass TileArcGISRest extends TileImage {\n  /**\n   * @param {Options} [options] Tile ArcGIS Rest options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(\n    tileCoord,\n    tileSize,\n    tileExtent,\n    pixelRatio,\n    projection,\n    params\n  ) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    // ArcGIS Server only wants the numeric portion of the projection ID.\n    // (if there is no numeric portion the entire projection code must\n    // form a valid ArcGIS SpatialReference definition).\n    const srid = projection\n      .getCode()\n      .split(/:(?=\\d+$)/)\n      .pop();\n\n    params['SIZE'] = tileSize[0] + ',' + tileSize[1];\n    params['BBOX'] = tileExtent.join(',');\n    params['BBOXSR'] = srid;\n    params['IMAGESR'] = srid;\n    params['DPI'] = Math.round(\n      params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio\n    );\n\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n\n    const modifiedUrl = url\n      .replace(/MapServer\\/?$/, 'MapServer/export')\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n    return appendParams(modifiedUrl, params);\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.hidpi_ ? pixelRatio : 1;\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && !this.hidpi_) {\n      pixelRatio = 1;\n    }\n\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    // Apply default params and override with user specified values.\n    const baseParams = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true,\n    };\n    Object.assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams\n    );\n  }\n}\n\nexport default TileArcGISRest;\n","/**\n * @module ol/source/TileDebug\n */\n\nimport XYZ from './XYZ.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Optional projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Set to `1` when debugging `VectorTile` sources with a default configuration.\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n * @property {string} [template='z:{z} x:{x} y:{y}'] Template for labeling the tiles.\n * Should include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n */\n\n/**\n * @classdesc\n * A pseudo tile source, which does not fetch tiles from a server, but renders\n * a grid outline for the tile grid/projection along with the coordinates for\n * each tile. See examples/canvas-tiles for an example.\n * @api\n */\nclass TileDebug extends XYZ {\n  /**\n   * @param {Options} [options] Debug tile options.\n   */\n  constructor(options) {\n    /**\n     * @type {Options}\n     */\n    options = options || {};\n\n    super({\n      opaque: false,\n      projection: options.projection,\n      tileGrid: options.tileGrid,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      zDirection: options.zDirection,\n      url: options.template || 'z:{z} x:{x} y:{y}',\n      tileLoadFunction: (tile, text) => {\n        const z = tile.getTileCoord()[0];\n        const tileSize = toSize(this.tileGrid.getTileSize(z));\n        const context = createCanvasContext2D(tileSize[0], tileSize[1]);\n\n        context.strokeStyle = 'grey';\n        context.strokeRect(0.5, 0.5, tileSize[0] + 0.5, tileSize[1] + 0.5);\n\n        context.fillStyle = 'grey';\n        context.strokeStyle = 'white';\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.font = '24px sans-serif';\n        context.lineWidth = 4;\n        context.strokeText(text, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n        context.fillText(text, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n\n        /** @type {import(\"../ImageTile.js\").default} */ (tile).setImage(\n          context.canvas\n        );\n      },\n    });\n  }\n}\n\nexport default TileDebug;\n","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See https://mapbox.com/developers/api/.\n */\n\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {assert} from '../asserts.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Note: `tileSize` and other non-standard TileJSON properties are currently ignored.\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nclass TileJSON extends TileImage {\n  /**\n   * @param {Options} options TileJSON options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @type {Config}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     * @private\n     */\n    this.tileSize_ = options.tileSize;\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this)\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {Config} */ (JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * @return {Config} The tilejson object.\n   * @api\n   */\n  getTileJSON() {\n    return this.tileJSON_;\n  }\n\n  /**\n   * @protected\n   * @param {Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n      tileSize: this.tileSize_,\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n\n    if (tileJSON['attribution'] && !this.getAttributions()) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState('ready');\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n}\n\nexport default TileJSON;\n","/**\n * @module ol/source/TileWMS\n */\n\nimport TileImage from './TileImage.js';\nimport {DEFAULT_VERSION} from './wms.js';\nimport {appendParams} from '../uri.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {buffer as bufferSize, scale as scaleSize, toSize} from '../size.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {compareVersions} from '../string.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport {modulo} from '../math.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See https://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nclass TileWMS extends TileImage {\n  /**\n   * @param {Options} [options] Tile WMS options.\n   */\n  constructor(options) {\n    options = options ? options : /** @type {Options} */ ({});\n\n    const params = Object.assign({}, options.params);\n\n    const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: !transparent,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projectionObj);\n    }\n\n    const z = tileGrid.getZForResolution(resolution, this.zDirection);\n    const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    let tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      tileResolution = calculateSourceResolution(\n        sourceProjectionObj,\n        projectionObj,\n        coordinate,\n        tileResolution\n      );\n      tileExtent = transformExtent(\n        tileExtent,\n        projectionObj,\n        sourceProjectionObj\n      );\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    Object.assign(baseParams, this.params_, params);\n\n    const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n    const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.urls[0] === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    Object.assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.urls[0]), baseParams);\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(\n    tileCoord,\n    tileSize,\n    tileExtent,\n    pixelRatio,\n    projection,\n    params\n  ) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    params['WIDTH'] = tileSize[0];\n    params['HEIGHT'] = tileSize[1];\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case 'geoserver':\n          const dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case 'mapserver':\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case 'carmentaserver':\n        case 'qgis':\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default: // Unknown `serverType` configured\n          assert(false, 52);\n          break;\n      }\n    }\n\n    const axisOrientation = projection.getAxisOrientation();\n    const bbox = tileExtent;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      let tmp;\n      tmp = tileExtent[0];\n      bbox[0] = tileExtent[1];\n      bbox[1] = tmp;\n      tmp = tileExtent[2];\n      bbox[2] = tileExtent[3];\n      bbox[3] = tmp;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n    return appendParams(url, params);\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return !this.hidpi_ || this.serverType_ === undefined ? 1 : pixelRatio;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n    };\n    Object.assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams\n    );\n  }\n}\n\nexport default TileWMS;\n","/**\n * @module ol/source/UTFGrid\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileSource from './Tile.js';\nimport TileState from '../TileState.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {assert} from '../asserts.js';\nimport {createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {listenOnce} from '../events.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @typedef {Object} UTFGridJSON\n * @property {Array<string>} grid The grid.\n * @property {Array<string>} keys The keys.\n * @property {Object<string, Object>} [data] Optional data.\n */\n\nexport class CustomTile extends Tile {\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {import(\"../extent.js\").Extent} extent Extent of the tile.\n   * @param {boolean} preemptive Load the tile when visible (before it's needed).\n   * @param {boolean} jsonp Load the tile as a script.\n   */\n  constructor(tileCoord, state, src, extent, preemptive, jsonp) {\n    super(tileCoord, state);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = preemptive;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.grid_ = null;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.keys_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Object>|undefined}\n     */\n    this.data_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = jsonp;\n  }\n\n  /**\n   * Get the image element for this tile.\n   * @return {HTMLImageElement} Image.\n   */\n  getImage() {\n    return null;\n  }\n\n  /**\n   * Synchronously returns data at given coordinate (if available).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {*} The data.\n   */\n  getData(coordinate) {\n    if (!this.grid_ || !this.keys_) {\n      return null;\n    }\n    const xRelative =\n      (coordinate[0] - this.extent_[0]) / (this.extent_[2] - this.extent_[0]);\n    const yRelative =\n      (coordinate[1] - this.extent_[1]) / (this.extent_[3] - this.extent_[1]);\n\n    const row = this.grid_[Math.floor((1 - yRelative) * this.grid_.length)];\n\n    if (typeof row !== 'string') {\n      return null;\n    }\n\n    let code = row.charCodeAt(Math.floor(xRelative * row.length));\n    if (code >= 93) {\n      code--;\n    }\n    if (code >= 35) {\n      code--;\n    }\n    code -= 32;\n\n    let data = null;\n    if (code in this.keys_) {\n      const id = this.keys_[code];\n      if (this.data_ && id in this.data_) {\n        data = this.data_[id];\n      } else {\n        data = id;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate (or `null` if not yet loaded).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(*): void} callback Callback.\n   * @param {boolean} [request] If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   */\n  forDataAtCoordinate(coordinate, callback, request) {\n    if (this.state == TileState.EMPTY && request === true) {\n      this.state = TileState.IDLE;\n      listenOnce(\n        this,\n        EventType.CHANGE,\n        function (e) {\n          callback(this.getData(coordinate));\n        },\n        this\n      );\n      this.loadInternal_();\n    } else {\n      if (request === true) {\n        setTimeout(() => {\n          callback(this.getData(coordinate));\n        }, 0);\n      } else {\n        callback(this.getData(coordinate));\n      }\n    }\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.src_;\n  }\n\n  /**\n   * @private\n   */\n  handleError_() {\n    this.state = TileState.ERROR;\n    this.changed();\n  }\n\n  /**\n   * @param {!UTFGridJSON} json UTFGrid data.\n   * @private\n   */\n  handleLoad_(json) {\n    this.grid_ = json['grid'];\n    this.keys_ = json['keys'];\n    this.data_ = json['data'];\n\n    this.state = TileState.LOADED;\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  loadInternal_() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      if (this.jsonp_) {\n        requestJSONP(\n          this.src_,\n          this.handleLoad_.bind(this),\n          this.handleError_.bind(this)\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', this.src_);\n        client.send();\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {!UTFGridJSON} */ (\n          JSON.parse(client.responseText)\n        );\n      } catch (err) {\n        this.handleError_();\n        return;\n      }\n      this.handleLoad_(response);\n    } else {\n      this.handleError_();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleError_();\n  }\n\n  /**\n   */\n  load() {\n    if (this.preemptive_) {\n      this.loadInternal_();\n    } else {\n      this.setState(TileState.EMPTY);\n    }\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [preemptive=true]\n * If `true` the UTFGrid source loads the tiles based on their \"visibility\".\n * This improves the speed of response, but increases traffic.\n * Note that if set to `false` (lazy loading), you need to pass `true` as\n * `request` to the `forDataAtCoordinateAndResolution` method otherwise no\n * data will ever be loaded.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {import(\"./TileJSON.js\").Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {string} [url] TileJSON endpoint that provides the configuration for this source.\n * Request will be made through JSONP. If not provided, `tileJSON` must be configured.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for UTFGrid interaction data loaded from TileJSON format.\n * @api\n */\nclass UTFGrid extends TileSource {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super({\n      projection: getProjection('EPSG:3857'),\n      state: 'loading',\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ =\n      options.preemptive !== undefined ? options.preemptive : true;\n\n    /**\n     * @private\n     * @type {!import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction_ = nullTileUrlFunction;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.template_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = options.jsonp || false;\n\n    if (options.url) {\n      if (this.jsonp_) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this)\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {import(\"./TileJSON.js\").Config} */ (\n          JSON.parse(client.responseText)\n        );\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * Return the template from TileJSON.\n   * @return {string|undefined} The template from TileJSON.\n   * @api\n   */\n  getTemplate() {\n    return this.template_;\n  }\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate and resolution (or `null` if not yet loaded or\n   * in case of an error).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {function(*): void} callback Callback.\n   * @param {boolean} [request] If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   * @api\n   */\n  forDataAtCoordinateAndResolution(coordinate, resolution, callback, request) {\n    if (this.tileGrid) {\n      const z = this.tileGrid.getZForResolution(resolution, this.zDirection);\n      const tileCoord = this.tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = /** @type {!CustomTile} */ (\n        this.getTile(\n          tileCoord[0],\n          tileCoord[1],\n          tileCoord[2],\n          1,\n          this.getProjection()\n        )\n      );\n      tile.forDataAtCoordinate(coordinate, callback, request);\n    } else {\n      if (request === true) {\n        setTimeout(function () {\n          callback(null);\n        }, 0);\n      } else {\n        callback(null);\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n\n  /**\n   * TODO: very similar to ol/source/TileJSON#handleTileJSONResponse\n   * @protected\n   * @param {import(\"./TileJSON.js\").Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n    });\n    this.tileGrid = tileGrid;\n\n    this.template_ = tileJSON['template'];\n\n    const grids = tileJSON['grids'];\n    if (!grids) {\n      this.setState('error');\n      return;\n    }\n\n    this.tileUrlFunction_ = createFromTemplates(grids, tileGrid);\n\n    if (tileJSON['attribution'] !== undefined) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n\n    this.setState('ready');\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!CustomTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return this.tileCache.get(tileCoordKey);\n    }\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = this.tileUrlFunction_(urlTileCoord, pixelRatio, projection);\n    const tile = new CustomTile(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.tileGrid.getTileCoordExtent(tileCoord),\n      this.preemptive_,\n      this.jsonp_\n    );\n    this.tileCache.set(tileCoordKey, tile);\n    return tile;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UTFGrid;\n","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport TileGrid from './TileGrid.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile~TileSource} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes,\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent} [extent] An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>} [matrixLimits] An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(\n  matrixSet,\n  extent,\n  matrixLimits\n) {\n  /** @type {!Array<number>} */\n  const resolutions = [];\n  /** @type {!Array<string>} */\n  const matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  const origins = [];\n  /** @type {!Array<number|import(\"../size.js\").Size>} */\n  const tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const sizes = [];\n\n  matrixLimits = matrixLimits !== undefined ? matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function (a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function (elt) {\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = matrixLimits.find(function (elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (!elt[identifierPropName].includes(':')) {\n          return (\n            matrixSet[identifierPropName] + ':' + elt[identifierPropName] ===\n            elt_ml[matrixIdsPropName]\n          );\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution =\n        (elt[scaleDenominatorPropName] * 0.28e-3) / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([\n          elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0],\n        ]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(\n        tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight]\n      );\n      sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes,\n  });\n}\n","/**\n * @module ol/source/WMTS\n */\n\nimport TileImage from './TileImage.js';\nimport {appendParams} from '../uri.js';\nimport {containsExtent} from '../extent.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {createFromTileUrlFunctions, expandUrl} from '../tileurlfunction.js';\nimport {equivalent, get as getProjection, transformExtent} from '../proj.js';\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @typedef {'KVP' | 'REST'} RequestEncoding\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {RequestEncoding} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nclass WMTS extends TileImage {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    // TODO: add support for TileMatrixLimits\n\n    const requestEncoding =\n      options.requestEncoding !== undefined ? options.requestEncoding : 'KVP';\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    const tileGrid = options.tileGrid;\n\n    let urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ =\n      options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {RequestEncoding}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      );\n    }\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @param {Array<string>} urls URLs.\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    this.setTileUrlFunction(\n      createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      ),\n      key\n    );\n  }\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  getDimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  getMatrixSet() {\n    return this.matrixSet_;\n  }\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {RequestEncoding} Request encoding.\n   * @api\n   */\n  getRequestEncoding() {\n    return this.requestEncoding_;\n  }\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  getVersion() {\n    return this.version_;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  getKeyForDimensions_() {\n    const res = this.urls ? this.urls.slice(0) : [];\n    for (const key in this.dimensions_) {\n      res.push(key + '-' + this.dimensions_[key]);\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  updateDimensions(dimensions) {\n    Object.assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  }\n\n  /**\n   * @param {string} template Template.\n   * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n   */\n  createFromWMTSTemplate(template) {\n    const requestEncoding = this.requestEncoding_;\n\n    // context property names are lower case to allow for a case insensitive\n    // replacement as some services use different naming conventions\n    const context = {\n      'layer': this.layer_,\n      'style': this.style_,\n      'tilematrixset': this.matrixSet_,\n    };\n\n    if (requestEncoding == 'KVP') {\n      Object.assign(context, {\n        'Service': 'WMTS',\n        'Request': 'GetTile',\n        'Version': this.version_,\n        'Format': this.format_,\n      });\n    }\n\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n\n    template =\n      requestEncoding == 'KVP'\n        ? appendParams(template, context)\n        : template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return p.toLowerCase() in context ? context[p.toLowerCase()] : m;\n          });\n\n    const tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (\n      this.tileGrid\n    );\n    const dimensions = this.dimensions_;\n\n    return (\n      /**\n       * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {import(\"../proj/Projection.js\").default} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        }\n        const localContext = {\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n          'TileCol': tileCoord[1],\n          'TileRow': tileCoord[2],\n        };\n        Object.assign(localContext, dimensions);\n        let url = template;\n        if (requestEncoding == 'KVP') {\n          url = appendParams(url, localContext);\n        } else {\n          url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return localContext[p];\n          });\n        }\n        return url;\n      }\n    );\n  }\n}\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {Options|null} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = layers.find(function (elt) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (!l) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        const tileMatrixSet = tileMatrixSets.find(function (el) {\n          return el['Identifier'] == elt['TileMatrixSet'];\n        });\n        const supportedCRS = tileMatrixSet['SupportedCRS'];\n        const proj1 = getProjection(supportedCRS);\n        const proj2 = getProjection(config['projection']);\n        if (proj1 && proj2) {\n          return equivalent(proj1, proj2);\n        }\n        return supportedCRS == config['projection'];\n      });\n    } else {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        return elt['TileMatrixSet'] == config['matrixSet'];\n      });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet =\n    /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits =\n    /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = l['Style'].findIndex(function (elt) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    }\n    return elt['isDefault'];\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function (elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = matrixSets.find(function (elt) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  let wrapX = false;\n  const switchXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  let matrix = matrixSetObj.TileMatrix[0];\n\n  // create default matrixLimit\n  let selectedMatrixLimit = {\n    MinTileCol: 0,\n    MinTileRow: 0,\n    // subtract one to end up at tile top left\n    MaxTileCol: matrix.MatrixWidth - 1,\n    MaxTileRow: matrix.MatrixHeight - 1,\n  };\n\n  //in case of matrix limits, use matrix limits to calculate extent\n  if (matrixLimits) {\n    selectedMatrixLimit = matrixLimits[matrixLimits.length - 1];\n    const m = matrixSetObj.TileMatrix.find(\n      (tileMatrixValue) =>\n        tileMatrixValue.Identifier === selectedMatrixLimit.TileMatrix ||\n        matrixSetObj.Identifier + ':' + tileMatrixValue.Identifier ===\n          selectedMatrixLimit.TileMatrix\n    );\n    if (m) {\n      matrix = m;\n    }\n  }\n\n  const resolution =\n    (matrix.ScaleDenominator * 0.00028) / projection.getMetersPerUnit(); // WMTS 1.0.0: standardized rendering pixel size\n  const origin = switchXY\n    ? [matrix.TopLeftCorner[1], matrix.TopLeftCorner[0]]\n    : matrix.TopLeftCorner;\n  const tileSpanX = matrix.TileWidth * resolution;\n  const tileSpanY = matrix.TileHeight * resolution;\n  let matrixSetExtent = matrixSetObj['BoundingBox'];\n  if (matrixSetExtent && switchXY) {\n    matrixSetExtent = [\n      matrixSetExtent[1],\n      matrixSetExtent[0],\n      matrixSetExtent[3],\n      matrixSetExtent[2],\n    ];\n  }\n  let extent = [\n    origin[0] + tileSpanX * selectedMatrixLimit.MinTileCol,\n    // add one to get proper bottom/right coordinate\n    origin[1] - tileSpanY * (1 + selectedMatrixLimit.MaxTileRow),\n    origin[0] + tileSpanX * (1 + selectedMatrixLimit.MaxTileCol),\n    origin[1] - tileSpanY * selectedMatrixLimit.MinTileRow,\n  ];\n\n  if (\n    matrixSetExtent !== undefined &&\n    !containsExtent(matrixSetExtent, extent)\n  ) {\n    const wgs84BoundingBox = l['WGS84BoundingBox'];\n    const wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    extent = matrixSetExtent;\n    if (wgs84BoundingBox) {\n      wrapX =\n        wgs84BoundingBox[0] === wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] === wgs84ProjectionExtent[2];\n    } else {\n      const wgs84MatrixSetExtent = transformExtent(\n        matrixSetExtent,\n        matrixSetObj['SupportedCRS'],\n        'EPSG:4326'\n      );\n      // Ignore slight deviation from the correct x limits\n      wrapX =\n        wgs84MatrixSetExtent[0] - 1e-10 <= wgs84ProjectionExtent[0] &&\n        wgs84MatrixSetExtent[2] + 1e-10 >= wgs84ProjectionExtent[2];\n    }\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(\n    matrixSetObj,\n    extent,\n    matrixLimits\n  );\n\n  /** @type {!Array<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if (\n    'OperationsMetadata' in wmtsCap &&\n    'GetTile' in wmtsCap['OperationsMetadata']\n  ) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = gets[i]['Constraint'].find(function (element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === 'KVP') {\n          if (encodings.includes('KVP')) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = 'KVP';\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = 'REST';\n    l['ResourceURL'].forEach(function (element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin'],\n  };\n}\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml.makeChildAppender} or\n * {@link module:ol/xml.makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Element} node Node.\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        let array;\n        if (name in object) {\n          array = object[name];\n        } else {\n          array = [];\n          object[name] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        object[name] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, thisArg) {\n  return function (node, value, objectStack) {\n    nodeWriter.call(\n      thisArg !== undefined ? thisArg : this,\n      node,\n      value,\n      objectStack\n    );\n    const parent = /** @type {NodeStackItem} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml.serialize}. This can be used by the parent writer to have the\n * `nodeWriter` called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, thisArg) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `keys` passed to\n * {@link module:ol/xml.serialize} or {@link module:ol/xml.pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [fixedNodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [fixedNamespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(fixedNodeName, fixedNamespaceURI) {\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [newNodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, newNodeName) {\n      const context = /** @type {NodeStackItem} */ (\n        objectStack[objectStack.length - 1]\n      );\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = newNodeName;\n      }\n\n      const namespaceURI =\n        fixedNamespaceURI !== undefined ? fixedNamespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, structureNS) {\n  structureNS = structureNS !== undefined ? structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, thisArg) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(thisArg, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, thisArg) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, thisArg);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg\n) {\n  const length = (keys !== undefined ? keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        thisArg !== undefined ? thisArg : this,\n        value,\n        objectStack,\n        keys !== undefined ? keys[i] : undefined\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          thisArg,\n          node,\n          value,\n          objectStack\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg\n) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, keys, thisArg);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n","/**\n * @module ol/vec/mat4\n */\n\n/**\n * @return {Array<number>} \"4x4 matrix representing a 3D identity transform.\"\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} \"2D transformation matrix as flattened 4x4 matrix.\"\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not.\n * The provided `imgSize` needs to match the actual size of the image.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    // `width` or `height` cannot be provided together with `scale`\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      69\n    );\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (\n          image instanceof HTMLCanvasElement ||\n          (image.src && image.complete)\n        ) {\n          width = image.width;\n          height = image.height;\n        } else {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    const clone = new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    return clone;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/webgl/PaletteTexture\n */\n\nclass PaletteTexture {\n  /**\n   * @param {string} name The name of the texture.\n   * @param {Uint8Array} data The texture data.\n   */\n  constructor(name, data) {\n    this.name = name;\n    this.data = data;\n\n    /**\n     * @type {WebGLTexture}\n     * @private\n     */\n    this.texture_ = null;\n  }\n\n  /**\n   * @param {WebGLRenderingContext} gl Rendering context.\n   * @return {WebGLTexture} The texture.\n   */\n  getTexture(gl) {\n    if (!this.texture_) {\n      const texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,\n        gl.RGBA,\n        this.data.length / 4,\n        1,\n        0,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data\n      );\n      this.texture_ = texture;\n    }\n    return this.texture_;\n  }\n}\n\nexport default PaletteTexture;\n","/**\n * @module ol/webgl\n */\n\nimport {SAFARI_BUG_237906} from './has.js';\n\n/**\n * Constants taken from goog.webgl\n */\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STREAM_DRAW = 0x88e0;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STATIC_DRAW = 0x88e4;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const DYNAMIC_DRAW = 0x88e8;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n/** end of goog.webgl constants\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object} [attributes] Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, attributes) {\n  attributes = Object.assign(\n    {\n      preserveDrawingBuffer: true,\n      antialias: SAFARI_BUG_237906 ? false : true, // https://bugs.webkit.org/show_bug.cgi?id=237906\n    },\n    attributes\n  );\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n/**\n * @type {Array<string>}\n */\nlet supportedExtensions;\n\n/**\n * @return {Array<string>} List of supported WebGL extensions.\n */\nexport function getSupportedExtensions() {\n  if (!supportedExtensions) {\n    const canvas = document.createElement('canvas');\n    const gl = getContext(canvas);\n    if (gl) {\n      supportedExtensions = gl.getSupportedExtensions();\n    }\n  }\n  return supportedExtensions;\n}\n","/**\n * @module ol/webgl/Buffer\n */\nimport {\n  ARRAY_BUFFER,\n  DYNAMIC_DRAW,\n  ELEMENT_ARRAY_BUFFER,\n  STATIC_DRAW,\n  STREAM_DRAW,\n} from '../webgl.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Used to describe the intended usage for the data: `STATIC_DRAW`, `STREAM_DRAW`\n * or `DYNAMIC_DRAW`.\n * @enum {number}\n */\nexport const BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW,\n};\n\n/**\n * @classdesc\n * Object used to store an array of data as well as usage information for that data.\n * Stores typed arrays internally, either Float32Array or Uint16/32Array depending on\n * the buffer type (ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER) and available extensions.\n *\n * To populate the array, you can either use:\n * * A size using `#ofSize(buffer)`\n * * An `ArrayBuffer` object using `#fromArrayBuffer(buffer)`\n * * A plain array using `#fromArray(array)`\n *\n * Note:\n * See the documentation of [WebGLRenderingContext.bufferData](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData)\n * for more info on buffer usage.\n * @api\n */\nclass WebGLArrayBuffer {\n  /**\n   * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n   * @param {number} [usage] Intended usage, either `STATIC_DRAW`, `STREAM_DRAW` or `DYNAMIC_DRAW`.\n   * Default is `DYNAMIC_DRAW`.\n   */\n  constructor(type, usage) {\n    /**\n     * @private\n     * @type {Float32Array|Uint32Array}\n     */\n    this.array = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.type = type;\n\n    assert(type === ARRAY_BUFFER || type === ELEMENT_ARRAY_BUFFER, 62);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.usage = usage !== undefined ? usage : BufferUsage.STATIC_DRAW;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size (all values will be zeroes).\n   * @param {number} size Array size\n   * @return {WebGLArrayBuffer} This\n   */\n  ofSize(size) {\n    this.array = new (getArrayClassForType(this.type))(size);\n    return this;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size.\n   * @param {Array<number>} array Numerical array\n   * @return {WebGLArrayBuffer} This\n   */\n  fromArray(array) {\n    this.array = getArrayClassForType(this.type).from(array);\n    return this;\n  }\n\n  /**\n   * Populates the buffer with a raw binary array buffer.\n   * @param {ArrayBuffer} buffer Raw binary buffer to populate the array with. Note that this buffer must have been\n   * initialized for the same typed array class.\n   * @return {WebGLArrayBuffer} This\n   */\n  fromArrayBuffer(buffer) {\n    this.array = new (getArrayClassForType(this.type))(buffer);\n    return this;\n  }\n\n  /**\n   * @return {number} Buffer type.\n   */\n  getType() {\n    return this.type;\n  }\n\n  /**\n   * Will return null if the buffer was not initialized\n   * @return {Float32Array|Uint32Array} Array.\n   */\n  getArray() {\n    return this.array;\n  }\n\n  /**\n   * @return {number} Usage.\n   */\n  getUsage() {\n    return this.usage;\n  }\n\n  /**\n   * Will return 0 if the buffer is not initialized\n   * @return {number} Array size\n   */\n  getSize() {\n    return this.array ? this.array.length : 0;\n  }\n}\n\n/**\n * Returns a typed array constructor based on the given buffer type\n * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n * @return {Float32ArrayConstructor|Uint32ArrayConstructor} The typed array class to use for this buffer.\n */\nexport function getArrayClassForType(type) {\n  switch (type) {\n    case ARRAY_BUFFER:\n      return Float32Array;\n    case ELEMENT_ARRAY_BUFFER:\n      return Uint32Array;\n    default:\n      return Float32Array;\n  }\n}\n\nexport default WebGLArrayBuffer;\n","/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored',\n};\n","/**\n * @module ol/webgl/PostProcessingPass\n */\n\nimport {getUid} from '../util.js';\n\nconst DEFAULT_VERTEX_SHADER = `\n  precision mediump float;\n  \n  attribute vec2 a_position;\n  varying vec2 v_texCoord;\n  varying vec2 v_screenCoord;\n  \n  uniform vec2 u_screenSize;\n   \n  void main() {\n    v_texCoord = a_position * 0.5 + 0.5;\n    v_screenCoord = v_texCoord * u_screenSize;\n    gl_Position = vec4(a_position, 0.0, 1.0);\n  }\n`;\n\nconst DEFAULT_FRAGMENT_SHADER = `\n  precision mediump float;\n   \n  uniform sampler2D u_image;\n  uniform float u_opacity;\n   \n  varying vec2 v_texCoord;\n   \n  void main() {\n    gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n  }\n`;\n\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {WebGLUniformLocation} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\n * premultiplied.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *   uniform float u_opacity;\n *\n *   varying vec2 v_texCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n *   }\n *   ```\n *\n * @api\n */\nclass WebGLPostProcessingPass {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    this.gl_ = options.webGlContext;\n    const gl = this.gl_;\n\n    this.scaleRatio_ = options.scaleRatio || 1;\n\n    this.renderTargetTexture_ = gl.createTexture();\n    this.renderTargetTextureSize_ = null;\n\n    this.frameBuffer_ = gl.createFramebuffer();\n    this.depthBuffer_ = gl.createRenderbuffer();\n\n    // compile the program for the frame buffer\n    // TODO: make compilation errors show up\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(\n      vertexShader,\n      options.vertexShader || DEFAULT_VERTEX_SHADER\n    );\n    gl.compileShader(vertexShader);\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(\n      fragmentShader,\n      options.fragmentShader || DEFAULT_FRAGMENT_SHADER\n    );\n    gl.compileShader(fragmentShader);\n    this.renderTargetProgram_ = gl.createProgram();\n    gl.attachShader(this.renderTargetProgram_, vertexShader);\n    gl.attachShader(this.renderTargetProgram_, fragmentShader);\n    gl.linkProgram(this.renderTargetProgram_);\n\n    // bind the vertices buffer for the frame buffer\n    this.renderTargetVerticesBuffer_ = gl.createBuffer();\n    const verticesArray = [-1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1];\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(verticesArray),\n      gl.STATIC_DRAW\n    );\n\n    this.renderTargetAttribLocation_ = gl.getAttribLocation(\n      this.renderTargetProgram_,\n      'a_position'\n    );\n    this.renderTargetUniformLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_screenSize'\n    );\n    this.renderTargetOpacityLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_opacity'\n    );\n    this.renderTargetTextureLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_image'\n    );\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    options.uniforms &&\n      Object.keys(options.uniforms).forEach((name) => {\n        this.uniforms_.push({\n          value: options.uniforms[name],\n          location: gl.getUniformLocation(this.renderTargetProgram_, name),\n        });\n      });\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   * @api\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Initialize the render target texture of the post process, make sure it is at the\n   * right size and bind it as a render target for the next draw calls.\n   * The last step to be initialized will be the one where the primitives are rendered.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @api\n   */\n  init(frameState) {\n    const gl = this.getGL();\n    const textureSize = [\n      gl.drawingBufferWidth * this.scaleRatio_,\n      gl.drawingBufferHeight * this.scaleRatio_,\n    ];\n\n    // rendering goes to my buffer\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n    gl.bindRenderbuffer(gl.RENDERBUFFER, this.getDepthBuffer());\n    gl.viewport(0, 0, textureSize[0], textureSize[1]);\n\n    // if size has changed: adjust canvas & render target texture\n    if (\n      !this.renderTargetTextureSize_ ||\n      this.renderTargetTextureSize_[0] !== textureSize[0] ||\n      this.renderTargetTextureSize_[1] !== textureSize[1]\n    ) {\n      this.renderTargetTextureSize_ = textureSize;\n\n      // create a new texture\n      const level = 0;\n      const internalFormat = gl.RGBA;\n      const border = 0;\n      const format = gl.RGBA;\n      const type = gl.UNSIGNED_BYTE;\n      const data = null;\n      gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        textureSize[0],\n        textureSize[1],\n        border,\n        format,\n        type,\n        data\n      );\n\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n      // bind the texture to the framebuffer\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        this.renderTargetTexture_,\n        0\n      );\n\n      gl.renderbufferStorage(\n        gl.RENDERBUFFER,\n        gl.DEPTH_COMPONENT16,\n        textureSize[0],\n        textureSize[1]\n      );\n      gl.framebufferRenderbuffer(\n        gl.FRAMEBUFFER,\n        gl.DEPTH_ATTACHMENT,\n        gl.RENDERBUFFER,\n        this.depthBuffer_\n      );\n    }\n  }\n\n  /**\n   * Render to the next postprocessing pass (or to the canvas if final pass).\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   * @api\n   */\n  apply(frameState, nextPass, preCompose, postCompose) {\n    const gl = this.getGL();\n    const size = frameState.size;\n\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER,\n      nextPass ? nextPass.getFrameBuffer() : null\n    );\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n\n    if (!nextPass) {\n      // clear the canvas if we are the first to render to it\n      // and preserveDrawingBuffer is true\n      const canvasId = getUid(gl.canvas);\n      if (!frameState.renderTargets[canvasId]) {\n        const attributes = gl.getContextAttributes();\n        if (attributes && attributes.preserveDrawingBuffer) {\n          gl.clearColor(0.0, 0.0, 0.0, 0.0);\n          gl.clearDepth(1.0);\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        }\n\n        frameState.renderTargets[canvasId] = true;\n      }\n    }\n\n    gl.disable(gl.DEPTH_TEST);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n\n    gl.useProgram(this.renderTargetProgram_);\n    gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n    gl.vertexAttribPointer(\n      this.renderTargetAttribLocation_,\n      2,\n      gl.FLOAT,\n      false,\n      0,\n      0\n    );\n    gl.uniform2f(this.renderTargetUniformLocation_, size[0], size[1]);\n    gl.uniform1i(this.renderTargetTextureLocation_, 0);\n\n    const opacity = frameState.layerStatesArray[frameState.layerIndex].opacity;\n    gl.uniform1f(this.renderTargetOpacityLocation_, opacity);\n\n    this.applyUniforms(frameState);\n\n    if (preCompose) {\n      preCompose(gl, frameState);\n    }\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n    if (postCompose) {\n      postCompose(gl, frameState);\n    }\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer\n   * @api\n   */\n  getFrameBuffer() {\n    return this.frameBuffer_;\n  }\n\n  /**\n   * @return {WebGLRenderbuffer} Depth buffer\n   * @api\n   */\n  getDepthBuffer() {\n    return this.depthBuffer_;\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 1;\n    this.uniforms_.forEach(function (uniform) {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.texture = gl.createTexture();\n        }\n        gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        if (value instanceof ImageData) {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            value.width,\n            value.height,\n            0,\n            gl.UNSIGNED_BYTE,\n            new Uint8Array(value.data)\n          );\n        } else {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value\n          );\n        }\n\n        // fill texture slots\n        gl.uniform1i(uniform.location, textureSlot++);\n      } else if (Array.isArray(value)) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(uniform.location, value[0], value[1]);\n            return;\n          case 3:\n            gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n            return;\n          case 4:\n            gl.uniform4f(\n              uniform.location,\n              value[0],\n              value[1],\n              value[2],\n              value[3]\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(uniform.location, value);\n      }\n    });\n  }\n}\n\nexport default WebGLPostProcessingPass;\n","/**\n * @module ol/webgl/Helper\n */\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport Disposable from '../Disposable.js';\nimport WebGLPostProcessingPass from './PostProcessingPass.js';\nimport {\n  FLOAT,\n  UNSIGNED_BYTE,\n  UNSIGNED_INT,\n  UNSIGNED_SHORT,\n  getContext,\n} from '../webgl.js';\nimport {clear} from '../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n} from '../transform.js';\nimport {create, fromTransform} from '../vec/mat4.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer Buffer.\n * @property {WebGLBuffer} webGlBuffer WebGlBuffer.\n */\n\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport const ShaderType = {\n  FRAGMENT_SHADER: 0x8b30,\n  VERTEX_SHADER: 0x8b31,\n};\n\n/**\n * Names of uniforms made available to all shaders.\n * Please note: changing these *will* break custom shaders!\n * @enum {string}\n */\nexport const DefaultUniform = {\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  OFFSET_SCALE_MATRIX: 'u_offsetScaleMatrix',\n  OFFSET_ROTATION_MATRIX: 'u_offsetRotateMatrix',\n  TIME: 'u_time',\n  ZOOM: 'u_zoom',\n  RESOLUTION: 'u_resolution',\n  VIEWPORT_SIZE_PX: 'u_viewportSizePx',\n  PIXEL_RATIO: 'u_pixelRatio',\n  HIT_DETECTION: 'u_hitDetection',\n};\n\n/**\n * Attribute types, either `UNSIGNED_BYTE`, `UNSIGNED_SHORT`, `UNSIGNED_INT` or `FLOAT`\n * Note: an attribute stored in a `Float32Array` should be of type `FLOAT`.\n * @enum {number}\n */\nexport const AttributeType = {\n  UNSIGNED_BYTE: UNSIGNED_BYTE,\n  UNSIGNED_SHORT: UNSIGNED_SHORT,\n  UNSIGNED_INT: UNSIGNED_INT,\n  FLOAT: FLOAT,\n};\n\n/**\n * Description of an attribute in a buffer\n * @typedef {Object} AttributeDescription\n * @property {string} name Attribute name to use in shaders\n * @property {number} size Number of components per attributes\n * @property {AttributeType} [type] Attribute type, i.e. number of bytes used to store the value. This is\n * determined by the class of typed array which the buffer uses (eg. `Float32Array` for a `FLOAT` attribute).\n * Default is `FLOAT`.\n */\n\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|import(\"../transform\").Transform} UniformLiteralValue\n */\n\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../Map.js\").FrameState):UniformLiteralValue} UniformValue\n */\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n * @property {string} [canvasCacheKey] The cache key for the canvas.\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue} [value] Value\n * @property {UniformValue} [prevValue] The previous value.\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @typedef {Object} CanvasCacheItem\n * @property {WebGLRenderingContext} context The context of this canvas.\n * @property {number} users The count of users of this canvas.\n */\n\n/**\n * @type {Object<string,CanvasCacheItem>}\n */\nconst canvasCache = {};\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {string} The shared cache key.\n */\nfunction getSharedCanvasCacheKey(key) {\n  return 'shared/' + key;\n}\n\nlet uniqueCanvasCacheKeyCount = 0;\n\n/**\n * @return {string} The unique cache key.\n */\nfunction getUniqueCanvasCacheKey() {\n  const key = 'unique/' + uniqueCanvasCacheKeyCount;\n  uniqueCanvasCacheKeyCount += 1;\n  return key;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {WebGLRenderingContext} The canvas.\n */\nfunction getOrCreateContext(key) {\n  let cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    canvas.style.position = 'absolute';\n    canvas.style.left = '0';\n    const context = getContext(canvas);\n    cacheItem = {users: 0, context};\n    canvasCache[key] = cacheItem;\n  }\n\n  cacheItem.users += 1;\n  return cacheItem.context;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n */\nfunction releaseCanvas(key) {\n  const cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    return;\n  }\n\n  cacheItem.users -= 1;\n  if (cacheItem.users > 0) {\n    return;\n  }\n\n  const gl = cacheItem.context;\n  const extension = gl.getExtension('WEBGL_lose_context');\n  if (extension) {\n    extension.loseContext();\n  }\n  const canvas = gl.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n\n  delete canvasCache[key];\n}\n\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls; note how a frameState is required to set up a program,\n *   // as several default uniforms are computed from it (projection matrix, zoom level, etc.)\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   const program = this.context.getProgram(fragmentShader, vertexShader);\n *   helper.useProgram(this.program, frameState);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   helper.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   const verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   const indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   helper.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   helper.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Specify the attribute names with\n *   {@link module:ol/webgl/Helper~WebGLHelper#enableAttributes} (see code snippet below).\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   helper.enableAttributes([\n *     {\n *        name: 'a_position',\n *        size: 2\n *     },\n *     {\n *       name: 'a_offset',\n *       size: 2\n *     },\n *     {\n *       name: 'a_texCoord',\n *       size: 2\n *     }\n *   ])\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   helper.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   helper.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   helper.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n */\nclass WebGLHelper extends Disposable {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n    options = options || {};\n\n    /** @private */\n    this.boundHandleWebGLContextLost_ = this.handleWebGLContextLost.bind(this);\n\n    /** @private */\n    this.boundHandleWebGLContextRestored_ =\n      this.handleWebGLContextRestored.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.canvasCacheKey_ = options.canvasCacheKey\n      ? getSharedCanvasCacheKey(options.canvasCacheKey)\n      : getUniqueCanvasCacheKey();\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = getOrCreateContext(this.canvasCacheKey_);\n\n    /**\n     * @private\n     * @type {!Object<string, BufferCacheEntry>}\n     */\n    this.bufferCache_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object>}\n     */\n    this.extensionCache_ = {};\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.currentProgram_ = null;\n\n    const canvas = this.gl_.canvas;\n\n    canvas.addEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    canvas.addEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetRotateMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetScaleMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, WebGLUniformLocation>>}\n     */\n    this.uniformLocationsByProgram_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.attribLocationsByProgram_ = {};\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass.\n     * If the uniform is a texture, the WebGL Texture object will be stored here.\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    if (options.uniforms) {\n      this.setUniforms(options.uniforms);\n    }\n\n    /**\n     * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n     * options. If no post process was given, a default one is used (so as not to have to make an exception to\n     * the frame buffer logic).\n     * @type {Array<WebGLPostProcessingPass>}\n     * @private\n     */\n    this.postProcessPasses_ = options.postProcesses\n      ? options.postProcesses.map(\n          (options) =>\n            new WebGLPostProcessingPass({\n              webGlContext: this.gl_,\n              scaleRatio: options.scaleRatio,\n              vertexShader: options.vertexShader,\n              fragmentShader: options.fragmentShader,\n              uniforms: options.uniforms,\n            })\n        )\n      : [new WebGLPostProcessingPass({webGlContext: this.gl_})];\n\n    /**\n     * @type {string|null}\n     * @private\n     */\n    this.shaderCompileErrors_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.startTime_ = Date.now();\n  }\n\n  /**\n   * @param {Object<string, UniformValue>} uniforms Uniform definitions.\n   */\n  setUniforms(uniforms) {\n    this.uniforms_ = [];\n    for (const name in uniforms) {\n      this.uniforms_.push({\n        name: name,\n        value: uniforms[name],\n      });\n    }\n  }\n\n  /**\n   * @param {string} canvasCacheKey The canvas cache key.\n   * @return {boolean} The provided key matches the one this helper was constructed with.\n   */\n  canvasCacheKeyMatches(canvasCacheKey) {\n    return this.canvasCacheKey_ === getSharedCanvasCacheKey(canvasCacheKey);\n  }\n\n  /**\n   * Get a WebGL extension.  If the extension is not supported, null is returned.\n   * Extensions are cached after they are enabled for the first time.\n   * @param {string} name The extension name.\n   * @return {Object|null} The extension or null if not supported.\n   */\n  getExtension(name) {\n    if (name in this.extensionCache_) {\n      return this.extensionCache_[name];\n    }\n    const extension = this.gl_.getExtension(name);\n    this.extensionCache_[name] = extension;\n    return extension;\n  }\n\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  bindBuffer(buffer) {\n    const gl = this.gl_;\n    const bufferKey = getUid(buffer);\n    let bufferCache = this.bufferCache_[bufferKey];\n    if (!bufferCache) {\n      const webGlBuffer = gl.createBuffer();\n      bufferCache = {\n        buffer: buffer,\n        webGlBuffer: webGlBuffer,\n      };\n      this.bufferCache_[bufferKey] = bufferCache;\n    }\n    gl.bindBuffer(buffer.getType(), bufferCache.webGlBuffer);\n  }\n\n  /**\n   * Update the data contained in the buffer array; this is required for the\n   * new data to be rendered\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  flushBufferData(buffer) {\n    const gl = this.gl_;\n    this.bindBuffer(buffer);\n    gl.bufferData(buffer.getType(), buffer.getArray(), buffer.getUsage());\n  }\n\n  /**\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\n   */\n  deleteBuffer(buf) {\n    const gl = this.gl_;\n    const bufferKey = getUid(buf);\n    const bufferCacheEntry = this.bufferCache_[bufferKey];\n    if (bufferCacheEntry && !gl.isContextLost()) {\n      gl.deleteBuffer(bufferCacheEntry.webGlBuffer);\n    }\n    delete this.bufferCache_[bufferKey];\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    const canvas = this.gl_.canvas;\n    canvas.removeEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    canvas.removeEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n\n    releaseCanvas(this.canvasCacheKey_);\n\n    delete this.gl_;\n  }\n\n  /**\n   * Clear the buffer & set the viewport to draw.\n   * Post process passes will be initialized here, the first one being bound as a render target for\n   * subsequent draw calls.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   * @param {boolean} [enableDepth] If true, enables depth testing.\n   */\n  prepareDraw(frameState, disableAlphaBlend, enableDepth) {\n    const gl = this.gl_;\n    const canvas = this.getCanvas();\n    const size = frameState.size;\n    const pixelRatio = frameState.pixelRatio;\n\n    if (\n      canvas.width !== size[0] * pixelRatio ||\n      canvas.height !== size[1] * pixelRatio\n    ) {\n      canvas.width = size[0] * pixelRatio;\n      canvas.height = size[1] * pixelRatio;\n      canvas.style.width = size[0] + 'px';\n      canvas.style.height = size[1] + 'px';\n    }\n\n    // loop backwards in post processes list\n    for (let i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n      this.postProcessPasses_[i].init(frameState);\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.depthRange(0.0, 1.0);\n    gl.clearDepth(1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n    if (enableDepth) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthFunc(gl.LEQUAL);\n    } else {\n      gl.disable(gl.DEPTH_TEST);\n    }\n  }\n\n  /**\n   * Prepare a program to use a texture.\n   * @param {WebGLTexture} texture The texture.\n   * @param {number} slot The texture slot.\n   * @param {string} uniformName The corresponding uniform name.\n   */\n  bindTexture(texture, slot, uniformName) {\n    const gl = this.gl_;\n    gl.activeTexture(gl.TEXTURE0 + slot);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.uniform1i(this.getUniformLocation(uniformName), slot);\n  }\n\n  /**\n   * Clear the render target & bind it for future draw operations.\n   * This is similar to `prepareDraw`, only post processes will not be applied.\n   * Note: the whole viewport will be drawn to the render target, regardless of its size.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {import(\"./RenderTarget.js\").default} renderTarget Render target to draw to\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   * @param {boolean} [enableDepth] If true, enables depth testing.\n   */\n  prepareDrawToRenderTarget(\n    frameState,\n    renderTarget,\n    disableAlphaBlend,\n    enableDepth\n  ) {\n    const gl = this.gl_;\n    const size = renderTarget.getSize();\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget.getFramebuffer());\n    gl.bindRenderbuffer(gl.RENDERBUFFER, renderTarget.getDepthbuffer());\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.bindTexture(gl.TEXTURE_2D, renderTarget.getTexture());\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.depthRange(0.0, 1.0);\n    gl.clearDepth(1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n    if (enableDepth) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthFunc(gl.LEQUAL);\n    } else {\n      gl.disable(gl.DEPTH_TEST);\n    }\n  }\n\n  /**\n   * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   */\n  drawElements(start, end) {\n    const gl = this.gl_;\n    this.getExtension('OES_element_index_uint');\n\n    const elementType = gl.UNSIGNED_INT;\n    const elementSize = 4;\n\n    const numItems = end - start;\n    const offsetInBytes = start * elementSize;\n    gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n  }\n\n  /**\n   * Apply the successive post process passes which will eventually render to the actual canvas.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   */\n  finalizeDraw(frameState, preCompose, postCompose) {\n    // apply post processes using the next one as target\n    for (let i = 0, ii = this.postProcessPasses_.length; i < ii; i++) {\n      if (i === ii - 1) {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          null,\n          preCompose,\n          postCompose\n        );\n      } else {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          this.postProcessPasses_[i + 1]\n        );\n      }\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getCanvas() {\n    return /** @type {HTMLCanvasElement} */ (this.gl_.canvas);\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyFrameState(frameState) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n    scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n\n    const offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n    if (rotation !== 0) {\n      rotateTransform(offsetRotateMatrix, -rotation);\n    }\n\n    this.setUniformMatrixValue(\n      DefaultUniform.OFFSET_SCALE_MATRIX,\n      fromTransform(this.tmpMat4_, offsetScaleMatrix)\n    );\n    this.setUniformMatrixValue(\n      DefaultUniform.OFFSET_ROTATION_MATRIX,\n      fromTransform(this.tmpMat4_, offsetRotateMatrix)\n    );\n\n    this.setUniformFloatValue(\n      DefaultUniform.TIME,\n      (Date.now() - this.startTime_) * 0.001\n    );\n    this.setUniformFloatValue(DefaultUniform.ZOOM, frameState.viewState.zoom);\n    this.setUniformFloatValue(\n      DefaultUniform.RESOLUTION,\n      frameState.viewState.resolution\n    );\n    this.setUniformFloatValue(DefaultUniform.PIXEL_RATIO, pixelRatio);\n    this.setUniformFloatVec2(DefaultUniform.VIEWPORT_SIZE_PX, [\n      size[0],\n      size[1],\n    ]);\n  }\n\n  /**\n   * Sets the `u_hitDetection` uniform.\n   * @param {boolean} enabled Whether to enable the hit detection code path\n   */\n  applyHitDetectionUniform(enabled) {\n    const loc = this.getUniformLocation(DefaultUniform.HIT_DETECTION);\n    this.getGL().uniform1i(loc, enabled ? 1 : 0);\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyUniforms(frameState) {\n    const gl = this.gl_;\n\n    let value;\n    let textureSlot = 0;\n    this.uniforms_.forEach((uniform) => {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (\n        value instanceof HTMLCanvasElement ||\n        value instanceof HTMLImageElement ||\n        value instanceof ImageData\n      ) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.prevValue = undefined;\n          uniform.texture = gl.createTexture();\n        }\n        gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        const imageReady =\n          !(value instanceof HTMLImageElement) ||\n          /** @type {HTMLImageElement} */ (value).complete;\n        if (imageReady && uniform.prevValue !== value) {\n          uniform.prevValue = value;\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value\n          );\n        }\n\n        // fill texture slots by increasing index\n        gl.uniform1i(this.getUniformLocation(uniform.name), textureSlot++);\n      } else if (Array.isArray(value) && value.length === 6) {\n        this.setUniformMatrixValue(\n          uniform.name,\n          fromTransform(this.tmpMat4_, value)\n        );\n      } else if (Array.isArray(value) && value.length <= 4) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1]\n            );\n            return;\n          case 3:\n            gl.uniform3f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n              value[2]\n            );\n            return;\n          case 4:\n            gl.uniform4f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n              value[2],\n              value[3]\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(this.getUniformLocation(uniform.name), value);\n      }\n    });\n  }\n\n  /**\n   * Set up a program for use. The program will be set as the current one. Then, the uniforms used\n   * in the program will be set based on the current frame state and the helper configuration.\n   * @param {WebGLProgram} program Program.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  useProgram(program, frameState) {\n    const gl = this.gl_;\n    gl.useProgram(program);\n    this.currentProgram_ = program;\n    this.applyFrameState(frameState);\n    this.applyUniforms(frameState);\n  }\n\n  /**\n   * Will attempt to compile a vertex or fragment shader based on source\n   * On error, the shader will be returned but\n   * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n   * Use `gl.getShaderInfoLog(shader)` to have details\n   * @param {string} source Shader source\n   * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n   * @return {WebGLShader} Shader object\n   */\n  compileShader(source, type) {\n    const gl = this.gl_;\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    return shader;\n  }\n\n  /**\n   * Create a program for a vertex and fragment shader.  Throws if shader compilation fails.\n   * @param {string} fragmentShaderSource Fragment shader source.\n   * @param {string} vertexShaderSource Vertex shader source.\n   * @return {WebGLProgram} Program\n   */\n  getProgram(fragmentShaderSource, vertexShaderSource) {\n    const gl = this.gl_;\n\n    const fragmentShader = this.compileShader(\n      fragmentShaderSource,\n      gl.FRAGMENT_SHADER\n    );\n\n    const vertexShader = this.compileShader(\n      vertexShaderSource,\n      gl.VERTEX_SHADER\n    );\n\n    const program = gl.createProgram();\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      const message = `Fragment shader compilation failed: ${gl.getShaderInfoLog(\n        fragmentShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(fragmentShader);\n\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      const message = `Vertex shader compilation failed: ${gl.getShaderInfoLog(\n        vertexShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(vertexShader);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      const message = `GL program linking failed: ${gl.getProgramInfoLog(\n        program\n      )}`;\n      throw new Error(message);\n    }\n\n    return program;\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Uniform name\n   * @return {WebGLUniformLocation} uniformLocation\n   */\n  getUniformLocation(name) {\n    const programUid = getUid(this.currentProgram_);\n    if (this.uniformLocationsByProgram_[programUid] === undefined) {\n      this.uniformLocationsByProgram_[programUid] = {};\n    }\n    if (this.uniformLocationsByProgram_[programUid][name] === undefined) {\n      this.uniformLocationsByProgram_[programUid][name] =\n        this.gl_.getUniformLocation(this.currentProgram_, name);\n    }\n    return this.uniformLocationsByProgram_[programUid][name];\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Attribute name\n   * @return {number} attribLocation\n   */\n  getAttributeLocation(name) {\n    const programUid = getUid(this.currentProgram_);\n    if (this.attribLocationsByProgram_[programUid] === undefined) {\n      this.attribLocationsByProgram_[programUid] = {};\n    }\n    if (this.attribLocationsByProgram_[programUid][name] === undefined) {\n      this.attribLocationsByProgram_[programUid][name] =\n        this.gl_.getAttribLocation(this.currentProgram_, name);\n    }\n    return this.attribLocationsByProgram_[programUid][name];\n  }\n\n  /**\n   * Sets the given transform to apply the rotation/translation/scaling of the given frame state.\n   * The resulting transform can be used to convert world space coordinates to view coordinates in the [-1, 1] range.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../transform\").Transform} transform Transform to update.\n   * @return {import(\"../transform\").Transform} The updated transform object.\n   */\n  makeProjectionTransform(frameState, transform) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const resolution = frameState.viewState.resolution;\n    const center = frameState.viewState.center;\n    composeTransform(\n      transform,\n      0,\n      0,\n      2 / (resolution * size[0]),\n      2 / (resolution * size[1]),\n      -rotation,\n      -center[0],\n      -center[1]\n    );\n    return transform;\n  }\n\n  /**\n   * Give a value for a standard float uniform\n   * @param {string} uniform Uniform name\n   * @param {number} value Value\n   */\n  setUniformFloatValue(uniform, value) {\n    this.gl_.uniform1f(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec2 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec2(uniform, value) {\n    this.gl_.uniform2fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec4(uniform, value) {\n    this.gl_.uniform4fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a standard matrix4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Matrix value\n   */\n  setUniformMatrixValue(uniform, value) {\n    this.gl_.uniformMatrix4fv(this.getUniformLocation(uniform), false, value);\n  }\n\n  /**\n   * Will set the currently bound buffer to an attribute of the shader program. Used by `#enableAttributes`\n   * internally.\n   * @param {string} attribName Attribute name\n   * @param {number} size Number of components per attributes\n   * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n   * @param {number} stride Stride in bytes (0 means attribs are packed)\n   * @param {number} offset Offset in bytes\n   * @private\n   */\n  enableAttributeArray_(attribName, size, type, stride, offset) {\n    const location = this.getAttributeLocation(attribName);\n    // the attribute has not been found in the shaders or is not used; do not enable it\n    if (location < 0) {\n      return;\n    }\n    this.gl_.enableVertexAttribArray(location);\n    this.gl_.vertexAttribPointer(location, size, type, false, stride, offset);\n  }\n\n  /**\n   * Will enable the following attributes to be read from the currently bound buffer,\n   * i.e. tell the GPU where to read the different attributes in the buffer. An error in the\n   * size/type/order of attributes will most likely break the rendering and throw a WebGL exception.\n   * @param {Array<AttributeDescription>} attributes Ordered list of attributes to read from the buffer\n   */\n  enableAttributes(attributes) {\n    const stride = computeAttributesStride(attributes);\n    let offset = 0;\n    for (let i = 0; i < attributes.length; i++) {\n      const attr = attributes[i];\n      this.enableAttributeArray_(\n        attr.name,\n        attr.size,\n        attr.type || FLOAT,\n        stride,\n        offset\n      );\n      offset += attr.size * getByteSizeFromType(attr.type);\n    }\n  }\n\n  /**\n   * WebGL context was lost\n   * @private\n   */\n  handleWebGLContextLost() {\n    clear(this.bufferCache_);\n    this.currentProgram_ = null;\n  }\n\n  /**\n   * WebGL context was restored\n   * @private\n   */\n  handleWebGLContextRestored() {}\n\n  /**\n   * Will create or reuse a given webgl texture and apply the given size. If no image data\n   * specified, the texture will be empty, otherwise image data will be used and the `size`\n   * parameter will be ignored.\n   * Note: wrap parameters are set to clamp to edge, min filter is set to linear.\n   * @param {Array<number>} size Expected size of the texture\n   * @param {ImageData|HTMLImageElement|HTMLCanvasElement} [data] Image data/object to bind to the texture\n   * @param {WebGLTexture} [texture] Existing texture to reuse\n   * @return {WebGLTexture} The generated texture\n   */\n  createTexture(size, data, texture) {\n    const gl = this.gl_;\n    texture = texture || gl.createTexture();\n\n    // set params & size\n    const level = 0;\n    const internalFormat = gl.RGBA;\n    const border = 0;\n    const format = gl.RGBA;\n    const type = gl.UNSIGNED_BYTE;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    if (data) {\n      gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, format, type, data);\n    } else {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        size[0],\n        size[1],\n        border,\n        format,\n        type,\n        null\n      );\n    }\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    return texture;\n  }\n}\n\n/**\n * Compute a stride in bytes based on a list of attributes\n * @param {Array<AttributeDescription>} attributes Ordered list of attributes\n * @return {number} Stride, ie amount of values for each vertex in the vertex buffer\n */\nexport function computeAttributesStride(attributes) {\n  let stride = 0;\n  for (let i = 0; i < attributes.length; i++) {\n    const attr = attributes[i];\n    stride += attr.size * getByteSizeFromType(attr.type);\n  }\n  return stride;\n}\n\n/**\n * Computes the size in byte of an attribute type.\n * @param {AttributeType} type Attribute type\n * @return {number} The size in bytes\n */\nfunction getByteSizeFromType(type) {\n  switch (type) {\n    case AttributeType.UNSIGNED_BYTE:\n      return Uint8Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_SHORT:\n      return Uint16Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_INT:\n      return Uint32Array.BYTES_PER_ELEMENT;\n    case AttributeType.FLOAT:\n    default:\n      return Float32Array.BYTES_PER_ELEMENT;\n  }\n}\n\nexport default WebGLHelper;\n","/**\n * @module ol/renderer/webgl/Layer\n */\nimport LayerProperty from '../../layer/Property.js';\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLHelper from '../../webgl/Helper.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * Base WebGL renderer class.\n * Holds all logic related to data manipulation & some common rendering logic\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass WebGLLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(layer, options) {\n    super(layer);\n\n    options = options || {};\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform is only\n     * set before dispatching rendering events.\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @private\n     */\n    this.postProcesses_ = options.postProcesses;\n\n    /**\n     * @private\n     */\n    this.uniforms_ = options.uniforms;\n\n    /**\n     * @type {WebGLHelper}\n     * @protected\n     */\n    this.helper;\n\n    layer.addChangeListener(LayerProperty.MAP, this.removeHelper.bind(this));\n\n    this.dispatchPreComposeEvent = this.dispatchPreComposeEvent.bind(this);\n    this.dispatchPostComposeEvent = this.dispatchPostComposeEvent.bind(this);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPreComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.PRECOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.PRECOMPOSE,\n        undefined,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPostComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.POSTCOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.POSTCOMPOSE,\n        undefined,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * Reset options (only handles uniforms).\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    this.uniforms_ = options.uniforms;\n    if (this.helper) {\n      this.helper.setUniforms(this.uniforms_);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  removeHelper() {\n    if (this.helper) {\n      this.helper.dispose();\n      delete this.helper;\n    }\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    if (this.getLayer().getRenderSource()) {\n      let incrementGroup = true;\n      let groupNumber = -1;\n      let className;\n      for (let i = 0, ii = frameState.layerStatesArray.length; i < ii; i++) {\n        const layer = frameState.layerStatesArray[i].layer;\n        const renderer = layer.getRenderer();\n        if (!(renderer instanceof WebGLLayerRenderer)) {\n          incrementGroup = true;\n          continue;\n        }\n        const layerClassName = layer.getClassName();\n        if (incrementGroup || layerClassName !== className) {\n          groupNumber += 1;\n          incrementGroup = false;\n        }\n        className = layerClassName;\n        if (renderer === this) {\n          break;\n        }\n      }\n\n      const canvasCacheKey =\n        'map/' + frameState.mapId + '/group/' + groupNumber;\n\n      if (!this.helper || !this.helper.canvasCacheKeyMatches(canvasCacheKey)) {\n        this.removeHelper();\n\n        this.helper = new WebGLHelper({\n          postProcesses: this.postProcesses_,\n          uniforms: this.uniforms_,\n          canvasCacheKey: canvasCacheKey,\n        });\n\n        if (className) {\n          this.helper.getCanvas().className = className;\n        }\n\n        this.afterHelperCreated();\n      }\n    }\n\n    return this.prepareFrameInternal(frameState);\n  }\n\n  /**\n   * @protected\n   */\n  afterHelperCreated() {}\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @protected\n   */\n  prepareFrameInternal(frameState) {\n    return true;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.removeHelper();\n    super.disposeInternal();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      composeTransform(\n        this.inversePixelTransform_,\n        0,\n        0,\n        frameState.pixelRatio,\n        -frameState.pixelRatio,\n        0,\n        0,\n        -frameState.size[1]\n      );\n\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform_,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n}\n\nexport default WebGLLayerRenderer;\n","/**\n * @module ol/renderer/webgl/TileLayerBase\n */\nimport LRUCache from '../../structs/LRUCache.js';\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport {abstract, getUid} from '../../util.js';\nimport {create as createMat4} from '../../vec/mat4.js';\nimport {\n  createOrUpdate as createTileCoord,\n  getKey as getTileCoordKey,\n} from '../../tilecoord.js';\nimport {\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {descending} from '../../array.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getIntersection, isEmpty} from '../../extent.js';\nimport {toSize} from '../../size.js';\n\nexport const Uniforms = {\n  TILE_TRANSFORM: 'u_tileTransform',\n  TRANSITION_ALPHA: 'u_transitionAlpha',\n  DEPTH: 'u_depth',\n  RENDER_EXTENT: 'u_renderExtent', // intersection of layer, source, and view extent\n  RESOLUTION: 'u_resolution',\n  ZOOM: 'u_zoom',\n  GLOBAL_ALPHA: 'u_globalAlpha',\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  SCREEN_TO_WORLD_MATRIX: 'u_screenToWorldMatrix',\n};\n\n/**\n * @type {Object<string, boolean>}\n */\nconst empty = {};\n\n/**\n * Transform a zoom level into a depth value ranging from -1 to 1.\n * @param {number} z A zoom level.\n * @return {number} A depth value.\n */\nfunction depthForZ(z) {\n  return 1 / (z + 2);\n}\n\n/**\n * @typedef {import(\"../../webgl/BaseTileRepresentation.js\").default<import(\"../../Tile.js\").default>} AbstractTileRepresentation\n */\n/**\n * @typedef {Object} TileRepresentationLookup\n * @property {Set<string>} tileIds The set of tile ids in the lookup.\n * @property {Object<number, Set<AbstractTileRepresentation>>} representationsByZ Tile representations by zoom level.\n */\n\n/**\n * @return {TileRepresentationLookup} A new tile representation lookup.\n */\nexport function newTileRepresentationLookup() {\n  return {tileIds: new Set(), representationsByZ: {}};\n}\n\n/**\n * Check if a tile is already in the tile representation lookup.\n * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of tile representations by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @return {boolean} The tile is already in the lookup.\n */\nfunction lookupHasTile(tileRepresentationLookup, tile) {\n  return tileRepresentationLookup.tileIds.has(getUid(tile));\n}\n\n/**\n * Add a tile representation to the lookup.\n * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of tile representations by zoom level.\n * @param {AbstractTileRepresentation} tileRepresentation A tile representation.\n * @param {number} z The zoom level.\n */\nfunction addTileRepresentationToLookup(\n  tileRepresentationLookup,\n  tileRepresentation,\n  z\n) {\n  const representationsByZ = tileRepresentationLookup.representationsByZ;\n  if (!(z in representationsByZ)) {\n    representationsByZ[z] = new Set();\n  }\n  representationsByZ[z].add(tileRepresentation);\n  tileRepresentationLookup.tileIds.add(getUid(tileRepresentation.tile));\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection)\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\nexport function getCacheKey(source, tileCoord) {\n  return `${source.getKey()},${getTileCoordKey(tileCoord)}`;\n}\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, import(\"../../webgl/Helper\").UniformValue>} [uniforms] Additional uniforms\n * made available to shaders.\n * @property {number} [cacheSize=512] The tile representation cache size.\n * @property {Array<import('./Layer.js').PostProcessesOptions>} [postProcesses] Post-processes definitions.\n */\n\n/**\n * @typedef {import(\"../../layer/BaseTile.js\").default} BaseLayerType\n */\n\n/**\n * @classdesc\n * Base WebGL renderer for tile layers.\n * @template {BaseLayerType} LayerType\n * @template {import(\"../../Tile.js\").default} TileType\n * @template {import(\"../../webgl/BaseTileRepresentation.js\").default<TileType>} TileRepresentation\n * @extends {WebGLLayerRenderer<LayerType>}\n */\nclass WebGLBaseTileLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} options Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer, {\n      uniforms: options.uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * This transform converts representation coordinates to screen coordinates.\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.tileTransform_ = createTransform();\n\n    /**\n     * @type {Array<number>}\n     * @protected\n     */\n    this.tempMat4 = createMat4();\n\n    /**\n     * @type {import(\"../../TileRange.js\").default}\n     * @private\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    /**\n     * @type {import(\"../../size.js\").Size}\n     * @private\n     */\n    this.tempSize_ = [0, 0];\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<TileRepresentation>}\n     * @protected\n     */\n    this.tileRepresentationCache = new LRUCache(cacheSize);\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.projection_ = undefined;\n  }\n\n  /**\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    super.reset({\n      uniforms: options.uniforms,\n    });\n  }\n\n  /**\n   * @param {TileType} tile Tile.\n   * @return {boolean} Tile is drawable.\n   * @private\n   */\n  isDrawableTile_(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrameInternal(frameState) {\n    if (!this.projection_) {\n      this.projection_ = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.projection_) {\n      this.clearCache();\n      this.projection_ = frameState.viewState.projection;\n    }\n\n    const layer = this.getLayer();\n    const source = layer.getRenderSource();\n    if (!source) {\n      return false;\n    }\n\n    if (isEmpty(getRenderExtent(frameState, frameState.extent))) {\n      return false;\n    }\n    return source.getState() === 'ready';\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../../webgl/BaseTileRepresentation.js\").TileRepresentationOptions<TileType>} options tile representation options\n   * @return {TileRepresentation} A new tile representation\n   * @protected\n   */\n  createTileRepresentation(options) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileRepresentationLookup} tileRepresentationLookup The zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(\n    frameState,\n    extent,\n    initialZ,\n    tileRepresentationLookup,\n    preload\n  ) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const gutter = tileSource.getGutterForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileRepresentationCache = this.tileRepresentationCache;\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0)\n        ),\n        tileSource.zDirection\n      )\n    );\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n          const cacheKey = getCacheKey(tileSource, tileCoord);\n\n          /** @type {TileRepresentation} */\n          let tileRepresentation;\n\n          /** @type {TileType} */\n          let tile;\n\n          if (tileRepresentationCache.containsKey(cacheKey)) {\n            tileRepresentation = tileRepresentationCache.get(cacheKey);\n            tile = tileRepresentation.tile;\n          }\n          if (\n            !tileRepresentation ||\n            tileRepresentation.tile.key !== tileSource.getKey()\n          ) {\n            tile = tileSource.getTile(\n              z,\n              x,\n              y,\n              frameState.pixelRatio,\n              viewState.projection\n            );\n          }\n\n          if (lookupHasTile(tileRepresentationLookup, tile)) {\n            continue;\n          }\n\n          if (!tileRepresentation) {\n            tileRepresentation = this.createTileRepresentation({\n              tile: tile,\n              grid: tileGrid,\n              helper: this.helper,\n              gutter: gutter,\n            });\n            tileRepresentationCache.set(cacheKey, tileRepresentation);\n          } else {\n            if (this.isDrawableTile_(tile)) {\n              tileRepresentation.setTile(tile);\n            } else {\n              const interimTile = /** @type {TileType} */ (\n                tile.getInterimTile()\n              );\n              tileRepresentation.setTile(interimTile);\n            }\n          }\n\n          addTileRepresentationToLookup(\n            tileRepresentationLookup,\n            tileRepresentation,\n            z\n          );\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} tilesWithAlpha True if at least one of the rendered tiles has alpha\n   * @protected\n   */\n  beforeTilesRender(frameState, tilesWithAlpha) {\n    this.helper.prepareDraw(this.frameState, !tilesWithAlpha, true);\n  }\n\n  /**\n   * @param {TileRepresentation} tileRepresentation Tile representation\n   * @param {import(\"../../transform.js\").Transform} tileTransform Tile transform\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state\n   * @param {import(\"../../extent.js\").Extent} renderExtent Render extent\n   * @param {number} tileResolution Tile resolution\n   * @param {import(\"../../size.js\").Size} tileSize Tile size\n   * @param {import(\"../../coordinate.js\").Coordinate} tileOrigin Tile origin\n   * @param {import(\"../../extent.js\").Extent} tileExtent tile Extent\n   * @param {number} depth Depth\n   * @param {number} gutter Gutter\n   * @param {number} alpha Alpha\n   * @protected\n   */\n  renderTile(\n    tileRepresentation,\n    tileTransform,\n    frameState,\n    renderExtent,\n    tileResolution,\n    tileSize,\n    tileOrigin,\n    tileExtent,\n    depth,\n    gutter,\n    alpha\n  ) {}\n\n  drawTile_(\n    frameState,\n    tileRepresentation,\n    tileZ,\n    gutter,\n    extent,\n    alphaLookup,\n    tileGrid\n  ) {\n    if (!tileRepresentation.loaded) {\n      return;\n    }\n    const tile = tileRepresentation.tile;\n    const tileCoord = tile.tileCoord;\n    const tileCoordKey = getTileCoordKey(tileCoord);\n    const alpha = tileCoordKey in alphaLookup ? alphaLookup[tileCoordKey] : 1;\n\n    const tileResolution = tileGrid.getResolution(tileZ);\n    const tileSize = toSize(tileGrid.getTileSize(tileZ), this.tempSize_);\n    const tileOrigin = tileGrid.getOrigin(tileZ);\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord);\n    // tiles with alpha are rendered last to allow blending\n    const depth = alpha < 1 ? -1 : depthForZ(tileZ);\n    if (alpha < 1) {\n      frameState.animate = true;\n    }\n\n    const viewState = frameState.viewState;\n    const centerX = viewState.center[0];\n    const centerY = viewState.center[1];\n\n    const tileWidthWithGutter = tileSize[0] + 2 * gutter;\n    const tileHeightWithGutter = tileSize[1] + 2 * gutter;\n\n    const aspectRatio = tileWidthWithGutter / tileHeightWithGutter;\n\n    const centerI = (centerX - tileOrigin[0]) / (tileSize[0] * tileResolution);\n    const centerJ = (tileOrigin[1] - centerY) / (tileSize[1] * tileResolution);\n\n    const tileScale = viewState.resolution / tileResolution;\n\n    const tileCenterI = tileCoord[1];\n    const tileCenterJ = tileCoord[2];\n\n    resetTransform(this.tileTransform_);\n    scaleTransform(\n      this.tileTransform_,\n      2 / ((frameState.size[0] * tileScale) / tileWidthWithGutter),\n      -2 / ((frameState.size[1] * tileScale) / tileWidthWithGutter)\n    );\n    rotateTransform(this.tileTransform_, viewState.rotation);\n    scaleTransform(this.tileTransform_, 1, 1 / aspectRatio);\n    translateTransform(\n      this.tileTransform_,\n      (tileSize[0] * (tileCenterI - centerI) - gutter) / tileWidthWithGutter,\n      (tileSize[1] * (tileCenterJ - centerJ) - gutter) / tileHeightWithGutter\n    );\n\n    this.renderTile(\n      /** @type {TileRepresentation} */ (tileRepresentation),\n      this.tileTransform_,\n      frameState,\n      extent,\n      tileResolution,\n      tileSize,\n      tileOrigin,\n      tileExtent,\n      depth,\n      gutter,\n      alpha\n    );\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    this.frameState = frameState;\n    this.renderComplete = true;\n    const gl = this.helper.getGL();\n    this.preRender(gl, frameState);\n\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const gutter = tileSource.getGutterForProjection(viewState.projection);\n    const extent = getRenderExtent(frameState, frameState.extent);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection\n    );\n\n    /**\n     * @type {TileRepresentationLookup}\n     */\n    const tileRepresentationLookup = newTileRepresentationLookup();\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(\n        frameState,\n        nextExtent,\n        targetZ,\n        tileRepresentationLookup,\n        preload\n      );\n    }\n\n    this.enqueueTiles(frameState, extent, z, tileRepresentationLookup, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          extent,\n          z - 1,\n          tileRepresentationLookup,\n          preload - 1\n        );\n      }, 0);\n    }\n\n    /**\n     * A lookup of alpha values for tiles at the target rendering resolution\n     * for tiles that are in transition.  If a tile coord key is absent from\n     * this lookup, the tile should be rendered at alpha 1.\n     * @type {Object<string, number>}\n     */\n    const alphaLookup = {};\n\n    const uid = getUid(this);\n    const time = frameState.time;\n    let blend = false;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tileRepresentation of tileRepresentationLookup\n      .representationsByZ[z]) {\n      const tile = tileRepresentation.tile;\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tile.getState() === TileState.EMPTY\n      ) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileRepresentation.loaded) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n        blend = true;\n        const tileCoordKey = getTileCoordKey(tileCoord);\n        alphaLookup[tileCoordKey] = alpha;\n      }\n      this.renderComplete = false;\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tileRepresentationLookup\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tileRepresentationLookup\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    this.beforeTilesRender(frameState, blend);\n\n    const representationsByZ = tileRepresentationLookup.representationsByZ;\n    const zs = Object.keys(representationsByZ).map(Number).sort(descending);\n    for (let j = 0, jj = zs.length; j < jj; ++j) {\n      const tileZ = zs[j];\n      for (const tileRepresentation of representationsByZ[tileZ]) {\n        const tileCoord = tileRepresentation.tile.tileCoord;\n        const tileCoordKey = getTileCoordKey(tileCoord);\n        if (tileCoordKey in alphaLookup) {\n          continue;\n        }\n\n        this.drawTile_(\n          frameState,\n          tileRepresentation,\n          tileZ,\n          gutter,\n          extent,\n          alphaLookup,\n          tileGrid\n        );\n      }\n    }\n\n    for (const tileRepresentation of representationsByZ[z]) {\n      const tileCoord = tileRepresentation.tile.tileCoord;\n      const tileCoordKey = getTileCoordKey(tileCoord);\n      if (tileCoordKey in alphaLookup) {\n        this.drawTile_(\n          frameState,\n          tileRepresentation,\n          z,\n          gutter,\n          extent,\n          alphaLookup,\n          tileGrid\n        );\n      }\n    }\n\n    this.helper.finalizeDraw(\n      frameState,\n      this.dispatchPreComposeEvent,\n      this.dispatchPostComposeEvent\n    );\n\n    const canvas = this.helper.getCanvas();\n\n    const tileRepresentationCache = this.tileRepresentationCache;\n    while (tileRepresentationCache.canExpireCache()) {\n      const tileRepresentation = tileRepresentationCache.pop();\n      tileRepresentation.dispose();\n    }\n\n    // TODO: let the renderers manage their own cache instead of managing the source cache\n    /**\n     * Here we unconditionally expire the source cache since the renderer maintains\n     * its own cache.\n     * @param {import(\"../../Map.js\").default} map Map.\n     * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n     */\n    const postRenderFunction = function (map, frameState) {\n      tileSource.updateCacheSize(0.1, frameState.viewState.projection);\n      tileSource.expireCache(frameState.viewState.projection, empty);\n    };\n\n    frameState.postRenderFunctions.push(postRenderFunction);\n\n    this.postRender(gl, frameState);\n    return canvas;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile representation lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of\n   * tile representations by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tileRepresentationLookup) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileRepresentationCache = this.tileRepresentationCache;\n    const source = this.getLayer().getRenderSource();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(source, [altZ, x, y]);\n        let loaded = false;\n        if (tileRepresentationCache.containsKey(cacheKey)) {\n          const tileRepresentation = tileRepresentationCache.get(cacheKey);\n          if (\n            tileRepresentation.loaded &&\n            !lookupHasTile(tileRepresentationLookup, tileRepresentation.tile)\n          ) {\n            addTileRepresentationToLookup(\n              tileRepresentationLookup,\n              tileRepresentation,\n              altZ\n            );\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  clearCache() {\n    const tileRepresentationCache = this.tileRepresentationCache;\n    tileRepresentationCache.forEach((tileRepresentation) =>\n      tileRepresentation.dispose()\n    );\n    tileRepresentationCache.clear();\n  }\n\n  removeHelper() {\n    if (this.helper) {\n      this.clearCache();\n    }\n\n    super.removeHelper();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    super.disposeInternal();\n    delete this.frameState;\n  }\n}\n\nexport default WebGLBaseTileLayerRenderer;\n","/**\n * @module ol/renderer/webgl/TileLayer\n */\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileState from '../../TileState.js';\nimport TileTexture from '../../webgl/TileTexture.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLBaseTileLayerRenderer, {\n  Uniforms as BaseUniforms,\n  getCacheKey,\n} from './TileLayerBase.js';\nimport {AttributeType} from '../../webgl/Helper.js';\nimport {ELEMENT_ARRAY_BUFFER, STATIC_DRAW} from '../../webgl.js';\nimport {apply as applyTransform} from '../../transform.js';\nimport {\n  boundingExtent,\n  containsCoordinate,\n  getIntersection,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {fromTransform as mat4FromTransform} from '../../vec/mat4.js';\nimport {toSize} from '../../size.js';\n\nexport const Uniforms = {\n  ...BaseUniforms,\n  TILE_TEXTURE_ARRAY: 'u_tileTextures',\n  TEXTURE_PIXEL_WIDTH: 'u_texturePixelWidth',\n  TEXTURE_PIXEL_HEIGHT: 'u_texturePixelHeight',\n  TEXTURE_RESOLUTION: 'u_textureResolution', // map units per texture pixel\n  TEXTURE_ORIGIN_X: 'u_textureOriginX', // map x coordinate of left edge of texture\n  TEXTURE_ORIGIN_Y: 'u_textureOriginY', // map y coordinate of top edge of texture\n};\n\nexport const Attributes = {\n  TEXTURE_COORD: 'a_textureCoord',\n};\n\n/**\n * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n */\nconst attributeDescriptions = [\n  {\n    name: Attributes.TEXTURE_COORD,\n    size: 2,\n    type: AttributeType.FLOAT,\n  },\n];\n\n/**\n * @typedef {Object} Options\n * @property {string} vertexShader Vertex shader source.\n * @property {string} fragmentShader Fragment shader source.\n * @property {Object<string, import(\"../../webgl/Helper\").UniformValue>} [uniforms] Additional uniforms\n * made available to shaders.\n * @property {Array<import(\"../../webgl/PaletteTexture.js\").default>} [paletteTextures] Palette textures.\n * @property {number} [cacheSize=512] The texture cache size.\n */\n\n/**\n * @typedef {import(\"../../layer/WebGLTile.js\").default} LayerType\n */\n/**\n * @typedef {import(\"../../webgl/TileTexture.js\").TileType} TileTextureType\n */\n/**\n * @typedef {import(\"../../webgl/TileTexture.js\").default} TileTextureRepresentation\n */\n\n/**\n * @classdesc\n * WebGL renderer for tile layers.\n * @extends {WebGLBaseTileLayerRenderer<LayerType, TileTextureType, TileTextureRepresentation>}\n * @api\n */\nclass WebGLTileLayerRenderer extends WebGLBaseTileLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} options Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer, options);\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.program_;\n\n    /**\n     * @private\n     */\n    this.vertexShader_ = options.vertexShader;\n\n    /**\n     * @private\n     */\n    this.fragmentShader_ = options.fragmentShader;\n\n    /**\n     * Tiles are rendered as a quad with the following structure:\n     *\n     *  [P3]---------[P2]\n     *   |`           |\n     *   |  `     B   |\n     *   |    `       |\n     *   |      `     |\n     *   |   A    `   |\n     *   |          ` |\n     *  [P0]---------[P1]\n     *\n     * Triangle A: P0, P1, P3\n     * Triangle B: P1, P2, P3\n     *\n     * @private\n     */\n    this.indices_ = new WebGLArrayBuffer(ELEMENT_ARRAY_BUFFER, STATIC_DRAW);\n    this.indices_.fromArray([0, 1, 3, 1, 2, 3]);\n\n    /**\n     * @type {Array<import(\"../../webgl/PaletteTexture.js\").default>}\n     * @private\n     */\n    this.paletteTextures_ = options.paletteTextures || [];\n  }\n\n  /**\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    super.reset(options);\n\n    this.vertexShader_ = options.vertexShader;\n    this.fragmentShader_ = options.fragmentShader;\n\n    if (this.helper) {\n      this.program_ = this.helper.getProgram(\n        this.fragmentShader_,\n        this.vertexShader_\n      );\n    }\n  }\n\n  afterHelperCreated() {\n    this.program_ = this.helper.getProgram(\n      this.fragmentShader_,\n      this.vertexShader_\n    );\n    this.helper.flushBufferData(this.indices_);\n  }\n\n  createTileRepresentation(options) {\n    return new TileTexture(options);\n  }\n\n  beforeTilesRender(frameState, tilesWithAlpha) {\n    super.beforeTilesRender(frameState, tilesWithAlpha);\n    this.helper.useProgram(this.program_, frameState);\n  }\n\n  renderTile(\n    tileTexture,\n    tileTransform,\n    frameState,\n    renderExtent,\n    tileResolution,\n    tileSize,\n    tileOrigin,\n    tileExtent,\n    depth,\n    gutter,\n    alpha\n  ) {\n    const gl = this.helper.getGL();\n    this.helper.bindBuffer(tileTexture.coords);\n    this.helper.bindBuffer(this.indices_);\n    this.helper.enableAttributes(attributeDescriptions);\n\n    let textureSlot = 0;\n    while (textureSlot < tileTexture.textures.length) {\n      const uniformName = `${Uniforms.TILE_TEXTURE_ARRAY}[${textureSlot}]`;\n      this.helper.bindTexture(\n        tileTexture.textures[textureSlot],\n        textureSlot,\n        uniformName\n      );\n      ++textureSlot;\n    }\n\n    for (\n      let paletteIndex = 0;\n      paletteIndex < this.paletteTextures_.length;\n      ++paletteIndex\n    ) {\n      const paletteTexture = this.paletteTextures_[paletteIndex];\n      const texture = paletteTexture.getTexture(gl);\n      this.helper.bindTexture(texture, textureSlot, paletteTexture.name);\n      ++textureSlot;\n    }\n\n    const viewState = frameState.viewState;\n\n    const tileWidthWithGutter = tileSize[0] + 2 * gutter;\n    const tileHeightWithGutter = tileSize[1] + 2 * gutter;\n\n    const tile = tileTexture.tile;\n    const tileCoord = tile.tileCoord;\n\n    const tileCenterI = tileCoord[1];\n    const tileCenterJ = tileCoord[2];\n\n    this.helper.setUniformMatrixValue(\n      Uniforms.TILE_TRANSFORM,\n      mat4FromTransform(this.tempMat4, tileTransform)\n    );\n\n    this.helper.setUniformFloatValue(Uniforms.TRANSITION_ALPHA, alpha);\n    this.helper.setUniformFloatValue(Uniforms.DEPTH, depth);\n\n    let gutterExtent = renderExtent;\n    if (gutter > 0) {\n      gutterExtent = tileExtent;\n      getIntersection(gutterExtent, renderExtent, gutterExtent);\n    }\n    this.helper.setUniformFloatVec4(Uniforms.RENDER_EXTENT, gutterExtent);\n\n    this.helper.setUniformFloatValue(Uniforms.RESOLUTION, viewState.resolution);\n    this.helper.setUniformFloatValue(Uniforms.ZOOM, viewState.zoom);\n\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_PIXEL_WIDTH,\n      tileWidthWithGutter\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_PIXEL_HEIGHT,\n      tileHeightWithGutter\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_RESOLUTION,\n      tileResolution\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_ORIGIN_X,\n      tileOrigin[0] +\n        tileCenterI * tileSize[0] * tileResolution -\n        gutter * tileResolution\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_ORIGIN_Y,\n      tileOrigin[1] -\n        tileCenterJ * tileSize[1] * tileResolution +\n        gutter * tileResolution\n    );\n\n    this.helper.drawElements(0, this.indices_.getSize());\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView} Data at the pixel location.\n   */\n  getData(pixel) {\n    const gl = this.helper.getGL();\n    if (!gl) {\n      return null;\n    }\n\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const viewState = frameState.viewState;\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (\n        !containsCoordinate(\n          fromUserExtent(layerExtent, viewState.projection),\n          coordinate\n        )\n      ) {\n        return null;\n      }\n    }\n\n    // determine last source suitable for rendering at coordinate\n    const sources = layer.getSources(\n      boundingExtent([coordinate]),\n      viewState.resolution\n    );\n    let i, source, tileGrid;\n    for (i = sources.length - 1; i >= 0; --i) {\n      source = sources[i];\n      if (source.getState() === 'ready') {\n        tileGrid = source.getTileGridForProjection(viewState.projection);\n        if (source.getWrapX()) {\n          break;\n        }\n        const gridExtent = tileGrid.getExtent();\n        if (!gridExtent || containsCoordinate(gridExtent, coordinate)) {\n          break;\n        }\n      }\n    }\n    if (i < 0) {\n      return null;\n    }\n\n    const tileTextureCache = this.tileRepresentationCache;\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const cacheKey = getCacheKey(source, tileCoord);\n      if (!tileTextureCache.containsKey(cacheKey)) {\n        continue;\n      }\n      const tileTexture = tileTextureCache.get(cacheKey);\n      const tile = tileTexture.tile;\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tile.getState() === TileState.EMPTY\n      ) {\n        return null;\n      }\n      if (!tileTexture.loaded) {\n        continue;\n      }\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col =\n        (coordinate[0] - tileOrigin[0]) / tileResolution -\n        tileCoord[1] * tileSize[0];\n\n      const row =\n        (tileOrigin[1] - coordinate[1]) / tileResolution -\n        tileCoord[2] * tileSize[1];\n\n      return tileTexture.getPixelData(col, row);\n    }\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    const helper = this.helper;\n    if (helper) {\n      const gl = helper.getGL();\n      gl.deleteProgram(this.program_);\n      delete this.program_;\n      helper.deleteBuffer(this.indices_);\n    }\n    super.disposeInternal();\n    delete this.indices_;\n  }\n}\n\nexport default WebGLTileLayerRenderer;\n","/**\n * Operators and utilities used for style expressions\n * @module ol/style/expressions\n */\n\nimport PaletteTexture from '../webgl/PaletteTexture.js';\nimport {Uniforms} from '../renderer/webgl/TileLayer.js';\nimport {asArray, fromString, isStringColor} from '../color.js';\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expressions.js\").ExpressionValue} arguments.\n *\n * The following operators can be used:\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels.\n *   * `['get', 'attributeName', typeHint]` fetches a feature property value, similar to `feature.get('attributeName')`\n *     A type hint can optionally be specified, in case the resulting expression contains a type ambiguity which\n *     will make it invalid. Type hints can be one of: 'string', 'color', 'number', 'boolean', 'number[]'\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection\n *   * `['resolution']` returns the current resolution\n *   * `['time']` returns the time in seconds since the creation of the layer\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` returns the current zoom level\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4.\n *   * `['color', red, green, blue, alpha]` creates a `color` value from `number` values; the `alpha` parameter is\n *     optional; if not specified, it will be set to 1.\n *     Note: `red`, `green` and `blue` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range).\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\n/**\n * Possible inferred types from a given value or expression.\n * Note: these are binary flags.\n * @enum {number}\n */\nexport const ValueTypes = {\n  NUMBER: 0b00001,\n  STRING: 0b00010,\n  COLOR: 0b00100,\n  BOOLEAN: 0b01000,\n  NUMBER_ARRAY: 0b10000,\n  ANY: 0b11111,\n  NONE: 0,\n};\n\n/**\n * @param {string} typeHint Type hint\n * @return {ValueTypes} Resulting value type (will be a single type)\n */\nfunction getTypeFromHint(typeHint) {\n  switch (typeHint) {\n    case 'string':\n      return ValueTypes.STRING;\n    case 'color':\n      return ValueTypes.COLOR;\n    case 'number':\n      return ValueTypes.NUMBER;\n    case 'boolean':\n      return ValueTypes.BOOLEAN;\n    case 'number[]':\n      return ValueTypes.NUMBER_ARRAY;\n    default:\n      throw new Error(`Unrecognized type hint: ${typeHint}`);\n  }\n}\n\n/**\n * An operator declaration must contain two methods: `getReturnType` which returns a type based on\n * the operator arguments, and `toGlsl` which returns a GLSL-compatible string.\n * Note: both methods can process arguments recursively.\n * @typedef {Object} Operator\n * @property {function(Array<ExpressionValue>): ValueTypes|number} getReturnType Returns one or several types\n * @property {function(ParsingContext, Array<ExpressionValue>, ValueTypes): string} toGlsl Returns a GLSL-compatible string\n * given a parsing context, an array of arguments and an expected type.\n * Note: the expected type can be a combination such as ValueTypes.NUMBER | ValueTypes.STRING or ValueTypes.ANY for instance\n */\n\n/**\n * Operator declarations\n * @type {Object<string, Operator>}\n */\nexport const Operators = {};\n\n/**\n * Returns the possible types for a given value (each type being a binary flag)\n * To test a value use e.g. `getValueType(v) & ValueTypes.BOOLEAN`\n * @param {ExpressionValue} value Value\n * @return {ValueTypes|number} Type or types inferred from the value\n */\nexport function getValueType(value) {\n  if (typeof value === 'number') {\n    return ValueTypes.NUMBER;\n  }\n  if (typeof value === 'boolean') {\n    return ValueTypes.BOOLEAN;\n  }\n  if (typeof value === 'string') {\n    if (isStringColor(value)) {\n      return ValueTypes.COLOR | ValueTypes.STRING;\n    }\n    return ValueTypes.STRING;\n  }\n  if (!Array.isArray(value)) {\n    throw new Error(`Unhandled value type: ${JSON.stringify(value)}`);\n  }\n  const valueArr = /** @type {Array<*>} */ (value);\n  const onlyNumbers = valueArr.every(function (v) {\n    return typeof v === 'number';\n  });\n  if (onlyNumbers) {\n    if (valueArr.length === 3 || valueArr.length === 4) {\n      return ValueTypes.COLOR | ValueTypes.NUMBER_ARRAY;\n    }\n    return ValueTypes.NUMBER_ARRAY;\n  }\n  if (typeof valueArr[0] !== 'string') {\n    throw new Error(\n      `Expected an expression operator but received: ${JSON.stringify(\n        valueArr\n      )}`\n    );\n  }\n  const operator = Operators[valueArr[0]];\n  if (operator === undefined) {\n    throw new Error(\n      `Unrecognized expression operator: ${JSON.stringify(valueArr)}`\n    );\n  }\n  return operator.getReturnType(valueArr.slice(1));\n}\n\n/**\n * Checks if only one value type is enabled in the input number.\n * @param {ValueTypes|number} valueType Number containing value type binary flags\n * @return {boolean} True if only one type flag is enabled, false if zero or multiple\n */\nexport function isTypeUnique(valueType) {\n  return Math.log2(valueType) % 1 === 0;\n}\n\n/**\n * Print types as a readable string\n * @param {ValueTypes|number} valueType Number containing value type binary flags\n * @return {string} Types\n */\nfunction printTypes(valueType) {\n  const result = [];\n  if ((valueType & ValueTypes.NUMBER) > 0) {\n    result.push('number');\n  }\n  if ((valueType & ValueTypes.COLOR) > 0) {\n    result.push('color');\n  }\n  if ((valueType & ValueTypes.BOOLEAN) > 0) {\n    result.push('boolean');\n  }\n  if ((valueType & ValueTypes.NUMBER_ARRAY) > 0) {\n    result.push('number[]');\n  }\n  if ((valueType & ValueTypes.STRING) > 0) {\n    result.push('string');\n  }\n  return result.length > 0 ? result.join(', ') : '(no type)';\n}\n\n/**\n * @typedef {Object} ParsingContextExternal\n * @property {string} name Name, unprefixed\n * @property {ValueTypes} type One of the value types constants\n * @property {function(import(\"../Feature.js\").FeatureLike): *} [callback] Function used for computing the attribute value;\n *   if undefined, `feature.get(attribute.name)` will be used\n */\n\n/**\n * Context available during the parsing of an expression.\n * @typedef {Object} ParsingContext\n * @property {boolean} [inFragmentShader] If false, means the expression output should be made for a vertex shader\n * @property {Array<ParsingContextExternal>} variables External variables used in the expression\n * @property {Array<ParsingContextExternal>} attributes External attributes used in the expression\n * @property {Object<string, number>} stringLiteralsMap This object maps all encountered string values to a number\n * @property {Object<string, string>} functions Lookup of functions used by the style.\n * @property {number} [bandCount] Number of bands per pixel.\n * @property {Array<PaletteTexture>} [paletteTextures] List of palettes used by the style.\n * @property {import(\"../style/literal\").LiteralStyle} style The style being parsed\n */\n\n/**\n * @param {string} operator Operator\n * @param {ParsingContext} context Parsing context\n * @return {string} A function name based on the operator, unique in the given context\n */\nfunction computeOperatorFunctionName(operator, context) {\n  return `operator_${operator}_${Object.keys(context.functions).length}`;\n}\n\n/**\n * Will return the number as a float with a dot separator, which is required by GLSL.\n * @param {number} v Numerical value.\n * @return {string} The value as string.\n */\nexport function numberToGlsl(v) {\n  const s = v.toString();\n  return s.includes('.') ? s : s + '.0';\n}\n\n/**\n * Will return the number array as a float with a dot separator, concatenated with ', '.\n * @param {Array<number>} array Numerical values array.\n * @return {string} The array as a vector, e. g.: `vec3(1.0, 2.0, 3.0)`.\n */\nexport function arrayToGlsl(array) {\n  if (array.length < 2 || array.length > 4) {\n    throw new Error(\n      '`formatArray` can only output `vec2`, `vec3` or `vec4` arrays.'\n    );\n  }\n  return `vec${array.length}(${array.map(numberToGlsl).join(', ')})`;\n}\n\n/**\n * Will normalize and converts to string a `vec4` color array compatible with GLSL.\n * @param {string|import(\"../color.js\").Color} color Color either in string format or [r, g, b, a] array format,\n * with RGB components in the 0..255 range and the alpha component in the 0..1 range.\n * Note that the final array will always have 4 components.\n * @return {string} The color expressed in the `vec4(1.0, 1.0, 1.0, 1.0)` form.\n */\nexport function colorToGlsl(color) {\n  const array = asArray(color);\n  const alpha = array.length > 3 ? array[3] : 1;\n  // all components are premultiplied with alpha value\n  return arrayToGlsl([\n    (array[0] / 255) * alpha,\n    (array[1] / 255) * alpha,\n    (array[2] / 255) * alpha,\n    alpha,\n  ]);\n}\n\n/**\n * Returns a stable equivalent number for the string literal.\n * @param {ParsingContext} context Parsing context\n * @param {string} string String literal value\n * @return {number} Number equivalent\n */\nexport function getStringNumberEquivalent(context, string) {\n  if (context.stringLiteralsMap[string] === undefined) {\n    context.stringLiteralsMap[string] = Object.keys(\n      context.stringLiteralsMap\n    ).length;\n  }\n  return context.stringLiteralsMap[string];\n}\n\n/**\n * Returns a stable equivalent number for the string literal, for use in shaders. This number is then\n * converted to be a GLSL-compatible string.\n * @param {ParsingContext} context Parsing context\n * @param {string} string String literal value\n * @return {string} GLSL-compatible string containing a number\n */\nexport function stringToGlsl(context, string) {\n  return numberToGlsl(getStringNumberEquivalent(context, string));\n}\n\n/**\n * Recursively parses a style expression and outputs a GLSL-compatible string. Takes in a parsing context that\n * will be read and modified during the parsing operation.\n * @param {ParsingContext} context Parsing context\n * @param {ExpressionValue} value Value\n * @param {ValueTypes|number} [expectedType] Expected final type (can be several types combined)\n * If omitted, defaults to ValueTypes.NUMBER\n * @return {string} GLSL-compatible output\n */\nexport function expressionToGlsl(context, value, expectedType) {\n  const returnType =\n    expectedType !== undefined ? expectedType : ValueTypes.NUMBER;\n  // operator\n  if (Array.isArray(value) && typeof value[0] === 'string') {\n    const operator = Operators[value[0]];\n    if (operator === undefined) {\n      throw new Error(\n        `Unrecognized expression operator: ${JSON.stringify(value)}`\n      );\n    }\n    return operator.toGlsl(context, value.slice(1), returnType);\n  }\n\n  const possibleType = getValueType(value) & returnType;\n  assertNotEmptyType(value, possibleType, '');\n\n  if ((possibleType & ValueTypes.NUMBER) > 0) {\n    return numberToGlsl(/** @type {number} */ (value));\n  }\n\n  if ((possibleType & ValueTypes.BOOLEAN) > 0) {\n    return value.toString();\n  }\n\n  if ((possibleType & ValueTypes.STRING) > 0) {\n    return stringToGlsl(context, value.toString());\n  }\n\n  if ((possibleType & ValueTypes.COLOR) > 0) {\n    return colorToGlsl(/** @type {Array<number> | string} */ (value));\n  }\n\n  if ((possibleType & ValueTypes.NUMBER_ARRAY) > 0) {\n    return arrayToGlsl(/** @type {Array<number>} */ (value));\n  }\n\n  throw new Error(\n    `Unexpected expression ${value} (expected type ${printTypes(returnType)})`\n  );\n}\n\nfunction assertNumber(value) {\n  if ((getValueType(value) & ValueTypes.NUMBER) === 0) {\n    throw new Error(\n      `A numeric value was expected, got ${JSON.stringify(value)} instead`\n    );\n  }\n}\nfunction assertNumbers(values) {\n  for (let i = 0; i < values.length; i++) {\n    assertNumber(values[i]);\n  }\n}\nfunction assertString(value) {\n  if ((getValueType(value) & ValueTypes.STRING) === 0) {\n    throw new Error(\n      `A string value was expected, got ${JSON.stringify(value)} instead`\n    );\n  }\n}\nfunction assertBoolean(value) {\n  if ((getValueType(value) & ValueTypes.BOOLEAN) === 0) {\n    throw new Error(\n      `A boolean value was expected, got ${JSON.stringify(value)} instead`\n    );\n  }\n}\nfunction assertArgsCount(args, count) {\n  if (args.length !== count) {\n    throw new Error(\n      `Exactly ${count} arguments were expected, got ${args.length} instead`\n    );\n  }\n}\nfunction assertArgsMinCount(args, count) {\n  if (args.length < count) {\n    throw new Error(\n      `At least ${count} arguments were expected, got ${args.length} instead`\n    );\n  }\n}\nfunction assertArgsMaxCount(args, count) {\n  if (args.length > count) {\n    throw new Error(\n      `At most ${count} arguments were expected, got ${args.length} instead`\n    );\n  }\n}\nfunction assertArgsEven(args) {\n  if (args.length % 2 !== 0) {\n    throw new Error(\n      `An even amount of arguments was expected, got ${JSON.stringify(\n        args\n      )} instead`\n    );\n  }\n}\nfunction assertArgsOdd(args) {\n  if (args.length % 2 === 0) {\n    throw new Error(\n      `An odd amount of arguments was expected, got ${JSON.stringify(\n        args\n      )} instead`\n    );\n  }\n}\nfunction assertNotEmptyType(args, types, descriptor) {\n  if (types === ValueTypes.NONE) {\n    throw new Error(\n      `No matching type was found for the following expression ${descriptor}: ${JSON.stringify(\n        args\n      )}`\n    );\n  }\n}\nfunction assertSingleType(args, types, descriptor) {\n  assertNotEmptyType(args, types, descriptor);\n  if (!isTypeUnique(types)) {\n    throw new Error(\n      `Expected to have a unique type for the following expression ${descriptor}: ${JSON.stringify(\n        args\n      )}\nGot the following types instead: ${printTypes(types)}`\n    );\n  }\n}\nfunction assertOfType(args, types, expectedTypes, descriptor) {\n  if ((types & expectedTypes) === ValueTypes.NONE) {\n    throw new Error(\n      `Expected the ${descriptor} type of the following expression: ${JSON.stringify(\n        args\n      )} to be of the following types: ${printTypes(expectedTypes)}\nGot these types instead: ${printTypes(types)}`\n    );\n  }\n}\n\nOperators['get'] = {\n  getReturnType: function (args) {\n    if (args.length === 2) {\n      const hint = args[1];\n      return getTypeFromHint(/** @type {string} */ (hint));\n    }\n    return ValueTypes.ANY;\n  },\n  toGlsl: function (context, args, expectedType) {\n    assertArgsMinCount(args, 1);\n    assertArgsMaxCount(args, 2);\n    assertString(args[0]);\n    const outputType = expectedType & Operators['get'].getReturnType(args);\n    assertSingleType(['get', ...args], outputType, '');\n    const name = args[0].toString();\n    const existing = context.attributes.find((a) => a.name === name);\n    if (!existing) {\n      context.attributes.push({\n        name: name,\n        type: outputType,\n      });\n    } else if (outputType !== existing.type) {\n      throw new Error(\n        `The following attribute was used in different places with incompatible types: ${name}\nTypes were: ${printTypes(existing.type)} and ${printTypes(outputType)}`\n      );\n    }\n    const prefix = context.inFragmentShader ? 'v_' : 'a_';\n    return prefix + name;\n  },\n};\n\n/**\n * Get the uniform name given a variable name.\n * @param {string} variableName The variable name.\n * @return {string} The uniform name.\n */\nexport function uniformNameForVariable(variableName) {\n  return 'u_var_' + variableName;\n}\n\nOperators['var'] = {\n  getReturnType: function () {\n    return ValueTypes.ANY;\n  },\n  toGlsl: function (context, args, expectedType) {\n    assertArgsCount(args, 1);\n    assertString(args[0]);\n    const name = args[0].toString();\n    if (\n      !context.style.variables ||\n      context.style.variables[name] === undefined\n    ) {\n      throw new Error(\n        `The following variable is missing from the style: ${name}`\n      );\n    }\n    const initialValue = context.style.variables[name];\n    const outputType = expectedType & getValueType(initialValue);\n    assertSingleType(['var', ...args], outputType, '');\n    const existing = context.variables.find((a) => a.name === name);\n    if (!existing) {\n      context.variables.push({\n        name: name,\n        type: outputType,\n      });\n    } else if (outputType !== existing.type) {\n      throw new Error(\n        `The following variable was used in different places with incompatible types: ${name}\nTypes were: ${printTypes(existing.type)} and ${printTypes(outputType)}`\n      );\n    }\n    return uniformNameForVariable(name);\n  },\n};\n\nexport const PALETTE_TEXTURE_ARRAY = 'u_paletteTextures';\n\n// ['palette', index, colors]\nOperators['palette'] = {\n  getReturnType: function () {\n    return ValueTypes.COLOR;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumber(args[0]);\n    const index = expressionToGlsl(context, args[0]);\n    const colors = args[1];\n    if (!Array.isArray(colors)) {\n      throw new Error('The second argument of palette must be an array');\n    }\n    const numColors = colors.length;\n    const palette = new Uint8Array(numColors * 4);\n    for (let i = 0; i < numColors; i++) {\n      const candidate = colors[i];\n      /**\n       * @type {import('../color.js').Color}\n       */\n      let color;\n      if (typeof candidate === 'string') {\n        color = fromString(candidate);\n      } else {\n        if (!Array.isArray(candidate)) {\n          throw new Error(\n            'The second argument of palette must be an array of strings or colors'\n          );\n        }\n        const length = candidate.length;\n        if (length === 4) {\n          color = candidate;\n        } else {\n          if (length !== 3) {\n            throw new Error(\n              `Expected palette color to have 3 or 4 values, got ${length}`\n            );\n          }\n          color = [candidate[0], candidate[1], candidate[2], 1];\n        }\n      }\n      const offset = i * 4;\n      palette[offset] = color[0];\n      palette[offset + 1] = color[1];\n      palette[offset + 2] = color[2];\n      palette[offset + 3] = color[3] * 255;\n    }\n    if (!context.paletteTextures) {\n      context.paletteTextures = [];\n    }\n    const paletteName = `${PALETTE_TEXTURE_ARRAY}[${context.paletteTextures.length}]`;\n    const paletteTexture = new PaletteTexture(paletteName, palette);\n    context.paletteTextures.push(paletteTexture);\n    return `texture2D(${paletteName}, vec2((${index} + 0.5) / ${numColors}.0, 0.5))`;\n  },\n};\n\nconst GET_BAND_VALUE_FUNC = 'getBandValue';\n\nOperators['band'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 1);\n    assertArgsMaxCount(args, 3);\n    const band = args[0];\n\n    if (!(GET_BAND_VALUE_FUNC in context.functions)) {\n      let ifBlocks = '';\n      const bandCount = context.bandCount || 1;\n      for (let i = 0; i < bandCount; i++) {\n        const colorIndex = Math.floor(i / 4);\n        let bandIndex = i % 4;\n        if (i === bandCount - 1 && bandIndex === 1) {\n          // LUMINANCE_ALPHA - band 1 assigned to rgb and band 2 assigned to alpha\n          bandIndex = 3;\n        }\n        const textureName = `${Uniforms.TILE_TEXTURE_ARRAY}[${colorIndex}]`;\n        ifBlocks += `\n          if (band == ${i + 1}.0) {\n            return texture2D(${textureName}, v_textureCoord + vec2(dx, dy))[${bandIndex}];\n          }\n        `;\n      }\n\n      context.functions[GET_BAND_VALUE_FUNC] = `\n        float getBandValue(float band, float xOffset, float yOffset) {\n          float dx = xOffset / ${Uniforms.TEXTURE_PIXEL_WIDTH};\n          float dy = yOffset / ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n          ${ifBlocks}\n        }\n      `;\n    }\n\n    const bandExpression = expressionToGlsl(context, band);\n    const xOffsetExpression = expressionToGlsl(context, args[1] || 0);\n    const yOffsetExpression = expressionToGlsl(context, args[2] || 0);\n    return `${GET_BAND_VALUE_FUNC}(${bandExpression}, ${xOffsetExpression}, ${yOffsetExpression})`;\n  },\n};\n\nOperators['time'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 0);\n    return 'u_time';\n  },\n};\n\nOperators['zoom'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 0);\n    return 'u_zoom';\n  },\n};\n\nOperators['resolution'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 0);\n    return 'u_resolution';\n  },\n};\n\nOperators['geometry-type'] = {\n  getReturnType: function () {\n    return ValueTypes.STRING;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 0);\n    const name = 'geometryType';\n    const computeType = (geometry) => {\n      const type = geometry.getType();\n      switch (type) {\n        case 'Point':\n        case 'LineString':\n        case 'Polygon':\n          return type;\n        case 'MultiPoint':\n        case 'MultiLineString':\n        case 'MultiPolygon':\n          return type.substring(5);\n        case 'Circle':\n          return 'Polygon';\n        case 'GeometryCollection':\n          return computeType(geometry.getGeometries()[0]);\n        default:\n      }\n    };\n    const existing = context.attributes.find((a) => a.name === name);\n    if (!existing) {\n      context.attributes.push({\n        name: name,\n        type: ValueTypes.STRING,\n        callback: (feature) => {\n          return computeType(feature.getGeometry());\n        },\n      });\n    }\n    const prefix = context.inFragmentShader ? 'v_' : 'a_';\n    return prefix + name;\n  },\n};\n\nOperators['*'] = {\n  getReturnType: function (args) {\n    let outputType = ValueTypes.NUMBER | ValueTypes.COLOR;\n    for (let i = 0; i < args.length; i++) {\n      outputType = outputType & getValueType(args[i]);\n    }\n    return outputType;\n  },\n  toGlsl: function (context, args, expectedType) {\n    assertArgsMinCount(args, 2);\n    let outputType = expectedType;\n    for (let i = 0; i < args.length; i++) {\n      outputType = outputType & getValueType(args[i]);\n    }\n    assertOfType(\n      args,\n      outputType,\n      ValueTypes.NUMBER | ValueTypes.COLOR,\n      'output'\n    );\n    return `(${args\n      .map((arg) => expressionToGlsl(context, arg, outputType))\n      .join(' * ')})`;\n  },\n};\n\nOperators['/'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} / ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['+'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 2);\n    assertNumbers(args);\n    return `(${args.map((arg) => expressionToGlsl(context, arg)).join(' + ')})`;\n  },\n};\n\nOperators['-'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} - ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['clamp'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 3);\n    assertNumbers(args);\n    const min = expressionToGlsl(context, args[1]);\n    const max = expressionToGlsl(context, args[2]);\n    return `clamp(${expressionToGlsl(context, args[0])}, ${min}, ${max})`;\n  },\n};\n\nOperators['%'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `mod(${expressionToGlsl(context, args[0])}, ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['^'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `pow(${expressionToGlsl(context, args[0])}, ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['abs'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `abs(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['floor'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `floor(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['round'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `floor(${expressionToGlsl(context, args[0])} + 0.5)`;\n  },\n};\n\nOperators['ceil'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `ceil(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['sin'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `sin(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['cos'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `cos(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['atan'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 1);\n    assertArgsMaxCount(args, 2);\n    assertNumbers(args);\n    return args.length === 2\n      ? `atan(${expressionToGlsl(context, args[0])}, ${expressionToGlsl(\n          context,\n          args[1]\n        )})`\n      : `atan(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['sqrt'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `sqrt(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['>'] = {\n  getReturnType: function () {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} > ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['>='] = {\n  getReturnType: function () {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} >= ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['<'] = {\n  getReturnType: function () {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} < ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['<='] = {\n  getReturnType: function () {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} <= ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nfunction getEqualOperator(operator) {\n  return {\n    getReturnType: function () {\n      return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n      assertArgsCount(args, 2);\n\n      // find common type\n      let type = ValueTypes.ANY;\n      for (let i = 0; i < args.length; i++) {\n        type &= getValueType(args[i]);\n      }\n      if (type === ValueTypes.NONE) {\n        throw new Error(\n          `All arguments should be of compatible type, got ${JSON.stringify(\n            args\n          )} instead`\n        );\n      }\n\n      // Since it's not possible to have color types here, we can leave it out\n      // This fixes issues in case the value type is ambiguously detected as a color (e.g. the string 'red')\n      type &= ~ValueTypes.COLOR;\n\n      return `(${expressionToGlsl(\n        context,\n        args[0],\n        type\n      )} ${operator} ${expressionToGlsl(context, args[1], type)})`;\n    },\n  };\n}\n\nOperators['=='] = getEqualOperator('==');\n\nOperators['!='] = getEqualOperator('!=');\n\nOperators['!'] = {\n  getReturnType: function () {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertBoolean(args[0]);\n    return `(!${expressionToGlsl(context, args[0], ValueTypes.BOOLEAN)})`;\n  },\n};\n\nfunction getDecisionOperator(operator) {\n  return {\n    getReturnType: function () {\n      return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n      assertArgsMinCount(args, 2);\n      for (let i = 0; i < args.length; i++) {\n        assertBoolean(args[i]);\n      }\n      let result = args\n        .map((arg) => expressionToGlsl(context, arg, ValueTypes.BOOLEAN))\n        .join(` ${operator} `);\n      result = `(${result})`;\n      return result;\n    },\n  };\n}\n\nOperators['all'] = getDecisionOperator('&&');\n\nOperators['any'] = getDecisionOperator('||');\n\nOperators['between'] = {\n  getReturnType: function () {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 3);\n    assertNumbers(args);\n    const min = expressionToGlsl(context, args[1]);\n    const max = expressionToGlsl(context, args[2]);\n    const value = expressionToGlsl(context, args[0]);\n    return `(${value} >= ${min} && ${value} <= ${max})`;\n  },\n};\n\nOperators['array'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER_ARRAY;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 2);\n    assertArgsMaxCount(args, 4);\n    assertNumbers(args);\n    const parsedArgs = args.map(function (val) {\n      return expressionToGlsl(context, val);\n    });\n    return `vec${args.length}(${parsedArgs.join(', ')})`;\n  },\n};\n\nOperators['color'] = {\n  getReturnType: function () {\n    return ValueTypes.COLOR;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 3);\n    assertArgsMaxCount(args, 4);\n    assertNumbers(args);\n    const parsedArgs = args\n      .slice(0, 3)\n      .map((val) => `${expressionToGlsl(context, val)} / 255.0`);\n    if (args.length === 3) {\n      return `vec4(${parsedArgs.join(', ')}, 1.0)`;\n    }\n    const alpha = expressionToGlsl(context, args[3]);\n    return `(${alpha} * vec4(${parsedArgs.join(', ')}, 1.0))`;\n  },\n};\n\nOperators['interpolate'] = {\n  getReturnType: function (args) {\n    let type = ValueTypes.COLOR | ValueTypes.NUMBER;\n    for (let i = 3; i < args.length; i += 2) {\n      type = type & getValueType(args[i]);\n    }\n    return type;\n  },\n  toGlsl: function (context, args, expectedType) {\n    assertArgsEven(args);\n    assertArgsMinCount(args, 6);\n\n    // validate interpolation type\n    const type = args[0];\n    let interpolation;\n    switch (type[0]) {\n      case 'linear':\n        interpolation = 1;\n        break;\n      case 'exponential':\n        interpolation = type[1];\n        break;\n      default:\n        interpolation = null;\n    }\n    if (!interpolation) {\n      throw new Error(\n        `Invalid interpolation type for \"interpolate\" operator, received: ${JSON.stringify(\n          type\n        )}`\n      );\n    }\n\n    // compute input/output types\n    const inputType = ValueTypes.NUMBER;\n    const outputType =\n      Operators['interpolate'].getReturnType(args) & expectedType;\n    assertSingleType(['interpolate', ...args], outputType, 'output');\n\n    const input = expressionToGlsl(context, args[1], inputType);\n    const exponent = numberToGlsl(interpolation);\n\n    let result = '';\n    for (let i = 2; i < args.length - 2; i += 2) {\n      const stop1 = expressionToGlsl(context, args[i], inputType);\n      const output1 =\n        result || expressionToGlsl(context, args[i + 1], outputType);\n      const stop2 = expressionToGlsl(context, args[i + 2], inputType);\n      const output2 = expressionToGlsl(context, args[i + 3], outputType);\n      let ratio;\n      if (interpolation === 1) {\n        ratio = `(${input} - ${stop1}) / (${stop2} - ${stop1})`;\n      } else {\n        ratio = `(pow(${exponent}, (${input} - ${stop1})) - 1.0) / (pow(${exponent}, (${stop2} - ${stop1})) - 1.0)`;\n      }\n      result = `mix(${output1}, ${output2}, clamp(${ratio}, 0.0, 1.0))`;\n    }\n    return result;\n  },\n};\n\nOperators['match'] = {\n  getReturnType: function (args) {\n    let type = ValueTypes.ANY;\n    for (let i = 2; i < args.length; i += 2) {\n      type = type & getValueType(args[i]);\n    }\n    type = type & getValueType(args[args.length - 1]);\n    return type;\n  },\n  toGlsl: function (context, args, expectedType) {\n    assertArgsEven(args);\n    assertArgsMinCount(args, 4);\n\n    let inputType = getValueType(args[0]);\n    for (let i = 1; i < args.length - 1; i += 2) {\n      inputType = inputType & getValueType(args[i]);\n    }\n    assertOfType(\n      ['match', ...args],\n      inputType,\n      ValueTypes.STRING | ValueTypes.NUMBER | ValueTypes.BOOLEAN,\n      'input'\n    );\n    inputType =\n      (ValueTypes.STRING | ValueTypes.NUMBER | ValueTypes.BOOLEAN) & inputType;\n\n    const outputType = Operators['match'].getReturnType(args) & expectedType;\n    assertSingleType(['match', ...args], outputType, 'output');\n\n    const input = expressionToGlsl(context, args[0], inputType);\n    const fallback = expressionToGlsl(\n      context,\n      args[args.length - 1],\n      outputType\n    );\n    let result = null;\n    for (let i = args.length - 3; i >= 1; i -= 2) {\n      const match = expressionToGlsl(context, args[i], inputType);\n      const output = expressionToGlsl(context, args[i + 1], outputType);\n      result = `(${input} == ${match} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  },\n};\n\nOperators['case'] = {\n  getReturnType: function (args) {\n    let type = ValueTypes.ANY;\n    for (let i = 1; i < args.length; i += 2) {\n      type = type & getValueType(args[i]);\n    }\n    type = type & getValueType(args[args.length - 1]);\n    return type;\n  },\n  toGlsl: function (context, args, expectedType) {\n    assertArgsOdd(args);\n    assertArgsMinCount(args, 3);\n\n    const outputType = Operators['case'].getReturnType(args) & expectedType;\n    assertSingleType(['case', ...args], outputType, 'output');\n    for (let i = 0; i < args.length - 1; i += 2) {\n      assertBoolean(args[i]);\n    }\n\n    const fallback = expressionToGlsl(\n      context,\n      args[args.length - 1],\n      outputType\n    );\n    let result = null;\n    for (let i = args.length - 3; i >= 0; i -= 2) {\n      const condition = expressionToGlsl(context, args[i], ValueTypes.BOOLEAN);\n      const output = expressionToGlsl(context, args[i + 1], outputType);\n      result = `(${condition} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  },\n};\n\nOperators['in'] = {\n  getReturnType: function (args) {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    const needle = args[0];\n    let haystack = args[1];\n    if (!Array.isArray(haystack)) {\n      throw new Error(\n        `The \"in\" operator expects an array literal as its second argument.`\n      );\n    }\n    if (typeof haystack[0] === 'string') {\n      if (haystack[0] !== 'literal') {\n        throw new Error(\n          `For the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions.`\n        );\n      }\n      if (!Array.isArray(haystack[1])) {\n        throw new Error(\n          `The \"in\" operator was provided a literal value which was not an array as second argument.`\n        );\n      }\n      haystack = haystack[1];\n    }\n\n    let inputType = getValueType(needle);\n    for (let i = 0; i < haystack.length - 1; i += 1) {\n      inputType = inputType & getValueType(haystack[i]);\n    }\n    assertOfType(\n      ['match', ...args],\n      inputType,\n      ValueTypes.STRING | ValueTypes.NUMBER | ValueTypes.BOOLEAN,\n      'input'\n    );\n    inputType =\n      (ValueTypes.STRING | ValueTypes.NUMBER | ValueTypes.BOOLEAN) & inputType;\n\n    const funcName = computeOperatorFunctionName('in', context);\n    const tests = [];\n    for (let i = 0; i < haystack.length; i += 1) {\n      tests.push(\n        `  if (inputValue == ${expressionToGlsl(\n          context,\n          haystack[i],\n          inputType\n        )}) { return true; }`\n      );\n    }\n    context.functions[funcName] = `bool ${funcName}(float inputValue) {\n${tests.join('\\n')}\n  return false;\n}`;\n    return `${funcName}(${expressionToGlsl(context, needle, inputType)})`;\n  },\n};\n","/**\n * @module ol/style/flat\n */\n\nimport Circle from '../style/Circle.js';\nimport Fill from './Fill.js';\nimport Icon from './Icon.js';\nimport RegularShape from './RegularShape.js';\nimport Stroke from './Stroke.js';\nimport Style from './Style.js';\nimport Text from './Text.js';\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [stroke-color] The stroke color.\n * @property {number} [stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [stroke-line-dash] Line dash pattern.\n * @property {number} [stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [stroke-miter-limit=10] Miter limit.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {string|Array<string>} [text-value] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `'text-placement': 'line'` or the immediate rendering API.\n * @property {string} [text-font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./Text.js\").TextPlacement} [text-placement='point'] Text placement.\n * @property {number} [text-repeat] Repeat interval in pixels. When set, the text will be repeated at this interval. Only available when\n * `text-placement` is set to `'line'`. Overrides `text-align`.\n * @property {number|import(\"../size.js\").Size} [text-scale] Scale.\n * @property {boolean} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {number} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {CanvasTextAlign} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `'text-placement': 'point'`. For `'text-placement': 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {import('./Text.js').TextJustify} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `'text-placement': 'line'`.\n * @property {CanvasTextBaseline} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {Array<number>} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-fill-color] The fill color. Specify `'none'` to avoid hit detection on the fill.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-stroke-line-dash] Line dash pattern.\n * @property {number} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-stroke-width] Stroke pixel width.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-background-stroke-line-dash] Line dash pattern.\n * @property {number} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-background-stroke-width] Stroke pixel width.\n */\n\n/**\n * Icon style properties applied to point features.  One of `icon-src` or `icon-img` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {HTMLImageElement|HTMLCanvasElement} [icon-img] Image object for the icon. If the `icon-src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `icon-img-size` option.\n * @property {import(\"../size.js\").Size} [icon-img-size] Image size in pixels. Only required if `icon-img` is set and `icon-src` is not.\n * The provided size needs to match the actual size of the image.\n * @property {Array<number>} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [icon-opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [icon-scale=1] Scale.\n * @property {number} [icon-width] Width of the icon. If not specified, the actual image width will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-height] Height of the icon. If not specified, the actual image height will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-stroke-color] The stroke color.\n * @property {number} [shape-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [shape-stroke-line-dash] Line dash pattern.\n * @property {number} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [shape-displacement=[0,0]] Displacement of the shape\n * @property {number} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-stroke-color] The stroke color.\n * @property {number} [circle-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [circle-stroke-line-dash] Line dash pattern.\n * @property {number} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [circle-stroke-miter-limit=10] Miter limit.\n * @property {Array<number>} [circle-displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {number} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @return {import(\"./Style.js\").default} A style instance.\n */\nexport function toStyle(flatStyle) {\n  const style = new Style({\n    fill: getFill(flatStyle, ''),\n    stroke: getStroke(flatStyle, ''),\n    text: getText(flatStyle),\n    image: getImage(flatStyle),\n  });\n\n  return style;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Fill|null|undefined} The fill (if any).\n */\nfunction getFill(flatStyle, prefix) {\n  const color = flatStyle[prefix + 'fill-color'];\n  if (!color) {\n    return;\n  }\n  if (color === 'none') {\n    return null;\n  }\n\n  return new Fill({color: color});\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Stroke|undefined} The stroke (if any).\n */\nfunction getStroke(flatStyle, prefix) {\n  const width = flatStyle[prefix + 'stroke-width'];\n  const color = flatStyle[prefix + 'stroke-color'];\n  if (!width && !color) {\n    return;\n  }\n\n  return new Stroke({\n    width: width,\n    color: color,\n    lineCap: flatStyle[prefix + 'stroke-line-cap'],\n    lineJoin: flatStyle[prefix + 'stroke-line-join'],\n    lineDash: flatStyle[prefix + 'stroke-line-dash'],\n    lineDashOffset: flatStyle[prefix + 'stroke-line-dash-offset'],\n    miterLimit: flatStyle[prefix + 'stroke-miter-limit'],\n  });\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {Text|undefined} The text (if any).\n */\nfunction getText(flatStyle) {\n  const value = flatStyle['text-value'];\n  if (!value) {\n    return;\n  }\n\n  const text = new Text({\n    text: value,\n    font: flatStyle['text-font'],\n    maxAngle: flatStyle['text-max-angle'],\n    offsetX: flatStyle['text-offset-x'],\n    offsetY: flatStyle['text-offset-y'],\n    overflow: flatStyle['text-overflow'],\n    placement: flatStyle['text-placement'],\n    repeat: flatStyle['text-repeat'],\n    scale: flatStyle['text-scale'],\n    rotateWithView: flatStyle['text-rotate-with-view'],\n    rotation: flatStyle['text-rotation'],\n    textAlign: flatStyle['text-align'],\n    justify: flatStyle['text-justify'],\n    textBaseline: flatStyle['text-baseline'],\n    padding: flatStyle['text-padding'],\n    fill: getFill(flatStyle, 'text-'),\n    backgroundFill: getFill(flatStyle, 'text-background-'),\n    stroke: getStroke(flatStyle, 'text-'),\n    backgroundStroke: getStroke(flatStyle, 'text-background-'),\n  });\n\n  return text;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {import(\"./Image.js\").default|undefined} The image (if any).\n */\nfunction getImage(flatStyle) {\n  const iconSrc = flatStyle['icon-src'];\n  const iconImg = flatStyle['icon-img'];\n  if (iconSrc || iconImg) {\n    const icon = new Icon({\n      src: iconSrc,\n      img: iconImg,\n      imgSize: flatStyle['icon-img-size'],\n      anchor: flatStyle['icon-anchor'],\n      anchorOrigin: flatStyle['icon-anchor-origin'],\n      anchorXUnits: flatStyle['icon-anchor-x-units'],\n      anchorYUnits: flatStyle['icon-anchor-y-units'],\n      color: flatStyle['icon-color'],\n      crossOrigin: flatStyle['icon-cross-origin'],\n      offset: flatStyle['icon-offset'],\n      displacement: flatStyle['icon-displacement'],\n      opacity: flatStyle['icon-opacity'],\n      scale: flatStyle['icon-scale'],\n      width: flatStyle['icon-width'],\n      height: flatStyle['icon-height'],\n      rotation: flatStyle['icon-rotation'],\n      rotateWithView: flatStyle['icon-rotate-with-view'],\n      size: flatStyle['icon-size'],\n      declutterMode: flatStyle['icon-declutter-mode'],\n    });\n    return icon;\n  }\n\n  const shapePoints = flatStyle['shape-points'];\n  if (shapePoints) {\n    const prefix = 'shape-';\n    const shape = new RegularShape({\n      points: shapePoints,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      radius: flatStyle['shape-radius'],\n      radius1: flatStyle['shape-radius1'],\n      radius2: flatStyle['shape-radius2'],\n      angle: flatStyle['shape-angle'],\n      displacement: flatStyle['shape-displacement'],\n      rotation: flatStyle['shape-rotation'],\n      rotateWithView: flatStyle['shape-rotate-with-view'],\n      scale: flatStyle['shape-scale'],\n      declutterMode: flatStyle['shape-declutter-mode'],\n    });\n\n    return shape;\n  }\n\n  const circleRadius = flatStyle['circle-radius'];\n  if (circleRadius) {\n    const prefix = 'circle-';\n    const circle = new Circle({\n      radius: circleRadius,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      displacement: flatStyle['circle-displacement'],\n      scale: flatStyle['circle-scale'],\n      rotation: flatStyle['circle-rotation'],\n      rotateWithView: flatStyle['circle-rotate-with-view'],\n      declutterMode: flatStyle['circle-declutter-mode'],\n    });\n\n    return circle;\n  }\n\n  return;\n}\n\n/**\n * @return {import('./flat.js').FlatStyle} The default flat style.\n */\nexport function createDefaultStyle() {\n  return {\n    'fill-color': 'rgba(255,255,255,0.4)',\n    'stroke-color': '#3399CC',\n    'stroke-width': 1.25,\n    'circle-radius': 5,\n    'circle-fill-color': 'rgba(255,255,255,0.4)',\n    'circle-stroke-width': 1.25,\n    'circle-stroke-color': '#3399CC',\n  };\n}\n","/**\n * @module ol/structs/LinkedList\n */\n\n/**\n * @typedef {Object} Item\n * @property {Item} [prev] Previous.\n * @property {Item} [next] Next.\n * @property {?} data Data.\n */\n\n/**\n * @classdesc\n * Creates an empty linked list structure.\n */\nclass LinkedList {\n  /**\n   * @param {boolean} [circular] The last item is connected to the first one,\n   * and the first item to the last one. Default is true.\n   */\n  constructor(circular) {\n    /**\n     * @private\n     * @type {Item|undefined}\n     */\n    this.first_;\n\n    /**\n     * @private\n     * @type {Item|undefined}\n     */\n    this.last_;\n\n    /**\n     * @private\n     * @type {Item|undefined}\n     */\n    this.head_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.circular_ = circular === undefined ? true : circular;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.length_ = 0;\n  }\n\n  /**\n   * Inserts an item into the linked list right after the current one.\n   *\n   * @param {?} data Item data.\n   */\n  insertItem(data) {\n    /** @type {Item} */\n    const item = {\n      prev: undefined,\n      next: undefined,\n      data: data,\n    };\n\n    const head = this.head_;\n\n    //Initialize the list.\n    if (!head) {\n      this.first_ = item;\n      this.last_ = item;\n      if (this.circular_) {\n        item.next = item;\n        item.prev = item;\n      }\n    } else {\n      //Link the new item to the adjacent ones.\n      const next = head.next;\n      item.prev = head;\n      item.next = next;\n      head.next = item;\n      if (next) {\n        next.prev = item;\n      }\n\n      if (head === this.last_) {\n        this.last_ = item;\n      }\n    }\n    this.head_ = item;\n    this.length_++;\n  }\n\n  /**\n   * Removes the current item from the list. Sets the cursor to the next item,\n   * if possible.\n   */\n  removeItem() {\n    const head = this.head_;\n    if (head) {\n      const next = head.next;\n      const prev = head.prev;\n      if (next) {\n        next.prev = prev;\n      }\n      if (prev) {\n        prev.next = next;\n      }\n      this.head_ = next || prev;\n\n      if (this.first_ === this.last_) {\n        this.head_ = undefined;\n        this.first_ = undefined;\n        this.last_ = undefined;\n      } else if (this.first_ === head) {\n        this.first_ = this.head_;\n      } else if (this.last_ === head) {\n        this.last_ = prev ? this.head_.prev : this.head_;\n      }\n      this.length_--;\n    }\n  }\n\n  /**\n   * Sets the cursor to the first item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  firstItem() {\n    this.head_ = this.first_;\n    if (this.head_) {\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the cursor to the last item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  lastItem() {\n    this.head_ = this.last_;\n    if (this.head_) {\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the cursor to the next item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  nextItem() {\n    if (this.head_ && this.head_.next) {\n      this.head_ = this.head_.next;\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the next item's data without moving the cursor.\n   *\n   * @return {?} Item data.\n   */\n  getNextItem() {\n    if (this.head_ && this.head_.next) {\n      return this.head_.next.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the cursor to the previous item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  prevItem() {\n    if (this.head_ && this.head_.prev) {\n      this.head_ = this.head_.prev;\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the previous item's data without moving the cursor.\n   *\n   * @return {?} Item data.\n   */\n  getPrevItem() {\n    if (this.head_ && this.head_.prev) {\n      return this.head_.prev.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the current item's data.\n   *\n   * @return {?} Item data.\n   */\n  getCurrItem() {\n    if (this.head_) {\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the first item of the list. This only works for circular lists, and sets\n   * the last item accordingly.\n   */\n  setFirstItem() {\n    if (this.circular_ && this.head_) {\n      this.first_ = this.head_;\n      this.last_ = this.head_.prev;\n    }\n  }\n\n  /**\n   * Concatenates two lists.\n   * @param {LinkedList} list List to merge into the current list.\n   */\n  concat(list) {\n    if (list.head_) {\n      if (this.head_) {\n        const end = this.head_.next;\n        this.head_.next = list.first_;\n        list.first_.prev = this.head_;\n        end.prev = list.last_;\n        list.last_.next = end;\n        this.length_ += list.length_;\n      } else {\n        this.head_ = list.head_;\n        this.first_ = list.first_;\n        this.last_ = list.last_;\n        this.length_ = list.length_;\n      }\n      list.head_ = undefined;\n      list.first_ = undefined;\n      list.last_ = undefined;\n      list.length_ = 0;\n    }\n  }\n\n  /**\n   * Returns the current length of the list.\n   *\n   * @return {number} Length.\n   */\n  getLength() {\n    return this.length_;\n  }\n}\n\nexport default LinkedList;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    let render =\n      (replayGroup && !replayGroup.isEmpty()) ||\n      (declutterExecutorGroup && !declutterExecutorGroup.isEmpty());\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/renderer/canvas/VectorImageLayer\n */\nimport CanvasImageLayerRenderer from './ImageLayer.js';\nimport CanvasVectorLayerRenderer from './VectorLayer.js';\nimport EventType from '../../events/EventType.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport ImageState from '../../ImageState.js';\nimport RBush from 'rbush';\nimport ViewHint from '../../ViewHint.js';\nimport {apply, compose, create} from '../../transform.js';\nimport {getHeight, getWidth, isEmpty, scaleFromCenter} from '../../extent.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasVectorImageLayerRenderer extends CanvasImageLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorImage.js\").default} layer Vector image layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = new CanvasVectorLayerRenderer(layer);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.layerImageRatio_ = layer.getImageRatio();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToVectorPixelTransform_ = create();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.vectorRenderer_.dispose();\n    super.disposeInternal();\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.vectorRenderer_) {\n      return Promise.resolve([]);\n    }\n    const vectorPixel = apply(\n      this.coordinateToVectorPixelTransform_,\n      apply(this.renderedPixelToCoordinateTransform_, pixel.slice())\n    );\n    return this.vectorRenderer_.getFeatures(vectorPixel);\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    this.vectorRenderer_.handleFontsChanged();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const hints = frameState.viewHints;\n    const vectorRenderer = this.vectorRenderer_;\n    let renderedExtent = frameState.extent;\n    if (this.layerImageRatio_ !== 1) {\n      renderedExtent = renderedExtent.slice(0);\n      scaleFromCenter(renderedExtent, this.layerImageRatio_);\n    }\n    const width = getWidth(renderedExtent) / viewResolution;\n    const height = getHeight(renderedExtent) / viewResolution;\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      vectorRenderer.useContainer(null, null);\n      const context = vectorRenderer.context;\n      const layerState = frameState.layerStatesArray[frameState.layerIndex];\n      const imageLayerState = Object.assign({}, layerState, {opacity: 1});\n      const imageFrameState = /** @type {import(\"../../Map.js\").FrameState} */ (\n        Object.assign({}, frameState, {\n          declutterTree: new RBush(9),\n          extent: renderedExtent,\n          size: [width, height],\n          viewState: /** @type {import(\"../../View.js\").State} */ (\n            Object.assign({}, frameState.viewState, {\n              rotation: 0,\n            })\n          ),\n          layerStatesArray: [imageLayerState],\n          layerIndex: 0,\n        })\n      );\n      let emptyImage = true;\n      const image = new ImageCanvas(\n        renderedExtent,\n        viewResolution,\n        pixelRatio,\n        context.canvas,\n        function (callback) {\n          if (\n            vectorRenderer.prepareFrame(imageFrameState) &&\n            vectorRenderer.replayGroupChanged\n          ) {\n            vectorRenderer.clipping = false;\n            if (vectorRenderer.renderFrame(imageFrameState, null)) {\n              vectorRenderer.renderDeclutter(imageFrameState);\n              emptyImage = false;\n            }\n            callback();\n          }\n        }\n      );\n\n      image.addEventListener(EventType.CHANGE, () => {\n        if (image.getState() !== ImageState.LOADED) {\n          return;\n        }\n        this.image_ = emptyImage ? null : image;\n        const imageResolution = image.getResolution();\n        const imagePixelRatio = image.getPixelRatio();\n        const renderedResolution =\n          (imageResolution * pixelRatio) / imagePixelRatio;\n        this.renderedResolution = renderedResolution;\n        this.coordinateToVectorPixelTransform_ = compose(\n          this.coordinateToVectorPixelTransform_,\n          width / 2,\n          height / 2,\n          1 / renderedResolution,\n          -1 / renderedResolution,\n          0,\n          -viewState.center[0],\n          -viewState.center[1]\n        );\n      });\n      image.load();\n    }\n\n    if (this.image_) {\n      this.renderedPixelToCoordinateTransform_ =\n        frameState.pixelToCoordinateTransform.slice();\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   */\n  preRender() {}\n\n  /**\n   */\n  postRender() {}\n\n  /**\n   */\n  renderDeclutter() {}\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(\n        coordinate,\n        frameState,\n        hitTolerance,\n        callback,\n        matches\n      );\n    }\n    return super.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      callback,\n      matches\n    );\n  }\n}\n\nexport default CanvasVectorImageLayerRenderer;\n","/**\n * @module ol/geom/Circle\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `layout` and no\n   *     `radius` are also accepted.\n   * @param {number} [radius] Radius in units of the projection.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(center, radius, layout) {\n    super();\n    if (layout !== undefined && radius === undefined) {\n      this.setFlatCoordinates(layout, center);\n    } else {\n      radius = radius ? radius : 0;\n      this.setCenterAndRadius(center, radius, layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Circle';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, layout) {\n    this.setLayout(layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  getCoordinates() {\n    return null;\n  }\n\n  setCoordinates(coordinates, layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center)\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [geometries] Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries ? geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      let thisLayout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          thisLayout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout = thisLayout;\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|Array<Array<number>>}\n     */\n    this.ends_ = ends;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<number>} */ (this.ends_),\n        2,\n        flatCenter,\n        0\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2,\n        flatCenters\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return 2;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {import(\"../geom/Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_\n      );\n    }\n  }\n  /**\n   * @return {Array<number>|Array<Array<number>>} Ends or endss.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n}\n\nRenderFeature.prototype.getEndss = RenderFeature.prototype.getEnds;\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds())\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = /** @type {Array<number>} */ (renderFeature.getEnds());\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/proj/proj4\n */\nimport Projection from './Projection.js';\nimport {\n  addCoordinateTransforms,\n  addEquivalentProjections,\n  addProjection,\n  createSafeCoordinateTransform,\n  get,\n} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\n\n/**\n * @type {import(\"proj4\")|null}\n */\nlet registered = null;\n\n/**\n * @return {boolean} Proj4 has been registered.\n */\nexport function isRegistered() {\n  return !!registered;\n}\n\n/**\n * Unsets the shared proj4 previously set with register.\n */\nexport function unregister() {\n  registered = null;\n}\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers. Requires proj4 >= 2.8.0.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {import(\"proj4\")} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  registered = proj4;\n\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      let units = /** @type {import(\"./Units.js\").Units} */ (def.units);\n      if (!units && def.projName === 'longlat') {\n        units = 'degrees';\n      }\n      addProjection(\n        new Projection({\n          code: code,\n          axisOrientation: def.axis,\n          metersPerUnit: def.to_meter,\n          units,\n        })\n      );\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(\n            proj1,\n            proj2,\n            createSafeCoordinateTransform(proj1, proj2, transform.forward),\n            createSafeCoordinateTransform(proj2, proj1, transform.inverse)\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {number} code The EPSG code.\n * @return {Promise<string>} The proj4 definition.\n */\nlet epsgLookup = async function (code) {\n  const response = await fetch(`https://epsg.io/${code}.proj4`);\n  if (!response.ok) {\n    throw new Error(`Unexpected response from epsg.io: ${response.status}`);\n  }\n  return response.text();\n};\n\n/**\n * Set the lookup function for getting proj4 definitions given an EPSG code.\n * By default, the {@link module:ol/proj/proj4.fromEPSGCode} function uses the\n * epsg.io website for proj4 definitions.  This can be changed by providing a\n * different lookup function.\n *\n * @param {function(number):Promise<string>} func The lookup function.\n * @api\n */\nexport function setEPSGLookup(func) {\n  epsgLookup = func;\n}\n\n/**\n * Get the current EPSG lookup function.\n *\n * @return {function(number):Promise<string>} The EPSG lookup function.\n */\nexport function getEPSGLookup() {\n  return epsgLookup;\n}\n\n/**\n * Get a projection from an EPSG code.  This function fetches the projection\n * definition from the epsg.io website, registers this definition for use with\n * proj4, and returns a configured projection.  You must call import proj4 and\n * call {@link module:ol/proj/proj4.register} before using this function.\n *\n * If the projection definition is already registered with proj4, it will not\n * be fetched again (so it is ok to call this function multiple times with the\n * same code).\n *\n * @param {number|string} code The EPSG code (e.g. 4326 or 'EPSG:4326').\n * @return {Promise<Projection>} The projection.\n * @api\n */\nexport async function fromEPSGCode(code) {\n  if (typeof code === 'string') {\n    code = parseInt(code.split(':').pop(), 10);\n  }\n\n  const proj4 = registered;\n  if (!proj4) {\n    throw new Error('Proj4 must be registered first with register(proj4)');\n  }\n\n  const epsgCode = 'EPSG:' + code;\n  if (proj4.defs(epsgCode)) {\n    return get(epsgCode);\n  }\n\n  proj4.defs(epsgCode, await epsgLookup(code));\n  register(proj4);\n\n  return get(epsgCode);\n}\n\n/**\n * Generate an EPSG lookup function which uses the MapTiler Coordinates API to find projection\n * definitions which do not require proj4 to be configured to handle `+nadgrids` parameters.\n * Call {@link module:ol/proj/proj4.setEPSGLookup} use the function for lookups\n * `setEPSGLookup(epsgLookupMapTiler('{YOUR_MAPTILER_API_KEY_HERE}'))`.\n *\n * @param {string} key MapTiler API key.  Get your own API key at https://www.maptiler.com/cloud/.\n * @return {function(number):Promise<string>} The EPSG lookup function.\n * @api\n */\nexport function epsgLookupMapTiler(key) {\n  return async function (code) {\n    const response = await fetch(\n      `https://api.maptiler.com/coordinates/search/code:${code}.json?transformations=true&exports=true&key=${key}`\n    );\n    if (!response.ok) {\n      throw new Error(\n        `Unexpected response from maptiler.com: ${response.status}`\n      );\n    }\n    return response.json().then((json) => {\n      const results = json['results'];\n      if (results?.length > 0) {\n        const result = results.filter(\n          (r) => r['id']?.['authority'] === 'EPSG' && r['id']?.['code'] === code\n        )[0];\n        if (result) {\n          const transforms = result['transformations'];\n          if (transforms?.length > 0) {\n            // use default transform if it does not require grids\n            const defaultTransform = result['default_transformation'];\n            if (\n              transforms.filter(\n                (t) =>\n                  t['id']?.['authority'] === defaultTransform?.['authority'] &&\n                  t['id']?.['code'] === defaultTransform?.['code'] &&\n                  t['grids']?.length === 0\n              ).length > 0\n            ) {\n              return result['exports']?.['proj4'];\n            }\n            // otherwise use most accurate alternative without grids\n            const transform = transforms\n              .filter(\n                (t) =>\n                  t['grids']?.length === 0 &&\n                  t['target_crs']?.['authority'] === 'EPSG' &&\n                  t['target_crs']?.['code'] === 4326 &&\n                  t['deprecated'] === false &&\n                  t['usable'] === true\n              )\n              .sort((t1, t2) => t1['accuracy'] - t2['accuracy'])[0]?.[\n              'exports'\n            ]?.['proj4'];\n            if (transform) {\n              return transform;\n            }\n          }\n          // fallback to default\n          return result['exports']?.['proj4'];\n        }\n      }\n    });\n  };\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {toStyle} from '../style/flat.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleLike|null}\n     */\n    let styleLike;\n\n    if (style === undefined) {\n      styleLike = createDefaultStyle;\n    } else if (style === null) {\n      styleLike = null;\n    } else if (typeof style === 'function') {\n      styleLike = style;\n    } else if (style instanceof Style) {\n      styleLike = style;\n    } else if (Array.isArray(style)) {\n      const len = style.length;\n\n      /**\n       * @type {Array<Style>}\n       */\n      const styles = new Array(len);\n\n      for (let i = 0; i < len; ++i) {\n        const s = style[i];\n        if (s instanceof Style) {\n          styles[i] = s;\n        } else {\n          styles[i] = toStyle(s);\n        }\n      }\n      styleLike = styles;\n    } else {\n      styleLike = toStyle(style);\n    }\n\n    this.style_ = styleLike;\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/geom/flat/geodesic\n */\nimport {get as getProjection, getTransform} from '../../proj.js';\nimport {squaredSegmentDistance, toDegrees, toRadians} from '../../math.js';\n\n/**\n * @param {function(number): import(\"../../coordinate.js\").Coordinate} interpolate Interpolate function.\n * @param {import(\"../../proj.js\").TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n  // FIXME reduce garbage generation\n  // FIXME optimize stack operations\n\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n\n  let geoA = interpolate(0);\n  let geoB = interpolate(1);\n\n  let a = transform(geoA);\n  let b = transform(geoB);\n\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const geoStack = [geoB, geoA];\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const stack = [b, a];\n  /** @type {Array<number>} */\n  const fractionStack = [1, 0];\n\n  /** @type {!Object<string, boolean>} */\n  const fractions = {};\n\n  let maxIterations = 1e5;\n  let geoM, m, fracA, fracB, fracM, key;\n\n  while (--maxIterations > 0 && fractionStack.length > 0) {\n    // Pop the a coordinate off the stack\n    fracA = fractionStack.pop();\n    geoA = geoStack.pop();\n    a = stack.pop();\n    // Add the a coordinate if it has not been added yet\n    key = fracA.toString();\n    if (!(key in fractions)) {\n      flatCoordinates.push(a[0], a[1]);\n      fractions[key] = true;\n    }\n    // Pop the b coordinate off the stack\n    fracB = fractionStack.pop();\n    geoB = geoStack.pop();\n    b = stack.pop();\n    // Find the m point between the a and b coordinates\n    fracM = (fracA + fracB) / 2;\n    geoM = interpolate(fracM);\n    m = transform(geoM);\n    if (\n      squaredSegmentDistance(m[0], m[1], a[0], a[1], b[0], b[1]) <\n      squaredTolerance\n    ) {\n      // If the m point is sufficiently close to the straight line, then we\n      // discard it.  Just use the b coordinate and move on to the next line\n      // segment.\n      flatCoordinates.push(b[0], b[1]);\n      key = fracB.toString();\n      fractions[key] = true;\n    } else {\n      // Otherwise, we need to subdivide the current line segment.  Split it\n      // into two and push the two line segments onto the stack.\n      fractionStack.push(fracB, fracM, fracM, fracA);\n      stack.push(b, m, m, a);\n      geoStack.push(geoB, geoM, geoM, geoA);\n    }\n  }\n\n  return flatCoordinates;\n}\n\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function greatCircleArc(\n  lon1,\n  lat1,\n  lon2,\n  lat2,\n  projection,\n  squaredTolerance\n) {\n  const geoProjection = getProjection('EPSG:4326');\n\n  const cosLat1 = Math.cos(toRadians(lat1));\n  const sinLat1 = Math.sin(toRadians(lat1));\n  const cosLat2 = Math.cos(toRadians(lat2));\n  const sinLat2 = Math.sin(toRadians(lat2));\n  const cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n  const sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n  const d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      if (1 <= d) {\n        return [lon2, lat2];\n      }\n      const D = frac * Math.acos(d);\n      const cosD = Math.cos(D);\n      const sinD = Math.sin(D);\n      const y = sinDeltaLon * cosLat2;\n      const x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n      const theta = Math.atan2(y, x);\n      const lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n      const lon =\n        toRadians(lon1) +\n        Math.atan2(\n          Math.sin(theta) * sinD * cosLat1,\n          cosD - sinLat1 * Math.sin(lat)\n        );\n      return [toDegrees(lon), toDegrees(lat)];\n    },\n    getTransform(geoProjection, projection),\n    squaredTolerance\n  );\n}\n\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon, lat1 + (lat2 - lat1) * frac];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance\n  );\n}\n\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon1 + (lon2 - lon1) * frac, lat];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance\n  );\n}\n","/**\n * @module ol/layer/Graticule\n */\nimport Collection from '../Collection.js';\nimport EventType from '../render/EventType.js';\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport VectorLayer from './Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  applyTransform,\n  approximatelyEquals,\n  containsCoordinate,\n  containsExtent,\n  equals,\n  getCenter,\n  getIntersection,\n  getWidth,\n  intersects,\n  isEmpty,\n  wrapX as wrapExtentX,\n} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {degreesToStringHDMS} from '../coordinate.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n} from '../proj.js';\nimport {getVectorContext} from '../render.js';\nimport {meridian, parallel} from '../geom/flat/geodesic.js';\n\n/**\n * @type {Stroke}\n * @private\n * @const\n */\nconst DEFAULT_STROKE_STYLE = new Stroke({\n  color: 'rgba(0,0,0,0.2)',\n});\n\n/**\n * @type {Array<number>}\n * @private\n */\nconst INTERVALS = [\n  90,\n  45,\n  30,\n  20,\n  10,\n  5,\n  2,\n  1,\n  30 / 60,\n  20 / 60,\n  10 / 60,\n  5 / 60,\n  2 / 60,\n  1 / 60,\n  30 / 3600,\n  20 / 3600,\n  10 / 3600,\n  5 / 3600,\n  2 / 3600,\n  1 / 3600,\n];\n\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {Point} geom Geometry.\n * @property {string} text Text.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {Stroke} [strokeStyle] The\n * stroke style to use for drawing the graticule. If not provided, the following stroke will be used:\n * ```js\n * new Stroke({\n *   color: 'rgba(0, 0, 0, 0.2)' // a not fully opaque black\n * });\n * ```\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n * @property {Array<number>} [intervals=[90, 45, 30, 20, 10, 5, 2, 1, 30/60, 20/60, 10/60, 5/60, 2/60, 1/60, 30/3600, 20/3600, 10/3600, 5/3600, 2/3600, 1/3600]]\n * Intervals (in degrees) for the graticule. Example to limit graticules to 30 and 10 degrees intervals:\n * ```js\n * [30, 10]\n * ```\n * @property {boolean} [wrapX=true] Whether to repeat the graticule horizontally.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer that renders a grid for a coordinate system (currently only EPSG:4326 is supported).\n * Note that the view projection must define both extent and worldExtent.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {VectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nclass Graticule extends VectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign(\n      {\n        updateWhileAnimating: true,\n        updateWhileInteracting: true,\n        renderBuffer: 0,\n      },\n      options\n    );\n\n    delete baseOptions.maxLines;\n    delete baseOptions.strokeStyle;\n    delete baseOptions.targetSize;\n    delete baseOptions.showLabels;\n    delete baseOptions.lonLabelFormatter;\n    delete baseOptions.latLabelFormatter;\n    delete baseOptions.lonLabelPosition;\n    delete baseOptions.latLabelPosition;\n    delete baseOptions.lonLabelStyle;\n    delete baseOptions.latLabelStyle;\n    delete baseOptions.intervals;\n    super(baseOptions);\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLat_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLon_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLat_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLon_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxX_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxY_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minX_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minY_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.targetSize_ =\n      options.targetSize !== undefined ? options.targetSize : 100;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.meridians_ = [];\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.parallels_ = [];\n\n    /**\n     * @type {Stroke}\n     * @private\n     */\n    this.strokeStyle_ =\n      options.strokeStyle !== undefined\n        ? options.strokeStyle\n        : DEFAULT_STROKE_STYLE;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.fromLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.toLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.projectionCenterLonLat_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomRight_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topRight_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.meridiansLabels_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.parallelsLabels_ = null;\n\n    if (options.showLabels) {\n      /**\n       * @type {null|function(number):string}\n       * @private\n       */\n      this.lonLabelFormatter_ =\n        options.lonLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'EW')\n          : options.lonLabelFormatter;\n\n      /**\n       * @type {function(number):string}\n       * @private\n       */\n      this.latLabelFormatter_ =\n        options.latLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'NS')\n          : options.latLabelFormatter;\n\n      /**\n       * Longitude label position in fractions (0..1) of view extent. 0 means\n       * bottom, 1 means top.\n       * @type {number}\n       * @private\n       */\n      this.lonLabelPosition_ =\n        options.lonLabelPosition == undefined ? 0 : options.lonLabelPosition;\n\n      /**\n       * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n       * means right.\n       * @type {number}\n       * @private\n       */\n      this.latLabelPosition_ =\n        options.latLabelPosition == undefined ? 1 : options.latLabelPosition;\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.lonLabelStyleBase_ = new Style({\n        text:\n          options.lonLabelStyle !== undefined\n            ? options.lonLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textBaseline: 'bottom',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.lonLabelStyle_ = (feature) => {\n        const label = feature.get('graticule_label');\n        this.lonLabelStyleBase_.getText().setText(label);\n        return this.lonLabelStyleBase_;\n      };\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.latLabelStyleBase_ = new Style({\n        text:\n          options.latLabelStyle !== undefined\n            ? options.latLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textAlign: 'right',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.latLabelStyle_ = (feature) => {\n        const label = feature.get('graticule_label');\n        this.latLabelStyleBase_.getText().setText(label);\n        return this.latLabelStyleBase_;\n      };\n\n      this.meridiansLabels_ = [];\n      this.parallelsLabels_ = [];\n\n      this.addEventListener(EventType.POSTRENDER, this.drawLabels_.bind(this));\n    }\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.intervals_ =\n      options.intervals !== undefined ? options.intervals : INTERVALS;\n\n    // use a source with a custom loader for lines & text\n    this.setSource(\n      new VectorSource({\n        loader: this.loaderFunction.bind(this),\n        strategy: this.strategyFunction.bind(this),\n        features: new Collection(),\n        overlaps: false,\n        useSpatialIndex: false,\n        wrapX: options.wrapX,\n      })\n    );\n\n    /**\n     * feature pool to use when updating graticule\n     * @type {Array<Feature>}\n     * @private\n     */\n    this.featurePool_ = [];\n\n    /**\n     * @type {Style}\n     * @private\n     */\n    this.lineStyle_ = new Style({\n      stroke: this.strokeStyle_,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.loadedExtent_ = null;\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.renderedResolution_ = null;\n\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Strategy function for loading features based on the view's extent and\n   * resolution.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @return {Array<import(\"../extent.js\").Extent>} Extents.\n   */\n  strategyFunction(extent, resolution) {\n    // extents may be passed in different worlds, to avoid endless loop we use only one\n    let realWorldExtent = extent.slice();\n    if (this.projection_ && this.getSource().getWrapX()) {\n      wrapExtentX(realWorldExtent, this.projection_);\n    }\n    if (this.loadedExtent_) {\n      if (\n        approximatelyEquals(this.loadedExtent_, realWorldExtent, resolution)\n      ) {\n        // make sure result is exactly equal to previous extent\n        realWorldExtent = this.loadedExtent_.slice();\n      } else {\n        // we should not keep track of loaded extents\n        this.getSource().removeLoadedExtent(this.loadedExtent_);\n      }\n    }\n    return [realWorldExtent];\n  }\n\n  /**\n   * Update geometries in the source based on current view\n   * @param {import(\"../extent\").Extent} extent Extent\n   * @param {number} resolution Resolution\n   * @param {import(\"../proj/Projection.js\").default} projection Projection\n   */\n  loaderFunction(extent, resolution, projection) {\n    this.loadedExtent_ = extent;\n    const source = this.getSource();\n\n    // only consider the intersection between our own extent & the requested one\n    const layerExtent = this.getExtent() || [\n      -Infinity,\n      -Infinity,\n      Infinity,\n      Infinity,\n    ];\n    const renderExtent = getIntersection(layerExtent, extent);\n\n    if (\n      this.renderedExtent_ &&\n      equals(this.renderedExtent_, renderExtent) &&\n      this.renderedResolution_ === resolution\n    ) {\n      return;\n    }\n    this.renderedExtent_ = renderExtent;\n    this.renderedResolution_ = resolution;\n\n    // bail out if nothing to render\n    if (isEmpty(renderExtent)) {\n      return;\n    }\n\n    // update projection info\n    const center = getCenter(renderExtent);\n    const squaredTolerance = (resolution * resolution) / 4;\n\n    const updateProjectionInfo =\n      !this.projection_ || !equivalentProjection(this.projection_, projection);\n\n    if (updateProjectionInfo) {\n      this.updateProjectionInfo_(projection);\n    }\n\n    this.createGraticule_(renderExtent, center, resolution, squaredTolerance);\n\n    // first make sure we have enough features in the pool\n    let featureCount = this.meridians_.length + this.parallels_.length;\n    if (this.meridiansLabels_) {\n      featureCount += this.meridians_.length;\n    }\n    if (this.parallelsLabels_) {\n      featureCount += this.parallels_.length;\n    }\n\n    let feature;\n    while (featureCount > this.featurePool_.length) {\n      feature = new Feature();\n      this.featurePool_.push(feature);\n    }\n\n    const featuresColl = source.getFeaturesCollection();\n    featuresColl.clear();\n    let poolIndex = 0;\n\n    // add features for the lines & labels\n    let i, l;\n    for (i = 0, l = this.meridians_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.meridians_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n    for (i = 0, l = this.parallels_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.parallels_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, index) {\n    const lineString = this.getMeridian_(\n      lon,\n      minLat,\n      maxLat,\n      squaredTolerance,\n      index\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.meridiansLabels_) {\n        const text = this.lonLabelFormatter_(lon);\n        if (index in this.meridiansLabels_) {\n          this.meridiansLabels_[index].text = text;\n        } else {\n          this.meridiansLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.meridians_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addParallel_(lat, minLon, maxLon, squaredTolerance, extent, index) {\n    const lineString = this.getParallel_(\n      lat,\n      minLon,\n      maxLon,\n      squaredTolerance,\n      index\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.parallelsLabels_) {\n        const text = this.latLabelFormatter_(lat);\n        if (index in this.parallelsLabels_) {\n          this.parallelsLabels_[index].text = text;\n        } else {\n          this.parallelsLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.parallels_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {import(\"../render/Event.js\").default} event Render event.\n   * @private\n   */\n  drawLabels_(event) {\n    const rotation = event.frameState.viewState.rotation;\n    const resolution = event.frameState.viewState.resolution;\n    const size = event.frameState.size;\n    const extent = event.frameState.extent;\n    const rotationCenter = getCenter(extent);\n    let rotationExtent = extent;\n    if (rotation) {\n      const unrotatedWidth = size[0] * resolution;\n      const unrotatedHeight = size[1] * resolution;\n      rotationExtent = [\n        rotationCenter[0] - unrotatedWidth / 2,\n        rotationCenter[1] - unrotatedHeight / 2,\n        rotationCenter[0] + unrotatedWidth / 2,\n        rotationCenter[1] + unrotatedHeight / 2,\n      ];\n    }\n\n    let startWorld = 0;\n    let endWorld = 0;\n    let labelsAtStart = this.latLabelPosition_ < 0.5;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      startWorld = Math.floor((extent[0] - projectionExtent[0]) / worldWidth);\n      endWorld = Math.ceil((extent[2] - projectionExtent[2]) / worldWidth);\n      const inverted = Math.abs(rotation) > Math.PI / 2;\n      labelsAtStart = labelsAtStart !== inverted;\n    }\n    const vectorContext = getVectorContext(event);\n\n    for (let world = startWorld; world <= endWorld; ++world) {\n      let poolIndex = this.meridians_.length + this.parallels_.length;\n      let feature, index, l, textPoint;\n\n      if (this.meridiansLabels_) {\n        for (index = 0, l = this.meridiansLabels_.length; index < l; ++index) {\n          const lineString = this.meridians_[index];\n          if (!rotation && world === 0) {\n            textPoint = this.getMeridianPoint_(lineString, extent, index);\n          } else {\n            const clone = lineString.clone();\n            clone.translate(world * worldWidth, 0);\n            clone.rotate(-rotation, rotationCenter);\n            textPoint = this.getMeridianPoint_(clone, rotationExtent, index);\n            textPoint.rotate(rotation, rotationCenter);\n          }\n          feature = this.featurePool_[poolIndex++];\n          feature.setGeometry(textPoint);\n          feature.set('graticule_label', this.meridiansLabels_[index].text);\n          vectorContext.drawFeature(feature, this.lonLabelStyle_(feature));\n        }\n      }\n      if (this.parallelsLabels_) {\n        if (\n          (world === startWorld && labelsAtStart) ||\n          (world === endWorld && !labelsAtStart)\n        ) {\n          for (index = 0, l = this.parallels_.length; index < l; ++index) {\n            const lineString = this.parallels_[index];\n            if (!rotation && world === 0) {\n              textPoint = this.getParallelPoint_(lineString, extent, index);\n            } else {\n              const clone = lineString.clone();\n              clone.translate(world * worldWidth, 0);\n              clone.rotate(-rotation, rotationCenter);\n              textPoint = this.getParallelPoint_(clone, rotationExtent, index);\n              textPoint.rotate(rotation, rotationCenter);\n            }\n            feature = this.featurePool_[poolIndex++];\n            feature.setGeometry(textPoint);\n            feature.set('graticule_label', this.parallelsLabels_[index].text);\n            vectorContext.drawFeature(feature, this.latLabelStyle_(feature));\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @private\n   */\n  createGraticule_(extent, center, resolution, squaredTolerance) {\n    const interval = this.getInterval_(resolution);\n    if (interval == -1) {\n      this.meridians_.length = 0;\n      this.parallels_.length = 0;\n      if (this.meridiansLabels_) {\n        this.meridiansLabels_.length = 0;\n      }\n      if (this.parallelsLabels_) {\n        this.parallelsLabels_.length = 0;\n      }\n      return;\n    }\n\n    let wrapX = false;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      if (getWidth(extent) >= worldWidth) {\n        extent[0] = projectionExtent[0];\n        extent[2] = projectionExtent[2];\n      } else {\n        wrapX = true;\n      }\n    }\n\n    // Constrain the center to fit into the extent available to the graticule\n\n    const validCenterP = [\n      clamp(center[0], this.minX_, this.maxX_),\n      clamp(center[1], this.minY_, this.maxY_),\n    ];\n\n    // Transform the center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    const centerLonLat = this.toLonLatTransform_(validCenterP);\n    if (isNaN(centerLonLat[1])) {\n      centerLonLat[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n    let centerLon = clamp(centerLonLat[0], this.minLon_, this.maxLon_);\n    let centerLat = clamp(centerLonLat[1], this.minLat_, this.maxLat_);\n    const maxLines = this.maxLines_;\n    let cnt, idx, lat, lon;\n\n    // Limit the extent to fit into the extent available to the graticule\n\n    let validExtentP = extent;\n    if (!wrapX) {\n      validExtentP = [\n        clamp(extent[0], this.minX_, this.maxX_),\n        clamp(extent[1], this.minY_, this.maxY_),\n        clamp(extent[2], this.minX_, this.maxX_),\n        clamp(extent[3], this.minY_, this.maxY_),\n      ];\n    }\n\n    // Transform the extent to get the lon lat ranges for the edges of the extent\n\n    const validExtent = applyTransform(\n      validExtentP,\n      this.toLonLatTransform_,\n      undefined,\n      8\n    );\n\n    let maxLat = validExtent[3];\n    let maxLon = validExtent[2];\n    let minLat = validExtent[1];\n    let minLon = validExtent[0];\n\n    if (!wrapX) {\n      // Check if extremities of the world extent lie inside the extent\n      // (for example the pole in a polar projection)\n      // and extend the extent as appropriate\n\n      if (containsCoordinate(validExtentP, this.bottomLeft_)) {\n        minLon = this.minLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.bottomRight_)) {\n        maxLon = this.maxLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topLeft_)) {\n        minLon = this.minLon_;\n        maxLat = this.maxLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topRight_)) {\n        maxLon = this.maxLon_;\n        maxLat = this.maxLat_;\n      }\n\n      // The transformed center may also extend the lon lat ranges used for rendering\n\n      maxLat = clamp(maxLat, centerLat, this.maxLat_);\n      maxLon = clamp(maxLon, centerLon, this.maxLon_);\n      minLat = clamp(minLat, this.minLat_, centerLat);\n      minLon = clamp(minLon, this.minLon_, centerLon);\n    }\n\n    // Create meridians\n\n    centerLon = Math.floor(centerLon / interval) * interval;\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon -= interval) >= minLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    } else {\n      while (lon != this.minLon_ && cnt++ < maxLines) {\n        lon = Math.max(lon - interval, this.minLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    }\n\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon += interval) <= maxLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    } else {\n      while (lon != this.maxLon_ && cnt++ < maxLines) {\n        lon = Math.min(lon + interval, this.maxLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    }\n\n    this.meridians_.length = idx;\n    if (this.meridiansLabels_) {\n      this.meridiansLabels_.length = idx;\n    }\n\n    // Create parallels\n\n    centerLat = Math.floor(centerLat / interval) * interval;\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    while (lat != this.minLat_ && cnt++ < maxLines) {\n      lat = Math.max(lat - interval, this.minLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx\n      );\n    }\n\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    cnt = 0;\n    while (lat != this.maxLat_ && cnt++ < maxLines) {\n      lat = Math.min(lat + interval, this.maxLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx\n      );\n    }\n\n    this.parallels_.length = idx;\n    if (this.parallelsLabels_) {\n      this.parallelsLabels_.length = idx;\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @return {number} The interval in degrees.\n   * @private\n   */\n  getInterval_(resolution) {\n    const centerLon = this.projectionCenterLonLat_[0];\n    const centerLat = this.projectionCenterLonLat_[1];\n    let interval = -1;\n    const target = Math.pow(this.targetSize_ * resolution, 2);\n    /** @type {Array<number>} **/\n    const p1 = [];\n    /** @type {Array<number>} **/\n    const p2 = [];\n    for (let i = 0, ii = this.intervals_.length; i < ii; ++i) {\n      const delta = clamp(this.intervals_[i] / 2, 0, 90);\n      // Don't attempt to transform latitudes beyond the poles!\n      const clampedLat = clamp(centerLat, -90 + delta, 90 - delta);\n      p1[0] = centerLon - delta;\n      p1[1] = clampedLat - delta;\n      p2[0] = centerLon + delta;\n      p2[1] = clampedLat + delta;\n      this.fromLonLatTransform_(p1, p1);\n      this.fromLonLatTransform_(p2, p2);\n      const dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n      if (dist <= target) {\n        break;\n      }\n      interval = this.intervals_[i];\n    }\n    return interval;\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The meridian line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getMeridian_(lon, minLat, maxLat, squaredTolerance, index) {\n    const flatCoordinates = meridian(\n      lon,\n      minLat,\n      maxLat,\n      this.projection_,\n      squaredTolerance\n    );\n    let lineString = this.meridians_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n      this.meridians_[index] = lineString;\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Meridian\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Meridian point.\n   * @private\n   */\n  getMeridianPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let bottom = 1;\n    let top = flatCoordinates.length - 1;\n    if (flatCoordinates[bottom] > flatCoordinates[top]) {\n      bottom = top;\n      top = 1;\n    }\n    const clampedBottom = Math.max(extent[1], flatCoordinates[bottom]);\n    const clampedTop = Math.min(extent[3], flatCoordinates[top]);\n    const lat = clamp(\n      extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\n      clampedBottom,\n      clampedTop\n    );\n    const coordinate0 =\n      flatCoordinates[bottom - 1] +\n      ((flatCoordinates[top - 1] - flatCoordinates[bottom - 1]) *\n        (lat - flatCoordinates[bottom])) /\n        (flatCoordinates[top] - flatCoordinates[bottom]);\n    const coordinate = [coordinate0, lat];\n    const point = this.meridiansLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of meridians.  Meridians are lines of equal longitude.\n   * @return {Array<LineString>} The meridians.\n   * @api\n   */\n  getMeridians() {\n    return this.meridians_;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The parallel line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getParallel_(lat, minLon, maxLon, squaredTolerance, index) {\n    const flatCoordinates = parallel(\n      lat,\n      minLon,\n      maxLon,\n      this.projection_,\n      squaredTolerance\n    );\n    let lineString = this.parallels_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Parallels.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Parallel point.\n   * @private\n   */\n  getParallelPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let left = 0;\n    let right = flatCoordinates.length - 2;\n    if (flatCoordinates[left] > flatCoordinates[right]) {\n      left = right;\n      right = 0;\n    }\n    const clampedLeft = Math.max(extent[0], flatCoordinates[left]);\n    const clampedRight = Math.min(extent[2], flatCoordinates[right]);\n    const lon = clamp(\n      extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\n      clampedLeft,\n      clampedRight\n    );\n    const coordinate1 =\n      flatCoordinates[left + 1] +\n      ((flatCoordinates[right + 1] - flatCoordinates[left + 1]) *\n        (lon - flatCoordinates[left])) /\n        (flatCoordinates[right] - flatCoordinates[left]);\n    const coordinate = [lon, coordinate1];\n    const point = this.parallelsLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of parallels.  Parallels are lines of equal latitude.\n   * @return {Array<LineString>} The parallels.\n   * @api\n   */\n  getParallels() {\n    return this.parallels_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateProjectionInfo_(projection) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const worldExtent = projection.getWorldExtent();\n\n    this.maxLat_ = worldExtent[3];\n    this.maxLon_ = worldExtent[2];\n    this.minLat_ = worldExtent[1];\n    this.minLon_ = worldExtent[0];\n\n    // If the world extent crosses the dateline define a custom transform to\n    // return longitudes which wrap the dateline\n\n    const toLonLatTransform = getTransform(projection, epsg4326Projection);\n    if (this.minLon_ < this.maxLon_) {\n      this.toLonLatTransform_ = toLonLatTransform;\n    } else {\n      const split = this.minLon_ + this.maxLon_ / 2;\n      this.maxLon_ += 360;\n      this.toLonLatTransform_ = function (coordinates, output, dimension) {\n        dimension = dimension || 2;\n        const lonLatCoordinates = toLonLatTransform(\n          coordinates,\n          output,\n          dimension\n        );\n        for (let i = 0, l = lonLatCoordinates.length; i < l; i += dimension) {\n          if (lonLatCoordinates[i] < split) {\n            lonLatCoordinates[i] += 360;\n          }\n        }\n        return lonLatCoordinates;\n      };\n    }\n\n    // Transform the extent to get the limits of the view projection extent\n    // which should be available to the graticule\n\n    this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n    const worldExtentP = applyTransform(\n      [this.minLon_, this.minLat_, this.maxLon_, this.maxLat_],\n      this.fromLonLatTransform_,\n      undefined,\n      8\n    );\n\n    this.minX_ = worldExtentP[0];\n    this.maxX_ = worldExtentP[2];\n    this.minY_ = worldExtentP[1];\n    this.maxY_ = worldExtentP[3];\n\n    // Determine the view projection coordinates of the extremities of the world extent\n    // as these may lie inside a view extent (for example the pole in a polar projection)\n\n    this.bottomLeft_ = this.fromLonLatTransform_([this.minLon_, this.minLat_]);\n    this.bottomRight_ = this.fromLonLatTransform_([this.maxLon_, this.minLat_]);\n    this.topLeft_ = this.fromLonLatTransform_([this.minLon_, this.maxLat_]);\n    this.topRight_ = this.fromLonLatTransform_([this.maxLon_, this.maxLat_]);\n\n    // Transform the projection center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    this.projectionCenterLonLat_ = this.toLonLatTransform_(\n      getCenter(projection.getExtent())\n    );\n    if (isNaN(this.projectionCenterLonLat_[1])) {\n      this.projectionCenterLonLat_[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n\n    this.projection_ = projection;\n  }\n}\n\nexport default Graticule;\n","/**\n * A wrapper class to simplify rendering to a texture instead of the final canvas\n * @module ol/webgl/RenderTarget\n */\nimport {equals} from '../array.js';\n\n// for pixel color reading\nconst tmpArray4 = new Uint8Array(4);\n\n/**\n * @classdesc\n * This class is a wrapper around the association of both a `WebGLTexture` and a `WebGLFramebuffer` instances,\n * simplifying initialization and binding for rendering.\n * @api\n */\nclass WebGLRenderTarget {\n  /**\n   * @param {import(\"./Helper.js\").default} helper WebGL helper; mandatory.\n   * @param {Array<number>} [size] Expected size of the render target texture; note: this can be changed later on.\n   */\n  constructor(helper, size) {\n    /**\n     * @private\n     * @type {import(\"./Helper.js\").default}\n     */\n    this.helper_ = helper;\n    const gl = helper.getGL();\n\n    /**\n     * @private\n     * @type {WebGLTexture}\n     */\n    this.texture_ = gl.createTexture();\n\n    /**\n     * @private\n     * @type {WebGLFramebuffer}\n     */\n    this.framebuffer_ = gl.createFramebuffer();\n\n    /**\n     * @private\n     * @type {WebGLRenderbuffer}\n     */\n    this.depthbuffer_ = gl.createRenderbuffer();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.size_ = size || [1, 1];\n\n    /**\n     * @type {Uint8Array}\n     * @private\n     */\n    this.data_ = new Uint8Array(0);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dataCacheDirty_ = true;\n\n    this.updateSize_();\n  }\n\n  /**\n   * Changes the size of the render target texture. Note: will do nothing if the size\n   * is already the same.\n   * @param {Array<number>} size Expected size of the render target texture\n   * @api\n   */\n  setSize(size) {\n    if (equals(size, this.size_)) {\n      return;\n    }\n    this.size_[0] = size[0];\n    this.size_[1] = size[1];\n    this.updateSize_();\n  }\n\n  /**\n   * Returns the size of the render target texture\n   * @return {Array<number>} Size of the render target texture\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * This will cause following calls to `#readAll` or `#readPixel` to download the content of the\n   * render target into memory, which is an expensive operation.\n   * This content will be kept in cache but should be cleared after each new render.\n   * @api\n   */\n  clearCachedData() {\n    this.dataCacheDirty_ = true;\n  }\n\n  /**\n   * Returns the full content of the frame buffer as a series of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * @return {Uint8Array} Integer array of color values\n   * @api\n   */\n  readAll() {\n    if (this.dataCacheDirty_) {\n      const size = this.size_;\n      const gl = this.helper_.getGL();\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n      gl.readPixels(\n        0,\n        0,\n        size[0],\n        size[1],\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data_\n      );\n      this.dataCacheDirty_ = false;\n    }\n    return this.data_;\n  }\n\n  /**\n   * Reads one pixel of the frame buffer as an array of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * If x and/or y are outside of existing data, an array filled with 0 is returned.\n   * @param {number} x Pixel coordinate\n   * @param {number} y Pixel coordinate\n   * @return {Uint8Array} Integer array with one color value (4 components)\n   * @api\n   */\n  readPixel(x, y) {\n    if (x < 0 || y < 0 || x > this.size_[0] || y >= this.size_[1]) {\n      tmpArray4[0] = 0;\n      tmpArray4[1] = 0;\n      tmpArray4[2] = 0;\n      tmpArray4[3] = 0;\n      return tmpArray4;\n    }\n\n    this.readAll();\n    const index =\n      Math.floor(x) + (this.size_[1] - Math.floor(y) - 1) * this.size_[0];\n    tmpArray4[0] = this.data_[index * 4];\n    tmpArray4[1] = this.data_[index * 4 + 1];\n    tmpArray4[2] = this.data_[index * 4 + 2];\n    tmpArray4[3] = this.data_[index * 4 + 3];\n    return tmpArray4;\n  }\n\n  /**\n   * @return {WebGLTexture} Texture to render to\n   */\n  getTexture() {\n    return this.texture_;\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer of the render target\n   */\n  getFramebuffer() {\n    return this.framebuffer_;\n  }\n\n  /**\n   * @return {WebGLRenderbuffer} Depth buffer of the render target\n   */\n  getDepthbuffer() {\n    return this.depthbuffer_;\n  }\n\n  /**\n   * @private\n   */\n  updateSize_() {\n    const size = this.size_;\n    const gl = this.helper_.getGL();\n\n    this.texture_ = this.helper_.createTexture(size, null, this.texture_);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture_,\n      0\n    );\n\n    gl.bindRenderbuffer(gl.RENDERBUFFER, this.depthbuffer_);\n    gl.renderbufferStorage(\n      gl.RENDERBUFFER,\n      gl.DEPTH_COMPONENT16,\n      size[0],\n      size[1]\n    );\n    gl.framebufferRenderbuffer(\n      gl.FRAMEBUFFER,\n      gl.DEPTH_ATTACHMENT,\n      gl.RENDERBUFFER,\n      this.depthbuffer_\n    );\n\n    this.data_ = new Uint8Array(size[0] * size[1] * 4);\n  }\n}\n\nexport default WebGLRenderTarget;\n","/**\n * @module ol/render/webgl/constants\n */\n\n/**\n * @enum {string}\n */\nexport const WebGLWorkerMessageType = {\n  GENERATE_POLYGON_BUFFERS: 'GENERATE_POLYGON_BUFFERS',\n  GENERATE_POINT_BUFFERS: 'GENERATE_POINT_BUFFERS',\n  GENERATE_LINE_STRING_BUFFERS: 'GENERATE_LINE_STRING_BUFFERS',\n};\n\n/**\n * @typedef {Object} WebGLWorkerGenerateBuffersMessage\n * This message will trigger the generation of a vertex and an index buffer based on the given render instructions.\n * When the buffers are generated, the worked will send a message of the same type to the main thread, with\n * the generated buffers in it.\n * Note that any addition properties present in the message *will* be sent back to the main thread.\n * @property {number} id Message id; will be used both in request and response as a means of identification\n * @property {WebGLWorkerMessageType} type Message type\n * @property {ArrayBuffer} renderInstructions Polygon render instructions raw binary buffer.\n * @property {number} [customAttributesSize] Amount of custom attributes count in the polygon render instructions.\n * @property {ArrayBuffer} [vertexBuffer] Vertices array raw binary buffer (sent by the worker).\n * @property {ArrayBuffer} [indexBuffer] Indices array raw binary buffer (sent by the worker).\n * @property {import(\"../../transform\").Transform} [renderInstructionsTransform] Transformation matrix used to project the instructions coordinates\n */\n","'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 32767 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim | 0);\n            triangles.push(ear.i / dim | 0);\n            triangles.push(next.i / dim | 0);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    var p = c.next;\n    while (p !== a) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(x0, y0, minX, minY, invSize),\n        maxZ = zOrder(x1, y1, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim | 0);\n            triangles.push(p.i / dim | 0);\n            triangles.push(b.i / dim | 0);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\n                earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    var bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n\n    var bridgeReverse = splitPolygon(bridge, hole);\n\n    // filter collinear points around the cuts\n    filterPoints(bridgeReverse, bridgeReverse.next);\n    return filterPoints(bridge, bridge.next);\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                m = p.x < p.next.x ? p : p.next;\n                if (x === hx) return m; // hole touches outer segment; pick leftmost endpoint\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === 0) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = (x - minX) * invSize | 0;\n    y = (y - minY) * invSize | 0;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) >= (ax - px) * (cy - py) &&\n           (ax - px) * (by - py) >= (bx - px) * (ay - py) &&\n           (bx - px) * (cy - py) >= (cx - px) * (by - py);\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = 0;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","/**\n * @module ol/render/webgl/utils\n */\nimport earcut from 'earcut';\nimport {apply as applyTransform} from '../../transform.js';\nimport {clamp} from '../../math.js';\n\nconst tmpArray_ = [];\n\n/**\n * An object holding positions both in an index and a vertex buffer.\n * @typedef {Object} BufferPositions\n * @property {number} vertexPosition Position in the vertex buffer\n * @property {number} indexPosition Position in the index buffer\n */\nconst bufferPositions_ = {vertexPosition: 0, indexPosition: 0};\n\nfunction writePointVertex(buffer, pos, x, y, index) {\n  buffer[pos + 0] = x;\n  buffer[pos + 1] = y;\n  buffer[pos + 2] = index;\n}\n\n/**\n * Pushes a quad (two triangles) based on a point geometry\n * @param {Float32Array} instructions Array of render instructions for points.\n * @param {number} elementIndex Index from which render instructions will be read.\n * @param {Float32Array} vertexBuffer Buffer in the form of a typed array.\n * @param {Uint32Array} indexBuffer Buffer in the form of a typed array.\n * @param {number} customAttributesSize Amount of custom attributes for each element.\n * @param {BufferPositions} [bufferPositions] Buffer write positions; if not specified, positions will be set at 0.\n * @return {BufferPositions} New buffer positions where to write next\n * @property {number} vertexPosition New position in the vertex buffer where future writes should start.\n * @property {number} indexPosition New position in the index buffer where future writes should start.\n * @private\n */\nexport function writePointFeatureToBuffers(\n  instructions,\n  elementIndex,\n  vertexBuffer,\n  indexBuffer,\n  customAttributesSize,\n  bufferPositions\n) {\n  // This is for x, y and index\n  const baseVertexAttrsCount = 3;\n  const baseInstructionsCount = 2;\n  const stride = baseVertexAttrsCount + customAttributesSize;\n\n  const x = instructions[elementIndex + 0];\n  const y = instructions[elementIndex + 1];\n\n  // read custom numerical attributes on the feature\n  const customAttrs = tmpArray_;\n  customAttrs.length = customAttributesSize;\n  for (let i = 0; i < customAttrs.length; i++) {\n    customAttrs[i] = instructions[elementIndex + baseInstructionsCount + i];\n  }\n\n  let vPos = bufferPositions ? bufferPositions.vertexPosition : 0;\n  let iPos = bufferPositions ? bufferPositions.indexPosition : 0;\n  const baseIndex = vPos / stride;\n\n  // push vertices for each of the four quad corners (first standard then custom attributes)\n  writePointVertex(vertexBuffer, vPos, x, y, 0);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 1);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 2);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 3);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  indexBuffer[iPos++] = baseIndex;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 3;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 2;\n  indexBuffer[iPos++] = baseIndex + 3;\n\n  bufferPositions_.vertexPosition = vPos;\n  bufferPositions_.indexPosition = iPos;\n\n  return bufferPositions_;\n}\n\n/**\n * Pushes a single quad to form a line segment; also includes a computation for the join angles with previous and next\n * segment, in order to be able to offset the vertices correctly in the shader\n * @param {Float32Array} instructions Array of render instructions for lines.\n * @param {number} segmentStartIndex Index of the segment start point from which render instructions will be read.\n * @param {number} segmentEndIndex Index of the segment start point from which render instructions will be read.\n * @param {number|null} beforeSegmentIndex Index of the point right before the segment (null if none, e.g this is a line start)\n * @param {number|null} afterSegmentIndex Index of the point right after the segment (null if none, e.g this is a line end)\n * @param {Array<number>} vertexArray Array containing vertices.\n * @param {Array<number>} indexArray Array containing indices.\n * @param {Array<number>} customAttributes Array of custom attributes value\n * @param {import('../../transform.js').Transform} instructionsTransform Transform matrix used to project coordinates in instructions\n * @param {import('../../transform.js').Transform} invertInstructionsTransform Transform matrix used to project coordinates in instructions\n * @private\n */\nexport function writeLineSegmentToBuffers(\n  instructions,\n  segmentStartIndex,\n  segmentEndIndex,\n  beforeSegmentIndex,\n  afterSegmentIndex,\n  vertexArray,\n  indexArray,\n  customAttributes,\n  instructionsTransform,\n  invertInstructionsTransform\n) {\n  // compute the stride to determine how many vertices were already pushed\n  const baseVertexAttrsCount = 5; // base attributes: x0, y0, x1, y1, params (vertex number [0-3], join angle 1, join angle 2)\n  const stride = baseVertexAttrsCount + customAttributes.length;\n  const baseIndex = vertexArray.length / stride;\n\n  // The segment is composed of two positions called P0[x0, y0] and P1[x1, y1]\n  // Depending on whether there are points before and after the segment, its final shape\n  // will be different\n  const p0 = [\n    instructions[segmentStartIndex + 0],\n    instructions[segmentStartIndex + 1],\n  ];\n  const p1 = [instructions[segmentEndIndex], instructions[segmentEndIndex + 1]];\n\n  // to compute offsets from the line center we need to reproject\n  // coordinates back in world units and compute the length of the segment\n  const p0world = applyTransform(invertInstructionsTransform, [...p0]);\n  const p1world = applyTransform(invertInstructionsTransform, [...p1]);\n\n  function computeVertexParameters(vertexNumber, joinAngle1, joinAngle2) {\n    const shift = 10000;\n    const anglePrecision = 1500;\n    return (\n      Math.round(joinAngle1 * anglePrecision) +\n      Math.round(joinAngle2 * anglePrecision) * shift +\n      vertexNumber * shift * shift\n    );\n  }\n\n  // compute the angle between p0pA and p0pB\n  // returns a value in [0, 2PI]\n  function angleBetween(p0, pA, pB) {\n    const lenA = Math.sqrt(\n      (pA[0] - p0[0]) * (pA[0] - p0[0]) + (pA[1] - p0[1]) * (pA[1] - p0[1])\n    );\n    const tangentA = [(pA[0] - p0[0]) / lenA, (pA[1] - p0[1]) / lenA];\n    const orthoA = [-tangentA[1], tangentA[0]];\n    const lenB = Math.sqrt(\n      (pB[0] - p0[0]) * (pB[0] - p0[0]) + (pB[1] - p0[1]) * (pB[1] - p0[1])\n    );\n    const tangentB = [(pB[0] - p0[0]) / lenB, (pB[1] - p0[1]) / lenB];\n\n    // this angle can be clockwise or anticlockwise; hence the computation afterwards\n    const angle =\n      lenA === 0 || lenB === 0\n        ? 0\n        : Math.acos(\n            clamp(tangentB[0] * tangentA[0] + tangentB[1] * tangentA[1], -1, 1)\n          );\n    const isClockwise = tangentB[0] * orthoA[0] + tangentB[1] * orthoA[1] > 0;\n    return !isClockwise ? Math.PI * 2 - angle : angle;\n  }\n\n  const joinBefore = beforeSegmentIndex !== null;\n  const joinAfter = afterSegmentIndex !== null;\n\n  let angle0 = 0;\n  let angle1 = 0;\n\n  // add vertices and adapt offsets for P0 in case of join\n  if (joinBefore) {\n    // B for before\n    const pB = [\n      instructions[beforeSegmentIndex],\n      instructions[beforeSegmentIndex + 1],\n    ];\n    const pBworld = applyTransform(invertInstructionsTransform, [...pB]);\n    angle0 = angleBetween(p0world, p1world, pBworld);\n  }\n  // adapt offsets for P1 in case of join\n  if (joinAfter) {\n    // A for after\n    const pA = [\n      instructions[afterSegmentIndex],\n      instructions[afterSegmentIndex + 1],\n    ];\n    const pAworld = applyTransform(invertInstructionsTransform, [...pA]);\n    angle1 = angleBetween(p1world, p0world, pAworld);\n  }\n\n  // add main segment triangles\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    computeVertexParameters(0, angle0, angle1)\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    computeVertexParameters(1, angle0, angle1)\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    computeVertexParameters(2, angle0, angle1)\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    computeVertexParameters(3, angle0, angle1)\n  );\n  vertexArray.push(...customAttributes);\n\n  indexArray.push(\n    baseIndex,\n    baseIndex + 1,\n    baseIndex + 2,\n    baseIndex + 1,\n    baseIndex + 3,\n    baseIndex + 2\n  );\n}\n\n/**\n * Pushes several triangles to form a polygon, including holes\n * @param {Float32Array} instructions Array of render instructions for lines.\n * @param {number} polygonStartIndex Index of the polygon start point from which render instructions will be read.\n * @param {Array<number>} vertexArray Array containing vertices.\n * @param {Array<number>} indexArray Array containing indices.\n * @param {number} customAttributesSize Amount of custom attributes for each element.\n * @return {number} Next polygon instructions index\n * @private\n */\nexport function writePolygonTrianglesToBuffers(\n  instructions,\n  polygonStartIndex,\n  vertexArray,\n  indexArray,\n  customAttributesSize\n) {\n  const instructionsPerVertex = 2; // x, y\n  const attributesPerVertex = 2 + customAttributesSize;\n  let instructionsIndex = polygonStartIndex;\n  const customAttributes = instructions.slice(\n    instructionsIndex,\n    instructionsIndex + customAttributesSize\n  );\n  instructionsIndex += customAttributesSize;\n  const ringsCount = instructions[instructionsIndex++];\n  let verticesCount = 0;\n  const holes = new Array(ringsCount - 1);\n  for (let i = 0; i < ringsCount; i++) {\n    verticesCount += instructions[instructionsIndex++];\n    if (i < ringsCount - 1) {\n      holes[i] = verticesCount;\n    }\n  }\n  const flatCoords = instructions.slice(\n    instructionsIndex,\n    instructionsIndex + verticesCount * instructionsPerVertex\n  );\n\n  // pushing to vertices and indices!! this is where the magic happens\n  const result = earcut(flatCoords, holes, instructionsPerVertex);\n  for (let i = 0; i < result.length; i++) {\n    indexArray.push(result[i] + vertexArray.length / attributesPerVertex);\n  }\n  for (let i = 0; i < flatCoords.length; i += 2) {\n    vertexArray.push(flatCoords[i], flatCoords[i + 1], ...customAttributes);\n  }\n\n  return instructionsIndex + verticesCount * instructionsPerVertex;\n}\n\n/**\n * Returns a texture of 1x1 pixel, white\n * @private\n * @return {ImageData} Image data.\n */\nexport function getBlankImageData() {\n  const canvas = document.createElement('canvas');\n  const image = canvas.getContext('2d').createImageData(1, 1);\n  image.data[0] = 255;\n  image.data[1] = 255;\n  image.data[2] = 255;\n  image.data[3] = 255;\n  return image;\n}\n\n/**\n * Generates a color array based on a numerical id\n * Note: the range for each component is 0 to 1 with 256 steps\n * @param {number} id Id\n * @param {Array<number>} [array] Reusable array\n * @return {Array<number>} Color array containing the encoded id\n */\nexport function colorEncodeId(id, array) {\n  array = array || [];\n  const radix = 256;\n  const divide = radix - 1;\n  array[0] = Math.floor(id / radix / radix / radix) / divide;\n  array[1] = (Math.floor(id / radix / radix) % radix) / divide;\n  array[2] = (Math.floor(id / radix) % radix) / divide;\n  array[3] = (id % radix) / divide;\n  return array;\n}\n\n/**\n * Reads an id from a color-encoded array\n * Note: the expected range for each component is 0 to 1 with 256 steps.\n * @param {Array<number>} color Color array containing the encoded id\n * @return {number} Decoded id\n */\nexport function colorDecodeId(color) {\n  let id = 0;\n  const radix = 256;\n  const mult = radix - 1;\n  id += Math.round(color[0] * radix * radix * radix * mult);\n  id += Math.round(color[1] * radix * radix * mult);\n  id += Math.round(color[2] * radix * mult);\n  id += Math.round(color[3] * mult);\n  return id;\n}\n","/**\n * @module ol/renderer/webgl/PointsLayer\n */\nimport BaseVector from '../../layer/BaseVector.js';\nimport VectorEventType from '../../source/VectorEventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport WebGLRenderTarget from '../../webgl/RenderTarget.js';\nimport {ARRAY_BUFFER, DYNAMIC_DRAW, ELEMENT_ARRAY_BUFFER} from '../../webgl.js';\nimport {AttributeType, DefaultUniform} from '../../webgl/Helper.js';\nimport {WebGLWorkerMessageType} from '../../render/webgl/constants.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  makeInverse as makeInverseTransform,\n  multiply as multiplyTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {assert} from '../../asserts.js';\nimport {buffer, createEmpty, equals, getWidth} from '../../extent.js';\nimport {colorDecodeId, colorEncodeId} from '../../render/webgl/utils.js';\nimport {create as createWebGLWorker} from '../../worker/webgl.js';\nimport {getUid} from '../../util.js';\nimport {listen, unlistenByKey} from '../../events.js';\n\n/**\n * @typedef {Object} CustomAttribute A description of a custom attribute to be passed on to the GPU, with a value different\n * for each feature.\n * @property {string} name Attribute name.\n * @property {function(import(\"../../Feature\").default, Object<string, *>):number} callback This callback computes the numerical value of the\n * attribute for a given feature (properties are available as 2nd arg for quicker access).\n */\n\n/**\n * @typedef {Object} FeatureCacheItem Object that holds a reference to a feature, its geometry and properties. Used to optimize\n * rebuildBuffers by accessing these objects quicker.\n * @property {import(\"../../Feature\").default} feature Feature\n * @property {Object<string, *>} properties Feature properties\n * @property {import(\"../../geom\").Geometry} geometry Feature geometry\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the canvas element.\n * @property {Array<CustomAttribute>} [attributes] These attributes will be read from the features in the source and then\n * passed to the GPU. The `name` property of each attribute will serve as its identifier:\n *  * In the vertex shader as an `attribute` by prefixing it with `a_`\n *  * In the fragment shader as a `varying` by prefixing it with `v_`\n * Please note that these can only be numerical values.\n * @property {string} vertexShader Vertex shader source, mandatory.\n * @property {string} fragmentShader Fragment shader source, mandatory.\n * @property {boolean} [hitDetectionEnabled] Whether shader is hit detection aware.\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * Please note that `u_texture` is reserved for the main texture slot and `u_opacity` is reserved for the layer opacity.\n * @property {Array<import(\"./Layer\").PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * WebGL vector renderer optimized for points.\n * All features will be rendered as quads (two triangles forming a square). New data will be flushed to the GPU\n * every time the vector source changes.\n *\n * You need to provide vertex and fragment shaders for rendering. This can be done using\n * {@link module:ol/webgl/ShaderBuilder~ShaderBuilder} utilities. These shaders shall expect a `a_position` attribute\n * containing the screen-space projected center of the quad, as well as a `a_index` attribute\n * whose value (0, 1, 2 or 3) indicates which quad vertex is currently getting processed (see structure below).\n *\n * To include variable attributes in the shaders, you need to declare them using the `attributes` property of\n * the options object like so:\n * ```js\n * new WebGLPointsLayerRenderer(layer, {\n *   attributes: [\n *     {\n *       name: 'size',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *     {\n *       name: 'weight',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *   ],\n *   vertexShader:\n *     // shader using attribute a_weight and a_size\n *   fragmentShader:\n *     // shader using varying v_weight and v_size\n * ```\n *\n * To enable hit detection, you must as well provide dedicated shaders using the `hitVertexShader`\n * and `hitFragmentShader` properties. These shall expect the `a_hitColor` attribute to contain\n * the final color that will have to be output for hit detection to work.\n *\n * The following uniform is used for the main texture: `u_texture`.\n * The following uniform is used for the layer opacity: `u_opacity`.\n *\n * Please note that the main shader output should have premultiplied alpha, otherwise visual anomalies may occur.\n *\n * Points are rendered as quads with the following structure:\n *\n * ```\n *   (u0, v1)      (u1, v1)\n *  [3]----------[2]\n *   |`           |\n *   |  `         |\n *   |    `       |\n *   |      `     |\n *   |        `   |\n *   |          ` |\n *  [0]----------[1]\n *   (u0, v0)      (u1, v0)\n *  ```\n *\n * This uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\n *\n * @api\n */\nclass WebGLPointsLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n   * @param {Options} options Options.\n   */\n  constructor(layer, options) {\n    const uniforms = options.uniforms || {};\n    const projectionMatrixTransform = createTransform();\n    uniforms[DefaultUniform.PROJECTION_MATRIX] = projectionMatrixTransform;\n\n    super(layer, {\n      uniforms: uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    this.sourceRevision_ = -1;\n\n    this.verticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n    this.indicesBuffer_ = new WebGLArrayBuffer(\n      ELEMENT_ARRAY_BUFFER,\n      DYNAMIC_DRAW\n    );\n\n    /**\n     * @private\n     */\n    this.vertexShader_ = options.vertexShader;\n\n    /**\n     * @private\n     */\n    this.fragmentShader_ = options.fragmentShader;\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.program_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hitDetectionEnabled_ = options.hitDetectionEnabled ?? true;\n\n    const customAttributes = options.attributes\n      ? options.attributes.map(function (attribute) {\n          return {\n            name: 'a_' + attribute.name,\n            size: 1,\n            type: AttributeType.FLOAT,\n          };\n        })\n      : [];\n\n    /**\n     * A list of attributes used by the renderer. By default only the position and\n     * index of the vertex (0 to 3) are required.\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     */\n    this.attributes = [\n      {\n        name: 'a_position',\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_index',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ];\n\n    if (this.hitDetectionEnabled_) {\n      this.attributes.push({\n        name: 'a_hitColor',\n        size: 4,\n        type: AttributeType.FLOAT,\n      });\n      this.attributes.push({\n        name: 'a_featureUid',\n        size: 1,\n        type: AttributeType.FLOAT,\n      });\n    }\n    this.attributes.push(...customAttributes);\n\n    this.customAttributes = options.attributes ? options.attributes : [];\n\n    this.previousExtent_ = createEmpty();\n\n    /**\n     * This transform is updated on every frame and is the composition of:\n     * - invert of the world->screen transform that was used when rebuilding buffers (see `this.renderTransform_`)\n     * - current world->screen transform\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.currentTransform_ = projectionMatrixTransform;\n\n    /**\n     * This transform is updated when buffers are rebuilt and converts world space coordinates to screen space\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.renderTransform_ = createTransform();\n\n    /**\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.invertRenderTransform_ = createTransform();\n\n    /**\n     * @type {Float32Array}\n     * @private\n     */\n    this.renderInstructions_ = new Float32Array(0);\n\n    /**\n     * @type {WebGLRenderTarget}\n     * @private\n     */\n    this.hitRenderTarget_;\n\n    /**\n     * Keep track of latest message sent to worker\n     * @type {number}\n     * @private\n     */\n    this.lastSentId = 0;\n\n    /**\n     * @private\n     */\n    this.worker_ = createWebGLWorker();\n\n    this.worker_.addEventListener(\n      'message',\n      /**\n       * @param {*} event Event.\n       */\n      (event) => {\n        const received = event.data;\n        if (received.type === WebGLWorkerMessageType.GENERATE_POINT_BUFFERS) {\n          const projectionTransform = received.projectionTransform;\n          this.verticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n          this.helper.flushBufferData(this.verticesBuffer_);\n          this.indicesBuffer_.fromArrayBuffer(received.indexBuffer);\n          this.helper.flushBufferData(this.indicesBuffer_);\n\n          this.renderTransform_ = projectionTransform;\n          makeInverseTransform(\n            this.invertRenderTransform_,\n            this.renderTransform_\n          );\n          this.renderInstructions_ = new Float32Array(\n            event.data.renderInstructions\n          );\n          if (received.id === this.lastSentId) {\n            this.ready = true;\n          }\n          this.getLayer().changed();\n        }\n      }\n    );\n\n    /**\n     * This object will be updated when the source changes. Key is uid.\n     * @type {Object<string, FeatureCacheItem>}\n     * @private\n     */\n    this.featureCache_ = {};\n\n    /**\n     * Amount of features in the cache.\n     * @type {number}\n     * @private\n     */\n    this.featureCount_ = 0;\n\n    const source = this.getLayer().getSource();\n    this.sourceListenKeys_ = [\n      listen(\n        source,\n        VectorEventType.ADDFEATURE,\n        this.handleSourceFeatureAdded_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.CHANGEFEATURE,\n        this.handleSourceFeatureChanged_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceFeatureDelete_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.CLEAR,\n        this.handleSourceFeatureClear_,\n        this\n      ),\n    ];\n    source.forEachFeature((feature) => {\n      this.featureCache_[getUid(feature)] = {\n        feature: feature,\n        properties: feature.getProperties(),\n        geometry: feature.getGeometry(),\n      };\n      this.featureCount_++;\n    });\n  }\n\n  afterHelperCreated() {\n    this.program_ = this.helper.getProgram(\n      this.fragmentShader_,\n      this.vertexShader_\n    );\n\n    if (this.hitDetectionEnabled_) {\n      this.hitRenderTarget_ = new WebGLRenderTarget(this.helper);\n    }\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureAdded_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n    this.featureCount_++;\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureChanged_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureDelete_(event) {\n    const feature = event.feature;\n    delete this.featureCache_[getUid(feature)];\n    this.featureCount_--;\n  }\n\n  /**\n   * @private\n   */\n  handleSourceFeatureClear_() {\n    this.featureCache_ = {};\n    this.featureCount_ = 0;\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    const gl = this.helper.getGL();\n    this.preRender(gl, frameState);\n\n    const [startWorld, endWorld, worldWidth] =\n      this.getWorldParameters_(frameState);\n\n    // draw the normal canvas\n    this.renderWorlds(frameState, false, startWorld, endWorld, worldWidth);\n\n    this.helper.finalizeDraw(\n      frameState,\n      this.dispatchPreComposeEvent,\n      this.dispatchPostComposeEvent\n    );\n    const canvas = this.helper.getCanvas();\n\n    if (this.hitDetectionEnabled_) {\n      this.renderWorlds(frameState, true, startWorld, endWorld, worldWidth);\n      this.hitRenderTarget_.clearCachedData();\n    }\n\n    this.postRender(gl, frameState);\n\n    return canvas;\n  }\n\n  /**\n   * Compute world params\n   * @private\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<number>} The world start, end and width.\n   */\n  getWorldParameters_(frameState) {\n    const projection = frameState.viewState.projection;\n    const layer = this.getLayer();\n    const vectorSource = layer.getSource();\n    // FIXME fix hit detection isn't reliable when rendering multiple worlds\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const projectionExtent = projection.getExtent();\n\n    const extent = frameState.extent;\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n\n    const startWorld = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n\n    return [startWorld, endWorld, worldWidth];\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrameInternal(frameState) {\n    const layer = this.getLayer();\n    const vectorSource = layer.getSource();\n    const viewState = frameState.viewState;\n    const viewNotMoving =\n      !frameState.viewHints[ViewHint.ANIMATING] &&\n      !frameState.viewHints[ViewHint.INTERACTING];\n    const extentChanged = !equals(this.previousExtent_, frameState.extent);\n    const sourceChanged = this.sourceRevision_ < vectorSource.getRevision();\n\n    if (sourceChanged) {\n      this.sourceRevision_ = vectorSource.getRevision();\n    }\n\n    if (viewNotMoving && (extentChanged || sourceChanged)) {\n      const projection = viewState.projection;\n      const resolution = viewState.resolution;\n\n      const renderBuffer =\n        layer instanceof BaseVector ? layer.getRenderBuffer() : 0;\n      const extent = buffer(frameState.extent, renderBuffer * resolution);\n      vectorSource.loadFeatures(extent, resolution, projection);\n\n      this.rebuildBuffers_(frameState);\n      this.previousExtent_ = frameState.extent.slice();\n    }\n\n    this.helper.useProgram(this.program_, frameState);\n    this.helper.prepareDraw(frameState);\n\n    // write new data\n    this.helper.bindBuffer(this.verticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n    this.helper.enableAttributes(this.attributes);\n\n    return true;\n  }\n\n  /**\n   * Rebuild internal webgl buffers based on current view extent; costly, should not be called too much\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  rebuildBuffers_(frameState) {\n    // saves the projection transform for the current frame state\n    const projectionTransform = createTransform();\n    this.helper.makeProjectionTransform(frameState, projectionTransform);\n\n    const baseInstructionLength = this.hitDetectionEnabled_ ? 7 : 2; // see below\n    const singleInstructionLength =\n      baseInstructionLength + this.customAttributes.length;\n    const totalSize = singleInstructionLength * this.featureCount_;\n    if (\n      !this.renderInstructions_ ||\n      this.renderInstructions_.length !== totalSize\n    ) {\n      this.renderInstructions_ = new Float32Array(totalSize);\n    }\n\n    // loop on features to fill the buffer\n    let featureCache, geometry;\n    const tmpCoords = [];\n    const tmpColor = [];\n    let idx = -1;\n    for (const featureUid in this.featureCache_) {\n      featureCache = this.featureCache_[featureUid];\n      geometry = /** @type {import(\"../../geom\").Point} */ (\n        featureCache.geometry\n      );\n      if (!geometry || geometry.getType() !== 'Point') {\n        continue;\n      }\n      tmpCoords[0] = geometry.getFlatCoordinates()[0];\n      tmpCoords[1] = geometry.getFlatCoordinates()[1];\n      applyTransform(projectionTransform, tmpCoords);\n\n      this.renderInstructions_[++idx] = tmpCoords[0];\n      this.renderInstructions_[++idx] = tmpCoords[1];\n\n      // for hit detection, the feature uid is saved in the opacity value\n      // and the index of the opacity value is encoded in the color values\n      if (this.hitDetectionEnabled_) {\n        const hitColor = colorEncodeId(idx + 5, tmpColor);\n        this.renderInstructions_[++idx] = hitColor[0];\n        this.renderInstructions_[++idx] = hitColor[1];\n        this.renderInstructions_[++idx] = hitColor[2];\n        this.renderInstructions_[++idx] = hitColor[3];\n        this.renderInstructions_[++idx] = Number(featureUid);\n      }\n\n      // pushing custom attributes\n      for (let j = 0; j < this.customAttributes.length; j++) {\n        const value = this.customAttributes[j].callback(\n          featureCache.feature,\n          featureCache.properties\n        );\n        this.renderInstructions_[++idx] = value;\n      }\n    }\n\n    /** @type {import('../../render/webgl/constants.js').WebGLWorkerGenerateBuffersMessage} */\n    const message = {\n      id: ++this.lastSentId,\n      type: WebGLWorkerMessageType.GENERATE_POINT_BUFFERS,\n      renderInstructions: this.renderInstructions_.buffer,\n      customAttributesSize: singleInstructionLength - 2,\n    };\n    // additional properties will be sent back as-is by the worker\n    message['projectionTransform'] = projectionTransform;\n    this.ready = false;\n    this.worker_.postMessage(message, [this.renderInstructions_.buffer]);\n    this.renderInstructions_ = null;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    assert(this.hitDetectionEnabled_, 66);\n    if (!this.renderInstructions_ || !this.hitDetectionEnabled_) {\n      return undefined;\n    }\n\n    const pixel = applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice()\n    );\n\n    const data = this.hitRenderTarget_.readPixel(pixel[0] / 2, pixel[1] / 2);\n    const color = [data[0] / 255, data[1] / 255, data[2] / 255, data[3] / 255];\n    const index = colorDecodeId(color);\n    const opacity = this.renderInstructions_[index];\n    const uid = Math.floor(opacity).toString();\n\n    const source = this.getLayer().getSource();\n    const feature = source.getFeatureByUid(uid);\n    if (feature) {\n      return callback(feature, this.getLayer(), null);\n    }\n    return undefined;\n  }\n\n  /**\n   * Render the world, either to the main framebuffer or to the hit framebuffer\n   * @param {import(\"../../Map.js\").FrameState} frameState current frame state\n   * @param {boolean} forHitDetection whether the rendering is for hit detection\n   * @param {number} startWorld the world to render in the first iteration\n   * @param {number} endWorld the last world to render\n   * @param {number} worldWidth the width of the worlds being rendered\n   */\n  renderWorlds(frameState, forHitDetection, startWorld, endWorld, worldWidth) {\n    let world = startWorld;\n\n    this.helper.useProgram(this.program_, frameState);\n\n    if (forHitDetection) {\n      this.hitRenderTarget_.setSize([\n        Math.floor(frameState.size[0] / 2),\n        Math.floor(frameState.size[1] / 2),\n      ]);\n      this.helper.prepareDrawToRenderTarget(\n        frameState,\n        this.hitRenderTarget_,\n        true\n      );\n    }\n\n    this.helper.bindBuffer(this.verticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n    this.helper.enableAttributes(this.attributes);\n\n    do {\n      this.helper.makeProjectionTransform(frameState, this.currentTransform_);\n      translateTransform(this.currentTransform_, world * worldWidth, 0);\n      multiplyTransform(this.currentTransform_, this.invertRenderTransform_);\n      this.helper.applyUniforms(frameState);\n      this.helper.applyHitDetectionUniform(forHitDetection);\n      const renderCount = this.indicesBuffer_.getSize();\n      this.helper.drawElements(0, renderCount);\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.worker_.terminate();\n    this.layer_ = null;\n    this.sourceListenKeys_.forEach(function (key) {\n      unlistenByKey(key);\n    });\n    this.sourceListenKeys_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default WebGLPointsLayerRenderer;\n","\n        export function create() {\n          const source = \"const e=\\\"GENERATE_POLYGON_BUFFERS\\\",t=\\\"GENERATE_POINT_BUFFERS\\\",n=\\\"GENERATE_LINE_STRING_BUFFERS\\\",r={1:\\\"The view center is not defined\\\",2:\\\"The view resolution is not defined\\\",3:\\\"The view rotation is not defined\\\",4:\\\"`image` and `src` cannot be provided at the same time\\\",5:\\\"`imgSize` must be set when `image` is provided\\\",7:\\\"`format` must be set when `url` is set\\\",8:\\\"Unknown `serverType` configured\\\",9:\\\"`url` must be configured or set using `#setUrl()`\\\",10:\\\"The default `geometryFunction` can only handle `Point` geometries\\\",11:\\\"`options.featureTypes` must be an Array\\\",12:\\\"`options.geometryName` must also be provided when `options.bbox` is set\\\",13:\\\"Invalid corner\\\",14:\\\"Invalid color\\\",15:\\\"Tried to get a value for a key that does not exist in the cache\\\",16:\\\"Tried to set a value for a key that is used already\\\",17:\\\"`resolutions` must be sorted in descending order\\\",18:\\\"Either `origin` or `origins` must be configured, never both\\\",19:\\\"Number of `tileSizes` and `resolutions` must be equal\\\",20:\\\"Number of `origins` and `resolutions` must be equal\\\",22:\\\"Either `tileSize` or `tileSizes` must be configured, never both\\\",24:\\\"Invalid extent or geometry provided as `geometry`\\\",25:\\\"Cannot fit empty extent provided as `geometry`\\\",26:\\\"Features must have an id set\\\",27:\\\"Features must have an id set\\\",28:'`renderMode` must be `\\\"hybrid\\\"` or `\\\"vector\\\"`',30:\\\"The passed `feature` was already added to the source\\\",31:\\\"Tried to enqueue an `element` that was already added to the queue\\\",32:\\\"Transformation matrix cannot be inverted\\\",33:\\\"Invalid units\\\",34:\\\"Invalid geometry layout\\\",36:\\\"Unknown SRS type\\\",37:\\\"Unknown geometry type found\\\",38:\\\"`styleMapValue` has an unknown type\\\",39:\\\"Unknown geometry type\\\",40:\\\"Expected `feature` to have a geometry\\\",41:\\\"Expected an `ol/style/Style` or an array of `ol/style/Style.js`\\\",42:\\\"Question unknown, the answer is 42\\\",43:\\\"Expected `layers` to be an array or a `Collection`\\\",47:\\\"Expected `controls` to be an array or an `ol/Collection`\\\",48:\\\"Expected `interactions` to be an array or an `ol/Collection`\\\",49:\\\"Expected `overlays` to be an array or an `ol/Collection`\\\",50:\\\"`options.featureTypes` should be an Array\\\",51:\\\"Either `url` or `tileJSON` options must be provided\\\",52:\\\"Unknown `serverType` configured\\\",53:\\\"Unknown `tierSizeCalculation` configured\\\",55:\\\"The {-y} placeholder requires a tile grid with extent\\\",56:\\\"mapBrowserEvent must originate from a pointer event\\\",57:\\\"At least 2 conditions are required\\\",59:\\\"Invalid command found in the PBF\\\",60:\\\"Missing or invalid `size`\\\",61:\\\"Cannot determine IIIF Image API version from provided image information JSON\\\",62:\\\"A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`\\\",64:\\\"Layer opacity must be a number\\\",66:\\\"`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`\\\",67:\\\"A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both\\\",68:\\\"A VectorTile source can only be rendered if it has a projection compatible with the view projection\\\",69:\\\"`width` or `height` cannot be provided together with `scale`\\\"};class o extends Error{constructor(e){const t=r[e];super(t),this.code=e,this.name=\\\"AssertionError\\\",this.message=t}}var i=o;function a(e,t){const n=t[0],r=t[1];return t[0]=e[0]*n+e[2]*r+e[4],t[1]=e[1]*n+e[3]*r+e[5],t}function s(e,t){const n=(r=t)[0]*r[3]-r[1]*r[2];var r;!function(e,t){if(!e)throw new i(t)}(0!==n,32);const o=t[0],a=t[1],s=t[2],u=t[3],f=t[4],x=t[5];return e[0]=u/n,e[1]=-a/n,e[2]=-s/n,e[3]=o/n,e[4]=(s*x-u*f)/n,e[5]=-(o*x-a*f)/n,e}function u(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\\\"default\\\")?e.default:e}new Array(6);var f={exports:{}};function x(e,t,n){n=n||2;var r,o,i,a,s,u,f,x=t&&t.length,h=x?t[0]*n:e.length,v=l(e,0,h,n,!0),d=[];if(!v||v.next===v.prev)return d;if(x&&(v=function(e,t,n,r){var o,i,a,s=[];for(o=0,i=t.length;o<i;o++)(a=l(e,t[o]*r,o<i-1?t[o+1]*r:e.length,r,!1))===a.next&&(a.steiner=!0),s.push(A(a));for(s.sort(b),o=0;o<s.length;o++)n=g(s[o],n);return n}(e,t,v,n)),e.length>80*n){r=i=e[0],o=a=e[1];for(var y=n;y<h;y+=n)(s=e[y])<r&&(r=s),(u=e[y+1])<o&&(o=u),s>i&&(i=s),u>a&&(a=u);f=0!==(f=Math.max(i-r,a-o))?32767/f:0}return c(v,d,n,r,o,f,0),d}function l(e,t,n,r,o){var i,a;if(o===P(e,t,n,r)>0)for(i=t;i<n;i+=r)a=k(i,e[i],e[i+1],a);else for(i=n-r;i>=t;i-=r)a=k(i,e[i],e[i+1],a);return a&&F(a,a.next)&&(R(a),a=a.next),a}function h(e,t){if(!e)return e;t||(t=e);var n,r=e;do{if(n=!1,r.steiner||!F(r,r.next)&&0!==Z(r.prev,r,r.next))r=r.next;else{if(R(r),(r=t=r.prev)===r.next)break;n=!0}}while(n||r!==t);return t}function c(e,t,n,r,o,i,a){if(e){!a&&i&&function(e,t,n,r){var o=e;do{0===o.z&&(o.z=w(o.x,o.y,t,n,r)),o.prevZ=o.prev,o.nextZ=o.next,o=o.next}while(o!==e);o.prevZ.nextZ=null,o.prevZ=null,function(e){var t,n,r,o,i,a,s,u,f=1;do{for(n=e,e=null,i=null,a=0;n;){for(a++,r=n,s=0,t=0;t<f&&(s++,r=r.nextZ);t++);for(u=f;s>0||u>0&&r;)0!==s&&(0===u||!r||n.z<=r.z)?(o=n,n=n.nextZ,s--):(o=r,r=r.nextZ,u--),i?i.nextZ=o:e=o,o.prevZ=i,i=o;n=r}i.nextZ=null,f*=2}while(a>1)}(o)}(e,r,o,i);for(var s,u,f=e;e.prev!==e.next;)if(s=e.prev,u=e.next,i?d(e,r,o,i):v(e))t.push(s.i/n|0),t.push(e.i/n|0),t.push(u.i/n|0),R(e),e=u.next,f=u.next;else if((e=u)===f){a?1===a?c(e=y(h(e),t,n),t,n,r,o,i,2):2===a&&p(e,t,n,r,o,i):c(h(e),t,n,r,o,i,1);break}}}function v(e){var t=e.prev,n=e,r=e.next;if(Z(t,n,r)>=0)return!1;for(var o=t.x,i=n.x,a=r.x,s=t.y,u=n.y,f=r.y,x=o<i?o<a?o:a:i<a?i:a,l=s<u?s<f?s:f:u<f?u:f,h=o>i?o>a?o:a:i>a?i:a,c=s>u?s>f?s:f:u>f?u:f,v=r.next;v!==t;){if(v.x>=x&&v.x<=h&&v.y>=l&&v.y<=c&&E(o,s,i,u,a,f,v.x,v.y)&&Z(v.prev,v,v.next)>=0)return!1;v=v.next}return!0}function d(e,t,n,r){var o=e.prev,i=e,a=e.next;if(Z(o,i,a)>=0)return!1;for(var s=o.x,u=i.x,f=a.x,x=o.y,l=i.y,h=a.y,c=s<u?s<f?s:f:u<f?u:f,v=x<l?x<h?x:h:l<h?l:h,d=s>u?s>f?s:f:u>f?u:f,y=x>l?x>h?x:h:l>h?l:h,p=w(c,v,t,n,r),b=w(d,y,t,n,r),g=e.prevZ,m=e.nextZ;g&&g.z>=p&&m&&m.z<=b;){if(g.x>=c&&g.x<=d&&g.y>=v&&g.y<=y&&g!==o&&g!==a&&E(s,x,u,l,f,h,g.x,g.y)&&Z(g.prev,g,g.next)>=0)return!1;if(g=g.prevZ,m.x>=c&&m.x<=d&&m.y>=v&&m.y<=y&&m!==o&&m!==a&&E(s,x,u,l,f,h,m.x,m.y)&&Z(m.prev,m,m.next)>=0)return!1;m=m.nextZ}for(;g&&g.z>=p;){if(g.x>=c&&g.x<=d&&g.y>=v&&g.y<=y&&g!==o&&g!==a&&E(s,x,u,l,f,h,g.x,g.y)&&Z(g.prev,g,g.next)>=0)return!1;g=g.prevZ}for(;m&&m.z<=b;){if(m.x>=c&&m.x<=d&&m.y>=v&&m.y<=y&&m!==o&&m!==a&&E(s,x,u,l,f,h,m.x,m.y)&&Z(m.prev,m,m.next)>=0)return!1;m=m.nextZ}return!0}function y(e,t,n){var r=e;do{var o=r.prev,i=r.next.next;!F(o,i)&&T(o,r,r.next,i)&&z(o,i)&&z(i,o)&&(t.push(o.i/n|0),t.push(r.i/n|0),t.push(i.i/n|0),R(r),R(r.next),r=e=i),r=r.next}while(r!==e);return h(r)}function p(e,t,n,r,o,i){var a=e;do{for(var s=a.next.next;s!==a.prev;){if(a.i!==s.i&&M(a,s)){var u=U(a,s);return a=h(a,a.next),u=h(u,u.next),c(a,t,n,r,o,i,0),void c(u,t,n,r,o,i,0)}s=s.next}a=a.next}while(a!==e)}function b(e,t){return e.x-t.x}function g(e,t){var n=function(e,t){var n,r=t,o=e.x,i=e.y,a=-1/0;do{if(i<=r.y&&i>=r.next.y&&r.next.y!==r.y){var s=r.x+(i-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(s<=o&&s>a&&(a=s,n=r.x<r.next.x?r:r.next,s===o))return n}r=r.next}while(r!==t);if(!n)return null;var u,f=n,x=n.x,l=n.y,h=1/0;r=n;do{o>=r.x&&r.x>=x&&o!==r.x&&E(i<l?o:a,i,x,l,i<l?a:o,i,r.x,r.y)&&(u=Math.abs(i-r.y)/(o-r.x),z(r,e)&&(u<h||u===h&&(r.x>n.x||r.x===n.x&&m(n,r)))&&(n=r,h=u)),r=r.next}while(r!==f);return n}(e,t);if(!n)return t;var r=U(n,e);return h(r,r.next),h(n,n.next)}function m(e,t){return Z(e.prev,e,t.prev)<0&&Z(t.next,e,e.next)<0}function w(e,t,n,r,o){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=(e-n)*o|0)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=(t-r)*o|0)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function A(e){var t=e,n=e;do{(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next}while(t!==e);return n}function E(e,t,n,r,o,i,a,s){return(o-a)*(t-s)>=(e-a)*(i-s)&&(e-a)*(r-s)>=(n-a)*(t-s)&&(n-a)*(i-s)>=(o-a)*(r-s)}function M(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){var n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&T(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}(e,t)&&(z(e,t)&&z(t,e)&&function(e,t){var n=e,r=!1,o=(e.x+t.x)/2,i=(e.y+t.y)/2;do{n.y>i!=n.next.y>i&&n.next.y!==n.y&&o<(n.next.x-n.x)*(i-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==e);return r}(e,t)&&(Z(e.prev,e,t.prev)||Z(e,t.prev,t))||F(e,t)&&Z(e.prev,e,e.next)>0&&Z(t.prev,t,t.next)>0)}function Z(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function F(e,t){return e.x===t.x&&e.y===t.y}function T(e,t,n,r){var o=S(Z(e,t,n)),i=S(Z(e,t,r)),a=S(Z(n,r,e)),s=S(Z(n,r,t));return o!==i&&a!==s||(!(0!==o||!I(e,n,t))||(!(0!==i||!I(e,r,t))||(!(0!==a||!I(n,e,r))||!(0!==s||!I(n,t,r)))))}function I(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function S(e){return e>0?1:e<0?-1:0}function z(e,t){return Z(e.prev,e,e.next)<0?Z(e,t,e.next)>=0&&Z(e,e.prev,t)>=0:Z(e,t,e.prev)<0||Z(e,e.next,t)<0}function U(e,t){var n=new B(e.i,e.x,e.y),r=new B(t.i,t.x,t.y),o=e.next,i=t.prev;return e.next=t,t.prev=e,n.next=o,o.prev=n,r.next=n,n.prev=r,i.next=r,r.prev=i,r}function k(e,t,n,r){var o=new B(e,t,n);return r?(o.next=r.next,o.prev=r,r.next.prev=o,r.next=o):(o.prev=o,o.next=o),o}function R(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function B(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function P(e,t,n,r){for(var o=0,i=t,a=n-r;i<n;i+=r)o+=(e[a]-e[i])*(e[i+1]+e[a+1]),a=i;return o}f.exports=x,f.exports.default=x,x.deviation=function(e,t,n,r){var o=t&&t.length,i=o?t[0]*n:e.length,a=Math.abs(P(e,0,i,n));if(o)for(var s=0,u=t.length;s<u;s++){var f=t[s]*n,x=s<u-1?t[s+1]*n:e.length;a-=Math.abs(P(e,f,x,n))}var l=0;for(s=0;s<r.length;s+=3){var h=r[s]*n,c=r[s+1]*n,v=r[s+2]*n;l+=Math.abs((e[h]-e[v])*(e[c+1]-e[h+1])-(e[h]-e[c])*(e[v+1]-e[h+1]))}return 0===a&&0===l?0:Math.abs((l-a)/a)},x.flatten=function(e){for(var t=e[0][0].length,n={vertices:[],holes:[],dimensions:t},r=0,o=0;o<e.length;o++){for(var i=0;i<e[o].length;i++)for(var a=0;a<t;a++)n.vertices.push(e[o][i][a]);o>0&&(r+=e[o-1].length,n.holes.push(r))}return n};var N=u(f.exports);const _=[],O={vertexPosition:0,indexPosition:0};function q(e,t,n,r,o){e[t+0]=n,e[t+1]=r,e[t+2]=o}function L(e,t,n,r,o,i){const a=3+o,s=e[t+0],u=e[t+1],f=_;f.length=o;for(let n=0;n<f.length;n++)f[n]=e[t+2+n];let x=i?i.vertexPosition:0,l=i?i.indexPosition:0;const h=x/a;return q(n,x,s,u,0),f.length&&n.set(f,x+3),x+=a,q(n,x,s,u,1),f.length&&n.set(f,x+3),x+=a,q(n,x,s,u,2),f.length&&n.set(f,x+3),x+=a,q(n,x,s,u,3),f.length&&n.set(f,x+3),x+=a,r[l++]=h,r[l++]=h+1,r[l++]=h+3,r[l++]=h+1,r[l++]=h+2,r[l++]=h+3,O.vertexPosition=x,O.indexPosition=l,O}function C(e,t,n,r,o,i,s,u,f,x){const l=5+u.length,h=i.length/l,c=[e[t+0],e[t+1]],v=[e[n],e[n+1]],d=a(x,[...c]),y=a(x,[...v]);function p(e,t,n){const r=1e4;return Math.round(1500*t)+Math.round(1500*n)*r+e*r*r}function b(e,t,n){const r=Math.sqrt((t[0]-e[0])*(t[0]-e[0])+(t[1]-e[1])*(t[1]-e[1])),o=[(t[0]-e[0])/r,(t[1]-e[1])/r],i=[-o[1],o[0]],a=Math.sqrt((n[0]-e[0])*(n[0]-e[0])+(n[1]-e[1])*(n[1]-e[1])),s=[(n[0]-e[0])/a,(n[1]-e[1])/a],u=0===r||0===a?0:Math.acos((f=s[0]*o[0]+s[1]*o[1],x=-1,l=1,Math.min(Math.max(f,x),l)));var f,x,l;return s[0]*i[0]+s[1]*i[1]>0?u:2*Math.PI-u}const g=null!==o;let m=0,w=0;if(null!==r){m=b(d,y,a(x,[...[e[r],e[r+1]]]))}if(g){w=b(y,d,a(x,[...[e[o],e[o+1]]]))}i.push(c[0],c[1],v[0],v[1],p(0,m,w)),i.push(...u),i.push(c[0],c[1],v[0],v[1],p(1,m,w)),i.push(...u),i.push(c[0],c[1],v[0],v[1],p(2,m,w)),i.push(...u),i.push(c[0],c[1],v[0],v[1],p(3,m,w)),i.push(...u),s.push(h,h+1,h+2,h+1,h+3,h+2)}function G(e,t,n,r,o){const i=2+o;let a=t;const s=e.slice(a,a+o);a+=o;const u=e[a++];let f=0;const x=new Array(u-1);for(let t=0;t<u;t++)f+=e[a++],t<u-1&&(x[t]=f);const l=e.slice(a,a+2*f),h=N(l,x,2);for(let e=0;e<h.length;e++)r.push(h[e]+n.length/i);for(let e=0;e<l.length;e+=2)n.push(l[e],l[e+1],...s);return a+2*f}const j=self;j.onmessage=r=>{const o=r.data;switch(o.type){case t:{const e=3,t=2,n=o.customAttributesSize,r=t+n,i=new Float32Array(o.renderInstructions),a=i.length/r,s=4*a*(n+e),u=new Uint32Array(6*a),f=new Float32Array(s);let x;for(let e=0;e<i.length;e+=r)x=L(i,e,f,u,n,x);const l=Object.assign({vertexBuffer:f.buffer,indexBuffer:u.buffer,renderInstructions:i.buffer},o);j.postMessage(l,[f.buffer,u.buffer,i.buffer]);break}case n:{const e=[],t=[],n=o.customAttributesSize,r=2,i=new Float32Array(o.renderInstructions);let a=0;const u=o.renderInstructionsTransform,f=[1,0,0,1,0,0];let x,l;for(s(f,u);a<i.length;){l=Array.from(i.slice(a,a+n)),a+=n,x=i[a++];for(let n=0;n<x-1;n++)C(i,a+n*r,a+(n+1)*r,n>0?a+(n-1)*r:null,n<x-2?a+(n+2)*r:null,e,t,l,0,f);a+=x*r}const h=Uint32Array.from(t),c=Float32Array.from(e),v=Object.assign({vertexBuffer:c.buffer,indexBuffer:h.buffer,renderInstructions:i.buffer},o);j.postMessage(v,[c.buffer,h.buffer,i.buffer]);break}case e:{const e=[],t=[],n=o.customAttributesSize,r=new Float32Array(o.renderInstructions);let i=0;for(;i<r.length;)i=G(r,i,e,t,n);const a=Uint32Array.from(t),s=Float32Array.from(e),u=Object.assign({vertexBuffer:s.buffer,indexBuffer:a.buffer,renderInstructions:r.buffer},o);j.postMessage(u,[s.buffer,a.buffer,r.buffer]);break}}};\";\n          return new Worker(typeof Blob === 'undefined'\n            ? 'data:application/javascript;base64,' + Buffer.from(source, 'binary').toString('base64')\n            : URL.createObjectURL(new Blob([source], {type: 'application/javascript'})));\n        }\n      \n","/**\n * @module ol/layer/Heatmap\n */\nimport BaseVector from './BaseVector.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"../source/Vector.js\").default<import(\"../geom/Point.js\").default>} [source] Point source.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius',\n};\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {BaseVector<import(\"../source/Vector.js\").default, WebGLPointsLayerRenderer>}\n * @api\n */\nclass Heatmap extends BaseVector {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.weight;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.gradient_ = null;\n\n    this.addChangeListener(Property.GRADIENT, this.handleGradientChanged_);\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    const weight = options.weight ? options.weight : 'weight';\n    if (typeof weight === 'string') {\n      this.weightFunction_ = function (feature) {\n        return feature.get(weight);\n      };\n    } else {\n      this.weightFunction_ = weight;\n    }\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  getBlur() {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  }\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array<string>} Colors.\n   * @api\n   * @observable\n   */\n  getGradient() {\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n  }\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  getRadius() {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  }\n\n  /**\n   * @private\n   */\n  handleGradientChanged_() {\n    this.gradient_ = createGradient(this.getGradient());\n  }\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  setBlur(blur) {\n    this.set(Property.BLUR, blur);\n  }\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  setGradient(colors) {\n    this.set(Property.GRADIENT, colors);\n  }\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  setRadius(radius) {\n    this.set(Property.RADIUS, radius);\n  }\n\n  createRenderer() {\n    return new WebGLPointsLayerRenderer(this, {\n      className: this.getClassName(),\n      attributes: [\n        {\n          name: 'weight',\n          callback: (feature) => {\n            const weight = this.weightFunction_(feature);\n            return weight !== undefined ? clamp(weight, 0, 1) : 1;\n          },\n        },\n      ],\n      hitDetectionEnabled: true,\n      vertexShader: `\n        precision mediump float;\n        uniform mat4 u_projectionMatrix;\n        uniform mat4 u_offsetScaleMatrix;\n        uniform float u_size;\n        attribute vec2 a_position;\n        attribute float a_index;\n        attribute float a_weight;\n        attribute vec4 a_hitColor;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n        varying vec4 v_hitColor;\n\n        void main(void) {\n          mat4 offsetMatrix = u_offsetScaleMatrix;\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\n          v_texCoord = vec2(u, v);\n          v_hitColor = a_hitColor;\n          v_weight = a_weight;\n        }`,\n      fragmentShader: `\n        precision mediump float;\n        uniform float u_blurSlope;\n        uniform mediump int u_hitDetection;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n        varying vec4 v_hitColor;\n\n        void main(void) {\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\n          gl_FragColor = vec4(alpha, alpha, alpha, alpha);\n          if (u_hitDetection > 0) {\n            if (alpha < 0.05) {\n              discard;\n            }\n            gl_FragColor = v_hitColor;\n          }\n      }`,\n      uniforms: {\n        u_size: () => {\n          return (this.get(Property.RADIUS) + this.get(Property.BLUR)) * 2;\n        },\n        u_blurSlope: () => {\n          return (\n            this.get(Property.RADIUS) / Math.max(1, this.get(Property.BLUR))\n          );\n        },\n      },\n      postProcesses: [\n        {\n          fragmentShader: `\n            precision mediump float;\n\n            uniform sampler2D u_image;\n            uniform sampler2D u_gradientTexture;\n            uniform float u_opacity;\n\n            varying vec2 v_texCoord;\n\n            void main() {\n              vec4 color = texture2D(u_image, v_texCoord);\n              gl_FragColor.a = color.a * u_opacity;\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\n              gl_FragColor.rgb *= gl_FragColor.a;\n            }`,\n          uniforms: {\n            u_gradientTexture: () => {\n              return this.gradient_;\n            },\n            u_opacity: () => {\n              return this.getOpacity();\n            },\n          },\n        },\n      ],\n    });\n  }\n\n  renderDeclutter() {}\n}\n\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {HTMLCanvasElement} canvas with gradient texture.\n */\nfunction createGradient(colors) {\n  const width = 1;\n  const height = 256;\n  const context = createCanvasContext2D(width, height);\n\n  const gradient = context.createLinearGradient(0, 0, width, height);\n  const step = 1 / (colors.length - 1);\n  for (let i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.canvas;\n}\n\nexport default Heatmap;\n","/**\n * @module ol/layer/VectorImage\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorImageLayerRenderer from '../renderer/canvas/VectorImageLayer.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text on this layer. The priority is defined\n * by the `zIndex` of the style and the render order of features. Higher z-index means higher priority.\n * Within the same z-index, a feature rendered before another has higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {number} [imageRatio=1] Ratio by which the rendered extent should be larger than the\n * viewport extent. A larger ratio avoids cut images during panning, but will cause a decrease in performance.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, to an image. This layer type provides great performance\n * during panning and zooming, but point symbols and texts are always rotated with the view and\n * pixels are scaled during zoom animations. For more accurate rendering of vector data, use\n * {@link module:ol/layer/Vector~VectorLayer} instead.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorImageLayerRenderer>}\n * @api\n */\nclass VectorImageLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.imageRatio;\n    super(baseOptions);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.imageRatio_ =\n      options.imageRatio !== undefined ? options.imageRatio : 1;\n  }\n\n  /**\n   * @return {number} Ratio between rendered extent size and viewport extent size.\n   */\n  getImageRatio() {\n    return this.imageRatio_;\n  }\n\n  createRenderer() {\n    return new CanvasVectorImageLayerRenderer(this);\n  }\n}\n\nexport default VectorImageLayer;\n","/**\n * @module ol/interaction/DblClickDragZoom\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds. *\n * @property {number} [delta=1] The zoom delta applied on move of one pixel. *\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by double tap/clik then drag up/down\n * with one finger/left mouse.\n * @api\n */\nclass DblClickDragZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleDeltaByPixel_ = options.delta ? options.delta : 0.01;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.handlingDownUpSequence_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.handlingDoubleDownSequence_ = false;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.doubleTapTimeoutId_ = undefined;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent  map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence_) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence_ = handledUp;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        if (this.handlingDoubleDownSequence_) {\n          this.handlingDoubleDownSequence_ = false;\n          const handled = this.handleDownEvent(mapBrowserEvent);\n          this.handlingDownUpSequence_ = handled;\n          stopEvent = this.stopDown(handled);\n        } else {\n          stopEvent = this.stopDown(false);\n          this.waitForDblTap_();\n        }\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.down_.originalEvent;\n    const distance = touch0.clientY - touch1.clientY;\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta =\n        1 - (this.lastDistance_ - distance) * this.scaleDeltaByPixel_;\n    }\n    this.lastDistance_ = distance;\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale, bypass the resolution constraint\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    map.render();\n    view.adjustResolutionInternal(scaleDelta);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length == 1) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      this.down_ = mapBrowserEvent;\n      if (!this.handlingDownUpSequence_) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer up events zooming out.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length == 0) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      this.handlingDownUpSequence_ = false;\n      this.handlingDoubleDownSequence_ = false;\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = Object.values(this.trackedPointers_);\n    }\n  }\n\n  /**\n   * Wait the second double finger tap.\n   * @private\n   */\n  waitForDblTap_() {\n    if (this.doubleTapTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.doubleTapTimeoutId_);\n      this.doubleTapTimeoutId_ = undefined;\n    } else {\n      this.handlingDoubleDownSequence_ = true;\n      this.doubleTapTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.handlingDoubleDownSequence_ = false;\n    this.doubleTapTimeoutId_ = undefined;\n  }\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default DblClickDragZoom;\n","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport {TRUE} from '../functions.js';\nimport {get as getProjection, getUserProjection} from '../proj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default|import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors\n * (and/or formats pre-constructed with options).\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n/**\n * @enum {string}\n */\nconst DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nexport class DragAndDropEvent extends Event {\n  /**\n   * @param {DragAndDropEventType} type Type.\n   * @param {File} file File.\n   * @param {Array<import(\"../Feature.js\").default>} [features] Features.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   */\n  constructor(type, file, features, projection) {\n    super(type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     * @api\n     */\n    this.projection = projection;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'addfeatures', DragAndDropEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'addfeatures', Return>} DragAndDropOnSignature\n */\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * @api\n *\n * @fires DragAndDropEvent\n */\nclass DragAndDrop extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      handleEvent: TRUE,\n    });\n\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragAndDropOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.readAsBuffer_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../format/Feature.js\").default>}\n     */\n    this.formats_ = [];\n    const formatConstructors = options.formatConstructors\n      ? options.formatConstructors\n      : [];\n    for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      let format = formatConstructors[i];\n      if (typeof format === 'function') {\n        format = new format();\n      }\n      this.formats_.push(format);\n      this.readAsBuffer_ =\n        this.readAsBuffer_ || format.getType() === 'arraybuffer';\n    }\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = options.projection\n      ? getProjection(options.projection)\n      : null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../source/Vector.js\").default}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.target = options.target ? options.target : null;\n  }\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  handleResult_(file, event) {\n    const result = event.target.result;\n    const map = this.getMap();\n    let projection = this.projection_;\n    if (!projection) {\n      projection = getUserProjection();\n      if (!projection) {\n        const view = map.getView();\n        projection = view.getProjection();\n      }\n    }\n\n    let text;\n    const formats = this.formats_;\n    for (let i = 0, ii = formats.length; i < ii; ++i) {\n      const format = formats[i];\n      let input = result;\n      if (this.readAsBuffer_ && format.getType() !== 'arraybuffer') {\n        if (text === undefined) {\n          text = new TextDecoder().decode(result);\n        }\n        input = text;\n      }\n      const features = this.tryReadFeatures_(format, input, {\n        featureProjection: projection,\n      });\n      if (features && features.length > 0) {\n        if (this.source_) {\n          this.source_.clear();\n          this.source_.addFeatures(features);\n        }\n        this.dispatchEvent(\n          new DragAndDropEvent(\n            DragAndDropEventType.ADD_FEATURES,\n            file,\n            features,\n            projection\n          )\n        );\n        break;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  registerListeners_() {\n    const map = this.getMap();\n    if (map) {\n      const dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [\n        listen(dropArea, EventType.DROP, this.handleDrop, this),\n        listen(dropArea, EventType.DRAGENTER, this.handleStop, this),\n        listen(dropArea, EventType.DRAGOVER, this.handleStop, this),\n        listen(dropArea, EventType.DROP, this.handleStop, this),\n      ];\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (!this.getActive() && active) {\n      this.registerListeners_();\n    }\n    if (this.getActive() && !active) {\n      this.unregisterListeners_();\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.unregisterListeners_();\n    super.setMap(map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  }\n\n  /**\n   * @param {import(\"../format/Feature.js\").default} format Format.\n   * @param {string} text Text.\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n   * @private\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  tryReadFeatures_(format, text, options) {\n    try {\n      return (\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        (format.readFeatures(text, options))\n      );\n    } catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * @private\n   */\n  unregisterListeners_() {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleDrop(event) {\n    const files = event.dataTransfer.files;\n    for (let i = 0, ii = files.length; i < ii; ++i) {\n      const file = files.item(i);\n      const reader = new FileReader();\n      reader.addEventListener(\n        EventType.LOAD,\n        this.handleResult_.bind(this, file)\n      );\n      if (this.readAsBuffer_) {\n        reader.readAsArrayBuffer(file);\n      } else {\n        reader.readAsText(file);\n      }\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleStop(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n  }\n}\n\nexport default DragAndDrop;\n","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport PointerInteraction from './Pointer.js';\nimport {mouseOnly, shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nclass DragRotateAndZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastMagnitude_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const deltaX = offset[0] - size[0] / 2;\n    const deltaY = size[1] / 2 - offset[1];\n    const theta = Math.atan2(deltaY, deltaX);\n    const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    const view = map.getView();\n    if (this.lastAngle_ !== undefined) {\n      const angleDelta = this.lastAngle_ - theta;\n      view.adjustRotationInternal(angleDelta);\n    }\n    this.lastAngle_ = theta;\n    if (this.lastMagnitude_ !== undefined) {\n      view.adjustResolutionInternal(this.lastMagnitude_ / magnitude);\n    }\n    if (this.lastMagnitude_ !== undefined) {\n      this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n    }\n    this.lastMagnitude_ = magnitude;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n    view.endInteraction(this.duration_, direction);\n    this.lastScaleDelta_ = 0;\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (this.condition_(mapBrowserEvent)) {\n      mapBrowserEvent.map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      this.lastMagnitude_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotateAndZoom;\n","/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {\n  always,\n  never,\n  noModifierKeys,\n  shiftKeyOnly,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../extent.js';\nimport {clamp, squaredDistance, toFixed} from '../math.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {\n  distance,\n  squaredDistance as squaredCoordinateDistance,\n} from '../coordinate.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/Geometry.js\").Type} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition.noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition.shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean|import(\"../events/condition.js\").Condition} [trace=false] Trace a portion of another geometry.\n * Ignored when in freehand mode.\n * @property {VectorSource} [traceSource] Source for features to trace.  If tracing is active and a `traceSource` is\n * not provided, the interaction's `source` will be used.  Tracing requires that the interaction is configured with\n * either a `traceSource` or a `source`.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the draw interaction.\n */\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n/**\n * @typedef {Object} TraceState\n * @property {boolean} active Tracing active.\n * @property {import(\"../pixel.js\").Pixel} [startPx] The initially clicked pixel location.\n * @property {Array<TraceTarget>} [targets] Targets available for tracing.\n * @property {number} [targetIndex] The index of the currently traced target.  A value of -1 indicates\n * that no trace target is active.\n */\n\n/**\n * @typedef {Object} TraceTarget\n * @property {Array<import(\"../coordinate.js\").Coordinate>} coordinates Target coordinates.\n * @property {boolean} ring The target coordinates are a linear ring.\n * @property {number} startIndex The index of first traced coordinate.  A fractional index represents an\n * edge intersection.  Index values for rings will wrap (may be negative or larger than coordinates length).\n * @property {number} endIndex The index of last traced coordinate.  Details from startIndex also apply here.\n */\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'Polygon' | 'Circle'} Mode\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n */\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend',\n  /**\n   * Triggered upon feature draw abortion\n   * @event DrawEvent#drawabort\n   * @api\n   */\n  DRAWABORT: 'drawabort',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nexport class DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n  }\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {Array<Feature>} features The candidate features.\n * @return {Array<TraceTarget>} The trace targets.\n */\nfunction getTraceTargets(coordinate, features) {\n  /**\n   * @type {Array<TraceTarget>}\n   */\n  const targets = [];\n\n  for (let i = 0; i < features.length; ++i) {\n    const feature = features[i];\n    const geometry = feature.getGeometry();\n    appendGeometryTraceTargets(coordinate, geometry, targets);\n  }\n\n  return targets;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} a One coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b Another coordinate.\n * @return {number} The squared distance between the two coordinates.\n */\nfunction getSquaredDistance(a, b) {\n  return squaredDistance(a[0], a[1], b[0], b[1]);\n}\n\n/**\n * @param {LineCoordType} coordinates The ring coordinates.\n * @param {number} index The index.  May be wrapped.\n * @return {import(\"../coordinate.js\").Coordinate} The coordinate.\n */\nfunction getCoordinate(coordinates, index) {\n  const count = coordinates.length;\n  if (index < 0) {\n    return coordinates[index + count];\n  }\n  if (index >= count) {\n    return coordinates[index - count];\n  }\n  return coordinates[index];\n}\n\n/**\n * Get the cumulative squared distance along a ring path.  The end index index may be \"wrapped\" and it may\n * be less than the start index to indicate the direction of travel.  The start and end index may have\n * a fractional part to indicate a point between two coordinates.\n * @param {LineCoordType} coordinates Ring coordinates.\n * @param {number} startIndex The start index.\n * @param {number} endIndex The end index.\n * @return {number} The cumulative squared distance along the ring path.\n */\nfunction getCumulativeSquaredDistance(coordinates, startIndex, endIndex) {\n  let lowIndex, highIndex;\n  if (startIndex < endIndex) {\n    lowIndex = startIndex;\n    highIndex = endIndex;\n  } else {\n    lowIndex = endIndex;\n    highIndex = startIndex;\n  }\n  const lowWholeIndex = Math.ceil(lowIndex);\n  const highWholeIndex = Math.floor(highIndex);\n\n  if (lowWholeIndex > highWholeIndex) {\n    // both start and end are on the same segment\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    return getSquaredDistance(start, end);\n  }\n\n  let sd = 0;\n\n  if (lowIndex < lowWholeIndex) {\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = getCoordinate(coordinates, lowWholeIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  if (highWholeIndex < highIndex) {\n    const start = getCoordinate(coordinates, highWholeIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  for (let i = lowWholeIndex; i < highWholeIndex - 1; ++i) {\n    const start = getCoordinate(coordinates, i);\n    const end = getCoordinate(coordinates, i + 1);\n    sd += getSquaredDistance(start, end);\n  }\n\n  return sd;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {import(\"../geom/Geometry.js\").default} geometry The candidate geometry.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendGeometryTraceTargets(coordinate, geometry, targets) {\n  if (geometry instanceof LineString) {\n    appendTraceTarget(coordinate, geometry.getCoordinates(), false, targets);\n    return;\n  }\n  if (geometry instanceof MultiLineString) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], false, targets);\n    }\n    return;\n  }\n  if (geometry instanceof Polygon) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], true, targets);\n    }\n    return;\n  }\n  if (geometry instanceof MultiPolygon) {\n    const polys = geometry.getCoordinates();\n    for (let i = 0, ii = polys.length; i < ii; ++i) {\n      const coordinates = polys[i];\n      for (let j = 0, jj = coordinates.length; j < jj; ++j) {\n        appendTraceTarget(coordinate, coordinates[j], true, targets);\n      }\n    }\n    return;\n  }\n  if (geometry instanceof GeometryCollection) {\n    const geometries = geometry.getGeometries();\n    for (let i = 0; i < geometries.length; ++i) {\n      appendGeometryTraceTargets(coordinate, geometries[i], targets);\n    }\n    return;\n  }\n  // other types cannot be traced\n}\n\n/**\n * @typedef {Object} TraceTargetUpdateInfo\n * @property {number} index The new target index.\n * @property {number} endIndex The new segment end index.\n */\n\n/**\n * @type {TraceTargetUpdateInfo}\n */\nconst sharedUpdateInfo = {index: -1, endIndex: NaN};\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {TraceState} traceState The trace state.\n * @param {import(\"../Map.js\").default} map The map.\n * @param {number} snapTolerance The snap tolerance.\n * @return {TraceTargetUpdateInfo} Information about the new trace target.  The returned\n * object is reused between calls and must not be modified by the caller.\n */\nfunction getTraceTargetUpdate(coordinate, traceState, map, snapTolerance) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n\n  let closestTargetDistance = Infinity;\n\n  let newTargetIndex = -1;\n  let newEndIndex = NaN;\n\n  for (\n    let targetIndex = 0;\n    targetIndex < traceState.targets.length;\n    ++targetIndex\n  ) {\n    const target = traceState.targets[targetIndex];\n    const coordinates = target.coordinates;\n\n    let minSegmentDistance = Infinity;\n    let endIndex;\n    for (\n      let coordinateIndex = 0;\n      coordinateIndex < coordinates.length - 1;\n      ++coordinateIndex\n    ) {\n      const start = coordinates[coordinateIndex];\n      const end = coordinates[coordinateIndex + 1];\n      const rel = getPointSegmentRelationship(x, y, start, end);\n      if (rel.squaredDistance < minSegmentDistance) {\n        minSegmentDistance = rel.squaredDistance;\n        endIndex = coordinateIndex + rel.along;\n      }\n    }\n\n    if (minSegmentDistance < closestTargetDistance) {\n      closestTargetDistance = minSegmentDistance;\n      if (target.ring && traceState.targetIndex === targetIndex) {\n        // same target, maintain the same trace direction\n        if (target.endIndex > target.startIndex) {\n          // forward trace\n          if (endIndex < target.startIndex) {\n            endIndex += coordinates.length;\n          }\n        } else if (target.endIndex < target.startIndex) {\n          // reverse trace\n          if (endIndex > target.startIndex) {\n            endIndex -= coordinates.length;\n          }\n        }\n      }\n      newEndIndex = endIndex;\n      newTargetIndex = targetIndex;\n    }\n  }\n\n  const newTarget = traceState.targets[newTargetIndex];\n  let considerBothDirections = newTarget.ring;\n  if (traceState.targetIndex === newTargetIndex && considerBothDirections) {\n    // only consider switching trace direction if close to the start\n    const newCoordinate = interpolateCoordinate(\n      newTarget.coordinates,\n      newEndIndex\n    );\n    const pixel = map.getPixelFromCoordinate(newCoordinate);\n    if (distance(pixel, traceState.startPx) > snapTolerance) {\n      considerBothDirections = false;\n    }\n  }\n\n  if (considerBothDirections) {\n    const coordinates = newTarget.coordinates;\n    const count = coordinates.length;\n    const startIndex = newTarget.startIndex;\n    const endIndex = newEndIndex;\n    if (startIndex < endIndex) {\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex\n      );\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex - count\n      );\n      if (reverseDistance < forwardDistance) {\n        newEndIndex -= count;\n      }\n    } else {\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex\n      );\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex + count\n      );\n      if (forwardDistance < reverseDistance) {\n        newEndIndex += count;\n      }\n    }\n  }\n\n  sharedUpdateInfo.index = newTargetIndex;\n  sharedUpdateInfo.endIndex = newEndIndex;\n  return sharedUpdateInfo;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The clicked coordinate.\n * @param {Array<import(\"../coordinate.js\").Coordinate>} coordinates The geometry component coordinates.\n * @param {boolean} ring The coordinates represent a linear ring.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendTraceTarget(coordinate, coordinates, ring, targets) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const start = coordinates[i];\n    const end = coordinates[i + 1];\n    const rel = getPointSegmentRelationship(x, y, start, end);\n    if (rel.squaredDistance === 0) {\n      const index = i + rel.along;\n      targets.push({\n        coordinates: coordinates,\n        ring: ring,\n        startIndex: index,\n        endIndex: index,\n      });\n      return;\n    }\n  }\n}\n\n/**\n * @typedef {Object} PointSegmentRelationship\n * @property {number} along The closest point expressed as a fraction along the segment length.\n * @property {number} squaredDistance The squared distance of the point to the segment.\n */\n\n/**\n * @type {PointSegmentRelationship}\n */\nconst sharedRel = {along: 0, squaredDistance: 0};\n\n/**\n * @param {number} x The point x.\n * @param {number} y The point y.\n * @param {import(\"../coordinate.js\").Coordinate} start The segment start.\n * @param {import(\"../coordinate.js\").Coordinate} end The segment end.\n * @return {PointSegmentRelationship} The point segment relationship.  The returned object is\n * shared between calls and must not be modified by the caller.\n */\nfunction getPointSegmentRelationship(x, y, start, end) {\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  let along = 0;\n  let px = x1;\n  let py = y1;\n  if (dx !== 0 || dy !== 0) {\n    along = clamp(((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy), 0, 1);\n    px += dx * along;\n    py += dy * along;\n  }\n\n  sharedRel.along = along;\n  sharedRel.squaredDistance = toFixed(squaredDistance(x, y, px, py), 10);\n  return sharedRel;\n}\n\n/**\n * @param {LineCoordType} coordinates The coordinates.\n * @param {number} index The index.  May be fractional and may wrap.\n * @return {import(\"../coordinate.js\").Coordinate} The interpolated coordinate.\n */\nfunction interpolateCoordinate(coordinates, index) {\n  const count = coordinates.length;\n\n  let startIndex = Math.floor(index);\n  const along = index - startIndex;\n  if (startIndex >= count) {\n    startIndex -= count;\n  } else if (startIndex < 0) {\n    startIndex += count;\n  }\n\n  let endIndex = startIndex + 1;\n  if (endIndex >= count) {\n    endIndex -= count;\n  }\n\n  const start = coordinates[startIndex];\n  const x0 = start[0];\n  const y0 = start[1];\n  const end = coordinates[endIndex];\n  const dx = end[0] - x0;\n  const dy = end[1] - y0;\n\n  return [x0 + dx * along, y0 + dy * along];\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'drawabort'|'drawend'|'drawstart', DrawEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'drawabort'|'drawend'|'drawstart', Return>} DrawOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DrawOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * Pointer type of the last pointermove event\n     * @type {string}\n     * @private\n     */\n    this.pointerType_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {import(\"../geom/Geometry.js\").Type}\n     * @private\n     */\n    this.type_ = /** @type {import(\"../geom/Geometry.js\").Type} */ (\n      options.type\n    );\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints\n      ? options.minPoints\n      : this.mode_ === 'Polygon'\n      ? 3\n      : 2;\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ =\n      this.mode_ === 'Circle'\n        ? 2\n        : options.maxPoints\n        ? options.maxPoints\n        : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition\n      ? options.finishCondition\n      : TRUE;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      const mode = this.mode_;\n      if (mode === 'Circle') {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          const circle = geometry\n            ? /** @type {Circle} */ (geometry)\n            : new Circle([NaN, NaN]);\n          const center = fromUserCoordinate(coordinates[0], projection);\n          const squaredLength = squaredCoordinateDistance(\n            center,\n            fromUserCoordinate(coordinates[coordinates.length - 1], projection)\n          );\n          circle.setCenterAndRadius(\n            center,\n            Math.sqrt(squaredLength),\n            this.geometryLayout_\n          );\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        let Constructor;\n        if (mode === 'Point') {\n          Constructor = Point;\n        } else if (mode === 'LineString') {\n          Constructor = LineString;\n        } else if (mode === 'Polygon') {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          if (geometry) {\n            if (mode === 'Polygon') {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates(\n                  [coordinates[0].concat([coordinates[0][0]])],\n                  this.geometryLayout_\n                );\n              } else {\n                geometry.setCoordinates([], this.geometryLayout_);\n              }\n            } else {\n              geometry.setCoordinates(coordinates, this.geometryLayout_);\n            }\n          } else {\n            geometry = new Constructor(coordinates, this.geometryLayout_);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ =\n      options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature<import('../geom/SimpleGeometry.js').default>}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance\n      ? options.clickTolerance * options.clickTolerance\n      : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition\n        ? options.freehandCondition\n        : shiftKeyOnly;\n    }\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.traceCondition_;\n    this.setTrace(options.trace || false);\n\n    /**\n     * @type {TraceState}\n     * @private\n     */\n    this.traceState_ = {active: false};\n\n    /**\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.traceSource_ = options.traceSource || options.source || null;\n\n    this.addChangeListener(InteractionProperty.ACTIVE, this.updateState_);\n  }\n\n  /**\n   * Toggle tracing mode or set a tracing condition.\n   *\n   * @param {boolean|import(\"../events/condition.js\").Condition} trace A boolean to toggle tracing mode or an event\n   *     condition that will be checked when a feature is clicked to determine if tracing should be active.\n   */\n  setTrace(trace) {\n    let condition;\n    if (!trace) {\n      condition = never;\n    } else if (trace === true) {\n      condition = always;\n    } else {\n      condition = trace;\n    }\n    this.traceCondition_ = condition;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.originalEvent.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== 'Point' && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (\n      !this.freehand_ &&\n      this.lastDragTime_ &&\n      event.type === MapBrowserEventType.POINTERDRAG\n    ) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null\n    ) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN\n    ) {\n      pass = false;\n    } else if (move && this.getPointerCount() < 2) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        this.handlePointerMove_(event);\n        if (this.shouldHandle_) {\n          // Avoid page scrolling when freehand drawing on mobile\n          event.originalEvent.preventDefault();\n        }\n      } else if (\n        event.originalEvent.pointerType === 'mouse' ||\n        (event.type === MapBrowserEventType.POINTERDRAG &&\n          this.downTimeout_ === undefined)\n      ) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event.coordinate);\n      }\n      return true;\n    }\n\n    if (!this.condition_(event)) {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(() => {\n      this.handlePointerMove_(\n        new MapBrowserEvent(\n          MapBrowserEventType.POINTERMOVE,\n          event.map,\n          event.originalEvent,\n          false,\n          event.frameState\n        )\n      );\n    }, this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  deactivateTrace_() {\n    this.traceState_ = {active: false};\n  }\n\n  /**\n   * Activate or deactivate trace state based on a browser event.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  toggleTraceState_(event) {\n    if (!this.traceSource_ || !this.traceCondition_(event)) {\n      return;\n    }\n\n    if (this.traceState_.active) {\n      this.deactivateTrace_();\n      return;\n    }\n\n    const map = this.getMap();\n    const lowerLeft = map.getCoordinateFromPixel([\n      event.pixel[0] - this.snapTolerance_,\n      event.pixel[1] + this.snapTolerance_,\n    ]);\n    const upperRight = map.getCoordinateFromPixel([\n      event.pixel[0] + this.snapTolerance_,\n      event.pixel[1] - this.snapTolerance_,\n    ]);\n    const extent = boundingExtent([lowerLeft, upperRight]);\n    const features = this.traceSource_.getFeaturesInExtent(extent);\n    if (features.length === 0) {\n      return;\n    }\n\n    const targets = getTraceTargets(event.coordinate, features);\n    if (targets.length) {\n      this.traceState_ = {\n        active: true,\n        startPx: event.pixel.slice(),\n        targets: targets,\n        targetIndex: -1,\n      };\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} endIndex The new end index of the trace.\n   * @private\n   */\n  addOrRemoveTracedCoordinates_(target, endIndex) {\n    // three cases to handle:\n    //  1. traced in the same direction and points need adding\n    //  2. traced in the same direction and points need removing\n    //  3. traced in a new direction\n    const previouslyForward = target.startIndex <= target.endIndex;\n    const currentlyForward = target.startIndex <= endIndex;\n    if (previouslyForward === currentlyForward) {\n      // same direction\n      if (\n        (previouslyForward && endIndex > target.endIndex) ||\n        (!previouslyForward && endIndex < target.endIndex)\n      ) {\n        // case 1 - add new points\n        this.addTracedCoordinates_(target, target.endIndex, endIndex);\n      } else if (\n        (previouslyForward && endIndex < target.endIndex) ||\n        (!previouslyForward && endIndex > target.endIndex)\n      ) {\n        // case 2 - remove old points\n        this.removeTracedCoordinates_(endIndex, target.endIndex);\n      }\n    } else {\n      // case 3 - remove old points, add new points\n      this.removeTracedCoordinates_(target.startIndex, target.endIndex);\n      this.addTracedCoordinates_(target, target.startIndex, endIndex);\n    }\n  }\n\n  /**\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  removeTracedCoordinates_(fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    let remove = 0;\n    if (fromIndex < toIndex) {\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        end -= 1;\n      }\n      remove = end - start + 1;\n    } else {\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      remove = start - end + 1;\n    }\n\n    if (remove > 0) {\n      this.removeLastPoints_(remove);\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  addTracedCoordinates_(target, fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    const coordinates = [];\n    if (fromIndex < toIndex) {\n      // forward trace\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        // if end is snapped to a vertex, it will be added later\n        end -= 1;\n      }\n      for (let i = start; i <= end; ++i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    } else {\n      // reverse trace\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      for (let i = start; i >= end; --i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    }\n    if (coordinates.length) {\n      this.appendCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * Update the trace.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  updateTrace_(event) {\n    const traceState = this.traceState_;\n    if (!traceState.active) {\n      return;\n    }\n\n    if (traceState.targetIndex === -1) {\n      // check if we are ready to pick a target\n      if (distance(traceState.startPx, event.pixel) < this.snapTolerance_) {\n        return;\n      }\n    }\n\n    const updatedTraceTarget = getTraceTargetUpdate(\n      event.coordinate,\n      traceState,\n      this.getMap(),\n      this.snapTolerance_\n    );\n\n    if (traceState.targetIndex !== updatedTraceTarget.index) {\n      // target changed\n      if (traceState.targetIndex !== -1) {\n        // remove points added during previous trace\n        const oldTarget = traceState.targets[traceState.targetIndex];\n        this.removeTracedCoordinates_(oldTarget.startIndex, oldTarget.endIndex);\n      }\n      // add points for the new target\n      const newTarget = traceState.targets[updatedTraceTarget.index];\n      this.addTracedCoordinates_(\n        newTarget,\n        newTarget.startIndex,\n        updatedTraceTarget.endIndex\n      );\n    } else {\n      // target stayed the same\n      const target = traceState.targets[traceState.targetIndex];\n      this.addOrRemoveTracedCoordinates_(target, updatedTraceTarget.endIndex);\n    }\n\n    // modify the state with updated info\n    traceState.targetIndex = updatedTraceTarget.index;\n    const target = traceState.targets[traceState.targetIndex];\n    target.endIndex = updatedTraceTarget.endIndex;\n\n    // update event coordinate and pixel to match end point of final segment\n    const coordinate = interpolateCoordinate(\n      target.coordinates,\n      target.endIndex\n    );\n    const pixel = this.getMap().getPixelFromCoordinate(coordinate);\n    event.coordinate = coordinate;\n    event.pixel = [Math.round(pixel[0]), Math.round(pixel[1])];\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.getPointerCount() === 0) {\n      if (this.downTimeout_) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n\n      this.handlePointerMove_(event);\n      const tracing = this.traceState_.active;\n      this.toggleTraceState_(event);\n\n      if (this.shouldHandle_) {\n        const startingToDraw = !this.finishCoordinate_;\n        if (startingToDraw) {\n          this.startDrawing_(event.coordinate);\n        }\n        if (!startingToDraw && this.freehand_) {\n          this.finishDrawing();\n        } else if (\n          !this.freehand_ &&\n          (!startingToDraw || this.mode_ === 'Point')\n        ) {\n          if (this.atFinish_(event.pixel, tracing)) {\n            if (this.finishCondition_(event)) {\n              this.finishDrawing();\n            }\n          } else {\n            this.addToDrawing_(event.coordinate);\n          }\n        }\n        pass = false;\n      } else if (this.freehand_) {\n        this.abortDrawing();\n      }\n    }\n\n    if (!pass && this.stopClick_) {\n      event.preventDefault();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @private\n   */\n  handlePointerMove_(event) {\n    this.pointerType_ = event.originalEvent.pointerType;\n    if (\n      this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))\n    ) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_\n        ? squaredDistance > this.squaredClickTolerance_\n        : squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return;\n      }\n    }\n\n    if (!this.finishCoordinate_) {\n      this.createOrUpdateSketchPoint_(event.coordinate.slice());\n      return;\n    }\n\n    this.updateTrace_(event);\n    this.modifyDrawing_(event.coordinate);\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {boolean} [tracing] Drawing in trace mode (only stop if at the starting point).\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(pixel, tracing) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      const mode = this.mode_;\n      if (mode === 'Point') {\n        at = true;\n      } else if (mode === 'Circle') {\n        at = this.sketchCoords_.length === 2;\n      } else if (mode === 'LineString') {\n        potentiallyDone =\n          !tracing && this.sketchCoords_.length > this.minPoints_;\n      } else if (mode === 'Polygon') {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [\n          sketchCoords[0][0],\n          sketchCoords[0][sketchCoords[0].length - 2],\n        ];\n        if (tracing) {\n          potentiallyFinishCoordinates = [sketchCoords[0][0]];\n        } else {\n          potentiallyFinishCoordinates = [\n            sketchCoords[0][0],\n            sketchCoords[0][sketchCoords[0].length - 2],\n          ];\n        }\n      }\n      if (potentiallyDone) {\n        const map = this.getMap();\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../coordinate\").Coordinate} coordinates Coordinate.\n   * @private\n   */\n  createOrUpdateSketchPoint_(coordinates) {\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @private\n   */\n  createOrUpdateCustomSketchLine_(geometry) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature();\n    }\n    const ring = geometry.getLinearRing(0);\n    let sketchLineGeom = this.sketchLine_.getGeometry();\n    if (!sketchLineGeom) {\n      sketchLineGeom = new LineString(\n        ring.getFlatCoordinates(),\n        ring.getLayout()\n      );\n      this.sketchLine_.setGeometry(sketchLineGeom);\n    } else {\n      sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(),\n        ring.getFlatCoordinates()\n      );\n      sketchLineGeom.changed();\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n   * @private\n   */\n  startDrawing_(start) {\n    const projection = this.getMap().getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    while (start.length < stride) {\n      start.push(0);\n    }\n    this.finishCoordinate_ = start;\n    if (this.mode_ === 'Point') {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === 'Polygon') {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(\n      this.sketchCoords_,\n      undefined,\n      projection\n    );\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @private\n   */\n  modifyDrawing_(coordinate) {\n    const map = this.getMap();\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = map.getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    let coordinates, last;\n    while (coordinate.length < stride) {\n      coordinate.push(0);\n    }\n    if (this.mode_ === 'Point') {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(\n      /** @type {!LineCoordType} */ (this.sketchCoords_),\n      geometry,\n      projection\n    );\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    if (geometry.getType() === 'Polygon' && this.mode_ !== 'Polygon') {\n      this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n    } else if (this.sketchLineCoords_) {\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @private\n   */\n  addToDrawing_(coordinate) {\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let done;\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === 'LineString' || mode === 'Circle') {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (mode === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.createOrUpdateSketchPoint_(coordinate.slice());\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  }\n\n  /**\n   * @param {number} n The number of points to remove.\n   */\n  removeLastPoints_(n) {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    const mode = this.mode_;\n    for (let i = 0; i < n; ++i) {\n      let coordinates;\n      if (mode === 'LineString' || mode === 'Circle') {\n        coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n        coordinates.splice(-2, 1);\n        if (coordinates.length >= 2) {\n          this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n          const finishCoordinate = this.finishCoordinate_.slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        this.geometryFunction_(coordinates, geometry, projection);\n        if (geometry.getType() === 'Polygon' && this.sketchLine_) {\n          this.createOrUpdateCustomSketchLine_(\n            /** @type {Polygon} */ (geometry)\n          );\n        }\n      } else if (mode === 'Polygon') {\n        coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n        coordinates.splice(-2, 1);\n        const sketchLineGeom = this.sketchLine_.getGeometry();\n        if (coordinates.length >= 2) {\n          const finishCoordinate = coordinates[coordinates.length - 2].slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        sketchLineGeom.setCoordinates(coordinates);\n        this.geometryFunction_(this.sketchCoords_, geometry, projection);\n      }\n\n      if (coordinates.length === 1) {\n        this.abortDrawing();\n        break;\n      }\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn. Does not do anything when\n   * drawing POINT or MULTI_POINT geometries.\n   * @api\n   */\n  removeLastPoint() {\n    this.removeLastPoints_(1);\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    if (this.mode_ === 'LineString') {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === 'Polygon') {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === 'MultiPoint') {\n      sketchFeature.setGeometry(\n        new MultiPoint([/** @type {PointCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === 'MultiLineString') {\n      sketchFeature.setGeometry(\n        new MultiLineString([/** @type {LineCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === 'MultiPolygon') {\n      sketchFeature.setGeometry(\n        new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)])\n      );\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    this.deactivateTrace_();\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @api\n   */\n  abortDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (sketchFeature) {\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n    }\n  }\n\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon. If no geometry is being drawn, a new one will be created.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n   * the coordinate array.\n   * @api\n   */\n  appendCoordinates(coordinates) {\n    const mode = this.mode_;\n    const newDrawing = !this.sketchFeature_;\n    if (newDrawing) {\n      this.startDrawing_(coordinates[0]);\n    }\n    /** @type {LineCoordType} */\n    let sketchCoords;\n    if (mode === 'LineString' || mode === 'Circle') {\n      sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n    } else if (mode === 'Polygon') {\n      sketchCoords =\n        this.sketchCoords_ && this.sketchCoords_.length\n          ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n          : [];\n    } else {\n      return;\n    }\n\n    if (newDrawing) {\n      sketchCoords.shift();\n    }\n\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    sketchCoords.pop();\n\n    // Append coordinate list\n    for (let i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n\n    const ending = coordinates[coordinates.length - 1];\n    // Duplicate last coordinate for sketch drawing (cursor position)\n    this.addToDrawing_(ending);\n    this.modifyDrawing_(ending);\n  }\n\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.sketchPoint_ = new Feature(new Point(last));\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function (feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * {@link import(\"../geom/Circle.js\").Circle} geometry.\n * @param {number} [sides] Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number} [angle] Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(sides, angle) {\n  return function (coordinates, geometry, projection) {\n    const center = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[0],\n      projection\n    );\n    const end = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1],\n      projection\n    );\n    const radius = Math.sqrt(squaredCoordinateDistance(center, end));\n    geometry = geometry || fromCircle(new Circle(center), sides);\n\n    let internalAngle = angle;\n    if (!angle && angle !== 0) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      internalAngle = Math.atan2(y, x);\n    }\n    makeRegular(\n      /** @type {Polygon} */ (geometry),\n      center,\n      radius,\n      internalAngle\n    );\n\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return function (coordinates, geometry, projection) {\n    const extent = boundingExtent(\n      /** @type {LineCoordType} */ ([\n        coordinates[0],\n        coordinates[coordinates.length - 1],\n      ]).map(function (coordinate) {\n        return fromUserCoordinate(coordinate, projection);\n      })\n    );\n    const boxCoordinates = [\n      [\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent),\n      ],\n    ];\n    if (geometry) {\n      geometry.setCoordinates(boxCoordinates);\n    } else {\n      geometry = new Polygon(boxCoordinates);\n    }\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Get the drawing mode.  The mode for multi-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n      return 'Point';\n    case 'LineString':\n    case 'MultiLineString':\n      return 'LineString';\n    case 'Polygon':\n    case 'MultiPolygon':\n      return 'Polygon';\n    case 'Circle':\n      return 'Circle';\n    default:\n      throw new Error('Invalid type: ' + type);\n  }\n}\n\nexport default Draw;\n","/**\n * @module ol/interaction/Extent\n */\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {always} from '../events/condition.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {toUserExtent} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to the `Polygon` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to the `Point` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n/**\n * @enum {string}\n */\nconst ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event ExtentEvent#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nexport class ExtentEvent extends Event {\n  /**\n   * @param {import(\"../extent.js\").Extent} extent the new extent\n   */\n  constructor(extent) {\n    super(ExtentEventType.EXTENTCHANGED);\n\n    /**\n     * The current extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = extent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'extentchanged', ExtentEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'extentchanged', Return>} ExtentOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires ExtentEvent\n * @api\n */\nclass Extent extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ExtentOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * Condition\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * Extent of the drawn box\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.extent_ = null;\n\n    /**\n     * Handler for pointer move events\n     * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n     * @private\n     */\n    this.pointerHandler_ = null;\n\n    /**\n     * Pixel threshold to snap to extent\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Is the pointer snapped to an extent vertex\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Feature for displaying the visible extent\n     * @type {Feature}\n     * @private\n     */\n    this.extentFeature_ = null;\n\n    /**\n     * Feature for displaying the visible pointer\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    if (!options) {\n      options = {};\n    }\n\n    /**\n     * Layer for the extentFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.extentOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.boxStyle\n        ? options.boxStyle\n        : getDefaultExtentStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Layer for the vertexFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.vertexOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.pointerStyle\n        ? options.pointerStyle\n        : getDefaultPointerStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    if (options.extent) {\n      this.setExtent(options.extent);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n   * @param {import(\"../Map.js\").default} map map\n   * @return {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n   * @private\n   */\n  snapToVertex_(pixel, map) {\n    const pixelCoordinate = map.getCoordinateFromPixelInternal(pixel);\n    const sortByDistance = function (a, b) {\n      return (\n        squaredDistanceToSegment(pixelCoordinate, a) -\n        squaredDistanceToSegment(pixelCoordinate, b)\n      );\n    };\n    const extent = this.getExtentInternal();\n    if (extent) {\n      //convert extents to line segments and find the segment closest to pixelCoordinate\n      const segments = getSegments(extent);\n      segments.sort(sortByDistance);\n      const closestSegment = segments[0];\n\n      let vertex = closestOnSegment(pixelCoordinate, closestSegment);\n      const vertexPixel = map.getPixelFromCoordinateInternal(vertex);\n\n      //if the distance is within tolerance, snap to the segment\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        //test if we should further snap to a vertex\n        const pixel1 = map.getPixelFromCoordinateInternal(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinateInternal(closestSegment[1]);\n        const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex =\n            squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        }\n        return vertex;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n   * @private\n   */\n  handlePointerMove_(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    let vertex = this.snapToVertex_(pixel, map);\n    if (!vertex) {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n    }\n    this.createOrUpdatePointerFeature_(vertex);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent extent\n   * @return {Feature} extent as featrue\n   * @private\n   */\n  createOrUpdateExtentFeature_(extent) {\n    let extentFeature = this.extentFeature_;\n\n    if (!extentFeature) {\n      if (!extent) {\n        extentFeature = new Feature({});\n      } else {\n        extentFeature = new Feature(polygonFromExtent(extent));\n      }\n      this.extentFeature_ = extentFeature;\n      this.extentOverlay_.getSource().addFeature(extentFeature);\n    } else {\n      if (!extent) {\n        extentFeature.setGeometry(undefined);\n      } else {\n        extentFeature.setGeometry(polygonFromExtent(extent));\n      }\n    }\n    return extentFeature;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n   * @return {Feature} vertex as feature\n   * @private\n   */\n  createOrUpdatePointerFeature_(vertex) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(vertex));\n      this.vertexFeature_ = vertexFeature;\n      this.vertexOverlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(vertex);\n    }\n    return vertexFeature;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent || !this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    //display pointer (if not dragging)\n    if (\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    //call pointer to determine up/down/drag\n    super.handleEvent(mapBrowserEvent);\n    //return false to stop propagation\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    const extent = this.getExtentInternal();\n    let vertex = this.snapToVertex_(pixel, map);\n\n    //find the extent corner opposite the passed corner\n    const getOpposingPoint = function (point) {\n      let x_ = null;\n      let y_ = null;\n      if (point[0] == extent[0]) {\n        x_ = extent[2];\n      } else if (point[0] == extent[2]) {\n        x_ = extent[0];\n      }\n      if (point[1] == extent[1]) {\n        y_ = extent[3];\n      } else if (point[1] == extent[3]) {\n        y_ = extent[1];\n      }\n      if (x_ !== null && y_ !== null) {\n        return [x_, y_];\n      }\n      return null;\n    };\n    if (vertex && extent) {\n      const x =\n        vertex[0] == extent[0] || vertex[0] == extent[2] ? vertex[0] : null;\n      const y =\n        vertex[1] == extent[1] || vertex[1] == extent[3] ? vertex[1] : null;\n\n      //snap to point\n      if (x !== null && y !== null) {\n        this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n        //snap to edge\n      } else if (x !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([x, extent[1]]),\n          getOpposingPoint([x, extent[3]])\n        );\n      } else if (y !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([extent[0], y]),\n          getOpposingPoint([extent[2], y])\n        );\n      }\n      //no snap - new bbox\n    } else {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n      this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n      this.pointerHandler_ = getPointHandler(vertex);\n    }\n    return true; //event handled; start downup sequence\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (this.pointerHandler_) {\n      const pixelCoordinate = mapBrowserEvent.coordinate;\n      this.setExtent(this.pointerHandler_(pixelCoordinate));\n      this.createOrUpdatePointerFeature_(pixelCoordinate);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.pointerHandler_ = null;\n    //If bbox is zero area, set to null;\n    const extent = this.getExtentInternal();\n    if (!extent || getArea(extent) === 0) {\n      this.setExtent(null);\n    }\n    return false; //Stop handling downup sequence\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.extentOverlay_.setMap(map);\n    this.vertexOverlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection (or user projection if set)\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtent() {\n    return toUserExtent(\n      this.getExtentInternal(),\n      this.getMap().getView().getProjection()\n    );\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtentInternal() {\n    return this.extent_;\n  }\n\n  /**\n   * Manually sets the drawn extent, using the view projection.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent\n   * @api\n   */\n  setExtent(extent) {\n    //Null extent means no bbox\n    this.extent_ = extent ? extent : null;\n    this.createOrUpdateExtentFeature_(extent);\n    this.dispatchEvent(new ExtentEvent(this.extent_));\n  }\n}\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Polygon'];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function (point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  }\n  if (fixedP1[1] == fixedP2[1]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  }\n  return null;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [\n      [extent[0], extent[1]],\n      [extent[0], extent[3]],\n    ],\n    [\n      [extent[0], extent[3]],\n      [extent[2], extent[3]],\n    ],\n    [\n      [extent[2], extent[3]],\n      [extent[2], extent[1]],\n    ],\n    [\n      [extent[2], extent[1]],\n      [extent[0], extent[1]],\n    ],\n  ];\n}\n\nexport default Extent;\n","/**\n * @module ol/interaction/Link\n */\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport MapEventType from '../MapEventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {toFixed} from '../math.js';\n\n/**\n * @param {number} number A number.\n * @return {number} A number with at most 5 decimal places.\n */\nfunction to5(number) {\n  return toFixed(number, 5);\n}\n\n/**\n * @param {string} string A string.\n * @return {number} A number representing the string.\n */\nfunction readNumber(string) {\n  return parseFloat(string);\n}\n\n/**\n * @param {number} number A number.\n * @return {string} A string representing the number.\n */\nfunction writeNumber(number) {\n  return to5(number).toString();\n}\n\n/**\n * @param {number} a A number.\n * @param {number} b A number.\n * @return {boolean} The numbers are different.\n */\nfunction differentNumber(a, b) {\n  if (isNaN(a)) {\n    return false;\n  }\n  return a !== readNumber(writeNumber(b));\n}\n\n/**\n * @param {Array<number>} a An array of two numbers.\n * @param {Array<number>} b An array of two numbers.\n * @return {boolean} The arrays are different.\n */\nfunction differentArray(a, b) {\n  return differentNumber(a[0], b[0]) || differentNumber(a[1], b[1]);\n}\n\n/** @typedef {'x'|'y'|'z'|'r'|'l'} Params */\n\n/**\n * @typedef {Object} Options\n * @property {boolean|import('../View.js').AnimationOptions} [animate=true] Animate view transitions.\n * @property {Array<Params>} [params=['x', 'y', 'z', 'r', 'l']] Properties to track. Default is to track\n * `x` (center x), `y` (center y), `z` (zoom), `r` (rotation) and `l` (layers).\n * @property {boolean} [replace=false] Replace the current URL without creating the new entry in browser history.\n * By default, changes in the map state result in a new entry being added to the browser history.\n * @property {string} [prefix=''] By default, the URL will be updated with search parameters x, y, z, and r.  To\n * avoid collisions with existing search parameters that your application uses, you can supply a custom prefix for\n * the ones used by this interaction (e.g. 'ol:').\n */\n\n/**\n * @classdesc\n * An interaction that synchronizes the map state with the URL.\n *\n * @api\n */\nclass Link extends Interaction {\n  /**\n   * @param {Options} [options] Link options.\n   */\n  constructor(options) {\n    super();\n\n    options = Object.assign(\n      {\n        animate: true,\n        params: ['x', 'y', 'z', 'r', 'l'],\n        replace: false,\n        prefix: '',\n      },\n      options || {}\n    );\n\n    let animationOptions;\n    if (options.animate === true) {\n      animationOptions = {duration: 250};\n    } else if (!options.animate) {\n      animationOptions = null;\n    } else {\n      animationOptions = options.animate;\n    }\n\n    /**\n     * @type {import('../View.js').AnimationOptions|null}\n     * @private\n     */\n    this.animationOptions_ = animationOptions;\n\n    /**\n     * @type {Object<Params, boolean>}\n     * @private\n     */\n    this.params_ = options.params.reduce((acc, value) => {\n      acc[value] = true;\n      return acc;\n    }, {});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.replace_ = options.replace;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.prefix_ = options.prefix;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.initial_ = true;\n\n    this.updateState_ = this.updateState_.bind(this);\n  }\n\n  /**\n   * @private\n   * @param {string} name A parameter name.\n   * @return {string} A name with the prefix applied.\n   */\n  getParamName_(name) {\n    if (!this.prefix_) {\n      return name;\n    }\n    return this.prefix_ + name;\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   * @return {string|null} The parameter value.\n   */\n  get_(params, name) {\n    return params.get(this.getParamName_(name));\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   * @param {string} value The param value.\n   */\n  set_(params, name, value) {\n    if (!(name in this.params_)) {\n      return;\n    }\n    params.set(this.getParamName_(name), value);\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   */\n  delete_(params, name) {\n    if (!(name in this.params_)) {\n      return;\n    }\n    params.delete(this.getParamName_(name));\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      this.unregisterListeners_(oldMap);\n    }\n    if (map) {\n      this.initial_ = true;\n      this.updateState_();\n      this.registerListeners_(map);\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   * @private\n   */\n  registerListeners_(map) {\n    this.listenerKeys_.push(\n      listen(map, MapEventType.MOVEEND, this.updateUrl_, this),\n      listen(map.getLayerGroup(), EventType.CHANGE, this.updateUrl_, this),\n      listen(map, 'change:layergroup', this.handleChangeLayerGroup_, this)\n    );\n\n    if (!this.replace_) {\n      addEventListener('popstate', this.updateState_);\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   * @private\n   */\n  unregisterListeners_(map) {\n    for (let i = 0, ii = this.listenerKeys_.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys_[i]);\n    }\n    this.listenerKeys_.length = 0;\n\n    if (!this.replace_) {\n      removeEventListener('popstate', this.updateState_);\n    }\n\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    this.delete_(params, 'x');\n    this.delete_(params, 'y');\n    this.delete_(params, 'z');\n    this.delete_(params, 'r');\n    this.delete_(params, 'l');\n    window.history.replaceState(null, '', url);\n  }\n\n  /**\n   * @private\n   */\n  handleChangeLayerGroup_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    this.unregisterListeners_(map);\n    this.registerListeners_(map);\n    this.initial_ = true;\n    this.updateUrl_();\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    if (!view) {\n      return;\n    }\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n\n    let updateView = false;\n\n    /**\n     * @type {import('../View.js').AnimationOptions}\n     */\n    const viewProperties = {};\n\n    const zoom = readNumber(this.get_(params, 'z'));\n    if ('z' in this.params_ && differentNumber(zoom, view.getZoom())) {\n      updateView = true;\n      viewProperties.zoom = zoom;\n    }\n\n    const rotation = readNumber(this.get_(params, 'r'));\n    if ('r' in this.params_ && differentNumber(rotation, view.getRotation())) {\n      updateView = true;\n      viewProperties.rotation = rotation;\n    }\n\n    const center = [\n      readNumber(this.get_(params, 'x')),\n      readNumber(this.get_(params, 'y')),\n    ];\n    if (\n      ('x' in this.params_ || 'y' in this.params_) &&\n      differentArray(center, view.getCenter())\n    ) {\n      updateView = true;\n      viewProperties.center = center;\n    }\n\n    if (updateView) {\n      if (!this.initial_ && this.animationOptions_) {\n        view.animate(Object.assign(viewProperties, this.animationOptions_));\n      } else {\n        if (viewProperties.center) {\n          view.setCenter(viewProperties.center);\n        }\n        if ('zoom' in viewProperties) {\n          view.setZoom(viewProperties.zoom);\n        }\n        if ('rotation' in viewProperties) {\n          view.setRotation(viewProperties.rotation);\n        }\n      }\n    }\n\n    const layers = map.getAllLayers();\n    const layersParam = this.get_(params, 'l');\n    if (\n      'l' in this.params_ &&\n      layersParam &&\n      layersParam.length === layers.length\n    ) {\n      for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const value = parseInt(layersParam[i]);\n        if (!isNaN(value)) {\n          const visible = Boolean(value);\n          const layer = layers[i];\n          if (layer.getVisible() !== visible) {\n            layer.setVisible(visible);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateUrl_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    if (!view) {\n      return;\n    }\n    const initial = this.initial_;\n    this.initial_ = false;\n\n    const center = view.getCenter();\n    const zoom = view.getZoom();\n    const rotation = view.getRotation();\n\n    const layers = map.getAllLayers();\n    const visibilities = new Array(layers.length);\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      visibilities[i] = layers[i].getVisible() ? '1' : '0';\n    }\n\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n\n    this.set_(params, 'x', writeNumber(center[0]));\n    this.set_(params, 'y', writeNumber(center[1]));\n    this.set_(params, 'z', writeNumber(zoom));\n    this.set_(params, 'r', writeNumber(rotation));\n    this.set_(params, 'l', visibilities.join(''));\n\n    if (url.href !== window.location.href) {\n      if (initial || this.replace_) {\n        window.history.replaceState(history.state, '', url);\n      } else {\n        window.history.pushState(null, '', url);\n      }\n    }\n  }\n}\n\nexport default Link;\n","/**\n * @module ol/interaction/Modify\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  altKeyOnly,\n  always,\n  primaryAction,\n  singleClick,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  buffer as bufferExtent,\n  createOrUpdateFromCoordinate as createExtent,\n} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  equals as coordinatesEqual,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {equals} from '../array.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\nconst tempExtent = [0, 0, 0, 0];\nconst tempSegment = [];\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend',\n};\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth] Depth.\n * @property {Feature} feature Feature.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} [index] Index.\n * @property {Array<Array<number>>} segment Segment.\n * @property {Array<SegmentData>} [featureSegments] FeatureSegments.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition.primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition.singleClick} with\n * {@link module:ol/events/condition.altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition.always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style used for the modification point or vertex. For linestrings and polygons, this will\n * be the affected vertex, for circles a point along the circle, and for points the actual\n * point. If not configured, the default edit style is used (see {@link module:ol/style/Style~Style}).\n * When using a style function, the point feature passed to the function will have a `features`\n * property - an array whose entries are the features that are being modified, and a `geometries`\n * property - an array whose entries are the geometries that are being modified. Both arrays are\n * in the same order. The `geometries` are only useful when modifying geometry collections, where\n * the geometry will be the particular geometry from the collection that is being modified.\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the `features` option.\n * @property {boolean|import(\"../layer/BaseVector\").default} [hitDetection] When configured, point\n * features will be considered for modification based on their visual appearance, instead of being within\n * the `pixelTolerance` from the pointer location. When a {@link module:ol/layer/BaseVector~BaseVectorLayer} is\n * provided, only the rendered representation of the features on that layer will be considered.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the `source` option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {boolean} [snapToPointer=!hitDetection] The vertex, point or segment being modified snaps to the\n * pointer coordinate when clicked within the `pixelTolerance`.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport class ModifyEvent extends Event {\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {Collection<Feature>} features\n   * The features modified.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent\n   * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, features, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'modifyend'|'modifystart', ModifyEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'modifyend'|'modifystart', Return>} ModifyOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * Cartesian distance from the pointer is used to determine the features that\n * will be modified. This means that geometries will only be considered for\n * modification when they are within the configured `pixelTolerance`. For point\n * geometries, the `hitDetection` option can be used to match their visual\n * appearance.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nclass Modify extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ModifyOnSignature<void>}\n     */\n    this.un;\n\n    /** @private */\n    this.boundHandleFeatureChange_ = this.handleFeatureChange_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition\n      ? options.deleteCondition\n      : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition\n      ? options.insertVertexCondition\n      : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.featuresBeingModified_ = null;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n    };\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    /**\n     * @type {boolean|import(\"../layer/BaseVector\").default}\n     */\n    this.hitDetection_ = null;\n\n    /** @type {Collection<Feature>} */\n    let features;\n    if (options.features) {\n      features = options.features;\n    } else if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      this.source_.addEventListener(\n        VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_.bind(this)\n      );\n      this.source_.addEventListener(\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_.bind(this)\n      );\n    }\n    if (!features) {\n      throw new Error(\n        'The modify interaction requires features, a source or a layer'\n      );\n    }\n    if (options.hitDetection) {\n      this.hitDetection_ = options.hitDetection;\n    }\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    this.features_.addEventListener(\n      CollectionEventType.ADD,\n      this.handleFeatureAdd_.bind(this)\n    );\n    this.features_.addEventListener(\n      CollectionEventType.REMOVE,\n      this.handleFeatureRemove_.bind(this)\n    );\n\n    /**\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n    /**\n     * Delta (x, y in map units) between matched rtree vertex and pointer vertex.\n     * @type {Array<number>}\n     */\n    this.delta_ = [0, 0];\n\n    /**\n     * @private\n     */\n    this.snapToPointer_ =\n      options.snapToPointer === undefined\n        ? !this.hitDetection_\n        : options.snapToPointer;\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  addFeature_(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (writer) {\n        writer(feature, geometry);\n      }\n    }\n    const map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @param {Array<Array<SegmentData>>} segments The segments subject to modification.\n   * @private\n   */\n  willModifyFeatures_(evt, segments) {\n    if (!this.featuresBeingModified_) {\n      this.featuresBeingModified_ = new Collection();\n      const features = this.featuresBeingModified_.getArray();\n      for (let i = 0, ii = segments.length; i < ii; ++i) {\n        const segment = segments[i];\n        for (let s = 0, ss = segment.length; s < ss; ++s) {\n          const feature = segment[s].feature;\n          if (feature && !features.includes(feature)) {\n            this.featuresBeingModified_.push(feature);\n          }\n        }\n      }\n      if (this.featuresBeingModified_.getLength() === 0) {\n        this.featuresBeingModified_ = null;\n      } else {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYSTART,\n            this.featuresBeingModified_,\n            evt\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeature_(feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of candidate features is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    feature.removeEventListener(\n      EventType.CHANGE,\n      this.boundHandleFeatureChange_\n    );\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureSegmentData_(feature) {\n    const rBush = this.rBush_;\n    /** @type {Array<SegmentData>} */\n    const nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      }\n    );\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      const nodeToRemove = nodesToRemove[i];\n      for (let j = this.dragSegments_.length - 1; j >= 0; --j) {\n        if (this.dragSegments_[j][0] === nodeToRemove) {\n          this.dragSegments_.splice(j, 1);\n        }\n      }\n      rBush.remove(nodeToRemove);\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.overlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders the modification point or vertex to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceAdd_(event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceRemove_(event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    this.addFeature_(evt.element);\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    if (!this.changingFeature_) {\n      const feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    this.removeFeature_(evt.element);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n\n    /** @type {SegmentData} */\n    const segmentData = {\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates],\n    };\n\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates],\n      };\n\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment,\n      };\n\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n\n          /** @type {SegmentData} */\n          const segmentData = {\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment,\n          };\n\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const coordinates = geometry.getCenter();\n\n    /** @type {SegmentData} */\n    const centerSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    /** @type {SegmentData} */\n    const circumferenceSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = featureSegments;\n    circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n    let circleGeometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection && this.getMap()) {\n      const projection = this.getMap().getView().getProjection();\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n      circleGeometry = fromCircle(\n        /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n      ).transform(projection, userProjection);\n    }\n    this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const geometry = geometries[i];\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      writer(feature, geometry);\n    }\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {Array<Feature>} features The features being modified.\n   * @param {Array<import(\"../geom/SimpleGeometry.js\").default>} geometries The geometries being modified.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  createOrUpdateVertexFeature_(coordinates, features, geometries) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(coordinates);\n    }\n    vertexFeature.set('features', features);\n    vertexFeature.set('geometries', geometries);\n    return vertexFeature;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may modify the geometry.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    let handled;\n    if (\n      !mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (\n        mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_\n      ) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return super.handleEvent(mapBrowserEvent) && !handled;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   */\n  handleDragEvent(evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt, this.dragSegments_);\n\n    const vertex = [\n      evt.coordinate[0] + this.delta_[0],\n      evt.coordinate[1] + this.delta_[1],\n    ];\n    const features = [];\n    const geometries = [];\n    for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      const dragSegment = this.dragSegments_[i];\n      const segmentData = dragSegment[0];\n      const feature = segmentData.feature;\n      if (!features.includes(feature)) {\n        features.push(feature);\n      }\n      const geometry = segmentData.geometry;\n      if (!geometries.includes(geometry)) {\n        geometries.push(geometry);\n      }\n      const depth = segmentData.depth;\n      let coordinates;\n      const segment = segmentData.segment;\n      const index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case 'Point':\n          coordinates = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'MultiPoint':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'LineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiLineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Polygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiPolygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Circle':\n          segment[0] = vertex;\n          segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else {\n            // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            const projection = evt.map.getView().getProjection();\n            let radius = coordinateDistance(\n              fromUserCoordinate(geometry.getCenter(), projection),\n              fromUserCoordinate(vertex, projection)\n            );\n            const userProjection = getUserProjection();\n            if (userProjection) {\n              const circleGeometry = geometry\n                .clone()\n                .transform(userProjection, projection);\n              circleGeometry.setRadius(radius);\n              radius = circleGeometry\n                .transform(projection, userProjection)\n                .getRadius();\n            }\n            geometry.setRadius(radius);\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex, features, geometries);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    const pixelCoordinate = evt.coordinate;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, pixelCoordinate);\n    this.dragSegments_.length = 0;\n    this.featuresBeingModified_ = null;\n    const vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      const projection = evt.map.getView().getProjection();\n      const insertVertices = [];\n      const vertex = vertexFeature.getGeometry().getCoordinates();\n      const vertexExtent = boundingExtent([vertex]);\n      const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      const componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        const segmentDataMatch = segmentDataMatches[i];\n        const segment = segmentDataMatch.segment;\n        let uid = getUid(segmentDataMatch.geometry);\n        const depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n\n        if (\n          segmentDataMatch.geometry.getType() === 'Circle' &&\n          segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          const closestVertex = closestOnSegmentData(\n            pixelCoordinate,\n            segmentDataMatch,\n            projection\n          );\n          if (\n            coordinatesEqual(closestVertex, vertex) &&\n            !componentSegments[uid][0]\n          ) {\n            this.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]\n        ) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]\n        ) {\n          if (\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0\n          ) {\n            let coordinates = segmentDataMatch.geometry.getCoordinates();\n            switch (segmentDataMatch.geometry.getType()) {\n              // prevent dragging closed linestrings by the connecting node\n              case 'LineString':\n              case 'MultiLineString':\n                continue;\n              // if dragging the first vertex of a polygon, ensure the other segment\n              // belongs to the closing vertex of the linear ring\n              case 'MultiPolygon':\n                coordinates = coordinates[depth[1]];\n              /* falls through */\n              case 'Polygon':\n                if (\n                  segmentDataMatch.index !==\n                  coordinates[depth[0]].length - 2\n                ) {\n                  continue;\n                }\n                break;\n              default:\n              // pass\n            }\n          }\n\n          this.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          getUid(segment) in this.vertexSegments_ &&\n          !componentSegments[uid][0] &&\n          !componentSegments[uid][1] &&\n          this.insertVertexCondition_(evt)\n        ) {\n          insertVertices.push(segmentDataMatch);\n        }\n      }\n\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt, [insertVertices]);\n      }\n\n      for (let j = insertVertices.length - 1; j >= 0; --j) {\n        this.insertVertex_(insertVertices[j], vertex);\n      }\n    }\n    return !!this.vertexFeature_;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n      const segmentData = this.dragSegments_[i][0];\n      const geometry = segmentData.geometry;\n      if (geometry.getType() === 'Circle') {\n        // Update a circle object in the R* bush:\n        const coordinates = geometry.getCenter();\n        const centerSegmentData = segmentData.featureSegments[0];\n        const circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = coordinates;\n        centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = coordinates;\n        circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createExtent(coordinates), centerSegmentData);\n        let circleGeometry = geometry;\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          const projection = evt.map.getView().getProjection();\n          circleGeometry = circleGeometry\n            .clone()\n            .transform(userProjection, projection);\n          circleGeometry = fromCircle(circleGeometry).transform(\n            projection,\n            userProjection\n          );\n        }\n        this.rBush_.update(\n          circleGeometry.getExtent(),\n          circumferenceSegmentData\n        );\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.featuresBeingModified_) {\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYEND,\n          this.featuresBeingModified_,\n          evt\n        )\n      );\n      this.featuresBeingModified_ = null;\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  handlePointerMove_(evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, evt.coordinate);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../Map.js\").default} map Map.\n   * @param {import(\"../coordinate.js\").Coordinate} [coordinate] The pixel Coordinate.\n   * @private\n   */\n  handlePointerAtPixel_(pixel, map, coordinate) {\n    const pixelCoordinate = coordinate || map.getCoordinateFromPixel(pixel);\n    const projection = map.getView().getProjection();\n    const sortByDistance = function (a, b) {\n      return (\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection)\n      );\n    };\n\n    /** @type {Array<SegmentData>|undefined} */\n    let nodes;\n    /** @type {Point|undefined} */\n    let hitPointGeometry;\n    if (this.hitDetection_) {\n      const layerFilter =\n        typeof this.hitDetection_ === 'object'\n          ? (layer) => layer === this.hitDetection_\n          : undefined;\n      map.forEachFeatureAtPixel(\n        pixel,\n        (feature, layer, geometry) => {\n          if (geometry) {\n            geometry = new Point(\n              toUserCoordinate(geometry.getCoordinates(), projection)\n            );\n          }\n          const geom = geometry || feature.getGeometry();\n          if (\n            geom.getType() === 'Point' &&\n            feature instanceof Feature &&\n            this.features_.getArray().includes(feature)\n          ) {\n            hitPointGeometry = /** @type {Point} */ (geom);\n            const coordinate = /** @type {Point} */ (feature.getGeometry())\n              .getFlatCoordinates()\n              .slice(0, 2);\n            nodes = [\n              {\n                feature,\n                geometry: hitPointGeometry,\n                segment: [coordinate, coordinate],\n              },\n            ];\n          }\n          return true;\n        },\n        {layerFilter}\n      );\n    }\n    if (!nodes) {\n      const viewExtent = fromUserExtent(\n        createExtent(pixelCoordinate, tempExtent),\n        projection\n      );\n      const buffer = map.getView().getResolution() * this.pixelTolerance_;\n      const box = toUserExtent(\n        bufferExtent(viewExtent, buffer, tempExtent),\n        projection\n      );\n      nodes = this.rBush_.getInExtent(box);\n    }\n\n    if (nodes && nodes.length > 0) {\n      const node = nodes.sort(sortByDistance)[0];\n      const closestSegment = node.segment;\n      let vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n      let dist = coordinateDistance(pixel, vertexPixel);\n      if (hitPointGeometry || dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        const vertexSegments = {};\n        vertexSegments[getUid(closestSegment)] = true;\n\n        if (!this.snapToPointer_) {\n          this.delta_[0] = vertex[0] - pixelCoordinate[0];\n          this.delta_[1] = vertex[1] - pixelCoordinate[1];\n        }\n        if (\n          node.geometry.getType() === 'Circle' &&\n          node.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n        } else {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex =\n              squaredDist1 > squaredDist2\n                ? closestSegment[1]\n                : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n          const geometries = {};\n          geometries[getUid(node.geometry)] = true;\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\n            const segment = nodes[i].segment;\n            if (\n              (coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1])) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0]))\n            ) {\n              const geometryUid = getUid(nodes[i].geometry);\n              if (!(geometryUid in geometries)) {\n                geometries[geometryUid] = true;\n                vertexSegments[getUid(segment)] = true;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  }\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  insertVertex_(segmentData, vertex) {\n    const segment = segmentData.segment;\n    const feature = segmentData.feature;\n    const geometry = segmentData.geometry;\n    const depth = segmentData.depth;\n    const index = segmentData.index;\n    let coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case 'MultiLineString':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'Polygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'MultiPolygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'LineString':\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    const rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n\n    /** @type {SegmentData} */\n    const newSegmentData = {\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    /** @type {SegmentData} */\n    const newSegmentData2 = {\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  }\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  removePoint() {\n    if (\n      this.lastPointerEvent_ &&\n      this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG\n    ) {\n      const evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt, this.dragSegments_);\n      const removed = this.removeVertex_();\n      if (this.featuresBeingModified_) {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYEND,\n            this.featuresBeingModified_,\n            evt\n          )\n        );\n      }\n\n      this.featuresBeingModified_ = null;\n      return removed;\n    }\n    return false;\n  }\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  removeVertex_() {\n    const dragSegments = this.dragSegments_;\n    const segmentsByFeature = {};\n    let deleted = false;\n    let component, coordinates, dragSegment, geometry, i, index, left;\n    let newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case 'MultiLineString':\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'LineString':\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'MultiPolygon':\n          component = component[segmentData.depth[1]];\n        /* falls through */\n        case 'Polygon':\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        const segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          /** @type {SegmentData} */\n          const newSegmentData = {\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments,\n          };\n\n          this.rBush_.insert(\n            boundingExtent(newSegmentData.segment),\n            newSegmentData\n          );\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n    }\n    return deleted;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  setGeometryCoordinates_(geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  updateSegmentIndices_(geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(\n      geometry.getExtent(),\n      function (segmentDataMatch) {\n        if (\n          segmentDataMatch.geometry === geometry &&\n          (depth === undefined ||\n            segmentDataMatch.depth === undefined ||\n            equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index\n        ) {\n          segmentDataMatch.index += delta;\n        }\n      }\n    );\n  }\n}\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction projectedDistanceToSegmentDataSquared(\n  pointCoordinates,\n  segmentData,\n  projection\n) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === 'Circle') {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n          circleGeometry.clone().transform(userProjection, projection)\n        );\n      }\n      const distanceToCenterSquared = squaredCoordinateDistance(\n        circleGeometry.getCenter(),\n        fromUserCoordinate(pointCoordinates, projection)\n      );\n      const distanceToCircumference =\n        Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return squaredDistanceToSegment(coordinate, tempSegment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n  const geometry = segmentData.geometry;\n\n  if (\n    geometry.getType() === 'Circle' &&\n    segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX\n  ) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n        circleGeometry.clone().transform(userProjection, projection)\n      );\n    }\n    return toUserCoordinate(\n      circleGeometry.getClosestPoint(\n        fromUserCoordinate(pointCoordinates, projection)\n      ),\n      projection\n    );\n  }\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return toUserCoordinate(\n    closestOnSegment(coordinate, tempSegment),\n    projection\n  );\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n\nexport default Modify;\n","/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport Interaction from './Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {TRUE} from '../functions.js';\nimport {clear} from '../obj.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {never, shiftKeyOnly, singleClick} from '../events/condition.js';\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").default, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style/Style~Style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {Collection<Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature~Feature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nexport class SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nconst originalFeatureStyles = {};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'select', Return>} SelectOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * @fires SelectEvent\n * @api\n */\nclass Select extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SelectOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     */\n    this.boundAddFeature_ = this.addFeature_.bind(this);\n\n    /**\n     * @private\n     */\n    this.boundRemoveFeature_ = this.removeFeature_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition\n      ? options.removeCondition\n      : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition\n      ? options.toggleCondition\n      : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n    this.style_ =\n      options.style !== undefined ? options.style : getDefaultStyleFunction();\n\n    /**\n     * @private\n     * @type {Collection<Feature>}\n     */\n    this.features_ = options.features || new Collection();\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  addFeatureLayerAssociation_(feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  }\n\n  /**\n   * Get the selected features.\n   * @return {Collection<Feature>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~VectorLayer vector layer} of\n   * a selected feature.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n  getLayer(feature) {\n    return /** @type {import('../layer/Vector.js').default} */ (\n      this.featureLayerAssociation_[getUid(feature)]\n    );\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n    super.setMap(map);\n    if (map) {\n      this.features_.addEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.addEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.removeEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n    if (!this.getLayer(feature)) {\n      const layer = /** @type {VectorLayer} */ (\n        this.getMap()\n          .getAllLayers()\n          .find(function (layer) {\n            if (\n              layer instanceof VectorLayer &&\n              layer.getSource() &&\n              layer.getSource().hasFeature(feature)\n            ) {\n              return layer;\n            }\n          })\n      );\n      if (layer) {\n        this.addFeatureLayerAssociation_(feature, layer);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    if (this.style_) {\n      this.restorePreviousStyle_(evt.element);\n    }\n  }\n\n  /**\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  applySelectedStyle_(feature) {\n    const key = getUid(feature);\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n    feature.setStyle(this.style_);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  restorePreviousStyle_(feature) {\n    const interactions = this.getMap().getInteractions().getArray();\n    for (let i = interactions.length - 1; i >= 0; --i) {\n      const interaction = interactions[i];\n      if (\n        interaction !== this &&\n        interaction instanceof Select &&\n        interaction.getStyle() &&\n        interaction.getFeatures().getArray().lastIndexOf(feature) !== -1\n      ) {\n        feature.setStyle(interaction.getStyle());\n        return;\n      }\n    }\n\n    const key = getUid(feature);\n    feature.setStyle(originalFeatureStyles[key]);\n    delete originalFeatureStyles[key];\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureLayerAssociation_(feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may change the\n   * selected state of features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const add = this.addCondition_(mapBrowserEvent);\n    const remove = this.removeCondition_(mapBrowserEvent);\n    const toggle = this.toggleCondition_(mapBrowserEvent);\n    const set = !add && !remove && !toggle;\n    const map = mapBrowserEvent.map;\n    const features = this.getFeatures();\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const deselected = [];\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const selected = [];\n\n    if (set) {\n      // Replace the currently selected feature(s) with the feature(s) at the\n      // pixel, or clear the selected feature(s) if there is no feature at\n      // the pixel.\n      clear(this.featureLayerAssociation_);\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        (feature, layer) => {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          this.addFeatureLayerAssociation_(feature, layer);\n          selected.push(feature);\n          return !this.multi_;\n        },\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let i = features.getLength() - 1; i >= 0; --i) {\n        const feature = features.item(i);\n        const index = selected.indexOf(feature);\n        if (index > -1) {\n          // feature is already selected\n          selected.splice(index, 1);\n        } else {\n          features.remove(feature);\n          deselected.push(feature);\n        }\n      }\n      if (selected.length !== 0) {\n        features.extend(selected);\n      }\n    } else {\n      // Modify the currently selected feature(s).\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        (feature, layer) => {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          if ((add || toggle) && !features.getArray().includes(feature)) {\n            this.addFeatureLayerAssociation_(feature, layer);\n            selected.push(feature);\n          } else if (\n            (remove || toggle) &&\n            features.getArray().includes(feature)\n          ) {\n            deselected.push(feature);\n            this.removeFeatureLayerAssociation_(feature);\n          }\n          return !this.multi_;\n        },\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let j = deselected.length - 1; j >= 0; --j) {\n        features.remove(deselected[j]);\n      }\n      features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n      this.dispatchEvent(\n        new SelectEvent(\n          SelectEventType.SELECT,\n          selected,\n          deselected,\n          mapBrowserEvent\n        )\n      );\n    }\n    return true;\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles['Polygon'], styles['LineString']);\n  extend(styles['GeometryCollection'], styles['LineString']);\n\n  return function (feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\nexport default Select;\n","/**\n * @module ol/events/SnapEvent\n */\nimport Event from './Event.js';\n\n/**\n * @enum {string}\n */\nexport const SnapEventType = {\n  /**\n   * Triggered upon snapping to vertex or edge\n   * @event SnapEvent#snap\n   * @api\n   */\n  SNAP: 'snap',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Snap~Snap} instances are instances of this\n */\nexport class SnapEvent extends Event {\n  /**\n   * @param {SnapEventType} type Type.\n   * @param {Object} options Options.\n   * @param {import(\"../coordinate.js\").Coordinate} options.vertex The snapped vertex.\n   * @param {import(\"../coordinate.js\").Coordinate} options.vertexPixel The pixel of the snapped vertex.\n   * @param {import(\"../Feature.js\").default} options.feature The feature being snapped.\n   */\n  constructor(type, options) {\n    super(type);\n    /**\n     * The Map coordinate of the snapped point.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.vertex = options.vertex;\n    /**\n     * The Map pixel of the snapped point.\n     * @type {Array<number>&Array<number>}\n     * @api\n     */\n    this.vertexPixel = options.vertexPixel;\n    /**\n     * The feature closest to the snapped point.\n     * @type {import(\"../Feature.js\").default<import(\"../geom/Geometry.js\").default>}\n     * @api\n     */\n    this.feature = options.feature;\n  }\n}\n","/**\n * @module ol/interaction/Snap\n */\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {SnapEvent, SnapEventType} from '../events/SnapEvent.js';\nimport {boundingExtent, buffer, createEmpty} from '../extent.js';\nimport {\n  closestOnCircle,\n  closestOnSegment,\n  squaredDistance,\n} from '../coordinate.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Result\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex Vertex.\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel VertexPixel.\n * @property {import(\"../Feature.js\").default|null} feature Feature.\n */\n\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature Feature.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment Segment.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n * @return {import(\"../Feature.js\").default|null} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n  if (\n    /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature\n  ) {\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt)\n      .feature;\n  }\n  if (\n    /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element\n  ) {\n    return /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element;\n  }\n  return null;\n}\n\nconst tempSegment = [];\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'snap', SnapEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'snap', Return>} SnapOnSignature\n */\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector~VectorSource} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap.js';\n *\n *     const snap = new Snap({\n *       source: source\n *     });\n *\n *     map.addInteraction(snap);\n *\n * @fires SnapEvent\n * @api\n */\nclass Snap extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.handleDownEvent) {\n      pointerOptions.handleDownEvent = TRUE;\n    }\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {SnapOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SnapOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SnapOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {import(\"../source/Vector.js\").default|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<string, import(\"../extent.js\").Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Segment RTree for each layer\n     * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @const\n     * @private\n     * @type {Object<string, function(Array<Array<import('../coordinate.js').Coordinate>>, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.GEOMETRY_SEGMENTERS_ = {\n      'Point': this.segmentPointGeometry_.bind(this),\n      'LineString': this.segmentLineStringGeometry_.bind(this),\n      'LinearRing': this.segmentLineStringGeometry_.bind(this),\n      'Polygon': this.segmentPolygonGeometry_.bind(this),\n      'MultiPoint': this.segmentMultiPointGeometry_.bind(this),\n      'MultiLineString': this.segmentMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.segmentMultiPolygonGeometry_.bind(this),\n      'GeometryCollection': this.segmentGeometryCollectionGeometry_.bind(this),\n      'Circle': this.segmentCircleGeometry_.bind(this),\n    };\n  }\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {boolean} [register] Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  addFeature(feature, register) {\n    register = register !== undefined ? register : true;\n    const feature_uid = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const segmenter = this.GEOMETRY_SEGMENTERS_[geometry.getType()];\n      if (segmenter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(\n          createEmpty()\n        );\n        const segments =\n          /** @type {Array<Array<import('../coordinate.js').Coordinate>>} */ ([]);\n        segmenter(segments, geometry);\n        if (segments.length === 1) {\n          this.rBush_.insert(boundingExtent(segments[0]), {\n            feature: feature,\n            segment: segments[0],\n          });\n        } else if (segments.length > 1) {\n          const extents = segments.map((s) => boundingExtent(s));\n          const segmentsData = segments.map((segment) => ({\n            feature: feature,\n            segment: segment,\n          }));\n          this.rBush_.load(extents, segmentsData);\n        }\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_,\n        this\n      );\n    }\n  }\n\n  /**\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  getFeatures_() {\n    /** @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} */\n    let features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return features;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(evt) {\n    const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n    if (result) {\n      evt.coordinate = result.vertex.slice(0, 2);\n      evt.pixel = result.vertexPixel;\n      this.dispatchEvent(\n        new SnapEvent(SnapEventType.SNAP, {\n          vertex: evt.coordinate,\n          vertexPixel: evt.pixel,\n          feature: result.feature,\n        })\n      );\n    }\n    return super.handleEvent(evt);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    if (feature) {\n      this.addFeature(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    if (feature) {\n      this.removeFeature(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    const feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      const uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    const featuresToUpdate = Object.values(this.pendingFeatures_);\n    if (featuresToUpdate.length) {\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\n      this.pendingFeatures_ = {};\n    }\n    return false;\n  }\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {boolean} [unlisten] Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  removeFeature(feature, unlisten) {\n    const unregister = unlisten !== undefined ? unlisten : true;\n    const feature_uid = getUid(feature);\n    const extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      const rBush = this.rBush_;\n      const nodesToRemove = [];\n      rBush.forEachInExtent(extent, function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    const keys = this.featuresListenerKeys_;\n    const features = /** @type {Array<import(\"../Feature.js\").default>} */ (\n      this.getFeatures_()\n    );\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      this.rBush_.clear();\n      Object.values(this.featureChangeListenerKeys_).forEach(unlistenByKey);\n      this.featureChangeListenerKeys_ = {};\n    }\n    super.setMap(map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(\n            this.features_,\n            CollectionEventType.ADD,\n            this.handleFeatureAdd_,\n            this\n          ),\n          listen(\n            this.features_,\n            CollectionEventType.REMOVE,\n            this.handleFeatureRemove_,\n            this\n          )\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(\n            this.source_,\n            VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_,\n            this\n          ),\n          listen(\n            this.source_,\n            VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_,\n            this\n          )\n        );\n      }\n      features.forEach((feature) => this.addFeature(feature));\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n   * @param {import(\"../Map.js\").default} map Map.\n   * @return {Result|null} Snap result\n   */\n  snapTo(pixel, pixelCoordinate, map) {\n    const projection = map.getView().getProjection();\n    const projectedCoordinate = fromUserCoordinate(pixelCoordinate, projection);\n\n    const box = toUserExtent(\n      buffer(\n        boundingExtent([projectedCoordinate]),\n        map.getView().getResolution() * this.pixelTolerance_\n      ),\n      projection\n    );\n\n    const segments = this.rBush_.getInExtent(box);\n    const segmentsLength = segments.length;\n    if (segmentsLength === 0) {\n      return null;\n    }\n\n    let closestVertex;\n    let minSquaredDistance = Infinity;\n    let closestFeature;\n\n    const squaredPixelTolerance = this.pixelTolerance_ * this.pixelTolerance_;\n    const getResult = () => {\n      if (closestVertex) {\n        const vertexPixel = map.getPixelFromCoordinate(closestVertex);\n        const squaredPixelDistance = squaredDistance(pixel, vertexPixel);\n        if (squaredPixelDistance <= squaredPixelTolerance) {\n          return {\n            vertex: closestVertex,\n            vertexPixel: [\n              Math.round(vertexPixel[0]),\n              Math.round(vertexPixel[1]),\n            ],\n            feature: closestFeature,\n          };\n        }\n      }\n      return null;\n    };\n\n    if (this.vertex_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() !== 'Circle') {\n          segmentData.segment.forEach((vertex) => {\n            const tempVertexCoord = fromUserCoordinate(vertex, projection);\n            const delta = squaredDistance(projectedCoordinate, tempVertexCoord);\n            if (delta < minSquaredDistance) {\n              closestVertex = vertex;\n              minSquaredDistance = delta;\n              closestFeature = segmentData.feature;\n            }\n          });\n        }\n      }\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    if (this.edge_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        let vertex = null;\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() === 'Circle') {\n          let circleGeometry = segmentData.feature.getGeometry();\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circleGeometry = circleGeometry\n              .clone()\n              .transform(userProjection, projection);\n          }\n          vertex = closestOnCircle(\n            projectedCoordinate,\n            /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n          );\n        } else {\n          const [segmentStart, segmentEnd] = segmentData.segment;\n          // points have only one coordinate\n          if (segmentEnd) {\n            tempSegment[0] = fromUserCoordinate(segmentStart, projection);\n            tempSegment[1] = fromUserCoordinate(segmentEnd, projection);\n            vertex = closestOnSegment(projectedCoordinate, tempSegment);\n          }\n        }\n        if (vertex) {\n          const delta = squaredDistance(projectedCoordinate, vertex);\n          if (delta < minSquaredDistance) {\n            closestVertex = toUserCoordinate(vertex, projection);\n            minSquaredDistance = delta;\n          }\n        }\n      }\n\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  updateFeature_(feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentCircleGeometry_(segments, geometry) {\n    const projection = this.getMap().getView().getProjection();\n    let circleGeometry = geometry;\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n        circleGeometry.clone().transform(userProjection, projection)\n      );\n    }\n    const polygon = fromCircle(circleGeometry);\n    if (userProjection) {\n      polygon.transform(projection, userProjection);\n    }\n    const coordinates = polygon.getCoordinates()[0];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segments.push(coordinates.slice(i, i + 2));\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentGeometryCollectionGeometry_(segments, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const segmenter = this.GEOMETRY_SEGMENTERS_[geometries[i].getType()];\n      if (segmenter) {\n        segmenter(segments, geometries[i]);\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentLineStringGeometry_(segments, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segments.push(coordinates.slice(i, i + 2));\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiLineStringGeometry_(segments, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segments.push(coordinates.slice(i, i + 2));\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiPointGeometry_(segments, geometry) {\n    geometry.getCoordinates().forEach((point) => {\n      segments.push([point]);\n    });\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiPolygonGeometry_(segments, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          segments.push(coordinates.slice(i, i + 2));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentPointGeometry_(segments, geometry) {\n    segments.push([geometry.getCoordinates()]);\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentPolygonGeometry_(segments, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segments.push(coordinates.slice(i, i + 2));\n      }\n    }\n  }\n}\n\nexport default Snap;\n","/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport InteractionProperty from './Property.js';\nimport PointerInteraction from './Pointer.js';\nimport {TRUE} from '../functions.js';\nimport {always} from '../events/condition.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\n\n/**\n * @enum {string}\n */\nconst TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @typedef {function(Feature, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {Collection<Feature>} [features] Features contained in this collection will be able to be translated together.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * Not used if `features` is provided.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature~Feature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * translated or `false` otherwise. Not used if `features` is provided.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nexport class TranslateEvent extends Event {\n  /**\n   * @param {TranslateEventType} type Type.\n   * @param {Collection<Feature>} features The features translated.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} startCoordinate The original coordinates before.translation started\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   */\n  constructor(type, features, coordinate, startCoordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being translated.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * The coordinate of the start position before translation started.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.startCoordinate = startCoordinate;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'translateend'|'translatestart'|'translating', TranslateEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'translateend'|'translatestart'|'translating', Return>} TranslateOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n * If you want to translate multiple features in a single action (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.\n *\n * @fires TranslateEvent\n * @api\n */\nclass Translate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {TranslateOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TranslateOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TranslateOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * The last position we translated to.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = null;\n\n    /**\n     * The start position before translation started.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.startCoordinate_ = null;\n\n    /**\n     * @type {Collection<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features !== undefined ? options.features : null;\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers && !this.features_) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter && !this.features_ ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @type {Feature}\n     * @private\n     */\n    this.lastFeature_ = null;\n\n    this.addChangeListener(\n      InteractionProperty.ACTIVE,\n      this.handleActiveChanged_\n    );\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    if (!event.originalEvent || !this.condition_(event)) {\n      return false;\n    }\n    this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n    if (!this.lastCoordinate_ && this.lastFeature_) {\n      this.startCoordinate_ = event.coordinate;\n      this.lastCoordinate_ = event.coordinate;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATESTART,\n          features,\n          event.coordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    if (this.lastCoordinate_) {\n      this.lastCoordinate_ = null;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATEEND,\n          features,\n          event.coordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n      // cleanup\n      this.startCoordinate_ = null;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  handleDragEvent(event) {\n    if (this.lastCoordinate_) {\n      const newCoordinate = event.coordinate;\n      const projection = event.map.getView().getProjection();\n\n      const newViewCoordinate = fromUserCoordinate(newCoordinate, projection);\n      const lastViewCoordinate = fromUserCoordinate(\n        this.lastCoordinate_,\n        projection\n      );\n      const deltaX = newViewCoordinate[0] - lastViewCoordinate[0];\n      const deltaY = newViewCoordinate[1] - lastViewCoordinate[1];\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n      const userProjection = getUserProjection();\n\n      features.forEach(function (feature) {\n        const geom = feature.getGeometry();\n        if (userProjection) {\n          geom.transform(userProjection, projection);\n          geom.translate(deltaX, deltaY);\n          geom.transform(projection, userProjection);\n        } else {\n          geom.translate(deltaX, deltaY);\n        }\n        feature.setGeometry(geom);\n      });\n\n      this.lastCoordinate_ = newCoordinate;\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATING,\n          features,\n          newCoordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n    }\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  handleMoveEvent(event) {\n    const elem = event.map.getViewport();\n\n    // Change the cursor to grab/grabbing if hovering any of the features managed\n    // by the interaction\n    if (this.featuresAtPixel_(event.pixel, event.map)) {\n      elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n      elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n    } else {\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {import(\"../Map.js\").default} map Map to test the intersection on.\n   * @return {Feature} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  featuresAtPixel_(pixel, map) {\n    return map.forEachFeatureAtPixel(\n      pixel,\n      (feature, layer) => {\n        if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n          return undefined;\n        }\n        if (this.features_ && !this.features_.getArray().includes(feature)) {\n          return undefined;\n        }\n        return feature;\n      },\n      {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_,\n      }\n    );\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    this.updateState_(oldMap);\n  }\n\n  /**\n   * @private\n   */\n  handleActiveChanged_() {\n    this.updateState_(null);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} oldMap Old map.\n   * @private\n   */\n  updateState_(oldMap) {\n    let map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        const elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  }\n}\n\nexport default Translate;\n","/**\n * @module ol/geom/flat/flip\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destOffset] Destination offset.\n * @return {Array<number>} Flat coordinates.\n */\nexport function flipXY(flatCoordinates, offset, end, stride, dest, destOffset) {\n  if (dest !== undefined) {\n    dest = dest;\n    destOffset = destOffset !== undefined ? destOffset : 0;\n  } else {\n    dest = [];\n    destOffset = 0;\n  }\n  let j = offset;\n  while (j < end) {\n    const x = flatCoordinates[j++];\n    dest[destOffset++] = flatCoordinates[j++];\n    dest[destOffset++] = x;\n    for (let k = 2; k < stride; ++k) {\n      dest[destOffset++] = flatCoordinates[j++];\n    }\n  }\n  dest.length = destOffset;\n  return dest;\n}\n","/**\n * @module ol/format/Feature\n */\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n","/**\n * @module ol/format/XMLFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport {abstract} from '../util.js';\nimport {extend} from '../array.js';\nimport {getXMLSerializer, isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nclass XMLFeature extends FeatureFormat {\n  constructor() {\n    super();\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = getXMLSerializer();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'xml';\n  }\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readFeatureFromDocument(\n        /** @type {Document} */ (source),\n        options\n      );\n    }\n    return this.readFeatureFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromDocument(doc, options) {\n    const features = this.readFeaturesFromDocument(doc, options);\n    if (features.length > 0) {\n      return features[0];\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    if (!source) {\n      return [];\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeaturesFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source),\n        options\n      );\n    }\n    return this.readFeaturesFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromDocument(doc, options) {\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    const features = [];\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          features,\n          this.readFeaturesFromNode(/** @type {Element} */ (n), options)\n        );\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readGeometryFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source),\n        options\n      );\n    }\n    return this.readGeometryFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromDocument(doc, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readProjectionFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    return this.dataProjection;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   */\n  writeFeature(feature, options) {\n    const node = this.writeFeatureNode(feature, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  writeFeatureNode(feature, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Result.\n   * @api\n   */\n  writeFeatures(features, options) {\n    const node = this.writeFeaturesNode(features, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeFeaturesNode(features, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   */\n  writeGeometry(geometry, options) {\n    const node = this.writeGeometryNode(geometry, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeGeometryNode(geometry, options) {\n    return null; // not implemented\n  }\n}\n\nexport default XMLFeature;\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, getDocument} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readPositiveInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(getDocument().createTextNode(string));\n}\n","/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  makeArrayPusher,\n  makeArraySerializer,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readDateTime,\n  readDecimal,\n  readPositiveInteger,\n  readString,\n  writeDateTimeTextNode,\n  writeDecimalTextNode,\n  writeNonNegativeIntegerTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.topografix.com/GPX/1/1 ' +\n  'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt,\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GPX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeArrayPusher(readRte),\n  'trk': makeArrayPusher(readTrk),\n  'wpt': makeArrayPusher(readWpt),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeObjectPropertySetter(readString, 'linkText'),\n  'type': makeObjectPropertySetter(readString, 'linkType'),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst GPX_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeChildAppender(writeRte),\n  'trk': makeChildAppender(writeTrk),\n  'wpt': makeChildAppender(writeWpt),\n});\n\n/**\n * @typedef {Object} Options\n * @property {function(Feature, Node):void} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ] HasZ.\n * @property {boolean} [hasM] HasM.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nclass GPX extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @type {function(Feature, Node): void|undefined}\n     * @private\n     */\n    this.readExtensions_ = options.readExtensions;\n  }\n\n  /**\n   * @param {Array<Feature>} features List of features.\n   * @private\n   */\n  handleReadExtensions_(features) {\n    if (!features) {\n      features = [];\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      if (this.readExtensions_) {\n        const extensionsNode = feature.get('extensionsNode_') || null;\n        this.readExtensions_(feature, extensionsNode);\n      }\n      feature.set('extensionsNode_', undefined);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    const featureReader = FEATURE_READER[node.localName];\n    if (!featureReader) {\n      return null;\n    }\n    const feature = featureReader(node, [this.getReadOptions(node, options)]);\n    if (!feature) {\n      return null;\n    }\n    this.handleReadExtensions_([feature]);\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return [];\n    }\n    if (node.localName == 'gpx') {\n      /** @type {Array<Feature>} */\n      const features = pushParseAndPop([], GPX_PARSERS, node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (features) {\n        this.handleReadExtensions_(features);\n        return features;\n      }\n      return [];\n    }\n    return [];\n  }\n\n  /**\n   * Encode an array of features in the GPX format as an XML node.\n   * LineString geometries are output as routes (`<rte>`), and MultiLineString\n   * as tracks (`<trk>`).\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    //FIXME Serialize metadata\n    const gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    gpx.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION\n    );\n    gpx.setAttribute('version', '1.1');\n    gpx.setAttribute('creator', 'OpenLayers');\n\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: gpx}),\n      GPX_SERIALIZERS,\n      GPX_NODE_FACTORY,\n      features,\n      [options]\n    );\n    return gpx;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readPositiveInteger),\n  'extensions': parseExtensions,\n  'type': makeObjectPropertySetter(readString),\n  'rtept': parseRtePt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTEPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readPositiveInteger),\n  'type': makeObjectPropertySetter(readString),\n  'extensions': parseExtensions,\n  'trkseg': parseTrkSeg,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKSEG_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': parseTrkPt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n  'magvar': makeObjectPropertySetter(readDecimal),\n  'geoidheight': makeObjectPropertySetter(readDecimal),\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'sym': makeObjectPropertySetter(readString),\n  'type': makeObjectPropertySetter(readString),\n  'fix': makeObjectPropertySetter(readString),\n  'sat': makeObjectPropertySetter(readPositiveInteger),\n  'hdop': makeObjectPropertySetter(readDecimal),\n  'vdop': makeObjectPropertySetter(readDecimal),\n  'pdop': makeObjectPropertySetter(readDecimal),\n  'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n  'dgpsid': makeObjectPropertySetter(readPositiveInteger),\n  'extensions': parseExtensions,\n});\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'rtept',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst RTE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'rtept': makeArraySerializer(makeChildAppender(writeWptType)),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTEPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['ele', 'time']);\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst TRK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'trkseg',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg)),\n});\n\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRKSEG_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': makeChildAppender(writeWptType),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'ele',\n  'time',\n  'magvar',\n  'geoidheight',\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'sym',\n  'type',\n  'fix',\n  'sat',\n  'hdop',\n  'vdop',\n  'pdop',\n  'ageofdgpsdata',\n  'dgpsid',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeChildAppender(writeDecimalTextNode),\n  'time': makeChildAppender(writeDateTimeTextNode),\n  'magvar': makeChildAppender(writeDecimalTextNode),\n  'geoidheight': makeChildAppender(writeDecimalTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'sym': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'fix': makeChildAppender(writeStringTextNode),\n  'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'hdop': makeChildAppender(writeDecimalTextNode),\n  'vdop': makeChildAppender(writeDecimalTextNode),\n  'pdop': makeChildAppender(writeDecimalTextNode),\n  'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n  'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk',\n};\n\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, nodeName) {\n  const geometry = /** @type {Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Element} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat'))\n  );\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>} [ends] Ends.\n * @return {import(\"../geom/Geometry.js\").GeometryLayout} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n  /** @type {import(\"../geom/Geometry.js\").GeometryLayout} */\n  let layout = 'XY';\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = 'XYZM';\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = 'XYZ';\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = 'XYM';\n    stride = 3;\n  }\n  if (stride !== 4) {\n    for (let i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = (flatCoordinates.length / 4) * stride;\n    if (ends) {\n      for (let i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = (ends[i] / 4) * stride;\n      }\n    }\n  }\n  return layout;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {!Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const flatCoordinates = /** @type {Array<number>} */ (\n      rteValues['flatCoordinates']\n    );\n    const layoutOptions = /** @type {LayoutOptions} */ (\n      rteValues['layoutOptions']\n    );\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {!Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const flatCoordinates = /** @type {Array<number>} */ (\n      trkValues['flatCoordinates']\n    );\n    const layoutOptions = /** @type {LayoutOptions} */ (\n      trkValues['layoutOptions']\n    );\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'layoutOptions': {},\n    },\n    RTE_PARSERS,\n    node,\n    objectStack\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n  const geometry = new LineString(flatCoordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'ends': [],\n      'layoutOptions': {},\n    },\n    TRK_PARSERS,\n    node,\n    objectStack\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(flatCoordinates, layout, ends);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = applyLayoutOptions(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [properties['linkText'], properties['linkType']];\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    link,\n    objectStack,\n    LINK_SEQUENCE\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  node.setAttributeNS(null, 'lat', String(coordinate[1]));\n  node.setAttributeNS(null, 'lon', String(coordinate[0]));\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case 'XYZM':\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n    // fall through\n    case 'XYZ':\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case 'XYM':\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n    // pass\n  }\n  const orderedKeys =\n    node.nodeName == 'rtept'\n      ? RTEPT_TYPE_SEQUENCE[namespaceURI]\n      : WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const properties = feature.getProperties();\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'LineString') {\n    const lineString = /** @type {LineString} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    context['geometryLayout'] = lineString.getLayout();\n    properties['rtept'] = lineString.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    RTE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const properties = feature.getProperties();\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'MultiLineString') {\n    const multiLineString = /** @type {MultiLineString} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    properties['trkseg'] = multiLineString.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    TRK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['geometryLayout'] = lineString.getLayout();\n  context['properties'] = {};\n  pushSerializeAndPop(\n    context,\n    TRKSEG_SERIALIZERS,\n    TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(),\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'Point') {\n    const point = /** @type {Point} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    context['geometryLayout'] = point.getLayout();\n    writeWptType(node, point.getCoordinates(), objectStack);\n  }\n}\n\nexport default GPX;\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  }\n  if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assert} from '../asserts.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), options);\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/format/TextFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nclass TextFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'text';\n  }\n\n  /**\n   * Read the feature from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromText(\n      getText(source),\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the features from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromText(\n      getText(source),\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the geometry from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromText(\n      getText(source),\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromText(getText(source));\n  }\n\n  /**\n   * @param {string} text Text.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjectionFromText(text) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as a string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return this.writeFeatureText(feature, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return this.writeFeaturesText(features, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return this.writeGeometryText(geometry, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  }\n  return '';\n}\n\nexport default TextFeature;\n","/**\n * @module ol/format/IGC\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport TextFeature from './TextFeature.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {'barometric' | 'gps' | 'none'} IGCZ\n * IGC altitude/z. One of 'barometric', 'gps', 'none'.\n */\n\n/**\n * @const\n * @type {RegExp}\n */\nconst B_RECORD_RE =\n  /^B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5})/;\n\n/**\n * @const\n * @type {RegExp}\n */\nconst H_RECORD_RE = /^H.([A-Z]{3}).*?:(.*)/;\n\n/**\n * @const\n * @type {RegExp}\n */\nconst HFDTE_RECORD_RE = /^HFDTE(\\d{2})(\\d{2})(\\d{2})/;\n\n/**\n * A regular expression matching the newline characters `\\r\\n`, `\\r` and `\\n`.\n *\n * @const\n * @type {RegExp}\n */\nconst NEWLINE_RE = /\\r\\n|\\r|\\n/;\n\n/**\n * @typedef {Object} Options\n * @property {IGCZ} [altitudeMode='none'] Altitude mode. Possible\n * values are `'barometric'`, `'gps'`, and `'none'`.\n */\n\n/**\n * @classdesc\n * Feature format for `*.igc` flight recording files.\n *\n * As IGC sources contain a single feature,\n * {@link module:ol/format/IGC~IGC#readFeatures} will return the feature in an\n * array\n *\n * @api\n */\nclass IGC extends TextFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {IGCZ}\n     */\n    this.altitudeMode_ = options.altitudeMode ? options.altitudeMode : 'none';\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    const altitudeMode = this.altitudeMode_;\n    const lines = text.split(NEWLINE_RE);\n    /** @type {Object<string, string>} */\n    const properties = {};\n    const flatCoordinates = [];\n    let year = 2000;\n    let month = 0;\n    let day = 1;\n    let lastDateTime = -1;\n    let i, ii;\n    for (i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      let m;\n      if (line.charAt(0) == 'B') {\n        m = B_RECORD_RE.exec(line);\n        if (m) {\n          const hour = parseInt(m[1], 10);\n          const minute = parseInt(m[2], 10);\n          const second = parseInt(m[3], 10);\n          let y = parseInt(m[4], 10) + parseInt(m[5], 10) / 60000;\n          if (m[6] == 'S') {\n            y = -y;\n          }\n          let x = parseInt(m[7], 10) + parseInt(m[8], 10) / 60000;\n          if (m[9] == 'W') {\n            x = -x;\n          }\n          flatCoordinates.push(x, y);\n          if (altitudeMode != 'none') {\n            let z;\n            if (altitudeMode == 'gps') {\n              z = parseInt(m[11], 10);\n            } else if (altitudeMode == 'barometric') {\n              z = parseInt(m[12], 10);\n            } else {\n              z = 0;\n            }\n            flatCoordinates.push(z);\n          }\n          let dateTime = Date.UTC(year, month, day, hour, minute, second);\n          // Detect UTC midnight wrap around.\n          if (dateTime < lastDateTime) {\n            dateTime = Date.UTC(year, month, day + 1, hour, minute, second);\n          }\n          flatCoordinates.push(dateTime / 1000);\n          lastDateTime = dateTime;\n        }\n      } else if (line.charAt(0) == 'H') {\n        m = HFDTE_RECORD_RE.exec(line);\n        if (m) {\n          day = parseInt(m[1], 10);\n          month = parseInt(m[2], 10) - 1;\n          year = 2000 + parseInt(m[3], 10);\n        } else {\n          m = H_RECORD_RE.exec(line);\n          if (m) {\n            properties[m[1]] = m[2].trim();\n          }\n        }\n      }\n    }\n    if (flatCoordinates.length === 0) {\n      return null;\n    }\n    const layout = altitudeMode == 'none' ? 'XYM' : 'XYZM';\n    const lineString = new LineString(flatCoordinates, layout);\n    const feature = new Feature(\n      transformGeometryWithOptions(lineString, false, options)\n    );\n    feature.setProperties(properties, true);\n    return feature;\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    const feature = this.readFeatureFromText(text, options);\n    if (feature) {\n      return [feature];\n    }\n    return [];\n  }\n}\n\nexport default IGC;\n","/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport Icon from '../style/Icon.js';\nimport ImageState from '../ImageState.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  isDocument,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeReplacer,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readBoolean,\n  readDecimal,\n  readString,\n  writeBooleanTextNode,\n  writeCDATASection,\n  writeDecimalTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {toRadians} from '../math.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x X coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} xunits Units of x.\n * @property {number} y Y coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} yunits Units of Y.\n * @property {import(\"../style/Icon.js\").IconOrigin} [origin] Origin.\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<Array<number>>} coordinates Coordinates.\n * @property {Array<number>} whens Whens.\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst GX_NAMESPACE_URIS = ['http://www.google.com/kml/ext/2.2'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.opengis.net/kml/2.2 ' +\n  'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n/**\n * @type {Object<string, import(\"../style/Icon.js\").IconAnchorUnits>}\n */\nconst ICON_ANCHOR_UNITS_MAP = {\n  'fraction': 'fraction',\n  'pixels': 'pixels',\n  'insetPixels': 'pixels',\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PLACEMARK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readStyleURL),\n    'visibility': makeObjectPropertySetter(readBoolean),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry'),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': extendedDataParser,\n  'Region': regionParser,\n  'Link': linkParser,\n  'address': makeObjectPropertySetter(readString),\n  'description': makeObjectPropertySetter(readString),\n  'name': makeObjectPropertySetter(readString),\n  'open': makeObjectPropertySetter(readBoolean),\n  'phoneNumber': makeObjectPropertySetter(readString),\n  'visibility': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'href': makeObjectPropertySetter(readURI),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CAMERA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  Altitude: makeObjectPropertySetter(readDecimal),\n  Longitude: makeObjectPropertySetter(readDecimal),\n  Latitude: makeObjectPropertySetter(readDecimal),\n  Tilt: makeObjectPropertySetter(readDecimal),\n  AltitudeMode: makeObjectPropertySetter(readString),\n  Heading: makeObjectPropertySetter(readDecimal),\n  Roll: makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LatLonAltBox': latLonAltBoxParser,\n  'Lod': lodParser,\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['Document', 'Placemark']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Document': makeChildAppender(writeDocument),\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @type {import(\"../color.js\").Color}\n */\nlet DEFAULT_COLOR;\n\n/**\n * @type {Fill|null}\n */\nlet DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill|null} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nlet DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {import(\"../style/Image.js\").default|null}\n */\nlet DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default|null} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nlet DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {Stroke|null}\n */\nlet DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke|null} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {Stroke}\n */\nlet DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {Text|null}\n */\nlet DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text|null} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {Style|null}\n */\nlet DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {Style|null} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>|null} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\n/**\n * Function that returns the scale needed to normalize an icon image to 32 pixels.\n * @param {import(\"../size.js\").Size} size Image size.\n * @return {number} Scale.\n */\nfunction scaleForSize(size) {\n  return 32 / Math.min(size[0], size[1]);\n}\n\nfunction createStyleDefaults() {\n  DEFAULT_COLOR = [255, 255, 255, 1];\n\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR,\n  });\n\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2];\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = 'pixels';\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = 'pixels';\n\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n\n  DEFAULT_IMAGE_STYLE_SRC =\n    'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: 'bottom-left',\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: scaleForSize(DEFAULT_IMAGE_STYLE_SIZE),\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC,\n  });\n\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1,\n  });\n\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2,\n  });\n\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8,\n  });\n\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0,\n  });\n\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n\n/**\n * @type {HTMLTextAreaElement}\n */\nlet TEXTAREA;\n\n/**\n * A function that takes a url `{string}` and returns a url `{string}`.\n * Might be used to change an icon path or to substitute a\n * data url obtained from a KMZ array buffer.\n *\n * @typedef {function(string):string} IconUrlFunction\n * @api\n */\n\n/**\n * Function that returns a url unchanged.\n * @param {string} href Input url.\n * @return {string} Output url.\n */\nfunction defaultIconUrlFunction(href) {\n  return href;\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * @property {IconUrlFunction} [iconUrlFunction] Function that takes a url string and returns a url string.\n * Might be used to change an icon path or to substitute a data url obtained from a KMZ array buffer.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * @api\n */\nclass KML extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    if (!DEFAULT_STYLE_ARRAY) {\n      createStyleDefaults();\n    }\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {Array<Style>}\n     */\n    this.defaultStyle_ = options.defaultStyle\n      ? options.defaultStyle\n      : DEFAULT_STYLE_ARRAY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.extractStyles_ =\n      options.extractStyles !== undefined ? options.extractStyles : true;\n\n    /**\n     * @type {boolean}\n     */\n    this.writeStyles_ =\n      options.writeStyles !== undefined ? options.writeStyles : true;\n\n    /**\n     * @private\n     * @type {!Object<string, (Array<Style>|string)>}\n     */\n    this.sharedStyles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.showPointNames_ =\n      options.showPointNames !== undefined ? options.showPointNames : true;\n\n    /**\n     * @type {null|string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    /**\n     * @type {IconUrlFunction}\n     */\n    this.iconUrlFunction_ = options.iconUrlFunction\n      ? options.iconUrlFunction\n      : defaultIconUrlFunction;\n\n    this.supportedMediaTypes = ['application/vnd.google-earth.kml+xml'];\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<Feature>|undefined} Features.\n   */\n  readDocumentOrFolder_(node, objectStack) {\n    // FIXME use scope somehow\n    const parsersNS = makeStructureNS(NAMESPACE_URIS, {\n      'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this),\n    });\n    /** @type {Array<Feature>} */\n    // @ts-ignore\n    const features = pushParseAndPop([], parsersNS, node, objectStack, this);\n    if (features) {\n      return features;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Feature|undefined} Feature.\n   */\n  readPlacemark_(node, objectStack) {\n    const object = pushParseAndPop(\n      {'geometry': null},\n      PLACEMARK_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (!object) {\n      return undefined;\n    }\n    const feature = new Feature();\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      feature.setId(id);\n    }\n    const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n      objectStack[0]\n    );\n\n    const geometry = object['geometry'];\n    if (geometry) {\n      transformGeometryWithOptions(geometry, false, options);\n    }\n    feature.setGeometry(geometry);\n    delete object['geometry'];\n\n    if (this.extractStyles_) {\n      const style = object['Style'];\n      const styleUrl = object['styleUrl'];\n      const styleFunction = createFeatureStyleFunction(\n        style,\n        styleUrl,\n        this.defaultStyle_,\n        this.sharedStyles_,\n        this.showPointNames_\n      );\n      feature.setStyle(styleFunction);\n    }\n    delete object['Style'];\n    // we do not remove the styleUrl property from the object, so it\n    // gets stored on feature when setProperties is called\n\n    feature.setProperties(object, true);\n\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyle_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      const style = readStyle.call(this, node, objectStack);\n      if (style) {\n        let styleUri;\n        let baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n          baseURI = window.location.href;\n        }\n        if (baseURI) {\n          const url = new URL('#' + id, baseURI);\n          styleUri = url.href;\n        } else {\n          styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = style;\n      }\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyleMap_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id === null) {\n      return;\n    }\n    const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n    if (!styleMapValue) {\n      return;\n    }\n    let styleUri;\n    let baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n      baseURI = window.location.href;\n    }\n    if (baseURI) {\n      const url = new URL('#' + id, baseURI);\n      styleUri = url.href;\n    } else {\n      styleUri = '#' + id;\n    }\n    this.sharedStyles_[styleUri] = styleMapValue;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    const feature = this.readPlacemark_(node, [\n      this.getReadOptions(node, options),\n    ]);\n    if (feature) {\n      return feature;\n    }\n    return null;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return [];\n    }\n    let features;\n    const localName = node.localName;\n    if (localName == 'Document' || localName == 'Folder') {\n      features = this.readDocumentOrFolder_(node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (features) {\n        return features;\n      }\n      return [];\n    }\n    if (localName == 'Placemark') {\n      const feature = this.readPlacemark_(node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (feature) {\n        return [feature];\n      }\n      return [];\n    }\n    if (localName == 'kml') {\n      features = [];\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        const fs = this.readFeaturesFromNode(n, options);\n        if (fs) {\n          extend(features, fs);\n        }\n      }\n      return features;\n    }\n    return [];\n  }\n\n  /**\n   * Read the name of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {string|undefined} Name.\n   * @api\n   */\n  readName(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readNameFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readNameFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readNameFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {string|undefined} Name.\n   */\n  readNameFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        const name = this.readNameFromNode(/** @type {Element} */ (n));\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {string|undefined} Name.\n   */\n  readNameFromNode(node) {\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'name') {\n        return readString(n);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' ||\n          localName == 'Folder' ||\n          localName == 'Placemark' ||\n          localName == 'kml')\n      ) {\n        const name = this.readNameFromNode(n);\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Read the network links of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Network links.\n   * @api\n   */\n  readNetworkLinks(source) {\n    const networkLinks = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromNode(/** @type {Element} */ (source))\n      );\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromDocument(doc) {\n    const networkLinks = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          networkLinks,\n          this.readNetworkLinksFromNode(/** @type {Element} */ (n))\n        );\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromNode(node) {\n    const networkLinks = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        n.localName == 'NetworkLink'\n      ) {\n        const obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n        networkLinks.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(networkLinks, this.readNetworkLinksFromNode(n));\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * Read the regions of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Regions.\n   * @api\n   */\n  readRegion(source) {\n    const regions = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(regions, this.readRegionFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        regions,\n        this.readRegionFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(regions, this.readRegionFromNode(/** @type {Element} */ (source)));\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Region.\n   */\n  readRegionFromDocument(doc) {\n    const regions = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Region.\n   * @api\n   */\n  readRegionFromNode(node) {\n    const regions = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'Region') {\n        const obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n        regions.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(regions, this.readRegionFromNode(n));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @typedef {Object} KMLCamera Specifies the observer's viewpoint and associated view parameters.\n   * @property {number} [Latitude] Latitude of the camera.\n   * @property {number} [Longitude] Longitude of the camera.\n   * @property {number} [Altitude] Altitude of the camera.\n   * @property {string} [AltitudeMode] Floor-related altitude mode.\n   * @property {number} [Heading] Horizontal camera rotation.\n   * @property {number} [Tilt] Lateral camera rotation.\n   * @property {number} [Roll] Vertical camera rotation.\n   */\n\n  /**\n   * Read the cameras of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<KMLCamera>} Cameras.\n   * @api\n   */\n  readCamera(source) {\n    const cameras = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(cameras, this.readCameraFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        cameras,\n        this.readCameraFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(cameras, this.readCameraFromNode(/** @type {Element} */ (source)));\n    }\n    return cameras;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<KMLCamera>} Cameras.\n   */\n  readCameraFromDocument(doc) {\n    const cameras = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType === Node.ELEMENT_NODE) {\n        extend(cameras, this.readCameraFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return cameras;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<KMLCamera>} Cameras.\n   * @api\n   */\n  readCameraFromNode(node) {\n    const cameras = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName === 'Camera') {\n        const obj = pushParseAndPop({}, CAMERA_PARSERS, n, []);\n        cameras.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName === 'Document' ||\n          localName === 'Folder' ||\n          localName === 'Placemark' ||\n          localName === 'kml')\n      ) {\n        extend(cameras, this.readCameraFromNode(n));\n      }\n    }\n    return cameras;\n  }\n\n  /**\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    const kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    kml.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION\n    );\n\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: kml,\n      };\n    /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n    const properties = {};\n    if (features.length > 1) {\n      properties['Document'] = features;\n    } else if (features.length == 1) {\n      properties['Placemark'] = features[0];\n    }\n    const orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n    const values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(\n      context,\n      KML_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      [options],\n      orderedKeys,\n      this\n    );\n    return kml;\n  }\n}\n\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  const textOffset = [0, 0];\n  /** @type {CanvasTextAlign} */\n  let textAlign = 'start';\n  const imageStyle = foundStyle.getImage();\n  if (imageStyle) {\n    const imageSize = imageStyle.getSize();\n    if (imageSize && imageSize.length == 2) {\n      const imageScale = imageStyle.getScaleArray();\n      const anchor = imageStyle.getAnchor();\n      // Offset the label to be centered to the right of the icon,\n      // if there is one.\n      textOffset[0] = imageScale[0] * (imageSize[0] - anchor[0]);\n      textOffset[1] = imageScale[1] * (imageSize[1] / 2 - anchor[1]);\n      textAlign = 'left';\n    }\n  }\n  let textStyle = foundStyle.getText();\n  if (textStyle) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    textStyle = textStyle.clone();\n    textStyle.setFont(textStyle.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(textStyle.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(textStyle.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(textStyle.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    image: imageStyle,\n    text: textStyle,\n  });\n  return nameStyle;\n}\n\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(\n  style,\n  styleUrl,\n  defaultStyle,\n  sharedStyles,\n  showPointNames\n) {\n  return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>|Style} Style.\n     */\n    function (feature, resolution) {\n      let drawName = showPointNames;\n      let name = '';\n      let multiGeometryPoints = [];\n      if (drawName) {\n        const geometry = feature.getGeometry();\n        if (geometry) {\n          if (geometry instanceof GeometryCollection) {\n            multiGeometryPoints = geometry\n              .getGeometriesArrayRecursive()\n              .filter(function (geometry) {\n                const type = geometry.getType();\n                return type === 'Point' || type === 'MultiPoint';\n              });\n            drawName = multiGeometryPoints.length > 0;\n          } else {\n            const type = geometry.getType();\n            drawName = type === 'Point' || type === 'MultiPoint';\n          }\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (feature.get('name'));\n        drawName = drawName && !!name;\n        // convert any html character codes\n        if (drawName && /&[^&]+;/.test(name)) {\n          if (!TEXTAREA) {\n            TEXTAREA = document.createElement('textarea');\n          }\n          TEXTAREA.innerHTML = name;\n          name = TEXTAREA.value;\n        }\n      }\n\n      let featureStyle = defaultStyle;\n      if (style) {\n        featureStyle = style;\n      } else if (styleUrl) {\n        featureStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n      }\n      if (drawName) {\n        const nameStyle = createNameStyleFunction(featureStyle[0], name);\n        if (multiGeometryPoints.length > 0) {\n          // in multigeometries restrict the name style to points and create a\n          // style without image or text for geometries requiring fill or stroke\n          // including any polygon specific style if there is one\n          nameStyle.setGeometry(new GeometryCollection(multiGeometryPoints));\n          const baseStyle = new Style({\n            geometry: featureStyle[0].getGeometry(),\n            image: null,\n            fill: featureStyle[0].getFill(),\n            stroke: featureStyle[0].getStroke(),\n            text: null,\n          });\n          return [nameStyle, baseStyle].concat(featureStyle.slice(1));\n        }\n        return nameStyle;\n      }\n      return featureStyle;\n    }\n  );\n}\n\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  }\n  if (typeof styleValue === 'string') {\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  }\n  return defaultStyle;\n}\n\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n  const s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255,\n    ];\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  let s = getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  s = s.replace(/\\s*,\\s*/g, ',');\n  const re =\n    /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?),([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|,|$)(?:([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|$))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  const s = getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  }\n  return s;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readStyleURL(node) {\n  // KML files in the wild occasionally forget the leading\n  // `#` on styleUrlsdefined in the same document.\n  const s = getAllTextContent(node, false)\n    .trim()\n    .replace(/^(?!.*#)/, '#');\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  }\n  return s;\n}\n\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  /** @type {import('../style/Icon.js').IconOrigin} */\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = 'bottom-left';\n    } else {\n      origin = 'top-left';\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = 'bottom-right';\n    } else {\n      origin = 'top-right';\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin,\n  };\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Pair': pairDataParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack, this);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeObjectPropertySetter(readIcon),\n  'color': makeObjectPropertySetter(readColor),\n  'heading': makeObjectPropertySetter(readDecimal),\n  'hotSpot': makeObjectPropertySetter(readVec2),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = !('Icon' in object) || Object.keys(IconObject).length > 0;\n  let src;\n  const href = /** @type {string|undefined} */ (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  /** @type {import('../style/Icon.js').IconOrigin|undefined} */\n  let anchorOrigin = 'bottom-left';\n  const hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (/^https?:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    // Google hotspots from https://kml4earth.appspot.com/icons.html#notes\n    if (src.includes('pushpin')) {\n      anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (src.includes('arrow-reverse')) {\n      anchor = [54, 42];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (src.includes('paddle')) {\n      anchor = [32, 1];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    }\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */ (IconObject['x']);\n  const y = /** @type {number|undefined} */ (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */ (IconObject['w']);\n  const h = /** @type {number|undefined} */ (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */ (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  const scale = /** @type {number|undefined} */ (object['scale']);\n\n  const color = /** @type {Array<number>|undefined} */ (object['color']);\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: this.crossOrigin_,\n      offset: offset,\n      offsetOrigin: 'bottom-left',\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: this.iconUrlFunction_(src),\n      color: color,\n    });\n\n    const imageScale = imageStyle.getScaleArray()[0];\n    const imageSize = imageStyle.getSize();\n    if (imageSize === null) {\n      const imageState = imageStyle.getImageState();\n      if (imageState === ImageState.IDLE || imageState === ImageState.LOADING) {\n        const listener = function () {\n          const imageState = imageStyle.getImageState();\n          if (\n            !(\n              imageState === ImageState.IDLE ||\n              imageState === ImageState.LOADING\n            )\n          ) {\n            const imageSize = imageStyle.getSize();\n            if (imageSize && imageSize.length == 2) {\n              const resizeScale = scaleForSize(imageSize);\n              imageStyle.setScale(imageScale * resizeScale);\n            }\n            imageStyle.unlistenImageChange(listener);\n          }\n        };\n        imageStyle.listenImageChange(listener);\n        if (imageState === ImageState.IDLE) {\n          imageStyle.load();\n        }\n      }\n    } else if (imageSize.length == 2) {\n      const resizeScale = scaleForSize(imageSize);\n      imageStyle.setScale(imageScale * resizeScale);\n    }\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color:\n        /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    }),\n    scale: /** @type {number|undefined} */ (object['scale']),\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'width': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1),\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'fill': makeObjectPropertySetter(readBoolean),\n  'outline': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline = /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const coordinates = gxTrackObject.coordinates;\n  const s = getAllTextContent(node, false);\n  const re =\n    /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    coordinates.push([x, y, z]);\n  } else {\n    coordinates.push([]);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n  'Track': makeArrayPusher(readGxTrack),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  const lineStrings = pushParseAndPop(\n    [],\n    GX_MULTITRACK_GEOMETRY_PARSERS,\n    node,\n    objectStack\n  );\n  if (!lineStrings) {\n    return undefined;\n  }\n  return new MultiLineString(lineStrings);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_TRACK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'when': whenParser,\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'coord': gxCoordParser,\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  const gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n      coordinates: [],\n      whens: [],\n    }),\n    GX_TRACK_PARSERS,\n    node,\n    objectStack\n  );\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = [];\n  const coordinates = gxTrackObject.coordinates;\n  const whens = gxTrackObject.whens;\n  for (\n    let i = 0, ii = Math.min(coordinates.length, whens.length);\n    i < ii;\n    ++i\n  ) {\n    if (coordinates[i].length == 3) {\n      flatCoordinates.push(\n        coordinates[i][0],\n        coordinates[i][1],\n        coordinates[i][2],\n        whens[i]\n      );\n    }\n  }\n  return new LineString(flatCoordinates, 'XYZM');\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeObjectPropertySetter(readURI),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeObjectPropertySetter(readDecimal),\n    'y': makeObjectPropertySetter(readDecimal),\n    'w': makeObjectPropertySetter(readDecimal),\n    'h': makeObjectPropertySetter(readDecimal),\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  const iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  }\n  return null;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(\n    null,\n    GEOMETRY_FLAT_COORDINATES_PARSERS,\n    node,\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeObjectPropertySetter(readBoolean),\n  'tessellate': makeObjectPropertySetter(readBoolean),\n  'altitudeMode': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(flatCoordinates, 'XYZ');\n    lineString.setProperties(properties, true);\n    return lineString;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(flatCoordinates, 'XYZ', [\n      flatCoordinates.length,\n    ]);\n    polygon.setProperties(properties, true);\n    return polygon;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeArrayPusher(readLineString),\n  'LinearRing': makeArrayPusher(readLinearRing),\n  'MultiGeometry': makeArrayPusher(readMultiGeometry),\n  'Point': makeArrayPusher(readPoint),\n  'Polygon': makeArrayPusher(readPolygon),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  const geometries = pushParseAndPop(\n    [],\n    MULTI_GEOMETRY_PARSERS,\n    node,\n    objectStack\n  );\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry;\n  for (let i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == 'Point') {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (let i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'LineString') {\n      multiGeometry = new MultiLineString(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'Polygon') {\n      multiGeometry = new MultiPolygon(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'GeometryCollection') {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(flatCoordinates, 'XYZ');\n    point.setProperties(properties, true);\n    return point;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'innerBoundaryIs': innerBoundaryIsParser,\n  'outerBoundaryIs': outerBoundaryIsParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  const properties = pushParseAndPop(\n    /** @type {Object<string,*>} */ ({}),\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatLinearRings = pushParseAndPop(\n    [null],\n    FLAT_LINEAR_RINGS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRings && flatLinearRings[0]) {\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    for (let i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    const polygon = new Polygon(flatCoordinates, 'XYZ', ends);\n    polygon.setProperties(properties, true);\n    return polygon;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': iconStyleParser,\n  'LabelStyle': labelStyleParser,\n  'LineStyle': lineStyleParser,\n  'PolyStyle': polyStyleParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  const styleObject = pushParseAndPop(\n    {},\n    STYLE_PARSERS,\n    node,\n    objectStack,\n    this\n  );\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle =\n    /** @type {Fill} */\n    (\n      'fillStyle' in styleObject ? styleObject['fillStyle'] : DEFAULT_FILL_STYLE\n    );\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle;\n  if ('imageStyle' in styleObject) {\n    if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n      imageStyle = /** @type {import(\"../style/Image.js\").default} */ (\n        styleObject['imageStyle']\n      );\n    }\n  } else {\n    imageStyle = DEFAULT_IMAGE_STYLE;\n  }\n  const textStyle =\n    /** @type {Text} */\n    (\n      'textStyle' in styleObject ? styleObject['textStyle'] : DEFAULT_TEXT_STYLE\n    );\n  const strokeStyle =\n    /** @type {Stroke} */\n    (\n      'strokeStyle' in styleObject\n        ? styleObject['strokeStyle']\n        : DEFAULT_STROKE_STYLE\n    );\n  const outline = /** @type {boolean|undefined} */ (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    // if the polystyle specifies no outline two styles are needed,\n    // one for non-polygon geometries where linestrings require a stroke\n    // and one for polygons where there should be no stroke\n    return [\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === 'GeometryCollection') {\n            const collection =\n              /** @type {import(\"../geom/GeometryCollection\").default} */ (\n                geometry\n              );\n            return new GeometryCollection(\n              collection\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type !== 'Polygon' && type !== 'MultiPolygon';\n                })\n            );\n          }\n          if (type !== 'Polygon' && type !== 'MultiPolygon') {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        image: imageStyle,\n        stroke: strokeStyle,\n        text: textStyle,\n        zIndex: undefined, // FIXME\n      }),\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === 'GeometryCollection') {\n            const collection =\n              /** @type {import(\"../geom/GeometryCollection\").default} */ (\n                geometry\n              );\n            return new GeometryCollection(\n              collection\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type === 'Polygon' || type === 'MultiPolygon';\n                })\n            );\n          }\n          if (type === 'Polygon' || type === 'MultiPolygon') {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        stroke: null,\n        zIndex: undefined, // FIXME\n      }),\n    ];\n  }\n  return [\n    new Style({\n      fill: fillStyle,\n      image: imageStyle,\n      stroke: strokeStyle,\n      text: textStyle,\n      zIndex: undefined, // FIXME\n    }),\n  ];\n}\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = false;\n  hasTessellate = false;\n  hasAltitudeMode = false;\n  for (let i = 0; i < ii; ++i) {\n    const geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'displayName': makeObjectPropertySetter(readString),\n  'value': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  const featureObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  if (name && featureObject.displayName) {\n    featureObject[name] = {\n      value: featureObject.value,\n      displayName: featureObject.displayName,\n      toString: function () {\n        return featureObject.value;\n      },\n    };\n  } else if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': dataParser,\n  'SchemaData': schemaDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Style': makeObjectPropertySetter(readStyle),\n  'key': makeObjectPropertySetter(readString),\n  'styleUrl': makeObjectPropertySetter(readStyleURL),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  const pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack, this);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */ (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const style = /** @type {Style} */ (pairObject['Style']);\n    if (style) {\n      objectStack[objectStack.length - 1] = style;\n    }\n  }\n}\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'SimpleData': simpleDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = readString(node);\n    const featureObject = /** @type {Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    featureObject[name] = data;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'altitudeMode': makeObjectPropertySetter(readString),\n  'minAltitude': makeObjectPropertySetter(readDecimal),\n  'maxAltitude': makeObjectPropertySetter(readDecimal),\n  'north': makeObjectPropertySetter(readDecimal),\n  'south': makeObjectPropertySetter(readDecimal),\n  'east': makeObjectPropertySetter(readDecimal),\n  'west': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  const object = pushParseAndPop(\n    {},\n    LAT_LON_ALT_BOX_PARSERS,\n    node,\n    objectStack\n  );\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north']),\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'minLodPixels': makeObjectPropertySetter(readDecimal),\n  'maxLodPixels': makeObjectPropertySetter(readDecimal),\n  'minFadeExtent': makeObjectPropertySetter(readDecimal),\n  'maxFadeExtent': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  const object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  // KML spec only allows one LinearRing  per innerBoundaryIs, but Google Earth\n  // allows multiple, so we parse multiple here too.\n  'LinearRing': makeArrayPusher(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  const innerBoundaryFlatLinearRings = pushParseAndPop(\n    /** @type {Array<Array<number>>} */ ([]),\n    INNER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack\n  );\n  if (innerBoundaryFlatLinearRings.length > 0) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(...innerBoundaryFlatLinearRings);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(\n    undefined,\n    OUTER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRing) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  const rgba = asArray(color);\n  const opacity = rgba.length == 4 ? rgba[3] : 1;\n  /** @type {Array<string|number>} */\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (let i = 0; i < 4; ++i) {\n    const hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n    abgr[i] = hex.length == 1 ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == 'XY' || layout == 'XYM') {\n    dimension = 2;\n  } else if (layout == 'XYZ' || layout == 'XYZM') {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (let d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (let i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (let d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': makeChildAppender(writeDataNode),\n  'value': makeChildAppender(writeDataNodeValue),\n  'displayName': makeChildAppender(writeDataNodeName),\n});\n\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.displayName],\n        objectStack,\n        ['displayName']\n      );\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.value],\n        objectStack,\n        ['value']\n      );\n    }\n  } else {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      [value],\n      objectStack,\n      ['value']\n    );\n  }\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst DOCUMENT_NODE_FACTORY = function (value, objectStack, nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    DOCUMENT_SERIALIZERS,\n    DOCUMENT_NODE_FACTORY,\n    features,\n    objectStack,\n    undefined,\n    this\n  );\n}\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n/**\n * @param {Element} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      DATA_NODE_FACTORY,\n      [{name: names[i], value: values[i]}],\n      objectStack\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS,\n  ['href'],\n  makeStructureNS(GX_NAMESPACE_URIS, ['x', 'y', 'w', 'h'])\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeChildAppender(writeStringTextNode),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeChildAppender(writeDecimalTextNode),\n    'y': makeChildAppender(writeDecimalTextNode),\n    'w': makeChildAppender(writeDecimalTextNode),\n    'h': makeChildAppender(writeDecimalTextNode),\n  })\n);\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GX_NODE_FACTORY = function (value, objectStack, nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + nodeName);\n};\n\n/**\n * @param {Element} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  let values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n  orderedKeys = ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    GX_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'scale',\n  'heading',\n  'Icon',\n  'color',\n  'hotSpot',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeChildAppender(writeIcon),\n  'color': makeChildAppender(writeColorTextNode),\n  'heading': makeChildAppender(writeDecimalTextNode),\n  'hotSpot': makeChildAppender(writeVec2),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const /** @type {Object<string, any>} */ properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src,\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {Vec2} */ hotSpot = {\n          x: anchor[0],\n          xunits: 'pixels',\n          y: size[1] - anchor[1],\n          yunits: 'pixels',\n        };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  let scale = style.getScaleArray()[0];\n  let imageSize = size;\n  if (imageSize === null) {\n    imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n  }\n  if (imageSize.length == 2) {\n    const resizeScale = scaleForSize(imageSize);\n    scale = scale / resizeScale;\n  }\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const color = style.getColor();\n  if (color) {\n    properties['color'] = color;\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'scale',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LABEL_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'width']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'width': makeChildAppender(writeDecimalTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': Number(style.getWidth()) || 1,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LINE_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry',\n};\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GEOMETRY_NODE_FACTORY = function (value, objectStack, nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      parentNode.namespaceURI,\n      GEOMETRY_TYPE_TO_NODENAME[\n        /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType()\n      ]\n    );\n  }\n};\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'GeometryCollection': makeChildAppender(writeMultiGeometry),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n  let geometries = [];\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type === 'GeometryCollection') {\n    /** @type {GeometryCollection} */ (geometry)\n      .getGeometriesArrayRecursive()\n      .forEach(function (geometry) {\n        const type = geometry.getType();\n        if (type === 'MultiPoint') {\n          geometries = geometries.concat(\n            /** @type {MultiPoint} */ (geometry).getPoints()\n          );\n        } else if (type === 'MultiLineString') {\n          geometries = geometries.concat(\n            /** @type {MultiLineString} */ (geometry).getLineStrings()\n          );\n        } else if (type === 'MultiPolygon') {\n          geometries = geometries.concat(\n            /** @type {MultiPolygon} */ (geometry).getPolygons()\n          );\n        } else if (\n          type === 'Point' ||\n          type === 'LineString' ||\n          type === 'Polygon'\n        ) {\n          geometries.push(geometry);\n        } else {\n          assert(false, 39); // Unknown geometry type\n        }\n      });\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type === 'MultiPoint') {\n    geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type === 'MultiLineString') {\n    geometries = /** @type {MultiLineString} */ (geometry).getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type === 'MultiPolygon') {\n    geometries = /** @type {MultiPolygon} */ (geometry).getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  pushSerializeAndPop(\n    context,\n    MULTI_GEOMETRY_SERIALIZERS,\n    factory,\n    geometries,\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    BOUNDARY_IS_SERIALIZERS,\n    LINEAR_RING_NODE_FACTORY,\n    [linearRing],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': makeChildAppender(writeExtendedData),\n  'MultiGeometry': makeChildAppender(writeMultiGeometry),\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'Style': makeChildAppender(writeStyle),\n  'address': makeChildAppender(writeStringTextNode),\n  'description': makeChildAppender(writeStringTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'open': makeChildAppender(writeBooleanTextNode),\n  'phoneNumber': makeChildAppender(writeStringTextNode),\n  'styleUrl': makeChildAppender(writeStringTextNode),\n  'visibility': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'open',\n  'visibility',\n  'address',\n  'phoneNumber',\n  'description',\n  'styleUrl',\n  'Style',\n]);\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', /** @type {string} */ (feature.getId()));\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {\n    'address': 1,\n    'description': 1,\n    'name': 1,\n    'open': 1,\n    'phoneNumber': 1,\n    'styleUrl': 1,\n    'visibility': 1,\n  };\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {})\n    .sort()\n    .filter(function (v) {\n      return !filter[v];\n    });\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction(feature, 0);\n    if (styles) {\n      const styleArray = Array.isArray(styles) ? styles : [styles];\n      let pointStyles = styleArray;\n      if (feature.getGeometry()) {\n        pointStyles = styleArray.filter(function (style) {\n          const geometry = style.getGeometryFunction()(feature);\n          if (geometry) {\n            const type = geometry.getType();\n            if (type === 'GeometryCollection') {\n              return /** @type {GeometryCollection} */ (geometry)\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type === 'Point' || type === 'MultiPoint';\n                }).length;\n            }\n            return type === 'Point' || type === 'MultiPoint';\n          }\n        });\n        ('Point');\n      }\n      if (this.writeStyles_) {\n        let lineStyles = styleArray;\n        let polyStyles = styleArray;\n        if (feature.getGeometry()) {\n          lineStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === 'GeometryCollection') {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return type === 'LineString' || type === 'MultiLineString';\n                  }).length;\n              }\n              return type === 'LineString' || type === 'MultiLineString';\n            }\n          });\n          polyStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === 'GeometryCollection') {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return type === 'Polygon' || type === 'MultiPolygon';\n                  }).length;\n              }\n              return type === 'Polygon' || type === 'MultiPolygon';\n            }\n          });\n        }\n        properties['Style'] = {\n          pointStyles: pointStyles,\n          lineStyles: lineStyles,\n          polyStyles: polyStyles,\n        };\n      }\n      if (pointStyles.length && properties['name'] === undefined) {\n        const textStyle = pointStyles[0].getText();\n        if (textStyle) {\n          properties['name'] = textStyle.getText();\n        }\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n\n  if (keys.length > 0) {\n    const sequence = makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    pushSerializeAndPop(\n      context,\n      PLACEMARK_SERIALIZERS,\n      EXTENDEDDATA_NODE_FACTORY,\n      [namesAndValues],\n      objectStack\n    );\n  }\n\n  // serialize geometry\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformGeometryWithOptions(geometry, true, options);\n  }\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    GEOMETRY_NODE_FACTORY,\n    [geometry],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'extrude',\n  'tessellate',\n  'altitudeMode',\n  'coordinates',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeChildAppender(writeBooleanTextNode),\n  'tessellate': makeChildAppender(writeBooleanTextNode),\n  'altitudeMode': makeChildAppender(writeStringTextNode),\n  'coordinates': makeChildAppender(writeCoordinatesTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PRIMITIVE_GEOMETRY_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'fill',\n  'outline',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n  'innerBoundaryIs': makeChildAppender(writeBoundaryIs),\n});\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n/**\n * @param {Element} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  // inner rings\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    INNER_BOUNDARY_NODE_FACTORY,\n    linearRings,\n    objectStack\n  );\n  // outer ring\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    OUTER_BOUNDARY_NODE_FACTORY,\n    [outerRing],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'fill': makeChildAppender(writeBooleanTextNode),\n  'outline': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const fill = style.getFill();\n  const stroke = style.getStroke();\n  const properties = {\n    'color': fill ? fill.getColor() : undefined,\n    'fill': fill ? undefined : false,\n    'outline': stroke ? undefined : false,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = POLY_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    POLY_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'IconStyle',\n  'LabelStyle',\n  'LineStyle',\n  'PolyStyle',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': makeChildAppender(writeIconStyle),\n  'LabelStyle': makeChildAppender(writeLabelStyle),\n  'LineStyle': makeChildAppender(writeLineStyle),\n  'PolyStyle': makeChildAppender(writePolyStyle),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Object<string, Array<Style>>} styles Styles.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, styles, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  if (styles.pointStyles.length) {\n    const textStyle = styles.pointStyles[0].getText();\n    if (textStyle) {\n      properties['LabelStyle'] = textStyle;\n    }\n    const imageStyle = styles.pointStyles[0].getImage();\n    if (\n      imageStyle &&\n      typeof (/** @type {?} */ (imageStyle).getSrc) === 'function'\n    ) {\n      properties['IconStyle'] = imageStyle;\n    }\n  }\n  if (styles.lineStyles.length) {\n    const strokeStyle = styles.lineStyles[0].getStroke();\n    if (strokeStyle) {\n      properties['LineStyle'] = strokeStyle;\n    }\n  }\n  if (styles.polyStyles.length) {\n    const strokeStyle = styles.polyStyles[0].getStroke();\n    if (strokeStyle && !properties['LineStyle']) {\n      properties['LineStyle'] = strokeStyle;\n    }\n    properties['PolyStyle'] = styles.polyStyles[0];\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', String(vec2.x));\n  node.setAttribute('y', String(vec2.y));\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\nexport default KML;\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos;\n        var pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return readUtf8TextDecoder(this.buf, pos, end);\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport {assert} from '../asserts.js';\nimport {get} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options} [options] Options.\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    /**\n     * @private\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass_ = options.featureClass\n      ? options.featureClass\n      : RenderFeature;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1]\n          );\n          coordsLen += 2;\n        }\n      } else {\n        assert(false, 59); // Invalid command found in the PBF\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(\n        geometryType,\n        flatCoordinates,\n        ends,\n        values,\n        id\n      );\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n            ? new LineString(flatCoordinates, 'XY')\n            : geometryType === 'MultiPoint'\n            ? new MultiPoint(flatCoordinates, 'XY')\n            : geometryType === 'MultiLineString'\n            ? new MultiLineString(flatCoordinates, 'XY', ends)\n            : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass_\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return feature;\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return features;\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n          ? pbf.readFloat()\n          : tag === 3\n          ? pbf.readDouble()\n          : tag === 4\n          ? pbf.readVarint64()\n          : tag === 5\n          ? pbf.readVarint()\n          : tag === 6\n          ? pbf.readSVarint()\n          : tag === 7\n          ? pbf.readBoolean()\n          : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../geom/Geometry.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../geom/Geometry.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/format/OSMXML\n */\n// FIXME add typedef for stack state objects\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport XMLFeature from './XMLFeature.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {makeStructureNS, pushParseAndPop} from '../xml.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @const\n * @type {Array<null>}\n */\nconst NAMESPACE_URIS = [null];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WAY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'nd': readNd,\n  'tag': readTag,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'node': readNode,\n  'way': readWay,\n});\n\n/**\n * @classdesc\n * Feature format for reading data in the\n * [OSMXML format](https://wiki.openstreetmap.org/wiki/OSM_XML).\n *\n * @api\n */\nclass OSMXML extends XMLFeature {\n  constructor() {\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    options = this.getReadOptions(node, options);\n    if (node.localName == 'osm') {\n      const state = pushParseAndPop(\n        {\n          nodes: {},\n          ways: [],\n          features: [],\n        },\n        PARSERS,\n        node,\n        [options]\n      );\n      // parse nodes in ways\n      for (let j = 0; j < state.ways.length; j++) {\n        const values = /** @type {Object} */ (state.ways[j]);\n        /** @type {Array<number>} */\n        const flatCoordinates = values.flatCoordinates;\n        if (!flatCoordinates.length) {\n          for (let i = 0, ii = values.ndrefs.length; i < ii; i++) {\n            const point = state.nodes[values.ndrefs[i]];\n            extend(flatCoordinates, point);\n          }\n        }\n        let geometry;\n        if (values.ndrefs[0] == values.ndrefs[values.ndrefs.length - 1]) {\n          // closed way\n          geometry = new Polygon(flatCoordinates, 'XY', [\n            flatCoordinates.length,\n          ]);\n        } else {\n          geometry = new LineString(flatCoordinates, 'XY');\n        }\n        transformGeometryWithOptions(geometry, false, options);\n        const feature = new Feature(geometry);\n        if (values.id !== undefined) {\n          feature.setId(values.id);\n        }\n        feature.setProperties(values.tags, true);\n        state.features.push(feature);\n      }\n      if (state.features) {\n        return state.features;\n      }\n    }\n    return [];\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'tag': readTag,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNode(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const id = node.getAttribute('id');\n  /** @type {import(\"../coordinate.js\").Coordinate} */\n  const coordinates = [\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')),\n  ];\n  state.nodes[id] = coordinates;\n\n  const values = pushParseAndPop(\n    {\n      tags: {},\n    },\n    NODE_PARSERS,\n    node,\n    objectStack\n  );\n  if (!isEmpty(values.tags)) {\n    const geometry = new Point(coordinates);\n    transformGeometryWithOptions(geometry, false, options);\n    const feature = new Feature(geometry);\n    if (id !== undefined) {\n      feature.setId(id);\n    }\n    feature.setProperties(values.tags, true);\n    state.features.push(feature);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readWay(node, objectStack) {\n  const id = node.getAttribute('id');\n  const values = pushParseAndPop(\n    {\n      id: id,\n      ndrefs: [],\n      flatCoordinates: [],\n      tags: {},\n    },\n    WAY_PARSERS,\n    node,\n    objectStack\n  );\n  const state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  state.ways.push(values);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNd(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values.ndrefs.push(node.getAttribute('ref'));\n  if (node.hasAttribute('lon') && node.hasAttribute('lat')) {\n    values.flatCoordinates.push(parseFloat(node.getAttribute('lon')));\n    values.flatCoordinates.push(parseFloat(node.getAttribute('lat')));\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readTag(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values.tags[node.getAttribute('k')] = node.getAttribute('v');\n}\n\nexport default OSMXML;\n","/**\n * @module ol/format/XML\n */\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nclass XML {\n  /**\n   * Read the source document.\n   *\n   * @param {Document|Element|string} source The XML source.\n   * @return {Object} An object representing the source.\n   * @api\n   */\n  read(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Object} Object\n   */\n  readFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {}\n}\n\nexport default XML;\n","/**\n * @module ol/format/xlink\n */\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n/**\n * @param {Element} node Node.\n * @return {string|undefined} href.\n */\nexport function readHref(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n","/**\n * @module ol/format/OWS\n */\nimport XML from './XML.js';\nimport {\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readHref} from './xlink.js';\nimport {readString} from './xsd.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n  'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n  'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata),\n});\n\nclass OWS extends XML {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {\n    const owsObject = pushParseAndPop({}, PARSERS, node, []);\n    return owsObject ? owsObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DeliveryPoint': makeObjectPropertySetter(readString),\n  'City': makeObjectPropertySetter(readString),\n  'AdministrativeArea': makeObjectPropertySetter(readString),\n  'PostalCode': makeObjectPropertySetter(readString),\n  'Country': makeObjectPropertySetter(readString),\n  'ElectronicMailAddress': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ALLOWED_VALUES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Value': makeObjectPropertyPusher(readValue),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONSTRAINT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'AllowedValues': makeObjectPropertySetter(readAllowedValues),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_INFO_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Phone': makeObjectPropertySetter(readPhone),\n  'Address': makeObjectPropertySetter(readAddress),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DCP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'HTTP': makeObjectPropertySetter(readHttp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Get': makeObjectPropertyPusher(readGet),\n  'Post': undefined, // TODO\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DCP': makeObjectPropertySetter(readDcp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATIONS_METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Operation': readOperation,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PHONE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Voice': makeObjectPropertySetter(readString),\n  'Facsimile': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REQUEST_METHOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Constraint': makeObjectPropertyPusher(readConstraint),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_CONTACT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IndividualName': makeObjectPropertySetter(readString),\n  'PositionName': makeObjectPropertySetter(readString),\n  'ContactInfo': makeObjectPropertySetter(readContactInfo),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_IDENTIFICATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Abstract': makeObjectPropertySetter(readString),\n  'AccessConstraints': makeObjectPropertySetter(readString),\n  'Fees': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'ServiceTypeVersion': makeObjectPropertySetter(readString),\n  'ServiceType': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PROVIDER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ProviderName': makeObjectPropertySetter(readString),\n  'ProviderSite': makeObjectPropertySetter(readHref),\n  'ServiceContact': makeObjectPropertySetter(readServiceContact),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({}, ADDRESS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({}, ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({'name': name}, CONSTRAINT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({}, DCP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  const href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop(\n    {'href': href},\n    REQUEST_METHOD_PARSERS,\n    node,\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = pushParseAndPop({}, OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  object[name] = value;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONS_METADATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({}, PHONE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_IDENTIFICATION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_CONTACT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PROVIDER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\n\nexport default OWS;\n","/**\n * @module ol/format/Polyline\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport TextFeature from './TextFeature.js';\nimport {assert} from '../asserts.js';\nimport {flipXY} from '../geom/flat/flip.js';\nimport {get as getProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the format reader.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the Encoded\n * Polyline Algorithm Format.\n *\n * When reading features, the coordinates are assumed to be in two dimensions\n * and in [latitude, longitude] order.\n *\n * As Polyline sources contain a single feature,\n * {@link module:ol/format/Polyline~Polyline#readFeatures} will return the\n * feature in an array.\n *\n * @api\n */\nclass Polyline extends TextFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.factor_ = options.factor ? options.factor : 1e5;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    const geometry = this.readGeometryFromText(text, options);\n    return new Feature(geometry);\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    const feature = this.readFeatureFromText(text, options);\n    return [feature];\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, options) {\n    const stride = getStrideForLayout(this.geometryLayout_);\n    const flatCoordinates = decodeDeltas(text, stride, this.factor_);\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    const coordinates = inflateCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    const lineString = new LineString(coordinates, this.geometryLayout_);\n\n    return transformGeometryWithOptions(\n      lineString,\n      false,\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default<LineString>} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, options) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, options);\n    }\n    assert(false, 40); // Expected `feature` to have a geometry\n    return '';\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default<LineString>>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, options) {\n    return this.writeFeatureText(features[0], options);\n  }\n\n  /**\n   * @param {LineString} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, options) {\n    geometry =\n      /** @type {LineString} */\n      (\n        transformGeometryWithOptions(geometry, true, this.adaptOptions(options))\n      );\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    return encodeDeltas(flatCoordinates, stride, this.factor_);\n  }\n}\n\n/**\n * Encode a list of n-dimensional points and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of n-dimensional points.\n * @param {number} stride The number of dimension of the points in the list.\n * @param {number} [factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeDeltas(numbers, stride, factor) {\n  factor = factor ? factor : 1e5;\n  let d;\n\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      const num = numbers[i];\n      const delta = num - lastNumbers[d];\n      lastNumbers[d] = num;\n\n      numbers[i] = delta;\n    }\n  }\n\n  return encodeFloats(numbers, factor);\n}\n\n/**\n * Decode a list of n-dimensional points from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} stride The number of dimension of the points in the\n *     encoded string.\n * @param {number} [factor] The factor by which the resulting numbers will\n *     be divided. Default is `1e5`.\n * @return {Array<number>} A list of n-dimensional points.\n * @api\n */\nexport function decodeDeltas(encoded, stride, factor) {\n  factor = factor ? factor : 1e5;\n  let d;\n\n  /** @type {Array<number>} */\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  const numbers = decodeFloats(encoded, factor);\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      lastNumbers[d] += numbers[i];\n\n      numbers[i] = lastNumbers[d];\n    }\n  }\n\n  return numbers;\n}\n\n/**\n * Encode a list of floating point numbers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of floating point numbers.\n * @param {number} [factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeFloats(numbers, factor) {\n  factor = factor ? factor : 1e5;\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] = Math.round(numbers[i] * factor);\n  }\n\n  return encodeSignedIntegers(numbers);\n}\n\n/**\n * Decode a list of floating point numbers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} [factor] The factor by which the result will be divided.\n *     Default is `1e5`.\n * @return {Array<number>} A list of floating point numbers.\n * @api\n */\nexport function decodeFloats(encoded, factor) {\n  factor = factor ? factor : 1e5;\n  const numbers = decodeSignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] /= factor;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of signed integers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of signed integers.\n * @return {string} The encoded string.\n */\nexport function encodeSignedIntegers(numbers) {\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num < 0 ? ~(num << 1) : num << 1;\n  }\n  return encodeUnsignedIntegers(numbers);\n}\n\n/**\n * Decode a list of signed integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of signed integers.\n */\nexport function decodeSignedIntegers(encoded) {\n  const numbers = decodeUnsignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num & 1 ? ~(num >> 1) : num >> 1;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of unsigned integers and return an encoded string\n *\n * @param {Array<number>} numbers A list of unsigned integers.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedIntegers(numbers) {\n  let encoded = '';\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    encoded += encodeUnsignedInteger(numbers[i]);\n  }\n  return encoded;\n}\n\n/**\n * Decode a list of unsigned integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of unsigned integers.\n */\nexport function decodeUnsignedIntegers(encoded) {\n  const numbers = [];\n  let current = 0;\n  let shift = 0;\n  for (let i = 0, ii = encoded.length; i < ii; ++i) {\n    const b = encoded.charCodeAt(i) - 63;\n    current |= (b & 0x1f) << shift;\n    if (b < 0x20) {\n      numbers.push(current);\n      current = 0;\n      shift = 0;\n    } else {\n      shift += 5;\n    }\n  }\n  return numbers;\n}\n\n/**\n * Encode one single unsigned integer and return an encoded string\n *\n * @param {number} num Unsigned integer that should be encoded.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedInteger(num) {\n  let value,\n    encoded = '';\n  while (num >= 0x20) {\n    value = (0x20 | (num & 0x1f)) + 63;\n    encoded += String.fromCharCode(value);\n    num >>= 5;\n  }\n  value = num + 63;\n  encoded += String.fromCharCode(value);\n  return encoded;\n}\n\nexport default Polyline;\n","/**\n * @module ol/format/TopoJSON\n */\nimport Feature from '../Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"topojson-specification\").Topology} TopoJSONTopology\n * @typedef {import(\"topojson-specification\").GeometryCollection} TopoJSONGeometryCollection\n * @typedef {import(\"topojson-specification\").GeometryObject} TopoJSONGeometry\n * @typedef {import(\"topojson-specification\").Point} TopoJSONPoint\n * @typedef {import(\"topojson-specification\").MultiPoint} TopoJSONMultiPoint\n * @typedef {import(\"topojson-specification\").LineString} TopoJSONLineString\n * @typedef {import(\"topojson-specification\").MultiLineString} TopoJSONMultiLineString\n * @typedef {import(\"topojson-specification\").Polygon} TopoJSONPolygon\n * @typedef {import(\"topojson-specification\").MultiPolygon} TopoJSONMultiPolygon\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {string} [layerName] Set the name of the TopoJSON topology\n * `objects`'s children as feature property with the specified name. This means\n * that when set to `'layer'`, a topology like\n * ```\n * {\n *   \"type\": \"Topology\",\n *   \"objects\": {\n *     \"example\": {\n *       \"type\": \"GeometryCollection\",\n *       \"geometries\": []\n *     }\n *   }\n * }\n * ```\n * will result in features that have a property `'layer'` set to `'example'`.\n * When not set, no property will be added to features.\n * @property {Array<string>} [layers] Names of the TopoJSON topology's\n * `objects`'s children to read features from.  If not provided, features will\n * be read from all children.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the TopoJSON format.\n *\n * @api\n */\nclass TopoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.layerName_ = options.layerName;\n\n    /**\n     * @private\n     * @type {?Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    if (object.type == 'Topology') {\n      const topoJSONTopology = /** @type {TopoJSONTopology} */ (object);\n      let transform,\n        scale = null,\n        translate = null;\n      if (topoJSONTopology['transform']) {\n        transform = topoJSONTopology['transform'];\n        scale = transform['scale'];\n        translate = transform['translate'];\n      }\n      const arcs = topoJSONTopology['arcs'];\n      if (transform) {\n        transformArcs(arcs, scale, translate);\n      }\n      /** @type {Array<Feature>} */\n      const features = [];\n      const topoJSONFeatures = topoJSONTopology['objects'];\n      const property = this.layerName_;\n      let feature;\n      for (const objectName in topoJSONFeatures) {\n        if (this.layers_ && !this.layers_.includes(objectName)) {\n          continue;\n        }\n        if (topoJSONFeatures[objectName].type === 'GeometryCollection') {\n          feature = /** @type {TopoJSONGeometryCollection} */ (\n            topoJSONFeatures[objectName]\n          );\n          features.push.apply(\n            features,\n            readFeaturesFromGeometryCollection(\n              feature,\n              arcs,\n              scale,\n              translate,\n              property,\n              objectName,\n              options\n            )\n          );\n        } else {\n          feature = /** @type {TopoJSONGeometry} */ (\n            topoJSONFeatures[objectName]\n          );\n          features.push(\n            readFeatureFromGeometry(\n              feature,\n              arcs,\n              scale,\n              translate,\n              property,\n              objectName,\n              options\n            )\n          );\n        }\n      }\n      return features;\n    }\n    return [];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return this.dataProjection;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, function(TopoJSONGeometry, Array, ...Array=): import(\"../geom/Geometry.js\").default>}\n */\nconst GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry,\n};\n\n/**\n * Concatenate arcs into a coordinate array.\n * @param {Array<number>} indices Indices of arcs to concatenate.  Negative\n *     values indicate arcs need to be reversed.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs (already\n *     transformed).\n * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates array.\n */\nfunction concatenateArcs(indices, arcs) {\n  /** @type {Array<import(\"../coordinate.js\").Coordinate>} */\n  const coordinates = [];\n  let index;\n  for (let i = 0, ii = indices.length; i < ii; ++i) {\n    index = indices[i];\n    if (i > 0) {\n      // splicing together arcs, discard last point\n      coordinates.pop();\n    }\n    if (index >= 0) {\n      // forward arc\n      const arc = arcs[index];\n      for (let j = 0, jj = arc.length; j < jj; ++j) {\n        coordinates.push(arc[j].slice(0));\n      }\n    } else {\n      // reverse arc\n      const arc = arcs[~index];\n      for (let j = arc.length - 1; j >= 0; --j) {\n        coordinates.push(arc[j].slice(0));\n      }\n    }\n  }\n  return coordinates;\n}\n\n/**\n * Create a point from a TopoJSON geometry object.\n *\n * @param {TopoJSONPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {Point} Geometry.\n */\nfunction readPointGeometry(object, scale, translate) {\n  const coordinates = object['coordinates'];\n  if (scale && translate) {\n    transformVertex(coordinates, scale, translate);\n  }\n  return new Point(coordinates);\n}\n\n/**\n * Create a multi-point from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {MultiPoint} Geometry.\n */\nfunction readMultiPointGeometry(object, scale, translate) {\n  const coordinates = object['coordinates'];\n  if (scale && translate) {\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      transformVertex(coordinates[i], scale, translate);\n    }\n  }\n  return new MultiPoint(coordinates);\n}\n\n/**\n * Create a linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {LineString} Geometry.\n */\nfunction readLineStringGeometry(object, arcs) {\n  const coordinates = concatenateArcs(object['arcs'], arcs);\n  return new LineString(coordinates);\n}\n\n/**\n * Create a multi-linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiLineString} Geometry.\n */\nfunction readMultiLineStringGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n  }\n  return new MultiLineString(coordinates);\n}\n\n/**\n * Create a polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {Polygon} Geometry.\n */\nfunction readPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n  }\n  return new Polygon(coordinates);\n}\n\n/**\n * Create a multi-polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiPolygon} Geometry.\n */\nfunction readMultiPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    // for each polygon\n    const polyArray = object['arcs'][i];\n    const ringCoords = [];\n    for (let j = 0, jj = polyArray.length; j < jj; ++j) {\n      // for each ring\n      ringCoords[j] = concatenateArcs(polyArray[j], arcs);\n    }\n    coordinates[i] = ringCoords;\n  }\n  return new MultiPolygon(coordinates);\n}\n\n/**\n * Create features from a TopoJSON GeometryCollection object.\n *\n * @param {TopoJSONGeometryCollection} collection TopoJSON Geometry\n *     object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {Array<Feature>} Array of features.\n */\nfunction readFeaturesFromGeometryCollection(\n  collection,\n  arcs,\n  scale,\n  translate,\n  property,\n  name,\n  options\n) {\n  const geometries = collection['geometries'];\n  const features = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    features[i] = readFeatureFromGeometry(\n      geometries[i],\n      arcs,\n      scale,\n      translate,\n      property,\n      name,\n      options\n    );\n  }\n  return features;\n}\n\n/**\n * Create a feature from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON geometry object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {Feature} Feature.\n */\nfunction readFeatureFromGeometry(\n  object,\n  arcs,\n  scale,\n  translate,\n  property,\n  name,\n  options\n) {\n  let geometry = null;\n  const type = object.type;\n  if (type) {\n    const geometryReader = GEOMETRY_READERS[type];\n    if (type === 'Point' || type === 'MultiPoint') {\n      geometry = geometryReader(object, scale, translate);\n    } else {\n      geometry = geometryReader(object, arcs);\n    }\n    geometry = transformGeometryWithOptions(geometry, false, options);\n  }\n  const feature = new Feature({geometry: geometry});\n  if (object.id !== undefined) {\n    feature.setId(object.id);\n  }\n  let properties = object.properties;\n  if (property) {\n    if (!properties) {\n      properties = {};\n    }\n    properties[property] = name;\n  }\n  if (properties) {\n    feature.setProperties(properties, true);\n  }\n  return feature;\n}\n\n/**\n * Apply a linear transform to array of arcs.  The provided array of arcs is\n * modified in place.\n *\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArcs(arcs, scale, translate) {\n  for (let i = 0, ii = arcs.length; i < ii; ++i) {\n    transformArc(arcs[i], scale, translate);\n  }\n}\n\n/**\n * Apply a linear transform to an arc.  The provided arc is modified in place.\n *\n * @param {Array<import(\"../coordinate.js\").Coordinate>} arc Arc.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArc(arc, scale, translate) {\n  let x = 0;\n  let y = 0;\n  for (let i = 0, ii = arc.length; i < ii; ++i) {\n    const vertex = arc[i];\n    x += vertex[0];\n    y += vertex[1];\n    vertex[0] = x;\n    vertex[1] = y;\n    transformVertex(vertex, scale, translate);\n  }\n}\n\n/**\n * Apply a linear transform to a vertex.  The provided vertex is modified in\n * place.\n *\n * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformVertex(vertex, scale, translate) {\n  vertex[0] = vertex[0] * scale[0] + translate[0];\n  vertex[1] = vertex[1] * scale[1] + translate[1];\n}\n\nexport default TopoJSON;\n","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport Feature from '../Feature.js';\nimport Geometry from '../geom/Geometry.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport XMLFeature from './XMLFeature.js';\nimport {extend} from '../array.js';\nimport {\n  getAllTextContent,\n  getAttributeNS,\n  makeArrayPusher,\n  makeReplacer,\n  parseNode,\n  pushParseAndPop,\n} from '../xml.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\n\n/**\n * @const\n * @type {string}\n */\nexport const GMLNS = 'http://www.opengis.net/gml';\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc.\n *\n * @const\n * @type {RegExp}\n */\nconst ONLY_WHITESPACE_RE = /^\\s*$/;\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] Feature\n * namespace. If not defined will be derived from GML. If multiple\n * feature types have been configured which come from different feature\n * namespaces, this will be an object with the keys being the prefixes used\n * in the entries of featureType array. The values of the object will be the\n * feature namespaces themselves. So for instance there might be a featureType\n * item `topp:states` in the `featureType` array and then there will be a key\n * `topp` in the featureNS object with value `http://www.openplans.org/topp`.\n * @property {Array<string>|string} [featureType] Feature type(s) to parse.\n * If multiple feature types need to be configured\n * which come from different feature namespaces, `featureNS` will be an object\n * with the keys being the prefixes used in the entries of featureType array.\n * The values of the object will be the feature namespaces themselves.\n * So for instance there might be a featureType item `topp:states` and then\n * there will be a key named `topp` in the featureNS object with value\n * `http://www.openplans.org/topp`.\n * @property {string} [srsName] srsName to use when writing geometries.\n * @property {boolean} [surface=false] Write gml:Surface instead of gml:Polygon\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [curve=false] Write gml:Curve instead of gml:LineString\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [multiCurve=true] Write gml:MultiCurve instead of gml:MultiLineString.\n * Since the latter is deprecated in GML 3.\n * @property {boolean} [multiSurface=true] Write gml:multiSurface instead of\n * gml:MultiPolygon. Since the latter is deprecated in GML 3.\n * @property {string} [schemaLocation] Optional schemaLocation to use when\n * writing out the GML, this will override the default provided.\n * @property {boolean} [hasZ=false] If coordinates have a Z value.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes GML2 and GML3.\n *\n * @abstract\n * @api\n */\nclass GMLBase extends XMLFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @protected\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType = options.featureType;\n\n    /**\n     * @protected\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS = options.featureNS;\n\n    /**\n     * @protected\n     * @type {string|undefined}\n     */\n    this.srsName = options.srsName;\n\n    /**\n     * @protected\n     * @type {string}\n     */\n    this.schemaLocation = '';\n\n    /**\n     * @type {Object<string, Object<string, Object>>}\n     */\n    this.FEATURE_COLLECTION_PARSERS = {};\n    this.FEATURE_COLLECTION_PARSERS[this.namespace] = {\n      'featureMember': makeArrayPusher(this.readFeaturesInternal),\n      'featureMembers': makeReplacer(this.readFeaturesInternal),\n    };\n\n    this.supportedMediaTypes = ['application/gml+xml'];\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<Feature> | undefined} Features.\n   */\n  readFeaturesInternal(node, objectStack) {\n    const localName = node.localName;\n    let features = null;\n    if (localName == 'FeatureCollection') {\n      features = pushParseAndPop(\n        [],\n        this.FEATURE_COLLECTION_PARSERS,\n        node,\n        objectStack,\n        this\n      );\n    } else if (\n      localName == 'featureMembers' ||\n      localName == 'featureMember' ||\n      localName == 'member'\n    ) {\n      const context = objectStack[0];\n      let featureType = context['featureType'];\n      let featureNS = context['featureNS'];\n      const prefix = 'p';\n      const defaultPrefix = 'p0';\n      if (!featureType && node.childNodes) {\n        (featureType = []), (featureNS = {});\n        for (let i = 0, ii = node.childNodes.length; i < ii; ++i) {\n          const child = /** @type {Element} */ (node.childNodes[i]);\n          if (child.nodeType === 1) {\n            const ft = child.nodeName.split(':').pop();\n            if (!featureType.includes(ft)) {\n              let key = '';\n              let count = 0;\n              const uri = child.namespaceURI;\n              for (const candidate in featureNS) {\n                if (featureNS[candidate] === uri) {\n                  key = candidate;\n                  break;\n                }\n                ++count;\n              }\n              if (!key) {\n                key = prefix + count;\n                featureNS[key] = uri;\n              }\n              featureType.push(key + ':' + ft);\n            }\n          }\n        }\n        if (localName != 'featureMember') {\n          // recheck featureType for each featureMember\n          context['featureType'] = featureType;\n          context['featureNS'] = featureNS;\n        }\n      }\n      if (typeof featureNS === 'string') {\n        const ns = featureNS;\n        featureNS = {};\n        featureNS[defaultPrefix] = ns;\n      }\n      /** @type {Object<string, Object<string, import(\"../xml.js\").Parser>>} */\n      const parsersNS = {};\n      const featureTypes = Array.isArray(featureType)\n        ? featureType\n        : [featureType];\n      for (const p in featureNS) {\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        const parsers = {};\n        for (let i = 0, ii = featureTypes.length; i < ii; ++i) {\n          const featurePrefix = featureTypes[i].includes(':')\n            ? featureTypes[i].split(':')[0]\n            : defaultPrefix;\n          if (featurePrefix === p) {\n            parsers[featureTypes[i].split(':').pop()] =\n              localName == 'featureMembers'\n                ? makeArrayPusher(this.readFeatureElement, this)\n                : makeReplacer(this.readFeatureElement, this);\n          }\n        }\n        parsersNS[featureNS[p]] = parsers;\n      }\n      if (localName == 'featureMember' || localName == 'member') {\n        features = pushParseAndPop(undefined, parsersNS, node, objectStack);\n      } else {\n        features = pushParseAndPop([], parsersNS, node, objectStack);\n      }\n    }\n    if (features === null) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent|undefined} Geometry.\n   */\n  readGeometryOrExtent(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    context['srsName'] = node.firstElementChild.getAttribute('srsName');\n    context['srsDimension'] =\n      node.firstElementChild.getAttribute('srsDimension');\n    return pushParseAndPop(\n      null,\n      this.GEOMETRY_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Geometry.\n   */\n  readExtentElement(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    const extent = /** @type {import(\"../extent.js\").Extent} */ (\n      this.readGeometryOrExtent(node, objectStack)\n    );\n    return extent ? transformExtentWithOptions(extent, context) : undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../geom/Geometry.js\").default|undefined} Geometry.\n   */\n  readGeometryElement(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    const geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      this.readGeometryOrExtent(node, objectStack)\n    );\n    return geometry\n      ? transformGeometryWithOptions(geometry, false, context)\n      : undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {boolean} asFeature whether result should be wrapped as a feature.\n   * @return {Feature|Object} Feature\n   */\n  readFeatureElementInternal(node, objectStack, asFeature) {\n    let geometryName;\n    const values = {};\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      let value;\n      const localName = n.localName;\n      // first, check if it is simple attribute\n      if (\n        n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n          (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))\n      ) {\n        value = getAllTextContent(n, false);\n        if (ONLY_WHITESPACE_RE.test(value)) {\n          value = undefined;\n        }\n      } else {\n        if (asFeature) {\n          //if feature, try it as a geometry or extent\n          value =\n            localName === 'boundedBy'\n              ? this.readExtentElement(n, objectStack)\n              : this.readGeometryElement(n, objectStack);\n        }\n        if (!value) {\n          //if not a geometry or not a feature, treat it as a complex attribute\n          value = this.readFeatureElementInternal(n, objectStack, false);\n        } else if (localName !== 'boundedBy') {\n          // boundedBy is an extent and must not be considered as a geometry\n          geometryName = localName;\n        }\n      }\n\n      const len = n.attributes.length;\n      if (len > 0 && !(value instanceof Geometry)) {\n        value = {_content_: value};\n        for (let i = 0; i < len; i++) {\n          const attName = n.attributes[i].name;\n          value[attName] = n.attributes[i].value;\n        }\n      }\n\n      if (values[localName]) {\n        if (!(values[localName] instanceof Array)) {\n          values[localName] = [values[localName]];\n        }\n        values[localName].push(value);\n      } else {\n        values[localName] = value;\n      }\n    }\n    if (!asFeature) {\n      return values;\n    }\n    const feature = new Feature(values);\n    if (geometryName) {\n      feature.setGeometryName(geometryName);\n    }\n    const fid =\n      node.getAttribute('fid') || getAttributeNS(node, this.namespace, 'id');\n    if (fid) {\n      feature.setId(fid);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Feature} Feature.\n   */\n  readFeatureElement(node, objectStack) {\n    return this.readFeatureElementInternal(node, objectStack, true);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Point|undefined} Point.\n   */\n  readPoint(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      return new Point(flatCoordinates, 'XYZ');\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPoint|undefined} MultiPoint.\n   */\n  readMultiPoint(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const coordinates = pushParseAndPop(\n      [],\n      this.MULTIPOINT_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (coordinates) {\n      return new MultiPoint(coordinates);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  readMultiLineString(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTILINESTRING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (lineStrings) {\n      return new MultiLineString(lineStrings);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiPolygon(node, objectStack) {\n    /** @type {Array<Polygon>} */\n    const polygons = pushParseAndPop(\n      [],\n      this.MULTIPOLYGON_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  pointMemberParser(node, objectStack) {\n    parseNode(this.POINTMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  lineStringMemberParser(node, objectStack) {\n    parseNode(this.LINESTRINGMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  polygonMemberParser(node, objectStack) {\n    parseNode(this.POLYGONMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n  readLineString(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, 'XYZ');\n      return lineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} LinearRing flat coordinates.\n   */\n  readFlatLinearRing(node, objectStack) {\n    const ring = pushParseAndPop(\n      null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (ring) {\n      return ring;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LinearRing|undefined} LinearRing.\n   */\n  readLinearRing(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      return new LinearRing(flatCoordinates, 'XYZ');\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n  readPolygon(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const flatLinearRings = pushParseAndPop(\n      [null],\n      this.FLAT_LINEAR_RINGS_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, 'XYZ', ends);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>} Flat coordinates.\n   */\n  readFlatCoordinatesFromNode(node, objectStack) {\n    return pushParseAndPop(\n      null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, options) {\n    const geometry = this.readGeometryElement(node, [\n      this.getReadOptions(node, options ? options : {}),\n    ]);\n    return geometry ? geometry : null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    const internalOptions = {\n      featureType: this.featureType,\n      featureNS: this.featureNS,\n    };\n    if (internalOptions) {\n      Object.assign(internalOptions, this.getReadOptions(node, options));\n    }\n    const features = this.readFeaturesInternal(node, [internalOptions]);\n    return features || [];\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return getProjection(\n      this.srsName\n        ? this.srsName\n        : node.firstElementChild.getAttribute('srsName')\n    );\n  }\n}\n\nGMLBase.prototype.namespace = GMLNS;\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTIPOINT_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser\n    ),\n    'lineStringMembers': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.POINTMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n  },\n};\n\nexport default GMLBase;\n","/**\n * @module ol/format/GML2\n */\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  createElementNS,\n  getAllTextContent,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n  makeSimpleNodeFactory,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {createOrUpdate} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport {writeStringTextNode} from './xsd.js';\n\n/**\n * @const\n * @type {string}\n */\nconst schemaLocation =\n  GMLNS + ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember',\n};\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @api\n */\nclass GML2 extends GMLBase {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    this.FEATURE_COLLECTION_PARSERS[GMLNS]['featureMember'] = makeArrayPusher(\n      this.readFeaturesInternal\n    );\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : schemaLocation;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatCoordinates(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n      objectStack[0]\n    );\n    const containerSrs = context['srsName'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      if (proj) {\n        axisOrientation = proj.getAxisOrientation();\n      }\n    }\n    const coordsGroups = s.trim().split(/\\s+/);\n    const flatCoordinates = [];\n    for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n      const coords = coordsGroups[i].split(/,+/);\n      const x = parseFloat(coords[0]);\n      const y = parseFloat(coords[1]);\n      const z = coords.length === 3 ? parseFloat(coords[2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  readBox(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.BOX_PARSERS_,\n      node,\n      objectStack,\n      this\n    );\n    return createOrUpdate(\n      flatCoordinates[1][0],\n      flatCoordinates[1][1],\n      flatCoordinates[1][3],\n      flatCoordinates[1][4]\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  innerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  outerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const multiCurve = context['multiCurve'];\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        value\n      ).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS('http://www.opengis.net/gml', nodeName);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const keys = [];\n    const values = [];\n    if (feature.hasProperties()) {\n      const properties = feature.getProperties();\n      for (const key in properties) {\n        const value = properties[key];\n        if (value !== null) {\n          keys.push(key);\n          values.push(value);\n          if (\n            key == geometryName ||\n            typeof (/** @type {?} */ (value).getSimplifiedGeometry) ===\n              'function'\n          ) {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] = makeChildAppender(\n                this.writeGeometryElement,\n                this\n              );\n            }\n          } else {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] =\n                makeChildAppender(writeStringTextNode);\n            }\n          }\n        }\n      }\n    }\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack,\n      keys\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (\n      node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment'\n    ) {\n      const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n      node.appendChild(coordinates);\n      this.writeCoordinates_(coordinates, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLineStringOrCurveMember(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      lines,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const item = Object.assign({}, context);\n    item['node'] = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      value = transformExtentWithOptions(\n        /** @type {import(\"../extent.js\").Extent} */ (geometry),\n        context\n      );\n    } else {\n      value = transformGeometryWithOptions(\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry),\n        true,\n        context\n      );\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      this.GEOMETRY_SERIALIZERS,\n      this.GEOMETRY_NODE_FACTORY_,\n      [value],\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {string} namespaceURI XML namespace.\n   * @return {Element} coordinates node.\n   * @private\n   */\n  createCoordinatesNode_(namespaceURI) {\n    const coordinates = createElementNS(namespaceURI, 'coordinates');\n    coordinates.setAttribute('decimal', '.');\n    coordinates.setAttribute('cs', ',');\n    coordinates.setAttribute('ts', ' ');\n\n    return coordinates;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/LineString.js\").default|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCoordinates_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      const point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString(child, line, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS,\n        this.RING_NODE_FACTORY_,\n        rings,\n        objectStack,\n        undefined,\n        this\n      );\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(\n      parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs'\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeRing(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string} [srsName] Optional srsName\n   * @param {boolean} [hasZ] whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, srsName, hasZ) {\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    let coords =\n      axisOrientation.substr(0, 2) === 'en'\n        ? point[0] + ',' + point[1]\n        : point[1] + ',' + point[0];\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ',' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    const point = geometry.getCoordinates();\n    const coord = this.getCoords_(point, srsName, hasZ);\n    writeStringTextNode(coordinates, coord);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiPoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS,\n      makeSimpleNodeFactory('pointMember'),\n      points,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePointMember(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint(child, point, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLinearRing(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      polygons,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygonMember(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}),\n      this.ENVELOPE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack,\n      keys,\n      this\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      'http://www.opengis.net/gml',\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeArrayPusher(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Box': makeReplacer(GML2.prototype.readBox),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(GML2.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML2.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML2.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML2.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML2.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString\n    ),\n    'LinearRing': makeChildAppender(GML2.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Surface': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Envelope': makeChildAppender(GML2.prototype.writeEnvelope),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember\n    ),\n    'curveMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': makeChildAppender(GML2.prototype.writeRing),\n    'innerBoundaryIs': makeChildAppender(GML2.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(GML2.prototype.writePointMember),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember\n    ),\n    'polygonMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\nexport default GML2;\n","/**\n * @module ol/format/GML3\n */\nimport GML2 from './GML2.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n  makeSimpleNodeFactory,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {createOrUpdate} from '../extent.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {readNonNegativeIntegerString, writeStringTextNode} from './xsd.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\n\n/**\n * @const\n * @type {string}\n * @private\n */\nconst schemaLocation =\n  GMLNS +\n  ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n  '1.0.0/gmlsf.xsd';\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember',\n};\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @api\n */\nclass GML3 extends GMLBase {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.surface_ = options.surface !== undefined ? options.surface : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.curve_ = options.curve !== undefined ? options.curve : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiCurve_ =\n      options.multiCurve !== undefined ? options.multiCurve : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiSurface_ =\n      options.multiSurface !== undefined ? options.multiSurface : true;\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : schemaLocation;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hasZ = options.hasZ !== undefined ? options.hasZ : false;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  readMultiCurve(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTICURVE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (lineStrings) {\n      const multiLineString = new MultiLineString(lineStrings);\n      return multiLineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Polygon.\n   */\n  readFlatCurveRing(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTICURVE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    const flatCoordinates = [];\n    for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n      extend(flatCoordinates, lineStrings[i].getFlatCoordinates());\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiSurface(node, objectStack) {\n    /** @type {Array<Polygon>} */\n    const polygons = pushParseAndPop(\n      [],\n      this.MULTISURFACE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  curveMemberParser(node, objectStack) {\n    parseNode(this.CURVEMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  surfaceMemberParser(node, objectStack) {\n    parseNode(this.SURFACEMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  readPatch(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.PATCHES_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  readSegment(node, objectStack) {\n    return pushParseAndPop([], this.SEGMENTS_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  readPolygonPatch(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.FLAT_LINEAR_RINGS_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  readLineStringSegment(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  interiorParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  exteriorParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n  readSurface(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const flatLinearRings = pushParseAndPop(\n      [null],\n      this.SURFACE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, 'XYZ', ends);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n  readCurve(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.CURVE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, 'XYZ');\n      return lineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  readEnvelope(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.ENVELOPE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    return createOrUpdate(\n      flatCoordinates[1][0],\n      flatCoordinates[1][1],\n      flatCoordinates[2][0],\n      flatCoordinates[2][1]\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatPos(node, objectStack) {\n    let s = getAllTextContent(node, false);\n    const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n    /** @type {Array<number>} */\n    const flatCoordinates = [];\n    let m;\n    while ((m = re.exec(s))) {\n      flatCoordinates.push(parseFloat(m[1]));\n      s = s.substr(m[0].length);\n    }\n    if (s !== '') {\n      return undefined;\n    }\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    if (axisOrientation === 'neu') {\n      let i, ii;\n      for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n        const y = flatCoordinates[i];\n        const x = flatCoordinates[i + 1];\n        flatCoordinates[i] = x;\n        flatCoordinates[i + 1] = y;\n      }\n    }\n    const len = flatCoordinates.length;\n    if (len == 2) {\n      flatCoordinates.push(0);\n    }\n    if (len === 0) {\n      return undefined;\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatPosList(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    const contextDimension = context['srsDimension'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    const coords = s.split(/\\s+/);\n    // The \"dimension\" attribute is from the GML 3.0.1 spec.\n    let dim = 2;\n    if (node.getAttribute('srsDimension')) {\n      dim = readNonNegativeIntegerString(node.getAttribute('srsDimension'));\n    } else if (node.getAttribute('dimension')) {\n      dim = readNonNegativeIntegerString(node.getAttribute('dimension'));\n    } else if (\n      /** @type {Element} */ (node.parentNode).getAttribute('srsDimension')\n    ) {\n      dim = readNonNegativeIntegerString(\n        /** @type {Element} */ (node.parentNode).getAttribute('srsDimension')\n      );\n    } else if (contextDimension) {\n      dim = readNonNegativeIntegerString(contextDimension);\n    }\n    let x, y, z;\n    const flatCoordinates = [];\n    for (let i = 0, ii = coords.length; i < ii; i += dim) {\n      x = parseFloat(coords[i]);\n      y = parseFloat(coords[i + 1]);\n      z = dim === 3 ? parseFloat(coords[i + 2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} value Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePos_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    const point = value.getCoordinates();\n    let coords;\n    // only 2d for simple features profile\n    if (axisOrientation.substr(0, 2) === 'en') {\n      coords = point[0] + ' ' + point[1];\n    } else {\n      coords = point[1] + ' ' + point[0];\n    }\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n    writeStringTextNode(node, coords);\n  }\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string} [srsName] Optional srsName\n   * @param {boolean} [hasZ] whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, srsName, hasZ) {\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    let coords =\n      axisOrientation.substr(0, 2) === 'en'\n        ? point[0] + ' ' + point[1]\n        : point[1] + ' ' + point[0];\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePosList_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    let point;\n    for (let i = 0; i < len; ++i) {\n      point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const pos = createElementNS(node.namespaceURI, 'pos');\n    node.appendChild(pos);\n    this.writePos_(pos, geometry, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}),\n      this.ENVELOPE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack,\n      keys,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLinearRing(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const posList = createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(\n      parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'interior' : 'exterior'\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS,\n        this.RING_NODE_FACTORY_,\n        rings,\n        objectStack,\n        undefined,\n        this\n      );\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (\n      node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment'\n    ) {\n      const posList = createElementNS(node.namespaceURI, 'posList');\n      node.appendChild(posList);\n      this.writePosList_(posList, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiPolygon} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      polygons,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiPoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    const hasZ = context['hasZ'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS,\n      makeSimpleNodeFactory('pointMember'),\n      points,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiLineString} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      lines,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeRing(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygonMember(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePointMember(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint(child, point, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLineStringOrCurveMember(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString(child, line, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const item = Object.assign({}, context);\n    item['node'] = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      value = transformExtentWithOptions(\n        /** @type {import(\"../extent.js\").Extent} */ (geometry),\n        context\n      );\n    } else {\n      value = transformGeometryWithOptions(\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry),\n        true,\n        context\n      );\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      this.GEOMETRY_SERIALIZERS,\n      this.GEOMETRY_NODE_FACTORY_,\n      [value],\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const keys = [];\n    const values = [];\n    if (feature.hasProperties()) {\n      const properties = feature.getProperties();\n      for (const key in properties) {\n        const value = properties[key];\n        if (value !== null) {\n          keys.push(key);\n          values.push(value);\n          if (\n            key == geometryName ||\n            typeof (/** @type {?} */ (value).getSimplifiedGeometry) ===\n              'function'\n          ) {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] = makeChildAppender(\n                this.writeGeometryElement,\n                this\n              );\n            }\n          } else {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] =\n                makeChildAppender(writeStringTextNode);\n            }\n          }\n        }\n      }\n    }\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack,\n      keys\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeFeatureMembers_(node, features, objectStack) {\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureType = context['featureType'];\n    const featureNS = context['featureNS'];\n    /** @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>} */\n    const serializers = {};\n    serializers[featureNS] = {};\n    serializers[featureNS][featureType] = makeChildAppender(\n      this.writeFeatureElement,\n      this\n    );\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      serializers,\n      makeSimpleNodeFactory(featureType, featureNS),\n      features,\n      objectStack\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      this.namespace,\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const curve = context['curve'];\n    const multiCurve = context['multiCurve'];\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        value\n      ).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'LineString' && curve === true) {\n        nodeName = 'Curve';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS(this.namespace, nodeName);\n  }\n\n  /**\n   * Encode a geometry in GML 3.1.1 Simple Features.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeGeometryNode(geometry, options) {\n    options = this.adaptOptions(options);\n    const geom = createElementNS(this.namespace, 'geom');\n    const context = {\n      node: geom,\n      hasZ: this.hasZ,\n      srsName: this.srsName,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n    };\n    if (options) {\n      Object.assign(context, options);\n    }\n    this.writeGeometryElement(geom, geometry, [context]);\n    return geom;\n  }\n\n  /**\n   * Encode an array of features in the GML 3.1.1 format as an XML node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Element} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    const node = createElementNS(this.namespace, 'featureMembers');\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      this.schemaLocation\n    );\n    const context = {\n      srsName: this.srsName,\n      hasZ: this.hasZ,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n      featureNS: this.featureNS,\n      featureType: this.featureType,\n    };\n    if (options) {\n      Object.assign(context, options);\n    }\n    this.writeFeatureMembers_(node, features, [context]);\n    return node;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList),\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser,\n    'exterior': GML3.prototype.exteriorParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML3.prototype.readSurface),\n    'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface),\n    'Curve': makeReplacer(GML3.prototype.readCurve),\n    'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve),\n    'Envelope': makeReplacer(GML3.prototype.readEnvelope),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.MULTICURVE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser),\n    'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.MULTISURFACE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n    'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.CURVEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SURFACEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SURFACE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'patches': makeReplacer(GML3.prototype.readPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.CURVE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'segments': makeReplacer(GML3.prototype.readSegment),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.ENVELOPE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n    'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.PATCHES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SEGMENTS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': makeArrayExtender(\n      GML3.prototype.readLineStringSegment\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n    'Ring': makeReplacer(GML3.prototype.readFlatCurveRing),\n  },\n};\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing),\n    'interior': makeChildAppender(GML3.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember\n    ),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(GML3.prototype.writePointMember),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember\n    ),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML3.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString\n    ),\n    'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Envelope': makeChildAppender(GML3.prototype.writeEnvelope),\n  },\n};\n\nexport default GML3;\n","/**\n * @module ol/format/GML32\n */\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GMLBase from './GMLBase.js';\nimport {\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n} from '../xml.js';\nimport {writeStringTextNode} from '../format/xsd.js';\n\n/**\n * @classdesc Feature format for reading and writing data in the GML format\n *            version 3.2.1.\n * @api\n */\nclass GML32 extends GML3 {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : this.namespace + ' http://schemas.opengis.net/gml/3.2.1/gml.xsd';\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    objectStack[objectStack.length - 1] = Object.assign(\n      {multiCurve: true, multiSurface: true},\n      context\n    );\n    super.writeGeometryElement(node, geometry, objectStack);\n  }\n}\n\nGML32.prototype.namespace = 'http://www.opengis.net/gml/3.2';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList),\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'interior': GML3.prototype.interiorParser,\n    'exterior': GML3.prototype.exteriorParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML32.prototype.readSurface),\n    'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface),\n    'Curve': makeReplacer(GML32.prototype.readCurve),\n    'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve),\n    'Envelope': makeReplacer(GML32.prototype.readEnvelope),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTICURVE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser),\n    'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTISURFACE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n    'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.CURVEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SURFACEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SURFACE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'patches': makeReplacer(GML3.prototype.readPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.CURVE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'segments': makeReplacer(GML3.prototype.readSegment),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.ENVELOPE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n    'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.PATCHES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SEGMENTS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineStringSegment': makeArrayExtender(\n      GML3.prototype.readLineStringSegment\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTIPOINT_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTILINESTRING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser\n    ),\n    'lineStringMembers': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTIPOLYGON_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.POINTMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.LINESTRINGMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.POLYGONMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n    'Ring': makeReplacer(GML32.prototype.readFlatCurveRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing),\n    'interior': makeChildAppender(GML3.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember\n    ),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeChildAppender(GML3.prototype.writePointMember),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember\n    ),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML32.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString\n    ),\n    'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Envelope': makeChildAppender(GML3.prototype.writeEnvelope),\n  },\n};\n\nexport default GML32;\n","/**\n * @module ol/format/filter/Filter\n */\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @abstract\n */\nclass Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   */\n  constructor(tagName) {\n    /**\n     * @private\n     * @type {!string}\n     */\n    this.tagName_ = tagName;\n  }\n\n  /**\n   * The XML tag name for a filter.\n   * @return {!string} Name.\n   */\n  getTagName() {\n    return this.tagName_;\n  }\n}\n\nexport default Filter;\n","/**\n * @module ol/format/filter/LogicalNary\n */\nimport Filter from './Filter.js';\nimport {assert} from '../../asserts.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @abstract\n */\nclass LogicalNary extends Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   * @param {Array<import(\"./Filter.js\").default>} conditions Conditions.\n   */\n  constructor(tagName, conditions) {\n    super(tagName);\n\n    /**\n     * @type {Array<import(\"./Filter.js\").default>}\n     */\n    this.conditions = conditions;\n    assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n  }\n}\n\nexport default LogicalNary;\n","/**\n * @module ol/format/filter/And\n */\nimport LogicalNary from './LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @abstract\n */\nclass And extends LogicalNary {\n  /**\n   * @param {...import(\"./Filter.js\").default} conditions Conditions.\n   */\n  constructor(conditions) {\n    super('And', Array.prototype.slice.call(arguments));\n  }\n}\n\nexport default And;\n","/**\n * @module ol/format/filter/Bbox\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @api\n */\nclass Bbox extends Filter {\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../../extent.js\").Extent} extent Extent.\n   * @param {string} [srsName] SRS name. No srsName attribute will be set\n   * on geometries when this is not provided.\n   */\n  constructor(geometryName, extent, srsName) {\n    super('BBOX');\n\n    /**\n     * @type {!string}\n     */\n    this.geometryName = geometryName;\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent = extent;\n    if (extent.length !== 4) {\n      throw new Error(\n        'Expected an extent with four values ([minX, minY, maxX, maxY])'\n      );\n    }\n\n    /**\n     * @type {string|undefined}\n     */\n    this.srsName = srsName;\n  }\n}\n\nexport default Bbox;\n","/**\n * @module ol/format/WFS\n */\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GML32 from './GML32.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  isDocument,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSimpleNodeFactory,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {and as andFilterFn, bbox as bboxFilterFn} from './filter.js';\nimport {assert} from '../asserts.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readNonNegativeIntegerString,\n  readPositiveInteger,\n  writeStringTextNode,\n} from './xsd.js';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst FEATURE_COLLECTION_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': makeObjectPropertySetter(\n      GMLBase.prototype.readExtentElement,\n      'bounds'\n    ),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'member': makeArrayPusher(GMLBase.prototype.readFeaturesInternal),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst TRANSACTION_SUMMARY_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst TRANSACTION_RESPONSE_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary,\n      'transactionSummary'\n    ),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds'),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary,\n      'transactionSummary'\n    ),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds'),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst QUERY_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': makeChildAppender(writeStringTextNode),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'PropertyName': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst TRANSACTION_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative),\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] The namespace URI used for features.\n * @property {Array<string>|string} [featureType] The feature type to parse. Only used for read operations.\n * @property {GMLBase} [gmlFormat] The GML format to use to parse the response.\n * Default is `ol/format/GML2` for WFS 1.0.0, `ol/format/GML3` for WFS 1.1.0 and `ol/format/GML32` for WFS 2.0.0.\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\n * @property {string} [version='1.1.0'] WFS version to use. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * @typedef {Object} WriteGetFeatureOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {Array<string|FeatureType>} featureTypes The feature type names or FeatureType objects to\n * define a unique bbox filter per feature type name (in this case, options `bbox` and `geometryName` are\n * ignored.).\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {string} [outputFormat] Output format.\n * @property {number} [maxFeatures] Maximum number of features to fetch.\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\n * @property {Array<string>} [propertyNames] Optional list of property names to serialize.\n * @property {string} [viewParams] viewParams GeoServer vendor parameter.\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\n * @property {number} [count] Number of features to retrieve when paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\n * Web Feature Services have repurposed `maxfeatures` instead.\n * @property {import(\"../extent.js\").Extent} [bbox] Extent to use for the BBOX filter. The `geometryName`\n * option must be set.\n * @property {import(\"./filter/Filter.js\").default} [filter] Filter condition. See\n * {@link module:ol/format/filter} for more information.\n * @property {string} [resultType] Indicates what response should be returned,\n * e.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\n */\n\n/**\n * @typedef {Object} FeatureType\n * @property {!string} name The feature type name.\n * @property {!import(\"../extent.js\").Extent} bbox Extent to use for the BBOX filter.\n * @property {!string} geometryName Geometry name to use in the BBOX filter.\n */\n\n/**\n * @typedef {Object} WriteTransactionOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {string} featureType The feature type name.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\n * @property {Array<Object>} nativeElements Native elements. Currently not supported.\n * @property {import(\"./GMLBase.js\").Options} [gmlOptions] GML options for the WFS transaction writer.\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * Number of features; bounds/extent.\n * @typedef {Object} FeatureCollectionMetadata\n * @property {number} numberOfFeatures NumberOfFeatures.\n * @property {import(\"../extent.js\").Extent} bounds Bounds.\n */\n\n/**\n * Total deleted; total inserted; total updated; array of insert ids.\n * @typedef {Object} TransactionResponse\n * @property {number} totalDeleted TotalDeleted.\n * @property {number} totalInserted TotalInserted.\n * @property {number} totalUpdated TotalUpdated.\n * @property {Array<string>} insertIds InsertIds.\n */\n\n/**\n * @type {string}\n */\nconst FEATURE_PREFIX = 'feature';\n\n/**\n * @type {string}\n */\nconst XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n/**\n * @type {Object<string, string>}\n */\nconst OGCNS = {\n  '2.0.0': 'http://www.opengis.net/ogc/1.1',\n  '1.1.0': 'http://www.opengis.net/ogc',\n  '1.0.0': 'http://www.opengis.net/ogc',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst WFSNS = {\n  '2.0.0': 'http://www.opengis.net/wfs/2.0',\n  '1.1.0': 'http://www.opengis.net/wfs',\n  '1.0.0': 'http://www.opengis.net/wfs',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst FESNS = {\n  '2.0.0': 'http://www.opengis.net/fes/2.0',\n  '1.1.0': 'http://www.opengis.net/fes',\n  '1.0.0': 'http://www.opengis.net/fes',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst SCHEMA_LOCATIONS = {\n  '2.0.0':\n    'http://www.opengis.net/wfs/2.0 http://schemas.opengis.net/wfs/2.0/wfs.xsd',\n  '1.1.0':\n    'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0':\n    'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd',\n};\n\n/**\n * @type {Object<string, object>}\n */\nconst GML_FORMATS = {\n  '2.0.0': GML32,\n  '1.1.0': GML3,\n  '1.0.0': GML2,\n};\n\n/**\n * @const\n * @type {string}\n */\nconst DEFAULT_VERSION = '1.1.0';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option to override the default.\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\n *\n * @api\n */\nclass WFS extends XMLFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version ? options.version : DEFAULT_VERSION;\n\n    /**\n     * @private\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType_ = options.featureType;\n\n    /**\n     * @private\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS_ = options.featureNS;\n\n    /**\n     * @private\n     * @type {GMLBase}\n     */\n    this.gmlFormat_ = options.gmlFormat\n      ? options.gmlFormat\n      : new GML_FORMATS[this.version_]();\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.schemaLocation_ = options.schemaLocation\n      ? options.schemaLocation\n      : SCHEMA_LOCATIONS[this.version_];\n  }\n\n  /**\n   * @return {Array<string>|string|undefined} featureType\n   */\n  getFeatureType() {\n    return this.featureType_;\n  }\n\n  /**\n   * @param {Array<string>|string|undefined} featureType Feature type(s) to parse.\n   */\n  setFeatureType(featureType) {\n    this.featureType_ = featureType;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    const context = {\n      node,\n    };\n    Object.assign(context, {\n      'featureType': this.featureType_,\n      'featureNS': this.featureNS_,\n    });\n\n    Object.assign(context, this.getReadOptions(node, options ? options : {}));\n    const objectStack = [context];\n    let featuresNS;\n    if (this.version_ === '2.0.0') {\n      featuresNS = FEATURE_COLLECTION_PARSERS;\n    } else {\n      featuresNS = this.gmlFormat_.FEATURE_COLLECTION_PARSERS;\n    }\n    let features = pushParseAndPop(\n      [],\n      featuresNS,\n      node,\n      objectStack,\n      this.gmlFormat_\n    );\n    if (!features) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * Read transaction response of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {TransactionResponse|undefined} Transaction response.\n   * @api\n   */\n  readTransactionResponse(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readTransactionResponseFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readTransactionResponseFromDocument(\n        /** @type {Document} */ (source)\n      );\n    }\n    return this.readTransactionResponseFromNode(\n      /** @type {Element} */ (source)\n    );\n  }\n\n  /**\n   * Read feature collection metadata of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   * @api\n   */\n  readFeatureCollectionMetadata(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureCollectionMetadataFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readFeatureCollectionMetadataFromDocument(\n        /** @type {Document} */ (source)\n      );\n    }\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Element} */ (source)\n    );\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFeatureCollectionMetadataFromNode(\n          /** @type {Element} */ (n)\n        );\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromNode(node) {\n    const result = {};\n    const value = readNonNegativeIntegerString(\n      node.getAttribute('numberOfFeatures')\n    );\n    result['numberOfFeatures'] = value;\n    return pushParseAndPop(\n      /** @type {FeatureCollectionMetadata} */ (result),\n      FEATURE_COLLECTION_PARSERS,\n      node,\n      [],\n      this.gmlFormat_\n    );\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readTransactionResponseFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromNode(node) {\n    return pushParseAndPop(\n      /** @type {TransactionResponse} */ ({}),\n      TRANSACTION_RESPONSE_PARSERS,\n      node,\n      []\n    );\n  }\n\n  /**\n   * Encode format as WFS `GetFeature` and return the Node.\n   *\n   * @param {WriteGetFeatureOptions} options Options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeGetFeature(options) {\n    const node = createElementNS(WFSNS[this.version_], 'GetFeature');\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', this.version_);\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', String(options.maxFeatures));\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', String(options.startIndex));\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', String(options.count));\n    }\n    if (options.viewParams !== undefined) {\n      node.setAttribute('viewParams', options.viewParams);\n    }\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      this.schemaLocation_\n    );\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    const context = {\n      node,\n    };\n    Object.assign(context, {\n      'version': this.version_,\n      'srsName': options.srsName,\n      'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n      'featurePrefix': options.featurePrefix,\n      'propertyNames': options.propertyNames ? options.propertyNames : [],\n    });\n    assert(Array.isArray(options.featureTypes), 11); // `options.featureTypes` must be an Array\n    if (typeof options.featureTypes[0] === 'string') {\n      let filter = options.filter;\n      if (options.bbox) {\n        assert(options.geometryName, 12); // `options.geometryName` must also be provided when `options.bbox` is set\n        filter = this.combineBboxAndFilter(\n          options.geometryName,\n          options.bbox,\n          options.srsName,\n          filter\n        );\n      }\n      Object.assign(context, {\n        'geometryName': options.geometryName,\n        'filter': filter,\n      });\n      writeGetFeature(\n        node,\n        /** @type {!Array<string>} */ (options.featureTypes),\n        [context]\n      );\n    } else {\n      // Write one query node per element in featuresType.\n      options.featureTypes.forEach((/** @type {FeatureType} */ featureType) => {\n        const completeFilter = this.combineBboxAndFilter(\n          featureType.geometryName,\n          featureType.bbox,\n          options.srsName,\n          options.filter\n        );\n        Object.assign(context, {\n          'geometryName': featureType.geometryName,\n          'filter': completeFilter,\n        });\n        writeGetFeature(node, [featureType.name], [context]);\n      });\n    }\n    return node;\n  }\n\n  /**\n   * Create a bbox filter and combine it with another optional filter.\n   *\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../extent.js\").Extent} extent Extent.\n   * @param {string} [srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   * @param {import(\"./filter/Filter.js\").default} [filter] Filter condition.\n   * @return {import(\"./filter/Filter.js\").default} The filter.\n   */\n  combineBboxAndFilter(geometryName, extent, srsName, filter) {\n    const bboxFilter = bboxFilterFn(geometryName, extent, srsName);\n    if (filter) {\n      // if bbox and filter are both set, combine the two into a single filter\n      return andFilterFn(filter, bboxFilter);\n    }\n    return bboxFilter;\n  }\n\n  /**\n   * Encode format as WFS `Transaction` and return the Node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} inserts The features to insert.\n   * @param {Array<import(\"../Feature.js\").default>} updates The features to update.\n   * @param {Array<import(\"../Feature.js\").default>} deletes The features to delete.\n   * @param {WriteTransactionOptions} options Write options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeTransaction(inserts, updates, deletes, options) {\n    const objectStack = [];\n    const version = options.version ? options.version : this.version_;\n    const node = createElementNS(WFSNS[version], 'Transaction');\n\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', version);\n    let baseObj;\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    if (options) {\n      baseObj = options.gmlOptions ? options.gmlOptions : {};\n      if (options.handle) {\n        node.setAttribute('handle', options.handle);\n      }\n    }\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATIONS[version]\n    );\n\n    const request = createTransactionRequest(node, baseObj, version, options);\n    if (inserts) {\n      serializeTransactionRequest('Insert', inserts, objectStack, request);\n    }\n    if (updates) {\n      serializeTransactionRequest('Update', updates, objectStack, request);\n    }\n    if (deletes) {\n      serializeTransactionRequest('Delete', deletes, objectStack, request);\n    }\n    if (options.nativeElements) {\n      serializeTransactionRequest(\n        'Native',\n        options.nativeElements,\n        objectStack,\n        request\n      );\n    }\n    return node;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readProjectionFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    if (node.firstElementChild && node.firstElementChild.firstElementChild) {\n      node = node.firstElementChild.firstElementChild;\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        if (\n          !(\n            n.childNodes.length === 0 ||\n            (n.childNodes.length === 1 && n.firstChild.nodeType === 3)\n          )\n        ) {\n          const objectStack = [{}];\n          this.gmlFormat_.readGeometryElement(n, objectStack);\n          return getProjection(objectStack.pop().srsName);\n        }\n      }\n    }\n\n    return null;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {*} baseObj Base object.\n * @param {string} version Version.\n * @param {WriteTransactionOptions} options Options.\n * @return {Object} Request object.\n */\nfunction createTransactionRequest(node, baseObj, version, options) {\n  const featurePrefix = options.featurePrefix\n    ? options.featurePrefix\n    : FEATURE_PREFIX;\n  let gmlVersion;\n  if (version === '1.0.0') {\n    gmlVersion = 2;\n  } else if (version === '1.1.0') {\n    gmlVersion = 3;\n  } else if (version === '2.0.0') {\n    gmlVersion = 3.2;\n  }\n  const obj = Object.assign(\n    {node},\n    {\n      version,\n      'featureNS': options.featureNS,\n      'featureType': options.featureType,\n      'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion,\n      'hasZ': options.hasZ,\n      'srsName': options.srsName,\n    },\n    baseObj\n  );\n  return obj;\n}\n\n/**\n * @param {string} type Request type.\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @param {Element} request Transaction Request.\n */\nfunction serializeTransactionRequest(type, features, objectStack, request) {\n  pushSerializeAndPop(\n    request,\n    TRANSACTION_SERIALIZERS,\n    makeSimpleNodeFactory(type),\n    features,\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n */\nfunction readTransactionSummary(node, objectStack) {\n  return pushParseAndPop({}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst OGC_FID_PARSERS = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    }),\n  },\n  'http://www.opengis.net/ogc/1.1': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    }),\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction fidParser(node, objectStack) {\n  parseNode(OGC_FID_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst INSERT_RESULTS_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'Feature': fidParser,\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Feature': fidParser,\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Insert results.\n */\nfunction readInsertResults(node, objectStack) {\n  return pushParseAndPop([], INSERT_RESULTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFeature(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else if (gmlVersion === 3) {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML32.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeOgcFidFilter(node, fid, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const version = context['version'];\n  const ns = OGCNS[version];\n  const filter = createElementNS(ns, 'Filter');\n  const child = createElementNS(ns, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', /** @type {string} */ (fid));\n  node.appendChild(filter);\n}\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @return {string} The value of the typeName property.\n */\nfunction getTypeName(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.startsWith(prefix)) {\n    return featureType;\n  }\n  return prefix + featureType;\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDelete(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeUpdate(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const version = context['version'];\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (\n          value &&\n          typeof (/** @type {?} */ (value).getSimplifiedGeometry) === 'function'\n        ) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */ ({\n        version,\n        'gmlVersion': context['gmlVersion'],\n        node,\n        'hasZ': context['hasZ'],\n        'srsName': context['srsName'],\n      }),\n      TRANSACTION_SERIALIZERS,\n      makeSimpleNodeFactory('Property'),\n      values,\n      objectStack\n    );\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeProperty(node, pair, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const version = context['version'];\n  const ns = WFSNS[version];\n  const name = createElementNS(ns, 'Name');\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = createElementNS(ns, 'Value');\n    node.appendChild(value);\n    if (\n      pair.value &&\n      typeof (/** @type {?} */ (pair.value).getSimplifiedGeometry) ===\n        'function'\n    ) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else if (gmlVersion === 3) {\n        GML3.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else {\n        GML32.prototype.writeGeometryElement(value, pair.value, objectStack);\n      }\n    } else {\n      writeStringTextNode(value, pair.value);\n    }\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}} nativeElement The native element.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNative(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', String(nativeElement.safeToIgnore));\n  }\n  if (nativeElement.value !== undefined) {\n    writeStringTextNode(node, nativeElement.value);\n  }\n}\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst GETFEATURE_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Query': makeChildAppender(writeQuery),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Query': makeChildAppender(writeQuery),\n  },\n  'http://www.opengis.net/ogc': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter),\n  },\n  'http://www.opengis.net/fes/2.0': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Disjoint': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'ResourceId': makeChildAppender(writeResourceIdFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter),\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {string} featureType Feature type.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeQuery(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const version = context['version'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = getTypeName(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  let typeNameAttr;\n  if (version === '2.0.0') {\n    typeNameAttr = 'typeNames';\n  } else {\n    typeNameAttr = 'typeName';\n  }\n  node.setAttribute(typeNameAttr, typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  }\n  const item = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n    Object.assign({}, context)\n  );\n  item.node = node;\n  pushSerializeAndPop(\n    item,\n    QUERY_SERIALIZERS,\n    makeSimpleNodeFactory('PropertyName'),\n    propertyNames,\n    objectStack\n  );\n  const filter = context['filter'];\n  if (filter) {\n    const child = createElementNS(getFilterNS(version), 'Filter');\n    node.appendChild(child);\n    writeFilterCondition(child, filter, objectStack);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFilterCondition(node, filter, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(filter.getTagName()),\n    [filter],\n    objectStack\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Bbox.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeBboxFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  parent['srsName'] = filter.srsName;\n  const format = GML_FORMATS[version];\n\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.extent, objectStack);\n}\n\n/**\n * @param {Element} node Element.\n * @param {import(\"./filter/ResourceId.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeResourceIdFilter(node, filter, objectStack) {\n  node.setAttribute('rid', /** @type {string} */ (filter.rid));\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Spatial.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeSpatialFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  parent['srsName'] = filter.srsName;\n  const format = GML_FORMATS[version];\n\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/DWithin.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDWithinFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  writeSpatialFilter(node, filter, objectStack);\n  const distance = createElementNS(getFilterNS(version), 'Distance');\n  writeStringTextNode(distance, filter.distance.toString());\n  if (version === '2.0.0') {\n    distance.setAttribute('uom', filter.unit);\n  } else {\n    distance.setAttribute('units', filter.unit);\n  }\n  node.appendChild(distance);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/During.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDuringFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n\n  writeExpression(FESNS[version], 'ValueReference', node, filter.propertyName);\n  const timePeriod = createElementNS(GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = createElementNS(GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  writeTimeInstant(begin, filter.begin);\n\n  const end = createElementNS(GMLNS, 'end');\n  timePeriod.appendChild(end);\n  writeTimeInstant(end, filter.end);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/LogicalNary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLogicalFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    pushSerializeAndPop(\n      item,\n      GETFEATURE_SERIALIZERS,\n      makeSimpleNodeFactory(condition.getTagName()),\n      [condition],\n      objectStack\n    );\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/Not.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNotFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  const condition = filter.condition;\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(condition.getTagName()),\n    [condition],\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/ComparisonBinary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeComparisonFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.expression);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsNull.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsNullFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  writePropertyName(version, node, filter.propertyName);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsBetween.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsBetweenFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  const ns = getFilterNS(version);\n\n  writePropertyName(version, node, filter.propertyName);\n\n  const lowerBoundary = createElementNS(ns, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  writeLiteral(version, lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = createElementNS(ns, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  writeLiteral(version, upperBoundary, '' + filter.upperBoundary);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/IsLike.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsLikeFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.pattern);\n}\n\n/**\n * @param {string} ns Namespace.\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n */\nfunction writeExpression(ns, tagName, node, value) {\n  const property = createElementNS(ns, tagName);\n  writeStringTextNode(property, value);\n  node.appendChild(property);\n}\n\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeLiteral(version, node, value) {\n  writeExpression(getFilterNS(version), 'Literal', node, value);\n}\n\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writePropertyName(version, node, value) {\n  if (version === '2.0.0') {\n    writeExpression(FESNS[version], 'ValueReference', node, value);\n  } else {\n    writeExpression(OGCNS[version], 'PropertyName', node, value);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n */\nfunction writeTimeInstant(node, time) {\n  const timeInstant = createElementNS(GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = createElementNS(GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  writeStringTextNode(timePosition, time);\n}\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {string} version WFS version. If not provided defaults to '1.1.0'\n * @return {Node} Result.\n * @api\n */\nexport function writeFilter(filter, version) {\n  version = version || '1.1.0';\n  const child = createElementNS(getFilterNS(version), 'Filter');\n  const context = {\n    node: child,\n  };\n  Object.assign(context, {\n    'version': version,\n    'filter': filter,\n  });\n  writeFilterCondition(child, filter, [context]);\n  return child;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<string>} featureTypes Feature types.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeGetFeature(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n    Object.assign({}, context)\n  );\n  item.node = node;\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory('Query'),\n    featureTypes,\n    objectStack\n  );\n}\n\nfunction getFilterNS(version) {\n  let ns;\n  if (version === '2.0.0') {\n    ns = FESNS[version];\n  } else {\n    ns = OGCNS[version];\n  }\n  return ns;\n}\n\nexport default WFS;\n","/**\n * @module ol/format/filter\n */\nimport And from './filter/And.js';\nimport Bbox from './filter/Bbox.js';\nimport Contains from './filter/Contains.js';\nimport DWithin from './filter/DWithin.js';\nimport Disjoint from './filter/Disjoint.js';\nimport During from './filter/During.js';\nimport EqualTo from './filter/EqualTo.js';\nimport GreaterThan from './filter/GreaterThan.js';\nimport GreaterThanOrEqualTo from './filter/GreaterThanOrEqualTo.js';\nimport Intersects from './filter/Intersects.js';\nimport IsBetween from './filter/IsBetween.js';\nimport IsLike from './filter/IsLike.js';\nimport IsNull from './filter/IsNull.js';\nimport LessThan from './filter/LessThan.js';\nimport LessThanOrEqualTo from './filter/LessThanOrEqualTo.js';\nimport Not from './filter/Not.js';\nimport NotEqualTo from './filter/NotEqualTo.js';\nimport Or from './filter/Or.js';\nimport ResourceId from './filter/ResourceId.js';\nimport Within from './filter/Within.js';\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @return {!And} `<And>` operator.\n * @api\n */\nexport function and(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(And, params))();\n}\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @return {!Or} `<Or>` operator.\n * @api\n */\nexport function or(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(Or, params))();\n}\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!import(\"./filter/Filter.js\").default} condition Filter condition.\n * @return {!Not} `<Not>` operator.\n * @api\n */\nexport function not(condition) {\n  return new Not(condition);\n}\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../extent.js\").Extent} extent Extent.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Bbox} `<BBOX>` operator.\n * @api\n */\nexport function bbox(geometryName, extent, srsName) {\n  return new Bbox(geometryName, extent, srsName);\n}\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Contains} `<Contains>` operator.\n * @api\n */\nexport function contains(geometryName, geometry, srsName) {\n  return new Contains(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Intersects} `<Intersects>` operator.\n * @api\n */\nexport function intersects(geometryName, geometry, srsName) {\n  return new Intersects(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Disjoint>` operator to test whether a geometry-valued property\n * is disjoint to a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Disjoint} `<Disjoint>` operator.\n * @api\n */\nexport function disjoint(geometryName, geometry, srsName) {\n  return new Disjoint(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Within} `<Within>` operator.\n * @api\n */\nexport function within(geometryName, geometry, srsName) {\n  return new Within(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<DWithin>` operator to test whether a geometry-valued property\n * is within a distance to a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {!number} distance Distance.\n * @param {!string} unit Unit.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!DWithin} `<DWithin>` operator.\n * @api\n */\nexport function dwithin(geometryName, geometry, distance, unit, srsName) {\n  return new DWithin(geometryName, geometry, distance, unit, srsName);\n}\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\nexport function equalTo(propertyName, expression, matchCase) {\n  return new EqualTo(propertyName, expression, matchCase);\n}\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\nexport function notEqualTo(propertyName, expression, matchCase) {\n  return new NotEqualTo(propertyName, expression, matchCase);\n}\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\nexport function lessThan(propertyName, expression) {\n  return new LessThan(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\nexport function lessThanOrEqualTo(propertyName, expression) {\n  return new LessThanOrEqualTo(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\nexport function greaterThan(propertyName, expression) {\n  return new GreaterThan(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\nexport function greaterThanOrEqualTo(propertyName, expression) {\n  return new GreaterThanOrEqualTo(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @return {!IsNull} `<PropertyIsNull>` operator.\n * @api\n */\nexport function isNull(propertyName) {\n  return new IsNull(propertyName);\n}\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @return {!IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\nexport function between(propertyName, lowerBoundary, upperBoundary) {\n  return new IsBetween(propertyName, lowerBoundary, upperBoundary);\n}\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string} [wildCard] Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string} [singleChar] pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string} [escapeChar] Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!IsLike} `<PropertyIsLike>` operator.\n * @api\n */\nexport function like(\n  propertyName,\n  pattern,\n  wildCard,\n  singleChar,\n  escapeChar,\n  matchCase\n) {\n  return new IsLike(\n    propertyName,\n    pattern,\n    wildCard,\n    singleChar,\n    escapeChar,\n    matchCase\n  );\n}\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @return {!During} `<During>` operator.\n * @api\n */\nexport function during(propertyName, begin, end) {\n  return new During(propertyName, begin, end);\n}\n\nexport function resourceId(rid) {\n  return new ResourceId(rid);\n}\n","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport GML2 from './GML2.js';\nimport XMLFeature from './XMLFeature.js';\nimport {extend} from '../array.js';\nimport {makeArrayPusher, makeStructureNS, pushParseAndPop} from '../xml.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<string>} [layers] If set, only features of the given layers will be returned by the format when read.\n */\n\n/**\n * @const\n * @type {string}\n */\nconst featureIdentifier = '_feature';\n\n/**\n * @const\n * @type {string}\n */\nconst layerIdentifier = '_layer';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link module:ol/format/GML2~GML2} to read features.\n *\n * @api\n */\nclass WMSGetFeatureInfo extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n    /**\n     * @private\n     * @type {GML2}\n     */\n    this.gmlFormat_ = new GML2();\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n  }\n\n  /**\n   * @return {Array<string>|null} layers\n   */\n  getLayers() {\n    return this.layers_;\n  }\n\n  /**\n   * @param {Array<string>|null} layers Layers to parse.\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  readFeatures_(node, objectStack) {\n    node.setAttribute('namespaceURI', this.featureNS_);\n    const localName = node.localName;\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = [];\n    if (node.childNodes.length === 0) {\n      return features;\n    }\n    if (localName == 'msGMLOutput') {\n      for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n        const layer = node.childNodes[i];\n        if (layer.nodeType !== Node.ELEMENT_NODE) {\n          continue;\n        }\n\n        const layerElement = /** @type {Element} */ (layer);\n        const context = objectStack[0];\n\n        const toRemove = layerIdentifier;\n        const layerName = layerElement.localName.replace(toRemove, '');\n\n        if (this.layers_ && !this.layers_.includes(layerName)) {\n          continue;\n        }\n\n        const featureType = layerName + featureIdentifier;\n\n        context['featureType'] = featureType;\n        context['featureNS'] = this.featureNS_;\n\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        const parsers = {};\n        parsers[featureType] = makeArrayPusher(\n          this.gmlFormat_.readFeatureElement,\n          this.gmlFormat_\n        );\n        const parsersNS = makeStructureNS(\n          [context['featureNS'], null],\n          parsers\n        );\n        layerElement.setAttribute('namespaceURI', this.featureNS_);\n        const layerFeatures = pushParseAndPop(\n          [],\n          // @ts-ignore\n          parsersNS,\n          layerElement,\n          objectStack,\n          this.gmlFormat_\n        );\n        if (layerFeatures) {\n          extend(features, layerFeatures);\n        }\n      }\n    }\n    if (localName == 'FeatureCollection') {\n      const gmlFeatures = pushParseAndPop(\n        [],\n        this.gmlFormat_.FEATURE_COLLECTION_PARSERS,\n        node,\n        [{}],\n        this.gmlFormat_\n      );\n      if (gmlFeatures) {\n        features = gmlFeatures;\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    const internalOptions = {};\n    if (options) {\n      Object.assign(internalOptions, this.getReadOptions(node, options));\n    }\n    return this.readFeatures_(node, [internalOptions]);\n  }\n}\n\nexport default WMSGetFeatureInfo;\n","/**\n * @module ol/format/WMTSCapabilities\n */\nimport OWS from './OWS.js';\nimport XML from './XML.js';\nimport {boundingExtent} from '../extent.js';\nimport {\n  makeArrayPusher,\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readDecimal, readPositiveInteger, readString} from './xsd.js';\nimport {readHref} from './xlink.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/wmts/1.0'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst OWS_NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Contents': makeObjectPropertySetter(readContents),\n});\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\nclass WMTSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {OWS}\n     * @private\n     */\n    this.owsParser_ = new OWS();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {\n    let version = node.getAttribute('version');\n    if (version) {\n      version = version.trim();\n    }\n    let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n    if (!WMTSCapabilityObject) {\n      return null;\n    }\n    WMTSCapabilityObject['version'] = version;\n    WMTSCapabilityObject = pushParseAndPop(\n      WMTSCapabilityObject,\n      PARSERS,\n      node,\n      []\n    );\n    return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTENTS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Layer': makeObjectPropertyPusher(readLayer),\n  'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readBoundingBox),\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LINKS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixSet': makeObjectPropertySetter(readString),\n  'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_LIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrix': makeObjectPropertySetter(readString),\n  'MinTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MinTileCol': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileCol': makeObjectPropertySetter(readPositiveInteger),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DIMENSION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WGS84_BBOX_READERS = makeStructureNS(OWS_NAMESPACE_URIS, {\n  'LowerCorner': makeArrayPusher(readCoordinates),\n  'UpperCorner': makeArrayPusher(readCoordinates),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n    'BoundingBox': makeObjectPropertySetter(readBoundingBox),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TM_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readPositiveInteger),\n    'TileHeight': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixWidth': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixHeight': makeObjectPropertySetter(readPositiveInteger),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  const style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBox(node, objectStack) {\n  const coordinates = pushParseAndPop(\n    [],\n    WGS84_BBOX_READERS,\n    node,\n    objectStack\n  );\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = readHref(node);\n  return legend;\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n  const coordinates = readString(node).split(/\\s+/);\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\n\nexport default WMTSCapabilities;\n","/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceNode} from '../dom.js';\n\nconst events = [\n  'fullscreenchange',\n  'webkitfullscreenchange',\n  'MSFullscreenChange',\n];\n\n/**\n * @enum {string}\n */\nconst FullScreenEventType = {\n  /**\n   * Triggered after the map entered fullscreen.\n   * @event FullScreenEventType#enterfullscreen\n   * @api\n   */\n  ENTERFULLSCREEN: 'enterfullscreen',\n\n  /**\n   * Triggered after the map leave fullscreen.\n   * @event FullScreenEventType#leavefullscreen\n   * @api\n   */\n  LEAVEFULLSCREEN: 'leavefullscreen',\n};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen', import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen'|import(\"../ObjectEventType\").Types, Return>} FullScreenOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text|HTMLElement} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [activeClassName=className + '-true'] CSS class name for the button\n * when full-screen is active.\n * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button\n * when full-screen is inactive.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](https://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @fires FullScreenEventType#enterfullscreen\n * @fires FullScreenEventType#leavefullscreen\n * @api\n */\nclass FullScreen extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FullScreenOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.isInFullscreen_ = false;\n\n    /**\n     * @private\n     */\n    this.boundHandleMapTargetChange_ = this.handleMapTargetChange_.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ =\n      options.className !== undefined ? options.className : 'ol-full-screen';\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.documentListeners_ = [];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.activeClassName_ =\n      options.activeClassName !== undefined\n        ? options.activeClassName.split(' ')\n        : [this.cssClassName_ + '-true'];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.inactiveClassName_ =\n      options.inactiveClassName !== undefined\n        ? options.inactiveClassName.split(' ')\n        : [this.cssClassName_ + '-false'];\n\n    const label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelNode_ =\n      typeof label === 'string' ? document.createTextNode(label) : label;\n\n    const labelActive =\n      options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelActiveNode_ =\n      typeof labelActive === 'string'\n        ? document.createTextNode(labelActive)\n        : labelActive;\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n    this.button_.title = tipLabel;\n    this.button_.setAttribute('type', 'button');\n    this.button_.appendChild(this.labelNode_);\n    this.button_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n    this.setClassName_(this.button_, this.isInFullscreen_);\n\n    this.element.className = `${this.cssClassName_} ${CLASS_UNSELECTABLE} ${CLASS_CONTROL}`;\n    this.element.appendChild(this.button_);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreen_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const doc = map.getOwnerDocument();\n    if (!isFullScreenSupported(doc)) {\n      return;\n    }\n    if (isFullScreen(doc)) {\n      exitFullScreen(doc);\n    } else {\n      let element;\n      if (this.source_) {\n        element =\n          typeof this.source_ === 'string'\n            ? doc.getElementById(this.source_)\n            : this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreenChange_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const wasInFullscreen = this.isInFullscreen_;\n    this.isInFullscreen_ = isFullScreen(map.getOwnerDocument());\n    if (wasInFullscreen !== this.isInFullscreen_) {\n      this.setClassName_(this.button_, this.isInFullscreen_);\n      if (this.isInFullscreen_) {\n        replaceNode(this.labelActiveNode_, this.labelNode_);\n        this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\n      } else {\n        replaceNode(this.labelNode_, this.labelActiveNode_);\n        this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\n      }\n      map.updateSize();\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  setClassName_(element, fullscreen) {\n    if (fullscreen) {\n      element.classList.remove(...this.inactiveClassName_);\n      element.classList.add(...this.activeClassName_);\n    } else {\n      element.classList.remove(...this.activeClassName_);\n      element.classList.add(...this.inactiveClassName_);\n    }\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (oldMap) {\n      oldMap.removeChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_\n      );\n    }\n\n    super.setMap(map);\n\n    this.handleMapTargetChange_();\n    if (map) {\n      map.addChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleMapTargetChange_() {\n    const listeners = this.documentListeners_;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      unlistenByKey(listeners[i]);\n    }\n    listeners.length = 0;\n\n    const map = this.getMap();\n    if (map) {\n      const doc = map.getOwnerDocument();\n      if (isFullScreenSupported(doc)) {\n        this.element.classList.remove(CLASS_UNSUPPORTED);\n      } else {\n        this.element.classList.add(CLASS_UNSUPPORTED);\n      }\n\n      for (let i = 0, ii = events.length; i < ii; ++i) {\n        listeners.push(\n          listen(doc, events[i], this.handleFullScreenChange_, this)\n        );\n      }\n      this.handleFullScreenChange_();\n    }\n  }\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported(doc) {\n  const body = doc.body;\n  return !!(\n    body['webkitRequestFullscreen'] ||\n    (body.requestFullscreen && doc.fullscreenEnabled)\n  );\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen(doc) {\n  return !!(doc['webkitIsFullScreen'] || doc.fullscreenElement);\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n * @param {Document} doc The document to exit fullscren from\n */\nfunction exitFullScreen(doc) {\n  if (doc.exitFullscreen) {\n    doc.exitFullscreen();\n  } else if (doc['webkitExitFullscreen']) {\n    doc['webkitExitFullscreen']();\n  }\n}\n\nexport default FullScreen;\n","/**\n * @module ol/control/MousePosition\n */\n\nimport Control from './Control.js';\nimport EventType from '../pointer/EventType.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  getUserProjection,\n  identityTransform,\n} from '../proj.js';\nimport {listen} from '../events.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', Return>} MousePositionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [placeholder] Markup to show when the mouse position is not\n * available (e.g. when the pointer leaves the map viewport).  By default, a non-breaking space is rendered\n * initially and the last position is retained when the mouse leaves the viewport.\n * When a string is provided (e.g. `'no position'` or `''` for an empty string) it is used as a\n * placeholder.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the projection's antimeridian, if it\n * is a global projection.\n */\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nclass MousePosition extends Control {\n  /**\n   * @param {Options} [options] Mouse position options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.className =\n      options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MousePositionOnSignature<void>}\n     */\n    this.un;\n\n    this.addChangeListener(PROJECTION, this.handleProjectionChanged_);\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = options.placeholder !== undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.placeholder_ = this.renderOnMouseOut_ ? options.placeholder : '&#160;';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {?import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX === false ? false : true;\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    this.transform_ = null;\n  }\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  getCoordinateFormat() {\n    return /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (\n      this.get(COORDINATE_FORMAT)\n    );\n  }\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"../proj/Projection.js\").default|undefined} */ (\n      this.get(PROJECTION)\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event Browser event.\n   * @protected\n   */\n  handleMouseMove(event) {\n    const map = this.getMap();\n    this.updateHTML_(map.getEventPixel(event));\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseOut(event) {\n    this.updateHTML_(null);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      const viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this)\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this)\n        );\n      }\n      this.updateHTML_(null);\n    }\n  }\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  setCoordinateFormat(format) {\n    this.set(COORDINATE_FORMAT, format);\n  }\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  updateHTML_(pixel) {\n    let html = this.placeholder_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        const projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            projection\n          );\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      const map = this.getMap();\n      const coordinate = map.getCoordinateFromPixelInternal(pixel);\n      if (coordinate) {\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            userProjection\n          );\n        }\n        this.transform_(coordinate, coordinate);\n        if (this.wrapX_) {\n          const projection =\n            userProjection || this.getProjection() || this.mapProjection_;\n          wrapX(coordinate, projection);\n        }\n        const coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  }\n\n  /**\n   * Update the projection. Rendering of the coordinates is done in\n   * `handleMouseMove` and `handleMouseUp`.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.mapProjection_ = null;\n    } else {\n      if (this.mapProjection_ != frameState.viewState.projection) {\n        this.mapProjection_ = frameState.viewState.projection;\n        this.transform_ = null;\n      }\n    }\n  }\n}\n\nexport default MousePosition;\n","/**\n * @module ol/control/OverviewMap\n */\nimport Collection from '../Collection.js';\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport View from '../View.js';\nimport ViewProperty from '../ViewProperty.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {\n  containsExtent,\n  equals as equalsExtent,\n  getBottomRight,\n  getTopLeft,\n  scaleFromCenter,\n} from '../extent.js';\nimport {listen, listenOnce} from '../events.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {replaceNode} from '../dom.js';\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nconst MAX_RATIO = 0.75;\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nconst MIN_RATIO = 0.1;\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='‹'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='›'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Base.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Base.js\").default>} [layers]\n * Layers for the overview map.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {boolean} [rotateWithView=false] Whether the control view should rotate with the main map view.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {View} [view] Custom view for the overview map (should use same projection as main map). If not provided,\n * a default view with the same projection as the main map will be used.\n */\n\n/**\n * Create a new control with a map acting as an overview map for another\n * defined map.\n *\n * @api\n */\nclass OverviewMap extends Control {\n  /**\n   * @param {Options} [options] OverviewMap options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     */\n    this.boundHandleRotationChanged_ = this.handleRotationChanged_.bind(this);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.viewExtent_ = undefined;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u2039';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : '\\u203A';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('div');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * Explicitly given view to be used instead of a view derived from the main map.\n     * @type {View}\n     * @private\n     */\n    this.view_ = options.view;\n\n    const ovmap = new Map({\n      view: options.view,\n      controls: new Collection(),\n      interactions: new Collection(),\n    });\n\n    /**\n     * @type {Map}\n     * @private\n     */\n    this.ovmap_ = ovmap;\n\n    if (options.layers) {\n      options.layers.forEach(function (layer) {\n        ovmap.addLayer(layer);\n      });\n    }\n\n    const box = document.createElement('div');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {import(\"../Overlay.js\").default}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: 'center-center',\n      element: box,\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    const scope = this;\n\n    const overlay = this.boxOverlay_;\n    const overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    const computeDesiredMousePosition = function (mousePosition) {\n      return {\n        clientX: mousePosition.clientX,\n        clientY: mousePosition.clientY,\n      };\n    };\n\n    const move = function (event) {\n      const position = /** @type {?} */ (computeDesiredMousePosition(event));\n      const coordinates = ovmap.getEventCoordinateInternal(\n        /** @type {MouseEvent} */ (position)\n      );\n\n      overlay.setPosition(coordinates);\n    };\n\n    const endMoving = function (event) {\n      const coordinates = ovmap.getEventCoordinateInternal(event);\n\n      scope.getMap().getView().setCenterInternal(coordinates);\n\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', endMoving);\n    };\n\n    /* Binding */\n\n    overlayBox.addEventListener('mousedown', function () {\n      window.addEventListener('mousemove', move);\n      window.addEventListener('mouseup', endMoving);\n    });\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      const oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    super.setMap(map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(\n        listen(\n          map,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleMapPropertyChange_,\n          this\n        )\n      );\n\n      const view = map.getView();\n      if (view) {\n        this.bindView_(view);\n        if (view.isDef()) {\n          this.ovmap_.updateSize();\n          this.resetExtent_();\n        }\n      }\n\n      if (!this.ovmap_.isRendered()) {\n        this.updateBoxAfterOvmapIsRendered_();\n      }\n    }\n  }\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n   * @private\n   */\n  handleMapPropertyChange_(event) {\n    if (event.key === MapProperty.VIEW) {\n      const oldView = /** @type {import(\"../View.js\").default} */ (\n        event.oldValue\n      );\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      const newView = this.getMap().getView();\n      this.bindView_(newView);\n    } else if (\n      !this.ovmap_.isRendered() &&\n      (event.key === MapProperty.TARGET || event.key === MapProperty.SIZE)\n    ) {\n      this.ovmap_.updateSize();\n    }\n  }\n\n  /**\n   * Register listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  bindView_(view) {\n    if (!this.view_) {\n      // Unless an explicit view definition was given, derive default from whatever main map uses.\n      const newView = new View({\n        projection: view.getProjection(),\n      });\n      this.ovmap_.setView(newView);\n    }\n\n    view.addChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_\n    );\n    // Sync once with the new view\n    this.handleRotationChanged_();\n  }\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  unbindView_(view) {\n    view.removeChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_\n    );\n  }\n\n  /**\n   * Handle rotation changes to the main map.\n   * @private\n   */\n  handleRotationChanged_() {\n    if (this.rotateWithView_) {\n      this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n    }\n  }\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  validateExtent_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    if (this.viewExtent_ && equalsExtent(extent, this.viewExtent_)) {\n      // repeats of the same extent may indicate constraint conflicts leading to an endless cycle\n      return;\n    }\n    this.viewExtent_ = extent;\n\n    const ovmapSize = /** @type {import(\"../size.js\").Size} */ (\n      ovmap.getSize()\n    );\n\n    const ovview = ovmap.getView();\n    const ovextent = ovview.calculateExtentInternal(ovmapSize);\n\n    const topLeftPixel = ovmap.getPixelFromCoordinateInternal(\n      getTopLeft(extent)\n    );\n    const bottomRightPixel = ovmap.getPixelFromCoordinateInternal(\n      getBottomRight(extent)\n    );\n\n    const boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    const boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    const ovmapWidth = ovmapSize[0];\n    const ovmapHeight = ovmapSize[1];\n\n    if (\n      boxWidth < ovmapWidth * MIN_RATIO ||\n      boxHeight < ovmapHeight * MIN_RATIO ||\n      boxWidth > ovmapWidth * MAX_RATIO ||\n      boxHeight > ovmapHeight * MAX_RATIO\n    ) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  }\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  resetExtent_() {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    const ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    const steps = Math.log(MAX_RATIO / MIN_RATIO) / Math.LN2;\n    const ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fitInternal(polygonFromExtent(extent));\n  }\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  recenter_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    ovview.setCenterInternal(view.getCenterInternal());\n  }\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  updateBox_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    const rotation = this.rotateWithView_ ? 0 : -view.getRotation();\n\n    const overlay = this.boxOverlay_;\n    const box = this.boxOverlay_.getElement();\n    const center = view.getCenterInternal();\n    const resolution = view.getResolution();\n    const ovresolution = ovview.getResolution();\n    const width = (mapSize[0] * resolution) / ovresolution;\n    const height = (mapSize[1] * resolution) / ovresolution;\n\n    // set position using center coordinates\n    overlay.setPosition(center);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = width + 'px';\n      box.style.height = height + 'px';\n      const transform = 'rotate(' + rotation + 'rad)';\n      box.style.transform = transform;\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateBoxAfterOvmapIsRendered_() {\n    if (this.ovmapPostrenderKey_) {\n      return;\n    }\n    this.ovmapPostrenderKey_ = listenOnce(\n      this.ovmap_,\n      MapEventType.POSTRENDER,\n      function (event) {\n        delete this.ovmapPostrenderKey_;\n        this.updateBox_();\n      },\n      this\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    const ovmap = this.ovmap_;\n    if (!this.collapsed_) {\n      if (ovmap.isRendered()) {\n        this.viewExtent_ = undefined;\n        ovmap.render();\n        return;\n      }\n      ovmap.updateSize();\n      this.resetExtent_();\n      this.updateBoxAfterOvmapIsRendered_();\n    }\n  }\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the overview map view can rotate, `false` otherwise.\n   * @return {boolean} True if the control view can rotate.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Set whether the overview map view should rotate with the main map view.\n   * @param {boolean} rotateWithView True if the control view should rotate.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    if (this.rotateWithView_ === rotateWithView) {\n      return;\n    }\n    this.rotateWithView_ = rotateWithView;\n    if (this.getMap().getView().getRotation() !== 0) {\n      if (this.rotateWithView_) {\n        this.handleRotationChanged_();\n      } else {\n        this.ovmap_.getView().setRotation(0);\n      }\n      this.viewExtent_ = undefined;\n      this.validateExtent_();\n      this.updateBox_();\n    }\n  }\n\n  /**\n   * Return the overview map.\n   * @return {import(\"../Map.js\").default} Overview map.\n   * @api\n   */\n  getOverviewMap() {\n    return this.ovmap_;\n  }\n\n  /**\n   * Update the overview map element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.validateExtent_();\n    this.updateBox_();\n  }\n}\n\nexport default OverviewMap;\n","/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * @typedef {'degrees' | 'imperial' | 'nautical' | 'metric' | 'us'} Units\n * Units for the scale line.\n */\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className] CSS class name. The default is `ol-scale-bar` when configured with\n * `bar: true`. Otherwise the default is `ol-scale-line`.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {number} [maxWidth] Maximum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options} [options] Scale line options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.style.pointerEvents = 'none';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ScaleLineOnSignature<void>}\n     */\n    this.un;\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n        ? 'ol-scale-bar'\n        : 'ol-scale-line';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.maxWidth_ = options.maxWidth;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addChangeListener(UNITS_PROP, this.handleUnitsChanged_);\n\n    this.setUnits(options.units || 'metric');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits = units == 'degrees' ? 'degrees' : 'm';\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    const maxWidth =\n      this.maxWidth_ !== undefined\n        ? (this.maxWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI\n        : undefined;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == 'degrees') {\n      const metersPerDegree = METERS_PER_UNIT.degrees;\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == 'imperial') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == 'nautical') {\n      pointResolution /= 1852;\n      suffix = 'NM';\n    } else if (units == 'metric') {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == 'us') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    let previousCount, previousWidth, previousDecimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      }\n      if (maxWidth !== undefined && width >= maxWidth) {\n        count = previousCount;\n        width = previousWidth;\n        decimalCount = previousDecimalCount;\n        break;\n      } else if (width >= minWidth) {\n        break;\n      }\n      previousCount = count;\n      previousWidth = width;\n      previousDecimalCount = decimalCount;\n      ++i;\n    }\n    const html = this.scaleBar_\n      ? this.createScaleBar(width, count, suffix)\n      : count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @return {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const resolutionScale = this.getScaleForResolution();\n    const mapScale =\n      resolutionScale < 1\n        ? Math.round(1 / resolutionScale).toLocaleString() + ' : 1'\n        : '1 : ' + Math.round(resolutionScale).toLocaleString();\n    const steps = this.scaleBarSteps_;\n    const stepWidth = width / steps;\n    const scaleSteps = [this.createMarker('absolute')];\n    for (let i = 0; i < steps; ++i) {\n      const cls =\n        i % 2 === 0 ? 'ol-scale-singlebar-odd' : 'ol-scale-singlebar-even';\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          `class=\"ol-scale-singlebar ${cls}\" ` +\n          `style=\"width: ${stepWidth}px;\"` +\n          '>' +\n          '</div>' +\n          this.createMarker('relative') +\n          // render text every second step, except when only 2 steps\n          (i % 2 === 0 || steps === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>'\n      );\n    }\n    // render text at the end\n    scaleSteps.push(this.createStepText(steps, width, true, scale, suffix));\n\n    const scaleBarText = this.scaleBarText_\n      ? `<div class=\"ol-scale-text\" style=\"width: ${width}px;\">` +\n        mapScale +\n        '</div>'\n      : '';\n    return scaleBarText + scaleSteps.join('');\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {'absolute'|'relative'} position The position, absolute or relative\n   * @return {string} The stringified div containing the marker\n   */\n  createMarker(position) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      `style=\"position: ${position}; top: ${top}px;\"` +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i The iterator\n   * @param {number} width The width the scalebar will currently use\n   * @param {boolean} isLast Flag indicating if we add the last step text\n   * @param {number} scale The current scale for the whole scalebar\n   * @param {string} suffix The suffix for the scale\n   * @return {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      `margin-left: ${margin}px;` +\n      `text-align: ${i === 0 ? 'left' : 'center'};` +\n      `min-width: ${minWidth}px;` +\n      `left: ${isLast ? width + 'px' : 'unset'};` +\n      '\">' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center,\n      'm'\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const inchesPerMeter = 1000 / 25.4;\n    return resolution * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n","/**\n * @module ol/control/ZoomSlider\n */\n\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {clamp} from '../math.js';\nimport {easeOut} from '../easing.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nconst Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1,\n};\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nclass ZoomSlider extends Control {\n  /**\n   * @param {Options} [options] Zoom slider options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      target: options.target,\n      element: document.createElement('div'),\n      render: options.render,\n    });\n\n    /**\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    this.currentResolution_ = undefined;\n\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    this.direction_ = Direction.VERTICAL;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.heightLimit_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.widthLimit_ = 0;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startX_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startY_;\n\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.thumbSize_ = null;\n\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    this.sliderInitialized_ = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoomslider';\n    const thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    const containerElement = this.element;\n    containerElement.className =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n\n    containerElement.addEventListener(\n      PointerEventType.POINTERDOWN,\n      this.handleDraggerStart_.bind(this),\n      false\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERMOVE,\n      this.handleDraggerDrag_.bind(this),\n      false\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERUP,\n      this.handleDraggerEnd_.bind(this),\n      false\n    );\n\n    containerElement.addEventListener(\n      EventType.CLICK,\n      this.handleContainerClick_.bind(this),\n      false\n    );\n    thumbElement.addEventListener(EventType.CLICK, stopPropagation, false);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      map.render();\n    }\n  }\n\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @return {boolean} Initialization successful\n   * @private\n   */\n  initSlider_() {\n    const container = this.element;\n    let containerWidth = container.offsetWidth;\n    let containerHeight = container.offsetHeight;\n    if (containerWidth === 0 && containerHeight === 0) {\n      return (this.sliderInitialized_ = false);\n    }\n\n    const containerStyle = getComputedStyle(container);\n    containerWidth -=\n      parseFloat(containerStyle['paddingRight']) +\n      parseFloat(containerStyle['paddingLeft']);\n    containerHeight -=\n      parseFloat(containerStyle['paddingTop']) +\n      parseFloat(containerStyle['paddingBottom']);\n    const thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n    const thumbStyle = getComputedStyle(thumb);\n    const thumbWidth =\n      thumb.offsetWidth +\n      parseFloat(thumbStyle['marginRight']) +\n      parseFloat(thumbStyle['marginLeft']);\n    const thumbHeight =\n      thumb.offsetHeight +\n      parseFloat(thumbStyle['marginTop']) +\n      parseFloat(thumbStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerWidth > containerHeight) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerWidth - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerHeight - thumbHeight;\n    }\n    return (this.sliderInitialized_ = true);\n  }\n\n  /**\n   * @param {PointerEvent} event The browser event to handle.\n   * @private\n   */\n  handleContainerClick_(event) {\n    const view = this.getMap().getView();\n\n    const relativePosition = this.getRelativePosition_(\n      event.offsetX - this.thumbSize_[0] / 2,\n      event.offsetY - this.thumbSize_[1] / 2\n    );\n\n    const resolution = this.getResolutionForPosition_(relativePosition);\n    const zoom = view.getConstrainedZoom(view.getZoomForResolution(resolution));\n\n    view.animateInternal({\n      zoom: zoom,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n\n  /**\n   * Handle dragger start events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerStart_(event) {\n    if (!this.dragging_ && event.target === this.element.firstElementChild) {\n      const element = /** @type {HTMLElement} */ (\n        this.element.firstElementChild\n      );\n      this.getMap().getView().beginInteraction();\n      this.startX_ = event.clientX - parseFloat(element.style.left);\n      this.startY_ = event.clientY - parseFloat(element.style.top);\n      this.dragging_ = true;\n\n      if (this.dragListenerKeys_.length === 0) {\n        const drag = this.handleDraggerDrag_;\n        const end = this.handleDraggerEnd_;\n        const doc = this.getMap().getOwnerDocument();\n        this.dragListenerKeys_.push(\n          listen(doc, PointerEventType.POINTERMOVE, drag, this),\n          listen(doc, PointerEventType.POINTERUP, end, this)\n        );\n      }\n    }\n  }\n\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerDrag_(event) {\n    if (this.dragging_) {\n      const deltaX = event.clientX - this.startX_;\n      const deltaY = event.clientY - this.startY_;\n      const relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ =\n        this.getResolutionForPosition_(relativePosition);\n      this.getMap().getView().setResolution(this.currentResolution_);\n    }\n  }\n\n  /**\n   * Handle dragger end events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerEnd_(event) {\n    if (this.dragging_) {\n      const view = this.getMap().getView();\n      view.endInteraction();\n\n      this.dragging_ = false;\n      this.startX_ = undefined;\n      this.startY_ = undefined;\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n    }\n  }\n\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  setThumbPosition_(res) {\n    const position = this.getPositionForResolution_(res);\n    const thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  }\n\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  getRelativePosition_(x, y) {\n    let amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  }\n\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  getResolutionForPosition_(position) {\n    const fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  }\n\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  getPositionForResolution_(res) {\n    const fn = this.getMap().getView().getValueForResolutionFunction();\n    return clamp(1 - fn(res), 0, 1);\n  }\n\n  /**\n   * Update the zoomslider element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    if (!mapEvent.frameState) {\n      return;\n    }\n    if (!this.sliderInitialized_ && !this.initSlider_()) {\n      return;\n    }\n    const res = mapEvent.frameState.viewState.resolution;\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\nexport default ZoomSlider;\n","/**\n * @module ol/control/ZoomToExtent\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nclass ZoomToExtent extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent|null}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    const label = options.label !== undefined ? options.label : 'E';\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label\n    );\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  }\n\n  /**\n   * @protected\n   */\n  handleZoomToExtent() {\n    const map = this.getMap();\n    const view = map.getView();\n    const extent = !this.extent\n      ? view.getProjection().getExtent()\n      : this.extent;\n    view.fitInternal(polygonFromExtent(extent));\n  }\n}\n\nexport default ZoomToExtent;\n","import $ol$AssertionError from './ol/AssertionError.js';\nimport {CollectionEvent as _ol_Collection$CollectionEvent} from './ol/Collection.js';\nimport $ol$Collection from './ol/Collection.js';\nimport {asImageLike as _ol_DataTile$asImageLike} from './ol/DataTile.js';\nimport {asArrayLike as _ol_DataTile$asArrayLike} from './ol/DataTile.js';\nimport {toArray as _ol_DataTile$toArray} from './ol/DataTile.js';\nimport $ol$DataTile from './ol/DataTile.js';\nimport $ol$Disposable from './ol/Disposable.js';\nimport $ol$Feature from './ol/Feature.js';\nimport {createStyleFunction as _ol_Feature$createStyleFunction} from './ol/Feature.js';\nimport {GeolocationError as _ol_Geolocation$GeolocationError} from './ol/Geolocation.js';\nimport $ol$Geolocation from './ol/Geolocation.js';\nimport $ol$Image from './ol/Image.js';\nimport {listenImage as _ol_Image$listenImage} from './ol/Image.js';\nimport $ol$ImageBase from './ol/ImageBase.js';\nimport $ol$ImageCanvas from './ol/ImageCanvas.js';\nimport $ol$ImageTile from './ol/ImageTile.js';\nimport $ol$Kinetic from './ol/Kinetic.js';\nimport $ol$Map from './ol/Map.js';\nimport $ol$MapBrowserEvent from './ol/MapBrowserEvent.js';\nimport $ol$MapBrowserEventHandler from './ol/MapBrowserEventHandler.js';\nimport $ol$MapEvent from './ol/MapEvent.js';\nimport {ObjectEvent as _ol_Object$ObjectEvent} from './ol/Object.js';\nimport $ol$Object from './ol/Object.js';\nimport $ol$Observable from './ol/Observable.js';\nimport {unByKey as _ol_Observable$unByKey} from './ol/Observable.js';\nimport $ol$Overlay from './ol/Overlay.js';\nimport $ol$Tile from './ol/Tile.js';\nimport $ol$TileCache from './ol/TileCache.js';\nimport $ol$TileQueue from './ol/TileQueue.js';\nimport {getTilePriority as _ol_TileQueue$getTilePriority} from './ol/TileQueue.js';\nimport $ol$TileRange from './ol/TileRange.js';\nimport {createOrUpdate as _ol_TileRange$createOrUpdate} from './ol/TileRange.js';\nimport $ol$VectorRenderTile from './ol/VectorRenderTile.js';\nimport $ol$View from './ol/View.js';\nimport {createCenterConstraint as _ol_View$createCenterConstraint} from './ol/View.js';\nimport {createResolutionConstraint as _ol_View$createResolutionConstraint} from './ol/View.js';\nimport {createRotationConstraint as _ol_View$createRotationConstraint} from './ol/View.js';\nimport {isNoopAnimation as _ol_View$isNoopAnimation} from './ol/View.js';\nimport {binarySearch as _ol_array$binarySearch} from './ol/array.js';\nimport {ascending as _ol_array$ascending} from './ol/array.js';\nimport {descending as _ol_array$descending} from './ol/array.js';\nimport {linearFindNearest as _ol_array$linearFindNearest} from './ol/array.js';\nimport {reverseSubArray as _ol_array$reverseSubArray} from './ol/array.js';\nimport {extend as _ol_array$extend} from './ol/array.js';\nimport {remove as _ol_array$remove} from './ol/array.js';\nimport {equals as _ol_array$equals} from './ol/array.js';\nimport {stableSort as _ol_array$stableSort} from './ol/array.js';\nimport {isSorted as _ol_array$isSorted} from './ol/array.js';\nimport {assert as _ol_asserts$assert} from './ol/asserts.js';\nimport {createExtent as _ol_centerconstraint$createExtent} from './ol/centerconstraint.js';\nimport {none as _ol_centerconstraint$none} from './ol/centerconstraint.js';\nimport {asString as _ol_color$asString} from './ol/color.js';\nimport {fromString as _ol_color$fromString} from './ol/color.js';\nimport {asArray as _ol_color$asArray} from './ol/color.js';\nimport {normalize as _ol_color$normalize} from './ol/color.js';\nimport {toString as _ol_color$toString} from './ol/color.js';\nimport {isStringColor as _ol_color$isStringColor} from './ol/color.js';\nimport {asColorLike as _ol_colorlike$asColorLike} from './ol/colorlike.js';\nimport {setLevel as _ol_console$setLevel} from './ol/console.js';\nimport {log as _ol_console$log} from './ol/console.js';\nimport {warn as _ol_console$warn} from './ol/console.js';\nimport {error as _ol_console$error} from './ol/console.js';\nimport {add as _ol_coordinate$add} from './ol/coordinate.js';\nimport {closestOnCircle as _ol_coordinate$closestOnCircle} from './ol/coordinate.js';\nimport {closestOnSegment as _ol_coordinate$closestOnSegment} from './ol/coordinate.js';\nimport {createStringXY as _ol_coordinate$createStringXY} from './ol/coordinate.js';\nimport {degreesToStringHDMS as _ol_coordinate$degreesToStringHDMS} from './ol/coordinate.js';\nimport {format as _ol_coordinate$format} from './ol/coordinate.js';\nimport {equals as _ol_coordinate$equals} from './ol/coordinate.js';\nimport {rotate as _ol_coordinate$rotate} from './ol/coordinate.js';\nimport {scale as _ol_coordinate$scale} from './ol/coordinate.js';\nimport {squaredDistance as _ol_coordinate$squaredDistance} from './ol/coordinate.js';\nimport {distance as _ol_coordinate$distance} from './ol/coordinate.js';\nimport {squaredDistanceToSegment as _ol_coordinate$squaredDistanceToSegment} from './ol/coordinate.js';\nimport {toStringHDMS as _ol_coordinate$toStringHDMS} from './ol/coordinate.js';\nimport {toStringXY as _ol_coordinate$toStringXY} from './ol/coordinate.js';\nimport {wrapX as _ol_coordinate$wrapX} from './ol/coordinate.js';\nimport {getWorldsAway as _ol_coordinate$getWorldsAway} from './ol/coordinate.js';\nimport {CLASS_HIDDEN as _ol_css$CLASS_HIDDEN} from './ol/css.js';\nimport {CLASS_SELECTABLE as _ol_css$CLASS_SELECTABLE} from './ol/css.js';\nimport {CLASS_UNSELECTABLE as _ol_css$CLASS_UNSELECTABLE} from './ol/css.js';\nimport {CLASS_UNSUPPORTED as _ol_css$CLASS_UNSUPPORTED} from './ol/css.js';\nimport {CLASS_CONTROL as _ol_css$CLASS_CONTROL} from './ol/css.js';\nimport {CLASS_COLLAPSED as _ol_css$CLASS_COLLAPSED} from './ol/css.js';\nimport {getFontParameters as _ol_css$getFontParameters} from './ol/css.js';\nimport {createCanvasContext2D as _ol_dom$createCanvasContext2D} from './ol/dom.js';\nimport {releaseCanvas as _ol_dom$releaseCanvas} from './ol/dom.js';\nimport {outerWidth as _ol_dom$outerWidth} from './ol/dom.js';\nimport {outerHeight as _ol_dom$outerHeight} from './ol/dom.js';\nimport {replaceNode as _ol_dom$replaceNode} from './ol/dom.js';\nimport {removeNode as _ol_dom$removeNode} from './ol/dom.js';\nimport {removeChildren as _ol_dom$removeChildren} from './ol/dom.js';\nimport {replaceChildren as _ol_dom$replaceChildren} from './ol/dom.js';\nimport {easeIn as _ol_easing$easeIn} from './ol/easing.js';\nimport {easeOut as _ol_easing$easeOut} from './ol/easing.js';\nimport {inAndOut as _ol_easing$inAndOut} from './ol/easing.js';\nimport {linear as _ol_easing$linear} from './ol/easing.js';\nimport {upAndDown as _ol_easing$upAndDown} from './ol/easing.js';\nimport {listen as _ol_events$listen} from './ol/events.js';\nimport {listenOnce as _ol_events$listenOnce} from './ol/events.js';\nimport {unlistenByKey as _ol_events$unlistenByKey} from './ol/events.js';\nimport {boundingExtent as _ol_extent$boundingExtent} from './ol/extent.js';\nimport {buffer as _ol_extent$buffer} from './ol/extent.js';\nimport {clone as _ol_extent$clone} from './ol/extent.js';\nimport {closestSquaredDistanceXY as _ol_extent$closestSquaredDistanceXY} from './ol/extent.js';\nimport {containsCoordinate as _ol_extent$containsCoordinate} from './ol/extent.js';\nimport {containsExtent as _ol_extent$containsExtent} from './ol/extent.js';\nimport {containsXY as _ol_extent$containsXY} from './ol/extent.js';\nimport {coordinateRelationship as _ol_extent$coordinateRelationship} from './ol/extent.js';\nimport {createEmpty as _ol_extent$createEmpty} from './ol/extent.js';\nimport {createOrUpdate as _ol_extent$createOrUpdate} from './ol/extent.js';\nimport {createOrUpdateEmpty as _ol_extent$createOrUpdateEmpty} from './ol/extent.js';\nimport {createOrUpdateFromCoordinate as _ol_extent$createOrUpdateFromCoordinate} from './ol/extent.js';\nimport {createOrUpdateFromCoordinates as _ol_extent$createOrUpdateFromCoordinates} from './ol/extent.js';\nimport {createOrUpdateFromFlatCoordinates as _ol_extent$createOrUpdateFromFlatCoordinates} from './ol/extent.js';\nimport {createOrUpdateFromRings as _ol_extent$createOrUpdateFromRings} from './ol/extent.js';\nimport {equals as _ol_extent$equals} from './ol/extent.js';\nimport {approximatelyEquals as _ol_extent$approximatelyEquals} from './ol/extent.js';\nimport {extend as _ol_extent$extend} from './ol/extent.js';\nimport {extendCoordinate as _ol_extent$extendCoordinate} from './ol/extent.js';\nimport {extendCoordinates as _ol_extent$extendCoordinates} from './ol/extent.js';\nimport {extendFlatCoordinates as _ol_extent$extendFlatCoordinates} from './ol/extent.js';\nimport {extendRings as _ol_extent$extendRings} from './ol/extent.js';\nimport {extendXY as _ol_extent$extendXY} from './ol/extent.js';\nimport {forEachCorner as _ol_extent$forEachCorner} from './ol/extent.js';\nimport {getArea as _ol_extent$getArea} from './ol/extent.js';\nimport {getBottomLeft as _ol_extent$getBottomLeft} from './ol/extent.js';\nimport {getBottomRight as _ol_extent$getBottomRight} from './ol/extent.js';\nimport {getCenter as _ol_extent$getCenter} from './ol/extent.js';\nimport {getCorner as _ol_extent$getCorner} from './ol/extent.js';\nimport {getEnlargedArea as _ol_extent$getEnlargedArea} from './ol/extent.js';\nimport {getForViewAndSize as _ol_extent$getForViewAndSize} from './ol/extent.js';\nimport {getRotatedViewport as _ol_extent$getRotatedViewport} from './ol/extent.js';\nimport {getHeight as _ol_extent$getHeight} from './ol/extent.js';\nimport {getIntersectionArea as _ol_extent$getIntersectionArea} from './ol/extent.js';\nimport {getIntersection as _ol_extent$getIntersection} from './ol/extent.js';\nimport {getMargin as _ol_extent$getMargin} from './ol/extent.js';\nimport {getSize as _ol_extent$getSize} from './ol/extent.js';\nimport {getTopLeft as _ol_extent$getTopLeft} from './ol/extent.js';\nimport {getTopRight as _ol_extent$getTopRight} from './ol/extent.js';\nimport {getWidth as _ol_extent$getWidth} from './ol/extent.js';\nimport {intersects as _ol_extent$intersects} from './ol/extent.js';\nimport {isEmpty as _ol_extent$isEmpty} from './ol/extent.js';\nimport {returnOrUpdate as _ol_extent$returnOrUpdate} from './ol/extent.js';\nimport {scaleFromCenter as _ol_extent$scaleFromCenter} from './ol/extent.js';\nimport {intersectsSegment as _ol_extent$intersectsSegment} from './ol/extent.js';\nimport {applyTransform as _ol_extent$applyTransform} from './ol/extent.js';\nimport {wrapX as _ol_extent$wrapX} from './ol/extent.js';\nimport {wrapAndSliceX as _ol_extent$wrapAndSliceX} from './ol/extent.js';\nimport {loadFeaturesXhr as _ol_featureloader$loadFeaturesXhr} from './ol/featureloader.js';\nimport {xhr as _ol_featureloader$xhr} from './ol/featureloader.js';\nimport {setWithCredentials as _ol_featureloader$setWithCredentials} from './ol/featureloader.js';\nimport {TRUE as _ol_functions$TRUE} from './ol/functions.js';\nimport {FALSE as _ol_functions$FALSE} from './ol/functions.js';\nimport {VOID as _ol_functions$VOID} from './ol/functions.js';\nimport {memoizeOne as _ol_functions$memoizeOne} from './ol/functions.js';\nimport {toPromise as _ol_functions$toPromise} from './ol/functions.js';\nimport {FIREFOX as _ol_has$FIREFOX} from './ol/has.js';\nimport {SAFARI as _ol_has$SAFARI} from './ol/has.js';\nimport {SAFARI_BUG_237906 as _ol_has$SAFARI_BUG_237906} from './ol/has.js';\nimport {WEBKIT as _ol_has$WEBKIT} from './ol/has.js';\nimport {MAC as _ol_has$MAC} from './ol/has.js';\nimport {DEVICE_PIXEL_RATIO as _ol_has$DEVICE_PIXEL_RATIO} from './ol/has.js';\nimport {WORKER_OFFSCREEN_CANVAS as _ol_has$WORKER_OFFSCREEN_CANVAS} from './ol/has.js';\nimport {IMAGE_DECODE as _ol_has$IMAGE_DECODE} from './ol/has.js';\nimport {PASSIVE_EVENT_LISTENERS as _ol_has$PASSIVE_EVENT_LISTENERS} from './ol/has.js';\nimport {all as _ol_loadingstrategy$all} from './ol/loadingstrategy.js';\nimport {bbox as _ol_loadingstrategy$bbox} from './ol/loadingstrategy.js';\nimport {tile as _ol_loadingstrategy$tile} from './ol/loadingstrategy.js';\nimport {clamp as _ol_math$clamp} from './ol/math.js';\nimport {squaredSegmentDistance as _ol_math$squaredSegmentDistance} from './ol/math.js';\nimport {squaredDistance as _ol_math$squaredDistance} from './ol/math.js';\nimport {solveLinearSystem as _ol_math$solveLinearSystem} from './ol/math.js';\nimport {toDegrees as _ol_math$toDegrees} from './ol/math.js';\nimport {toRadians as _ol_math$toRadians} from './ol/math.js';\nimport {modulo as _ol_math$modulo} from './ol/math.js';\nimport {lerp as _ol_math$lerp} from './ol/math.js';\nimport {toFixed as _ol_math$toFixed} from './ol/math.js';\nimport {round as _ol_math$round} from './ol/math.js';\nimport {floor as _ol_math$floor} from './ol/math.js';\nimport {ceil as _ol_math$ceil} from './ol/math.js';\nimport {jsonp as _ol_net$jsonp} from './ol/net.js';\nimport {ResponseError as _ol_net$ResponseError} from './ol/net.js';\nimport {ClientError as _ol_net$ClientError} from './ol/net.js';\nimport {getJSON as _ol_net$getJSON} from './ol/net.js';\nimport {resolveUrl as _ol_net$resolveUrl} from './ol/net.js';\nimport {overrideXHR as _ol_net$overrideXHR} from './ol/net.js';\nimport {restoreXHR as _ol_net$restoreXHR} from './ol/net.js';\nimport {clear as _ol_obj$clear} from './ol/obj.js';\nimport {isEmpty as _ol_obj$isEmpty} from './ol/obj.js';\nimport {disableCoordinateWarning as _ol_proj$disableCoordinateWarning} from './ol/proj.js';\nimport {cloneTransform as _ol_proj$cloneTransform} from './ol/proj.js';\nimport {identityTransform as _ol_proj$identityTransform} from './ol/proj.js';\nimport {addProjection as _ol_proj$addProjection} from './ol/proj.js';\nimport {addProjections as _ol_proj$addProjections} from './ol/proj.js';\nimport {get as _ol_proj$get} from './ol/proj.js';\nimport {getPointResolution as _ol_proj$getPointResolution} from './ol/proj.js';\nimport {addEquivalentProjections as _ol_proj$addEquivalentProjections} from './ol/proj.js';\nimport {addEquivalentTransforms as _ol_proj$addEquivalentTransforms} from './ol/proj.js';\nimport {clearAllProjections as _ol_proj$clearAllProjections} from './ol/proj.js';\nimport {createProjection as _ol_proj$createProjection} from './ol/proj.js';\nimport {createTransformFromCoordinateTransform as _ol_proj$createTransformFromCoordinateTransform} from './ol/proj.js';\nimport {addCoordinateTransforms as _ol_proj$addCoordinateTransforms} from './ol/proj.js';\nimport {fromLonLat as _ol_proj$fromLonLat} from './ol/proj.js';\nimport {toLonLat as _ol_proj$toLonLat} from './ol/proj.js';\nimport {equivalent as _ol_proj$equivalent} from './ol/proj.js';\nimport {getTransformFromProjections as _ol_proj$getTransformFromProjections} from './ol/proj.js';\nimport {getTransform as _ol_proj$getTransform} from './ol/proj.js';\nimport {transform as _ol_proj$transform} from './ol/proj.js';\nimport {transformExtent as _ol_proj$transformExtent} from './ol/proj.js';\nimport {transformWithProjections as _ol_proj$transformWithProjections} from './ol/proj.js';\nimport {setUserProjection as _ol_proj$setUserProjection} from './ol/proj.js';\nimport {clearUserProjection as _ol_proj$clearUserProjection} from './ol/proj.js';\nimport {getUserProjection as _ol_proj$getUserProjection} from './ol/proj.js';\nimport {useGeographic as _ol_proj$useGeographic} from './ol/proj.js';\nimport {toUserCoordinate as _ol_proj$toUserCoordinate} from './ol/proj.js';\nimport {fromUserCoordinate as _ol_proj$fromUserCoordinate} from './ol/proj.js';\nimport {toUserExtent as _ol_proj$toUserExtent} from './ol/proj.js';\nimport {fromUserExtent as _ol_proj$fromUserExtent} from './ol/proj.js';\nimport {toUserResolution as _ol_proj$toUserResolution} from './ol/proj.js';\nimport {fromUserResolution as _ol_proj$fromUserResolution} from './ol/proj.js';\nimport {createSafeCoordinateTransform as _ol_proj$createSafeCoordinateTransform} from './ol/proj.js';\nimport {addCommon as _ol_proj$addCommon} from './ol/proj.js';\nimport {toContext as _ol_render$toContext} from './ol/render.js';\nimport {getVectorContext as _ol_render$getVectorContext} from './ol/render.js';\nimport {getRenderPixel as _ol_render$getRenderPixel} from './ol/render.js';\nimport {canvasPool as _ol_reproj$canvasPool} from './ol/reproj.js';\nimport {calculateSourceResolution as _ol_reproj$calculateSourceResolution} from './ol/reproj.js';\nimport {calculateSourceExtentResolution as _ol_reproj$calculateSourceExtentResolution} from './ol/reproj.js';\nimport {render as _ol_reproj$render} from './ol/reproj.js';\nimport {createSnapToResolutions as _ol_resolutionconstraint$createSnapToResolutions} from './ol/resolutionconstraint.js';\nimport {createSnapToPower as _ol_resolutionconstraint$createSnapToPower} from './ol/resolutionconstraint.js';\nimport {createMinMaxResolution as _ol_resolutionconstraint$createMinMaxResolution} from './ol/resolutionconstraint.js';\nimport {disable as _ol_rotationconstraint$disable} from './ol/rotationconstraint.js';\nimport {none as _ol_rotationconstraint$none} from './ol/rotationconstraint.js';\nimport {createSnapToN as _ol_rotationconstraint$createSnapToN} from './ol/rotationconstraint.js';\nimport {createSnapToZero as _ol_rotationconstraint$createSnapToZero} from './ol/rotationconstraint.js';\nimport {buffer as _ol_size$buffer} from './ol/size.js';\nimport {hasArea as _ol_size$hasArea} from './ol/size.js';\nimport {scale as _ol_size$scale} from './ol/size.js';\nimport {toSize as _ol_size$toSize} from './ol/size.js';\nimport {sourcesFromTileGrid as _ol_source$sourcesFromTileGrid} from './ol/source.js';\nimport {DEFAULT_RADIUS as _ol_sphere$DEFAULT_RADIUS} from './ol/sphere.js';\nimport {getDistance as _ol_sphere$getDistance} from './ol/sphere.js';\nimport {getLength as _ol_sphere$getLength} from './ol/sphere.js';\nimport {getArea as _ol_sphere$getArea} from './ol/sphere.js';\nimport {offset as _ol_sphere$offset} from './ol/sphere.js';\nimport {padNumber as _ol_string$padNumber} from './ol/string.js';\nimport {compareVersions as _ol_string$compareVersions} from './ol/string.js';\nimport {createOrUpdate as _ol_tilecoord$createOrUpdate} from './ol/tilecoord.js';\nimport {getKeyZXY as _ol_tilecoord$getKeyZXY} from './ol/tilecoord.js';\nimport {getKey as _ol_tilecoord$getKey} from './ol/tilecoord.js';\nimport {getCacheKeyForTileKey as _ol_tilecoord$getCacheKeyForTileKey} from './ol/tilecoord.js';\nimport {fromKey as _ol_tilecoord$fromKey} from './ol/tilecoord.js';\nimport {hash as _ol_tilecoord$hash} from './ol/tilecoord.js';\nimport {withinExtentAndZ as _ol_tilecoord$withinExtentAndZ} from './ol/tilecoord.js';\nimport {getForProjection as _ol_tilegrid$getForProjection} from './ol/tilegrid.js';\nimport {wrapX as _ol_tilegrid$wrapX} from './ol/tilegrid.js';\nimport {createForExtent as _ol_tilegrid$createForExtent} from './ol/tilegrid.js';\nimport {createXYZ as _ol_tilegrid$createXYZ} from './ol/tilegrid.js';\nimport {createForProjection as _ol_tilegrid$createForProjection} from './ol/tilegrid.js';\nimport {extentFromProjection as _ol_tilegrid$extentFromProjection} from './ol/tilegrid.js';\nimport {createFromTemplate as _ol_tileurlfunction$createFromTemplate} from './ol/tileurlfunction.js';\nimport {createFromTemplates as _ol_tileurlfunction$createFromTemplates} from './ol/tileurlfunction.js';\nimport {createFromTileUrlFunctions as _ol_tileurlfunction$createFromTileUrlFunctions} from './ol/tileurlfunction.js';\nimport {nullTileUrlFunction as _ol_tileurlfunction$nullTileUrlFunction} from './ol/tileurlfunction.js';\nimport {expandUrl as _ol_tileurlfunction$expandUrl} from './ol/tileurlfunction.js';\nimport {create as _ol_transform$create} from './ol/transform.js';\nimport {reset as _ol_transform$reset} from './ol/transform.js';\nimport {multiply as _ol_transform$multiply} from './ol/transform.js';\nimport {set as _ol_transform$set} from './ol/transform.js';\nimport {setFromArray as _ol_transform$setFromArray} from './ol/transform.js';\nimport {apply as _ol_transform$apply} from './ol/transform.js';\nimport {rotate as _ol_transform$rotate} from './ol/transform.js';\nimport {scale as _ol_transform$scale} from './ol/transform.js';\nimport {makeScale as _ol_transform$makeScale} from './ol/transform.js';\nimport {translate as _ol_transform$translate} from './ol/transform.js';\nimport {compose as _ol_transform$compose} from './ol/transform.js';\nimport {composeCssTransform as _ol_transform$composeCssTransform} from './ol/transform.js';\nimport {invert as _ol_transform$invert} from './ol/transform.js';\nimport {makeInverse as _ol_transform$makeInverse} from './ol/transform.js';\nimport {determinant as _ol_transform$determinant} from './ol/transform.js';\nimport {toString as _ol_transform$toString} from './ol/transform.js';\nimport {appendParams as _ol_uri$appendParams} from './ol/uri.js';\nimport {abstract as _ol_util$abstract} from './ol/util.js';\nimport {getUid as _ol_util$getUid} from './ol/util.js';\nimport {VERSION as _ol_util$VERSION} from './ol/util.js';\nimport {XML_SCHEMA_INSTANCE_URI as _ol_xml$XML_SCHEMA_INSTANCE_URI} from './ol/xml.js';\nimport {createElementNS as _ol_xml$createElementNS} from './ol/xml.js';\nimport {getAllTextContent as _ol_xml$getAllTextContent} from './ol/xml.js';\nimport {getAllTextContent_ as _ol_xml$getAllTextContent_} from './ol/xml.js';\nimport {isDocument as _ol_xml$isDocument} from './ol/xml.js';\nimport {getAttributeNS as _ol_xml$getAttributeNS} from './ol/xml.js';\nimport {parse as _ol_xml$parse} from './ol/xml.js';\nimport {makeArrayExtender as _ol_xml$makeArrayExtender} from './ol/xml.js';\nimport {makeArrayPusher as _ol_xml$makeArrayPusher} from './ol/xml.js';\nimport {makeReplacer as _ol_xml$makeReplacer} from './ol/xml.js';\nimport {makeObjectPropertyPusher as _ol_xml$makeObjectPropertyPusher} from './ol/xml.js';\nimport {makeObjectPropertySetter as _ol_xml$makeObjectPropertySetter} from './ol/xml.js';\nimport {makeChildAppender as _ol_xml$makeChildAppender} from './ol/xml.js';\nimport {makeArraySerializer as _ol_xml$makeArraySerializer} from './ol/xml.js';\nimport {makeSimpleNodeFactory as _ol_xml$makeSimpleNodeFactory} from './ol/xml.js';\nimport {OBJECT_PROPERTY_NODE_FACTORY as _ol_xml$OBJECT_PROPERTY_NODE_FACTORY} from './ol/xml.js';\nimport {makeSequence as _ol_xml$makeSequence} from './ol/xml.js';\nimport {makeStructureNS as _ol_xml$makeStructureNS} from './ol/xml.js';\nimport {parseNode as _ol_xml$parseNode} from './ol/xml.js';\nimport {pushParseAndPop as _ol_xml$pushParseAndPop} from './ol/xml.js';\nimport {serialize as _ol_xml$serialize} from './ol/xml.js';\nimport {pushSerializeAndPop as _ol_xml$pushSerializeAndPop} from './ol/xml.js';\nimport {registerXMLSerializer as _ol_xml$registerXMLSerializer} from './ol/xml.js';\nimport {getXMLSerializer as _ol_xml$getXMLSerializer} from './ol/xml.js';\nimport {registerDocument as _ol_xml$registerDocument} from './ol/xml.js';\nimport {getDocument as _ol_xml$getDocument} from './ol/xml.js';\nimport {create as _ol_vec_mat4$create} from './ol/vec/mat4.js';\nimport {fromTransform as _ol_vec_mat4$fromTransform} from './ol/vec/mat4.js';\nimport $ol$tilegrid$TileGrid from './ol/tilegrid/TileGrid.js';\nimport $ol$tilegrid$WMTS from './ol/tilegrid/WMTS.js';\nimport {createFromCapabilitiesMatrixSet as _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet} from './ol/tilegrid/WMTS.js';\nimport {DEFAULT_MAX_ZOOM as _ol_tilegrid_common$DEFAULT_MAX_ZOOM} from './ol/tilegrid/common.js';\nimport {DEFAULT_TILE_SIZE as _ol_tilegrid_common$DEFAULT_TILE_SIZE} from './ol/tilegrid/common.js';\nimport $ol$style$Circle from './ol/style/Circle.js';\nimport $ol$style$Fill from './ol/style/Fill.js';\nimport $ol$style$Icon from './ol/style/Icon.js';\nimport $ol$style$IconImage from './ol/style/IconImage.js';\nimport {get as _ol_style_IconImage$get} from './ol/style/IconImage.js';\nimport $ol$style$IconImageCache from './ol/style/IconImageCache.js';\nimport {shared as _ol_style_IconImageCache$shared} from './ol/style/IconImageCache.js';\nimport $ol$style$Image from './ol/style/Image.js';\nimport $ol$style$RegularShape from './ol/style/RegularShape.js';\nimport $ol$style$Stroke from './ol/style/Stroke.js';\nimport $ol$style$Style from './ol/style/Style.js';\nimport {toFunction as _ol_style_Style$toFunction} from './ol/style/Style.js';\nimport {createDefaultStyle as _ol_style_Style$createDefaultStyle} from './ol/style/Style.js';\nimport {createEditingStyle as _ol_style_Style$createEditingStyle} from './ol/style/Style.js';\nimport $ol$style$Text from './ol/style/Text.js';\nimport {Operators as _ol_style_expressions$Operators} from './ol/style/expressions.js';\nimport {getValueType as _ol_style_expressions$getValueType} from './ol/style/expressions.js';\nimport {isTypeUnique as _ol_style_expressions$isTypeUnique} from './ol/style/expressions.js';\nimport {numberToGlsl as _ol_style_expressions$numberToGlsl} from './ol/style/expressions.js';\nimport {arrayToGlsl as _ol_style_expressions$arrayToGlsl} from './ol/style/expressions.js';\nimport {colorToGlsl as _ol_style_expressions$colorToGlsl} from './ol/style/expressions.js';\nimport {getStringNumberEquivalent as _ol_style_expressions$getStringNumberEquivalent} from './ol/style/expressions.js';\nimport {stringToGlsl as _ol_style_expressions$stringToGlsl} from './ol/style/expressions.js';\nimport {expressionToGlsl as _ol_style_expressions$expressionToGlsl} from './ol/style/expressions.js';\nimport {uniformNameForVariable as _ol_style_expressions$uniformNameForVariable} from './ol/style/expressions.js';\nimport {PALETTE_TEXTURE_ARRAY as _ol_style_expressions$PALETTE_TEXTURE_ARRAY} from './ol/style/expressions.js';\nimport {toStyle as _ol_style_flat$toStyle} from './ol/style/flat.js';\nimport {createDefaultStyle as _ol_style_flat$createDefaultStyle} from './ol/style/flat.js';\nimport $ol$structs$LRUCache from './ol/structs/LRUCache.js';\nimport $ol$structs$LinkedList from './ol/structs/LinkedList.js';\nimport {DROP as _ol_structs_PriorityQueue$DROP} from './ol/structs/PriorityQueue.js';\nimport $ol$structs$PriorityQueue from './ol/structs/PriorityQueue.js';\nimport $ol$structs$RBush from './ol/structs/RBush.js';\nimport {quadKey as _ol_source_BingMaps$quadKey} from './ol/source/BingMaps.js';\nimport $ol$source$BingMaps from './ol/source/BingMaps.js';\nimport $ol$source$Cluster from './ol/source/Cluster.js';\nimport $ol$source$DataTile from './ol/source/DataTile.js';\nimport {ImageSourceEvent as _ol_source_Image$ImageSourceEvent} from './ol/source/Image.js';\nimport $ol$source$Image from './ol/source/Image.js';\nimport {defaultImageLoadFunction as _ol_source_Image$defaultImageLoadFunction} from './ol/source/Image.js';\nimport $ol$source$ImageArcGISRest from './ol/source/ImageArcGISRest.js';\nimport $ol$source$ImageCanvas from './ol/source/ImageCanvas.js';\nimport $ol$source$ImageStatic from './ol/source/ImageStatic.js';\nimport $ol$source$ImageWMS from './ol/source/ImageWMS.js';\nimport $ol$source$OGCMapTile from './ol/source/OGCMapTile.js';\nimport {ATTRIBUTION as _ol_source_OSM$ATTRIBUTION} from './ol/source/OSM.js';\nimport $ol$source$OSM from './ol/source/OSM.js';\nimport {newImageData as _ol_source_Raster$newImageData} from './ol/source/Raster.js';\nimport {Processor as _ol_source_Raster$Processor} from './ol/source/Raster.js';\nimport {RasterSourceEvent as _ol_source_Raster$RasterSourceEvent} from './ol/source/Raster.js';\nimport $ol$source$Raster from './ol/source/Raster.js';\nimport $ol$source$Source from './ol/source/Source.js';\nimport $ol$source$Stamen from './ol/source/Stamen.js';\nimport $ol$source$Tile from './ol/source/Tile.js';\nimport {TileSourceEvent as _ol_source_Tile$TileSourceEvent} from './ol/source/Tile.js';\nimport $ol$source$TileArcGISRest from './ol/source/TileArcGISRest.js';\nimport $ol$source$TileDebug from './ol/source/TileDebug.js';\nimport $ol$source$TileImage from './ol/source/TileImage.js';\nimport $ol$source$TileJSON from './ol/source/TileJSON.js';\nimport $ol$source$TileWMS from './ol/source/TileWMS.js';\nimport {CustomTile as _ol_source_UTFGrid$CustomTile} from './ol/source/UTFGrid.js';\nimport $ol$source$UTFGrid from './ol/source/UTFGrid.js';\nimport $ol$source$UrlTile from './ol/source/UrlTile.js';\nimport {VectorSourceEvent as _ol_source_Vector$VectorSourceEvent} from './ol/source/Vector.js';\nimport $ol$source$Vector from './ol/source/Vector.js';\nimport $ol$source$WMTS from './ol/source/WMTS.js';\nimport {optionsFromCapabilities as _ol_source_WMTS$optionsFromCapabilities} from './ol/source/WMTS.js';\nimport $ol$source$XYZ from './ol/source/XYZ.js';\nimport {DEFAULT_WMS_VERSION as _ol_source_common$DEFAULT_WMS_VERSION} from './ol/source/common.js';\nimport {getMapTileUrlTemplate as _ol_source_ogcTileUtil$getMapTileUrlTemplate} from './ol/source/ogcTileUtil.js';\nimport {getVectorTileUrlTemplate as _ol_source_ogcTileUtil$getVectorTileUrlTemplate} from './ol/source/ogcTileUtil.js';\nimport {getTileSetInfo as _ol_source_ogcTileUtil$getTileSetInfo} from './ol/source/ogcTileUtil.js';\nimport {DEFAULT_VERSION as _ol_source_wms$DEFAULT_VERSION} from './ol/source/wms.js';\nimport $ol$reproj$DataTile from './ol/reproj/DataTile.js';\nimport $ol$reproj$Image from './ol/reproj/Image.js';\nimport $ol$reproj$Tile from './ol/reproj/Tile.js';\nimport $ol$reproj$Triangulation from './ol/reproj/Triangulation.js';\nimport {ERROR_THRESHOLD as _ol_reproj_common$ERROR_THRESHOLD} from './ol/reproj/common.js';\nimport $ol$renderer$Composite from './ol/renderer/Composite.js';\nimport $ol$renderer$Layer from './ol/renderer/Layer.js';\nimport $ol$renderer$Map from './ol/renderer/Map.js';\nimport {defaultOrder as _ol_renderer_vector$defaultOrder} from './ol/renderer/vector.js';\nimport {getSquaredTolerance as _ol_renderer_vector$getSquaredTolerance} from './ol/renderer/vector.js';\nimport {getTolerance as _ol_renderer_vector$getTolerance} from './ol/renderer/vector.js';\nimport {renderFeature as _ol_renderer_vector$renderFeature} from './ol/renderer/vector.js';\nimport $ol$renderer$canvas$ImageLayer from './ol/renderer/canvas/ImageLayer.js';\nimport {canvasPool as _ol_renderer_canvas_Layer$canvasPool} from './ol/renderer/canvas/Layer.js';\nimport $ol$renderer$canvas$Layer from './ol/renderer/canvas/Layer.js';\nimport $ol$renderer$canvas$TileLayer from './ol/renderer/canvas/TileLayer.js';\nimport $ol$renderer$canvas$VectorImageLayer from './ol/renderer/canvas/VectorImageLayer.js';\nimport $ol$renderer$canvas$VectorLayer from './ol/renderer/canvas/VectorLayer.js';\nimport $ol$render$Box from './ol/render/Box.js';\nimport $ol$render$Event from './ol/render/Event.js';\nimport $ol$render$Feature from './ol/render/Feature.js';\nimport {toGeometry as _ol_render_Feature$toGeometry} from './ol/render/Feature.js';\nimport {toFeature as _ol_render_Feature$toFeature} from './ol/render/Feature.js';\nimport $ol$render$VectorContext from './ol/render/VectorContext.js';\nimport {defaultFont as _ol_render_canvas$defaultFont} from './ol/render/canvas.js';\nimport {defaultFillStyle as _ol_render_canvas$defaultFillStyle} from './ol/render/canvas.js';\nimport {defaultLineCap as _ol_render_canvas$defaultLineCap} from './ol/render/canvas.js';\nimport {defaultLineDash as _ol_render_canvas$defaultLineDash} from './ol/render/canvas.js';\nimport {defaultLineDashOffset as _ol_render_canvas$defaultLineDashOffset} from './ol/render/canvas.js';\nimport {defaultLineJoin as _ol_render_canvas$defaultLineJoin} from './ol/render/canvas.js';\nimport {defaultMiterLimit as _ol_render_canvas$defaultMiterLimit} from './ol/render/canvas.js';\nimport {defaultStrokeStyle as _ol_render_canvas$defaultStrokeStyle} from './ol/render/canvas.js';\nimport {defaultTextAlign as _ol_render_canvas$defaultTextAlign} from './ol/render/canvas.js';\nimport {defaultTextBaseline as _ol_render_canvas$defaultTextBaseline} from './ol/render/canvas.js';\nimport {defaultPadding as _ol_render_canvas$defaultPadding} from './ol/render/canvas.js';\nimport {defaultLineWidth as _ol_render_canvas$defaultLineWidth} from './ol/render/canvas.js';\nimport {checkedFonts as _ol_render_canvas$checkedFonts} from './ol/render/canvas.js';\nimport {textHeights as _ol_render_canvas$textHeights} from './ol/render/canvas.js';\nimport {registerFont as _ol_render_canvas$registerFont} from './ol/render/canvas.js';\nimport {measureTextHeight as _ol_render_canvas$measureTextHeight} from './ol/render/canvas.js';\nimport {measureTextWidth as _ol_render_canvas$measureTextWidth} from './ol/render/canvas.js';\nimport {measureAndCacheTextWidth as _ol_render_canvas$measureAndCacheTextWidth} from './ol/render/canvas.js';\nimport {getTextDimensions as _ol_render_canvas$getTextDimensions} from './ol/render/canvas.js';\nimport {rotateAtOffset as _ol_render_canvas$rotateAtOffset} from './ol/render/canvas.js';\nimport {drawImageOrLabel as _ol_render_canvas$drawImageOrLabel} from './ol/render/canvas.js';\nimport $ol$render$canvas$Builder from './ol/render/canvas/Builder.js';\nimport $ol$render$canvas$BuilderGroup from './ol/render/canvas/BuilderGroup.js';\nimport $ol$render$canvas$Executor from './ol/render/canvas/Executor.js';\nimport $ol$render$canvas$ExecutorGroup from './ol/render/canvas/ExecutorGroup.js';\nimport {getPixelIndexArray as _ol_render_canvas_ExecutorGroup$getPixelIndexArray} from './ol/render/canvas/ExecutorGroup.js';\nimport $ol$render$canvas$ImageBuilder from './ol/render/canvas/ImageBuilder.js';\nimport $ol$render$canvas$Immediate from './ol/render/canvas/Immediate.js';\nimport {fillInstruction as _ol_render_canvas_Instruction$fillInstruction} from './ol/render/canvas/Instruction.js';\nimport {strokeInstruction as _ol_render_canvas_Instruction$strokeInstruction} from './ol/render/canvas/Instruction.js';\nimport {beginPathInstruction as _ol_render_canvas_Instruction$beginPathInstruction} from './ol/render/canvas/Instruction.js';\nimport {closePathInstruction as _ol_render_canvas_Instruction$closePathInstruction} from './ol/render/canvas/Instruction.js';\nimport $ol$render$canvas$LineStringBuilder from './ol/render/canvas/LineStringBuilder.js';\nimport $ol$render$canvas$PolygonBuilder from './ol/render/canvas/PolygonBuilder.js';\nimport {TEXT_ALIGN as _ol_render_canvas_TextBuilder$TEXT_ALIGN} from './ol/render/canvas/TextBuilder.js';\nimport $ol$render$canvas$TextBuilder from './ol/render/canvas/TextBuilder.js';\nimport {HIT_DETECT_RESOLUTION as _ol_render_canvas_hitdetect$HIT_DETECT_RESOLUTION} from './ol/render/canvas/hitdetect.js';\nimport {createHitDetectionImageData as _ol_render_canvas_hitdetect$createHitDetectionImageData} from './ol/render/canvas/hitdetect.js';\nimport {hitDetect as _ol_render_canvas_hitdetect$hitDetect} from './ol/render/canvas/hitdetect.js';\nimport $ol$proj$Projection from './ol/proj/Projection.js';\nimport {fromCode as _ol_proj_Units$fromCode} from './ol/proj/Units.js';\nimport {METERS_PER_UNIT as _ol_proj_Units$METERS_PER_UNIT} from './ol/proj/Units.js';\nimport {RADIUS as _ol_proj_epsg3857$RADIUS} from './ol/proj/epsg3857.js';\nimport {HALF_SIZE as _ol_proj_epsg3857$HALF_SIZE} from './ol/proj/epsg3857.js';\nimport {EXTENT as _ol_proj_epsg3857$EXTENT} from './ol/proj/epsg3857.js';\nimport {WORLD_EXTENT as _ol_proj_epsg3857$WORLD_EXTENT} from './ol/proj/epsg3857.js';\nimport {MAX_SAFE_Y as _ol_proj_epsg3857$MAX_SAFE_Y} from './ol/proj/epsg3857.js';\nimport {PROJECTIONS as _ol_proj_epsg3857$PROJECTIONS} from './ol/proj/epsg3857.js';\nimport {fromEPSG4326 as _ol_proj_epsg3857$fromEPSG4326} from './ol/proj/epsg3857.js';\nimport {toEPSG4326 as _ol_proj_epsg3857$toEPSG4326} from './ol/proj/epsg3857.js';\nimport {RADIUS as _ol_proj_epsg4326$RADIUS} from './ol/proj/epsg4326.js';\nimport {EXTENT as _ol_proj_epsg4326$EXTENT} from './ol/proj/epsg4326.js';\nimport {METERS_PER_UNIT as _ol_proj_epsg4326$METERS_PER_UNIT} from './ol/proj/epsg4326.js';\nimport {PROJECTIONS as _ol_proj_epsg4326$PROJECTIONS} from './ol/proj/epsg4326.js';\nimport {isRegistered as _ol_proj_proj4$isRegistered} from './ol/proj/proj4.js';\nimport {unregister as _ol_proj_proj4$unregister} from './ol/proj/proj4.js';\nimport {register as _ol_proj_proj4$register} from './ol/proj/proj4.js';\nimport {setEPSGLookup as _ol_proj_proj4$setEPSGLookup} from './ol/proj/proj4.js';\nimport {getEPSGLookup as _ol_proj_proj4$getEPSGLookup} from './ol/proj/proj4.js';\nimport {fromEPSGCode as _ol_proj_proj4$fromEPSGCode} from './ol/proj/proj4.js';\nimport {epsgLookupMapTiler as _ol_proj_proj4$epsgLookupMapTiler} from './ol/proj/proj4.js';\nimport {clear as _ol_proj_projections$clear} from './ol/proj/projections.js';\nimport {get as _ol_proj_projections$get} from './ol/proj/projections.js';\nimport {add as _ol_proj_projections$add} from './ol/proj/projections.js';\nimport {clear as _ol_proj_transforms$clear} from './ol/proj/transforms.js';\nimport {add as _ol_proj_transforms$add} from './ol/proj/transforms.js';\nimport {remove as _ol_proj_transforms$remove} from './ol/proj/transforms.js';\nimport {get as _ol_proj_transforms$get} from './ol/proj/transforms.js';\nimport $ol$layer$Base from './ol/layer/Base.js';\nimport $ol$layer$BaseImage from './ol/layer/BaseImage.js';\nimport $ol$layer$BaseTile from './ol/layer/BaseTile.js';\nimport $ol$layer$BaseVector from './ol/layer/BaseVector.js';\nimport $ol$layer$Graticule from './ol/layer/Graticule.js';\nimport {GroupEvent as _ol_layer_Group$GroupEvent} from './ol/layer/Group.js';\nimport $ol$layer$Group from './ol/layer/Group.js';\nimport $ol$layer$Heatmap from './ol/layer/Heatmap.js';\nimport $ol$layer$Image from './ol/layer/Image.js';\nimport $ol$layer$Layer from './ol/layer/Layer.js';\nimport {inView as _ol_layer_Layer$inView} from './ol/layer/Layer.js';\nimport $ol$layer$Tile from './ol/layer/Tile.js';\nimport $ol$layer$Vector from './ol/layer/Vector.js';\nimport $ol$layer$VectorImage from './ol/layer/VectorImage.js';\nimport $ol$interaction$DblClickDragZoom from './ol/interaction/DblClickDragZoom.js';\nimport $ol$interaction$DoubleClickZoom from './ol/interaction/DoubleClickZoom.js';\nimport {DragAndDropEvent as _ol_interaction_DragAndDrop$DragAndDropEvent} from './ol/interaction/DragAndDrop.js';\nimport $ol$interaction$DragAndDrop from './ol/interaction/DragAndDrop.js';\nimport {DragBoxEvent as _ol_interaction_DragBox$DragBoxEvent} from './ol/interaction/DragBox.js';\nimport $ol$interaction$DragBox from './ol/interaction/DragBox.js';\nimport $ol$interaction$DragPan from './ol/interaction/DragPan.js';\nimport $ol$interaction$DragRotate from './ol/interaction/DragRotate.js';\nimport $ol$interaction$DragRotateAndZoom from './ol/interaction/DragRotateAndZoom.js';\nimport $ol$interaction$DragZoom from './ol/interaction/DragZoom.js';\nimport {DrawEvent as _ol_interaction_Draw$DrawEvent} from './ol/interaction/Draw.js';\nimport $ol$interaction$Draw from './ol/interaction/Draw.js';\nimport {createRegularPolygon as _ol_interaction_Draw$createRegularPolygon} from './ol/interaction/Draw.js';\nimport {createBox as _ol_interaction_Draw$createBox} from './ol/interaction/Draw.js';\nimport {ExtentEvent as _ol_interaction_Extent$ExtentEvent} from './ol/interaction/Extent.js';\nimport $ol$interaction$Extent from './ol/interaction/Extent.js';\nimport $ol$interaction$Interaction from './ol/interaction/Interaction.js';\nimport {pan as _ol_interaction_Interaction$pan} from './ol/interaction/Interaction.js';\nimport {zoomByDelta as _ol_interaction_Interaction$zoomByDelta} from './ol/interaction/Interaction.js';\nimport $ol$interaction$KeyboardPan from './ol/interaction/KeyboardPan.js';\nimport $ol$interaction$KeyboardZoom from './ol/interaction/KeyboardZoom.js';\nimport $ol$interaction$Link from './ol/interaction/Link.js';\nimport {ModifyEvent as _ol_interaction_Modify$ModifyEvent} from './ol/interaction/Modify.js';\nimport $ol$interaction$Modify from './ol/interaction/Modify.js';\nimport $ol$interaction$MouseWheelZoom from './ol/interaction/MouseWheelZoom.js';\nimport $ol$interaction$PinchRotate from './ol/interaction/PinchRotate.js';\nimport $ol$interaction$PinchZoom from './ol/interaction/PinchZoom.js';\nimport $ol$interaction$Pointer from './ol/interaction/Pointer.js';\nimport {centroid as _ol_interaction_Pointer$centroid} from './ol/interaction/Pointer.js';\nimport {SelectEvent as _ol_interaction_Select$SelectEvent} from './ol/interaction/Select.js';\nimport $ol$interaction$Select from './ol/interaction/Select.js';\nimport $ol$interaction$Snap from './ol/interaction/Snap.js';\nimport {TranslateEvent as _ol_interaction_Translate$TranslateEvent} from './ol/interaction/Translate.js';\nimport $ol$interaction$Translate from './ol/interaction/Translate.js';\nimport {defaults as _ol_interaction_defaults$defaults} from './ol/interaction/defaults.js';\nimport $ol$geom$Circle from './ol/geom/Circle.js';\nimport $ol$geom$Geometry from './ol/geom/Geometry.js';\nimport $ol$geom$GeometryCollection from './ol/geom/GeometryCollection.js';\nimport $ol$geom$LineString from './ol/geom/LineString.js';\nimport $ol$geom$LinearRing from './ol/geom/LinearRing.js';\nimport $ol$geom$MultiLineString from './ol/geom/MultiLineString.js';\nimport $ol$geom$MultiPoint from './ol/geom/MultiPoint.js';\nimport $ol$geom$MultiPolygon from './ol/geom/MultiPolygon.js';\nimport $ol$geom$Point from './ol/geom/Point.js';\nimport $ol$geom$Polygon from './ol/geom/Polygon.js';\nimport {circular as _ol_geom_Polygon$circular} from './ol/geom/Polygon.js';\nimport {fromExtent as _ol_geom_Polygon$fromExtent} from './ol/geom/Polygon.js';\nimport {fromCircle as _ol_geom_Polygon$fromCircle} from './ol/geom/Polygon.js';\nimport {makeRegular as _ol_geom_Polygon$makeRegular} from './ol/geom/Polygon.js';\nimport $ol$geom$SimpleGeometry from './ol/geom/SimpleGeometry.js';\nimport {getStrideForLayout as _ol_geom_SimpleGeometry$getStrideForLayout} from './ol/geom/SimpleGeometry.js';\nimport {transformGeom2D as _ol_geom_SimpleGeometry$transformGeom2D} from './ol/geom/SimpleGeometry.js';\nimport {linearRing as _ol_geom_flat_area$linearRing} from './ol/geom/flat/area.js';\nimport {linearRings as _ol_geom_flat_area$linearRings} from './ol/geom/flat/area.js';\nimport {linearRingss as _ol_geom_flat_area$linearRingss} from './ol/geom/flat/area.js';\nimport {linearRingss as _ol_geom_flat_center$linearRingss} from './ol/geom/flat/center.js';\nimport {maxSquaredDelta as _ol_geom_flat_closest$maxSquaredDelta} from './ol/geom/flat/closest.js';\nimport {arrayMaxSquaredDelta as _ol_geom_flat_closest$arrayMaxSquaredDelta} from './ol/geom/flat/closest.js';\nimport {multiArrayMaxSquaredDelta as _ol_geom_flat_closest$multiArrayMaxSquaredDelta} from './ol/geom/flat/closest.js';\nimport {assignClosestPoint as _ol_geom_flat_closest$assignClosestPoint} from './ol/geom/flat/closest.js';\nimport {assignClosestArrayPoint as _ol_geom_flat_closest$assignClosestArrayPoint} from './ol/geom/flat/closest.js';\nimport {assignClosestMultiArrayPoint as _ol_geom_flat_closest$assignClosestMultiArrayPoint} from './ol/geom/flat/closest.js';\nimport {linearRingContainsExtent as _ol_geom_flat_contains$linearRingContainsExtent} from './ol/geom/flat/contains.js';\nimport {linearRingContainsXY as _ol_geom_flat_contains$linearRingContainsXY} from './ol/geom/flat/contains.js';\nimport {linearRingsContainsXY as _ol_geom_flat_contains$linearRingsContainsXY} from './ol/geom/flat/contains.js';\nimport {linearRingssContainsXY as _ol_geom_flat_contains$linearRingssContainsXY} from './ol/geom/flat/contains.js';\nimport {deflateCoordinate as _ol_geom_flat_deflate$deflateCoordinate} from './ol/geom/flat/deflate.js';\nimport {deflateCoordinates as _ol_geom_flat_deflate$deflateCoordinates} from './ol/geom/flat/deflate.js';\nimport {deflateCoordinatesArray as _ol_geom_flat_deflate$deflateCoordinatesArray} from './ol/geom/flat/deflate.js';\nimport {deflateMultiCoordinatesArray as _ol_geom_flat_deflate$deflateMultiCoordinatesArray} from './ol/geom/flat/deflate.js';\nimport {flipXY as _ol_geom_flat_flip$flipXY} from './ol/geom/flat/flip.js';\nimport {greatCircleArc as _ol_geom_flat_geodesic$greatCircleArc} from './ol/geom/flat/geodesic.js';\nimport {meridian as _ol_geom_flat_geodesic$meridian} from './ol/geom/flat/geodesic.js';\nimport {parallel as _ol_geom_flat_geodesic$parallel} from './ol/geom/flat/geodesic.js';\nimport {inflateCoordinates as _ol_geom_flat_inflate$inflateCoordinates} from './ol/geom/flat/inflate.js';\nimport {inflateCoordinatesArray as _ol_geom_flat_inflate$inflateCoordinatesArray} from './ol/geom/flat/inflate.js';\nimport {inflateMultiCoordinatesArray as _ol_geom_flat_inflate$inflateMultiCoordinatesArray} from './ol/geom/flat/inflate.js';\nimport {getInteriorPointOfArray as _ol_geom_flat_interiorpoint$getInteriorPointOfArray} from './ol/geom/flat/interiorpoint.js';\nimport {getInteriorPointsOfMultiArray as _ol_geom_flat_interiorpoint$getInteriorPointsOfMultiArray} from './ol/geom/flat/interiorpoint.js';\nimport {interpolatePoint as _ol_geom_flat_interpolate$interpolatePoint} from './ol/geom/flat/interpolate.js';\nimport {lineStringCoordinateAtM as _ol_geom_flat_interpolate$lineStringCoordinateAtM} from './ol/geom/flat/interpolate.js';\nimport {lineStringsCoordinateAtM as _ol_geom_flat_interpolate$lineStringsCoordinateAtM} from './ol/geom/flat/interpolate.js';\nimport {intersectsLineString as _ol_geom_flat_intersectsextent$intersectsLineString} from './ol/geom/flat/intersectsextent.js';\nimport {intersectsLineStringArray as _ol_geom_flat_intersectsextent$intersectsLineStringArray} from './ol/geom/flat/intersectsextent.js';\nimport {intersectsLinearRing as _ol_geom_flat_intersectsextent$intersectsLinearRing} from './ol/geom/flat/intersectsextent.js';\nimport {intersectsLinearRingArray as _ol_geom_flat_intersectsextent$intersectsLinearRingArray} from './ol/geom/flat/intersectsextent.js';\nimport {intersectsLinearRingMultiArray as _ol_geom_flat_intersectsextent$intersectsLinearRingMultiArray} from './ol/geom/flat/intersectsextent.js';\nimport {lineStringLength as _ol_geom_flat_length$lineStringLength} from './ol/geom/flat/length.js';\nimport {linearRingLength as _ol_geom_flat_length$linearRingLength} from './ol/geom/flat/length.js';\nimport {linearRingIsClockwise as _ol_geom_flat_orient$linearRingIsClockwise} from './ol/geom/flat/orient.js';\nimport {linearRingsAreOriented as _ol_geom_flat_orient$linearRingsAreOriented} from './ol/geom/flat/orient.js';\nimport {linearRingssAreOriented as _ol_geom_flat_orient$linearRingssAreOriented} from './ol/geom/flat/orient.js';\nimport {orientLinearRings as _ol_geom_flat_orient$orientLinearRings} from './ol/geom/flat/orient.js';\nimport {orientLinearRingsArray as _ol_geom_flat_orient$orientLinearRingsArray} from './ol/geom/flat/orient.js';\nimport {inflateEnds as _ol_geom_flat_orient$inflateEnds} from './ol/geom/flat/orient.js';\nimport {coordinates as _ol_geom_flat_reverse$coordinates} from './ol/geom/flat/reverse.js';\nimport {forEach as _ol_geom_flat_segments$forEach} from './ol/geom/flat/segments.js';\nimport {simplifyLineString as _ol_geom_flat_simplify$simplifyLineString} from './ol/geom/flat/simplify.js';\nimport {douglasPeucker as _ol_geom_flat_simplify$douglasPeucker} from './ol/geom/flat/simplify.js';\nimport {douglasPeuckerArray as _ol_geom_flat_simplify$douglasPeuckerArray} from './ol/geom/flat/simplify.js';\nimport {douglasPeuckerMultiArray as _ol_geom_flat_simplify$douglasPeuckerMultiArray} from './ol/geom/flat/simplify.js';\nimport {radialDistance as _ol_geom_flat_simplify$radialDistance} from './ol/geom/flat/simplify.js';\nimport {snap as _ol_geom_flat_simplify$snap} from './ol/geom/flat/simplify.js';\nimport {quantize as _ol_geom_flat_simplify$quantize} from './ol/geom/flat/simplify.js';\nimport {quantizeArray as _ol_geom_flat_simplify$quantizeArray} from './ol/geom/flat/simplify.js';\nimport {quantizeMultiArray as _ol_geom_flat_simplify$quantizeMultiArray} from './ol/geom/flat/simplify.js';\nimport {matchingChunk as _ol_geom_flat_straightchunk$matchingChunk} from './ol/geom/flat/straightchunk.js';\nimport {drawTextOnPath as _ol_geom_flat_textpath$drawTextOnPath} from './ol/geom/flat/textpath.js';\nimport {lineStringIsClosed as _ol_geom_flat_topology$lineStringIsClosed} from './ol/geom/flat/topology.js';\nimport {transform2D as _ol_geom_flat_transform$transform2D} from './ol/geom/flat/transform.js';\nimport {rotate as _ol_geom_flat_transform$rotate} from './ol/geom/flat/transform.js';\nimport {scale as _ol_geom_flat_transform$scale} from './ol/geom/flat/transform.js';\nimport {translate as _ol_geom_flat_transform$translate} from './ol/geom/flat/transform.js';\nimport $ol$format$Feature from './ol/format/Feature.js';\nimport {transformGeometryWithOptions as _ol_format_Feature$transformGeometryWithOptions} from './ol/format/Feature.js';\nimport {transformExtentWithOptions as _ol_format_Feature$transformExtentWithOptions} from './ol/format/Feature.js';\nimport $ol$format$GPX from './ol/format/GPX.js';\nimport $ol$format$GeoJSON from './ol/format/GeoJSON.js';\nimport $ol$format$IGC from './ol/format/IGC.js';\nimport $ol$format$JSONFeature from './ol/format/JSONFeature.js';\nimport {getDefaultFillStyle as _ol_format_KML$getDefaultFillStyle} from './ol/format/KML.js';\nimport {getDefaultImageStyle as _ol_format_KML$getDefaultImageStyle} from './ol/format/KML.js';\nimport {getDefaultStrokeStyle as _ol_format_KML$getDefaultStrokeStyle} from './ol/format/KML.js';\nimport {getDefaultTextStyle as _ol_format_KML$getDefaultTextStyle} from './ol/format/KML.js';\nimport {getDefaultStyle as _ol_format_KML$getDefaultStyle} from './ol/format/KML.js';\nimport {getDefaultStyleArray as _ol_format_KML$getDefaultStyleArray} from './ol/format/KML.js';\nimport $ol$format$KML from './ol/format/KML.js';\nimport {readFlatCoordinates as _ol_format_KML$readFlatCoordinates} from './ol/format/KML.js';\nimport $ol$format$MVT from './ol/format/MVT.js';\nimport $ol$format$OSMXML from './ol/format/OSMXML.js';\nimport $ol$format$OWS from './ol/format/OWS.js';\nimport $ol$format$Polyline from './ol/format/Polyline.js';\nimport {encodeDeltas as _ol_format_Polyline$encodeDeltas} from './ol/format/Polyline.js';\nimport {decodeDeltas as _ol_format_Polyline$decodeDeltas} from './ol/format/Polyline.js';\nimport {encodeFloats as _ol_format_Polyline$encodeFloats} from './ol/format/Polyline.js';\nimport {decodeFloats as _ol_format_Polyline$decodeFloats} from './ol/format/Polyline.js';\nimport {encodeSignedIntegers as _ol_format_Polyline$encodeSignedIntegers} from './ol/format/Polyline.js';\nimport {decodeSignedIntegers as _ol_format_Polyline$decodeSignedIntegers} from './ol/format/Polyline.js';\nimport {encodeUnsignedIntegers as _ol_format_Polyline$encodeUnsignedIntegers} from './ol/format/Polyline.js';\nimport {decodeUnsignedIntegers as _ol_format_Polyline$decodeUnsignedIntegers} from './ol/format/Polyline.js';\nimport {encodeUnsignedInteger as _ol_format_Polyline$encodeUnsignedInteger} from './ol/format/Polyline.js';\nimport $ol$format$TextFeature from './ol/format/TextFeature.js';\nimport $ol$format$TopoJSON from './ol/format/TopoJSON.js';\nimport $ol$format$WFS from './ol/format/WFS.js';\nimport {writeFilter as _ol_format_WFS$writeFilter} from './ol/format/WFS.js';\nimport $ol$format$WMSGetFeatureInfo from './ol/format/WMSGetFeatureInfo.js';\nimport $ol$format$WMTSCapabilities from './ol/format/WMTSCapabilities.js';\nimport {readHref as _ol_format_xlink$readHref} from './ol/format/xlink.js';\nimport {readBoolean as _ol_format_xsd$readBoolean} from './ol/format/xsd.js';\nimport {readBooleanString as _ol_format_xsd$readBooleanString} from './ol/format/xsd.js';\nimport {readDateTime as _ol_format_xsd$readDateTime} from './ol/format/xsd.js';\nimport {readDecimal as _ol_format_xsd$readDecimal} from './ol/format/xsd.js';\nimport {readDecimalString as _ol_format_xsd$readDecimalString} from './ol/format/xsd.js';\nimport {readPositiveInteger as _ol_format_xsd$readPositiveInteger} from './ol/format/xsd.js';\nimport {readNonNegativeIntegerString as _ol_format_xsd$readNonNegativeIntegerString} from './ol/format/xsd.js';\nimport {readString as _ol_format_xsd$readString} from './ol/format/xsd.js';\nimport {writeBooleanTextNode as _ol_format_xsd$writeBooleanTextNode} from './ol/format/xsd.js';\nimport {writeCDATASection as _ol_format_xsd$writeCDATASection} from './ol/format/xsd.js';\nimport {writeDateTimeTextNode as _ol_format_xsd$writeDateTimeTextNode} from './ol/format/xsd.js';\nimport {writeDecimalTextNode as _ol_format_xsd$writeDecimalTextNode} from './ol/format/xsd.js';\nimport {writeNonNegativeIntegerTextNode as _ol_format_xsd$writeNonNegativeIntegerTextNode} from './ol/format/xsd.js';\nimport {writeStringTextNode as _ol_format_xsd$writeStringTextNode} from './ol/format/xsd.js';\nimport $ol$events$Event from './ol/events/Event.js';\nimport {stopPropagation as _ol_events_Event$stopPropagation} from './ol/events/Event.js';\nimport {preventDefault as _ol_events_Event$preventDefault} from './ol/events/Event.js';\nimport {SnapEvent as _ol_events_SnapEvent$SnapEvent} from './ol/events/SnapEvent.js';\nimport $ol$events$Target from './ol/events/Target.js';\nimport {all as _ol_events_condition$all} from './ol/events/condition.js';\nimport {altKeyOnly as _ol_events_condition$altKeyOnly} from './ol/events/condition.js';\nimport {altShiftKeysOnly as _ol_events_condition$altShiftKeysOnly} from './ol/events/condition.js';\nimport {focus as _ol_events_condition$focus} from './ol/events/condition.js';\nimport {focusWithTabindex as _ol_events_condition$focusWithTabindex} from './ol/events/condition.js';\nimport {always as _ol_events_condition$always} from './ol/events/condition.js';\nimport {click as _ol_events_condition$click} from './ol/events/condition.js';\nimport {mouseActionButton as _ol_events_condition$mouseActionButton} from './ol/events/condition.js';\nimport {never as _ol_events_condition$never} from './ol/events/condition.js';\nimport {pointerMove as _ol_events_condition$pointerMove} from './ol/events/condition.js';\nimport {singleClick as _ol_events_condition$singleClick} from './ol/events/condition.js';\nimport {doubleClick as _ol_events_condition$doubleClick} from './ol/events/condition.js';\nimport {noModifierKeys as _ol_events_condition$noModifierKeys} from './ol/events/condition.js';\nimport {platformModifierKeyOnly as _ol_events_condition$platformModifierKeyOnly} from './ol/events/condition.js';\nimport {platformModifierKey as _ol_events_condition$platformModifierKey} from './ol/events/condition.js';\nimport {shiftKeyOnly as _ol_events_condition$shiftKeyOnly} from './ol/events/condition.js';\nimport {targetNotEditable as _ol_events_condition$targetNotEditable} from './ol/events/condition.js';\nimport {mouseOnly as _ol_events_condition$mouseOnly} from './ol/events/condition.js';\nimport {touchOnly as _ol_events_condition$touchOnly} from './ol/events/condition.js';\nimport {penOnly as _ol_events_condition$penOnly} from './ol/events/condition.js';\nimport {primaryAction as _ol_events_condition$primaryAction} from './ol/events/condition.js';\nimport $ol$control$Attribution from './ol/control/Attribution.js';\nimport $ol$control$Control from './ol/control/Control.js';\nimport $ol$control$FullScreen from './ol/control/FullScreen.js';\nimport $ol$control$MousePosition from './ol/control/MousePosition.js';\nimport $ol$control$OverviewMap from './ol/control/OverviewMap.js';\nimport $ol$control$Rotate from './ol/control/Rotate.js';\nimport $ol$control$ScaleLine from './ol/control/ScaleLine.js';\nimport $ol$control$Zoom from './ol/control/Zoom.js';\nimport $ol$control$ZoomSlider from './ol/control/ZoomSlider.js';\nimport $ol$control$ZoomToExtent from './ol/control/ZoomToExtent.js';\nimport {defaults as _ol_control_defaults$defaults} from './ol/control/defaults.js';\n\nvar ol = {};\nol.AssertionError = $ol$AssertionError;\nol.Collection = $ol$Collection;\nol.Collection.CollectionEvent = _ol_Collection$CollectionEvent;\nol.DataTile = $ol$DataTile;\nol.DataTile.asArrayLike = _ol_DataTile$asArrayLike;\nol.DataTile.asImageLike = _ol_DataTile$asImageLike;\nol.DataTile.toArray = _ol_DataTile$toArray;\nol.Disposable = $ol$Disposable;\nol.Feature = $ol$Feature;\nol.Feature.createStyleFunction = _ol_Feature$createStyleFunction;\nol.Geolocation = $ol$Geolocation;\nol.Geolocation.GeolocationError = _ol_Geolocation$GeolocationError;\nol.Image = $ol$Image;\nol.Image.listenImage = _ol_Image$listenImage;\nol.ImageBase = $ol$ImageBase;\nol.ImageCanvas = $ol$ImageCanvas;\nol.ImageTile = $ol$ImageTile;\nol.Kinetic = $ol$Kinetic;\nol.Map = $ol$Map;\nol.MapBrowserEvent = $ol$MapBrowserEvent;\nol.MapBrowserEventHandler = $ol$MapBrowserEventHandler;\nol.MapEvent = $ol$MapEvent;\nol.Object = $ol$Object;\nol.Object.ObjectEvent = _ol_Object$ObjectEvent;\nol.Observable = $ol$Observable;\nol.Observable.unByKey = _ol_Observable$unByKey;\nol.Overlay = $ol$Overlay;\nol.Tile = $ol$Tile;\nol.TileCache = $ol$TileCache;\nol.TileQueue = $ol$TileQueue;\nol.TileQueue.getTilePriority = _ol_TileQueue$getTilePriority;\nol.TileRange = $ol$TileRange;\nol.TileRange.createOrUpdate = _ol_TileRange$createOrUpdate;\nol.VectorRenderTile = $ol$VectorRenderTile;\nol.View = $ol$View;\nol.View.createCenterConstraint = _ol_View$createCenterConstraint;\nol.View.createResolutionConstraint = _ol_View$createResolutionConstraint;\nol.View.createRotationConstraint = _ol_View$createRotationConstraint;\nol.View.isNoopAnimation = _ol_View$isNoopAnimation;\nol.array = {};\nol.array.ascending = _ol_array$ascending;\nol.array.binarySearch = _ol_array$binarySearch;\nol.array.descending = _ol_array$descending;\nol.array.equals = _ol_array$equals;\nol.array.extend = _ol_array$extend;\nol.array.isSorted = _ol_array$isSorted;\nol.array.linearFindNearest = _ol_array$linearFindNearest;\nol.array.remove = _ol_array$remove;\nol.array.reverseSubArray = _ol_array$reverseSubArray;\nol.array.stableSort = _ol_array$stableSort;\nol.asserts = {};\nol.asserts.assert = _ol_asserts$assert;\nol.centerconstraint = {};\nol.centerconstraint.createExtent = _ol_centerconstraint$createExtent;\nol.centerconstraint.none = _ol_centerconstraint$none;\nol.color = {};\nol.color.asArray = _ol_color$asArray;\nol.color.asString = _ol_color$asString;\nol.color.fromString = _ol_color$fromString;\nol.color.isStringColor = _ol_color$isStringColor;\nol.color.normalize = _ol_color$normalize;\nol.color.toString = _ol_color$toString;\nol.colorlike = {};\nol.colorlike.asColorLike = _ol_colorlike$asColorLike;\nol.console = {};\nol.console.error = _ol_console$error;\nol.console.log = _ol_console$log;\nol.console.setLevel = _ol_console$setLevel;\nol.console.warn = _ol_console$warn;\nol.control = {};\nol.control.Attribution = $ol$control$Attribution;\nol.control.Control = $ol$control$Control;\nol.control.FullScreen = $ol$control$FullScreen;\nol.control.MousePosition = $ol$control$MousePosition;\nol.control.OverviewMap = $ol$control$OverviewMap;\nol.control.Rotate = $ol$control$Rotate;\nol.control.ScaleLine = $ol$control$ScaleLine;\nol.control.Zoom = $ol$control$Zoom;\nol.control.ZoomSlider = $ol$control$ZoomSlider;\nol.control.ZoomToExtent = $ol$control$ZoomToExtent;\nol.control.defaults = {};\nol.control.defaults.defaults = _ol_control_defaults$defaults;\nol.coordinate = {};\nol.coordinate.add = _ol_coordinate$add;\nol.coordinate.closestOnCircle = _ol_coordinate$closestOnCircle;\nol.coordinate.closestOnSegment = _ol_coordinate$closestOnSegment;\nol.coordinate.createStringXY = _ol_coordinate$createStringXY;\nol.coordinate.degreesToStringHDMS = _ol_coordinate$degreesToStringHDMS;\nol.coordinate.distance = _ol_coordinate$distance;\nol.coordinate.equals = _ol_coordinate$equals;\nol.coordinate.format = _ol_coordinate$format;\nol.coordinate.getWorldsAway = _ol_coordinate$getWorldsAway;\nol.coordinate.rotate = _ol_coordinate$rotate;\nol.coordinate.scale = _ol_coordinate$scale;\nol.coordinate.squaredDistance = _ol_coordinate$squaredDistance;\nol.coordinate.squaredDistanceToSegment = _ol_coordinate$squaredDistanceToSegment;\nol.coordinate.toStringHDMS = _ol_coordinate$toStringHDMS;\nol.coordinate.toStringXY = _ol_coordinate$toStringXY;\nol.coordinate.wrapX = _ol_coordinate$wrapX;\nol.css = {};\nol.css.CLASS_COLLAPSED = _ol_css$CLASS_COLLAPSED;\nol.css.CLASS_CONTROL = _ol_css$CLASS_CONTROL;\nol.css.CLASS_HIDDEN = _ol_css$CLASS_HIDDEN;\nol.css.CLASS_SELECTABLE = _ol_css$CLASS_SELECTABLE;\nol.css.CLASS_UNSELECTABLE = _ol_css$CLASS_UNSELECTABLE;\nol.css.CLASS_UNSUPPORTED = _ol_css$CLASS_UNSUPPORTED;\nol.css.getFontParameters = _ol_css$getFontParameters;\nol.dom = {};\nol.dom.createCanvasContext2D = _ol_dom$createCanvasContext2D;\nol.dom.outerHeight = _ol_dom$outerHeight;\nol.dom.outerWidth = _ol_dom$outerWidth;\nol.dom.releaseCanvas = _ol_dom$releaseCanvas;\nol.dom.removeChildren = _ol_dom$removeChildren;\nol.dom.removeNode = _ol_dom$removeNode;\nol.dom.replaceChildren = _ol_dom$replaceChildren;\nol.dom.replaceNode = _ol_dom$replaceNode;\nol.easing = {};\nol.easing.easeIn = _ol_easing$easeIn;\nol.easing.easeOut = _ol_easing$easeOut;\nol.easing.inAndOut = _ol_easing$inAndOut;\nol.easing.linear = _ol_easing$linear;\nol.easing.upAndDown = _ol_easing$upAndDown;\nol.events = {};\nol.events.Event = $ol$events$Event;\nol.events.Event.preventDefault = _ol_events_Event$preventDefault;\nol.events.Event.stopPropagation = _ol_events_Event$stopPropagation;\nol.events.SnapEvent = {};\nol.events.SnapEvent.SnapEvent = _ol_events_SnapEvent$SnapEvent;\nol.events.Target = $ol$events$Target;\nol.events.condition = {};\nol.events.condition.all = _ol_events_condition$all;\nol.events.condition.altKeyOnly = _ol_events_condition$altKeyOnly;\nol.events.condition.altShiftKeysOnly = _ol_events_condition$altShiftKeysOnly;\nol.events.condition.always = _ol_events_condition$always;\nol.events.condition.click = _ol_events_condition$click;\nol.events.condition.doubleClick = _ol_events_condition$doubleClick;\nol.events.condition.focus = _ol_events_condition$focus;\nol.events.condition.focusWithTabindex = _ol_events_condition$focusWithTabindex;\nol.events.condition.mouseActionButton = _ol_events_condition$mouseActionButton;\nol.events.condition.mouseOnly = _ol_events_condition$mouseOnly;\nol.events.condition.never = _ol_events_condition$never;\nol.events.condition.noModifierKeys = _ol_events_condition$noModifierKeys;\nol.events.condition.penOnly = _ol_events_condition$penOnly;\nol.events.condition.platformModifierKey = _ol_events_condition$platformModifierKey;\nol.events.condition.platformModifierKeyOnly = _ol_events_condition$platformModifierKeyOnly;\nol.events.condition.pointerMove = _ol_events_condition$pointerMove;\nol.events.condition.primaryAction = _ol_events_condition$primaryAction;\nol.events.condition.shiftKeyOnly = _ol_events_condition$shiftKeyOnly;\nol.events.condition.singleClick = _ol_events_condition$singleClick;\nol.events.condition.targetNotEditable = _ol_events_condition$targetNotEditable;\nol.events.condition.touchOnly = _ol_events_condition$touchOnly;\nol.events.listen = _ol_events$listen;\nol.events.listenOnce = _ol_events$listenOnce;\nol.events.unlistenByKey = _ol_events$unlistenByKey;\nol.extent = {};\nol.extent.applyTransform = _ol_extent$applyTransform;\nol.extent.approximatelyEquals = _ol_extent$approximatelyEquals;\nol.extent.boundingExtent = _ol_extent$boundingExtent;\nol.extent.buffer = _ol_extent$buffer;\nol.extent.clone = _ol_extent$clone;\nol.extent.closestSquaredDistanceXY = _ol_extent$closestSquaredDistanceXY;\nol.extent.containsCoordinate = _ol_extent$containsCoordinate;\nol.extent.containsExtent = _ol_extent$containsExtent;\nol.extent.containsXY = _ol_extent$containsXY;\nol.extent.coordinateRelationship = _ol_extent$coordinateRelationship;\nol.extent.createEmpty = _ol_extent$createEmpty;\nol.extent.createOrUpdate = _ol_extent$createOrUpdate;\nol.extent.createOrUpdateEmpty = _ol_extent$createOrUpdateEmpty;\nol.extent.createOrUpdateFromCoordinate = _ol_extent$createOrUpdateFromCoordinate;\nol.extent.createOrUpdateFromCoordinates = _ol_extent$createOrUpdateFromCoordinates;\nol.extent.createOrUpdateFromFlatCoordinates = _ol_extent$createOrUpdateFromFlatCoordinates;\nol.extent.createOrUpdateFromRings = _ol_extent$createOrUpdateFromRings;\nol.extent.equals = _ol_extent$equals;\nol.extent.extend = _ol_extent$extend;\nol.extent.extendCoordinate = _ol_extent$extendCoordinate;\nol.extent.extendCoordinates = _ol_extent$extendCoordinates;\nol.extent.extendFlatCoordinates = _ol_extent$extendFlatCoordinates;\nol.extent.extendRings = _ol_extent$extendRings;\nol.extent.extendXY = _ol_extent$extendXY;\nol.extent.forEachCorner = _ol_extent$forEachCorner;\nol.extent.getArea = _ol_extent$getArea;\nol.extent.getBottomLeft = _ol_extent$getBottomLeft;\nol.extent.getBottomRight = _ol_extent$getBottomRight;\nol.extent.getCenter = _ol_extent$getCenter;\nol.extent.getCorner = _ol_extent$getCorner;\nol.extent.getEnlargedArea = _ol_extent$getEnlargedArea;\nol.extent.getForViewAndSize = _ol_extent$getForViewAndSize;\nol.extent.getHeight = _ol_extent$getHeight;\nol.extent.getIntersection = _ol_extent$getIntersection;\nol.extent.getIntersectionArea = _ol_extent$getIntersectionArea;\nol.extent.getMargin = _ol_extent$getMargin;\nol.extent.getRotatedViewport = _ol_extent$getRotatedViewport;\nol.extent.getSize = _ol_extent$getSize;\nol.extent.getTopLeft = _ol_extent$getTopLeft;\nol.extent.getTopRight = _ol_extent$getTopRight;\nol.extent.getWidth = _ol_extent$getWidth;\nol.extent.intersects = _ol_extent$intersects;\nol.extent.intersectsSegment = _ol_extent$intersectsSegment;\nol.extent.isEmpty = _ol_extent$isEmpty;\nol.extent.returnOrUpdate = _ol_extent$returnOrUpdate;\nol.extent.scaleFromCenter = _ol_extent$scaleFromCenter;\nol.extent.wrapAndSliceX = _ol_extent$wrapAndSliceX;\nol.extent.wrapX = _ol_extent$wrapX;\nol.featureloader = {};\nol.featureloader.loadFeaturesXhr = _ol_featureloader$loadFeaturesXhr;\nol.featureloader.setWithCredentials = _ol_featureloader$setWithCredentials;\nol.featureloader.xhr = _ol_featureloader$xhr;\nol.format = {};\nol.format.Feature = $ol$format$Feature;\nol.format.Feature.transformExtentWithOptions = _ol_format_Feature$transformExtentWithOptions;\nol.format.Feature.transformGeometryWithOptions = _ol_format_Feature$transformGeometryWithOptions;\nol.format.GPX = $ol$format$GPX;\nol.format.GeoJSON = $ol$format$GeoJSON;\nol.format.IGC = $ol$format$IGC;\nol.format.JSONFeature = $ol$format$JSONFeature;\nol.format.KML = $ol$format$KML;\nol.format.KML.getDefaultFillStyle = _ol_format_KML$getDefaultFillStyle;\nol.format.KML.getDefaultImageStyle = _ol_format_KML$getDefaultImageStyle;\nol.format.KML.getDefaultStrokeStyle = _ol_format_KML$getDefaultStrokeStyle;\nol.format.KML.getDefaultStyle = _ol_format_KML$getDefaultStyle;\nol.format.KML.getDefaultStyleArray = _ol_format_KML$getDefaultStyleArray;\nol.format.KML.getDefaultTextStyle = _ol_format_KML$getDefaultTextStyle;\nol.format.KML.readFlatCoordinates = _ol_format_KML$readFlatCoordinates;\nol.format.MVT = $ol$format$MVT;\nol.format.OSMXML = $ol$format$OSMXML;\nol.format.OWS = $ol$format$OWS;\nol.format.Polyline = $ol$format$Polyline;\nol.format.Polyline.decodeDeltas = _ol_format_Polyline$decodeDeltas;\nol.format.Polyline.decodeFloats = _ol_format_Polyline$decodeFloats;\nol.format.Polyline.decodeSignedIntegers = _ol_format_Polyline$decodeSignedIntegers;\nol.format.Polyline.decodeUnsignedIntegers = _ol_format_Polyline$decodeUnsignedIntegers;\nol.format.Polyline.encodeDeltas = _ol_format_Polyline$encodeDeltas;\nol.format.Polyline.encodeFloats = _ol_format_Polyline$encodeFloats;\nol.format.Polyline.encodeSignedIntegers = _ol_format_Polyline$encodeSignedIntegers;\nol.format.Polyline.encodeUnsignedInteger = _ol_format_Polyline$encodeUnsignedInteger;\nol.format.Polyline.encodeUnsignedIntegers = _ol_format_Polyline$encodeUnsignedIntegers;\nol.format.TextFeature = $ol$format$TextFeature;\nol.format.TopoJSON = $ol$format$TopoJSON;\nol.format.WFS = $ol$format$WFS;\nol.format.WFS.writeFilter = _ol_format_WFS$writeFilter;\nol.format.WMSGetFeatureInfo = $ol$format$WMSGetFeatureInfo;\nol.format.WMTSCapabilities = $ol$format$WMTSCapabilities;\nol.format.xlink = {};\nol.format.xlink.readHref = _ol_format_xlink$readHref;\nol.format.xsd = {};\nol.format.xsd.readBoolean = _ol_format_xsd$readBoolean;\nol.format.xsd.readBooleanString = _ol_format_xsd$readBooleanString;\nol.format.xsd.readDateTime = _ol_format_xsd$readDateTime;\nol.format.xsd.readDecimal = _ol_format_xsd$readDecimal;\nol.format.xsd.readDecimalString = _ol_format_xsd$readDecimalString;\nol.format.xsd.readNonNegativeIntegerString = _ol_format_xsd$readNonNegativeIntegerString;\nol.format.xsd.readPositiveInteger = _ol_format_xsd$readPositiveInteger;\nol.format.xsd.readString = _ol_format_xsd$readString;\nol.format.xsd.writeBooleanTextNode = _ol_format_xsd$writeBooleanTextNode;\nol.format.xsd.writeCDATASection = _ol_format_xsd$writeCDATASection;\nol.format.xsd.writeDateTimeTextNode = _ol_format_xsd$writeDateTimeTextNode;\nol.format.xsd.writeDecimalTextNode = _ol_format_xsd$writeDecimalTextNode;\nol.format.xsd.writeNonNegativeIntegerTextNode = _ol_format_xsd$writeNonNegativeIntegerTextNode;\nol.format.xsd.writeStringTextNode = _ol_format_xsd$writeStringTextNode;\nol.functions = {};\nol.functions.FALSE = _ol_functions$FALSE;\nol.functions.TRUE = _ol_functions$TRUE;\nol.functions.VOID = _ol_functions$VOID;\nol.functions.memoizeOne = _ol_functions$memoizeOne;\nol.functions.toPromise = _ol_functions$toPromise;\nol.geom = {};\nol.geom.Circle = $ol$geom$Circle;\nol.geom.Geometry = $ol$geom$Geometry;\nol.geom.GeometryCollection = $ol$geom$GeometryCollection;\nol.geom.LineString = $ol$geom$LineString;\nol.geom.LinearRing = $ol$geom$LinearRing;\nol.geom.MultiLineString = $ol$geom$MultiLineString;\nol.geom.MultiPoint = $ol$geom$MultiPoint;\nol.geom.MultiPolygon = $ol$geom$MultiPolygon;\nol.geom.Point = $ol$geom$Point;\nol.geom.Polygon = $ol$geom$Polygon;\nol.geom.Polygon.circular = _ol_geom_Polygon$circular;\nol.geom.Polygon.fromCircle = _ol_geom_Polygon$fromCircle;\nol.geom.Polygon.fromExtent = _ol_geom_Polygon$fromExtent;\nol.geom.Polygon.makeRegular = _ol_geom_Polygon$makeRegular;\nol.geom.SimpleGeometry = $ol$geom$SimpleGeometry;\nol.geom.SimpleGeometry.getStrideForLayout = _ol_geom_SimpleGeometry$getStrideForLayout;\nol.geom.SimpleGeometry.transformGeom2D = _ol_geom_SimpleGeometry$transformGeom2D;\nol.geom.flat = {};\nol.geom.flat.area = {};\nol.geom.flat.area.linearRing = _ol_geom_flat_area$linearRing;\nol.geom.flat.area.linearRings = _ol_geom_flat_area$linearRings;\nol.geom.flat.area.linearRingss = _ol_geom_flat_area$linearRingss;\nol.geom.flat.center = {};\nol.geom.flat.center.linearRingss = _ol_geom_flat_center$linearRingss;\nol.geom.flat.closest = {};\nol.geom.flat.closest.arrayMaxSquaredDelta = _ol_geom_flat_closest$arrayMaxSquaredDelta;\nol.geom.flat.closest.assignClosestArrayPoint = _ol_geom_flat_closest$assignClosestArrayPoint;\nol.geom.flat.closest.assignClosestMultiArrayPoint = _ol_geom_flat_closest$assignClosestMultiArrayPoint;\nol.geom.flat.closest.assignClosestPoint = _ol_geom_flat_closest$assignClosestPoint;\nol.geom.flat.closest.maxSquaredDelta = _ol_geom_flat_closest$maxSquaredDelta;\nol.geom.flat.closest.multiArrayMaxSquaredDelta = _ol_geom_flat_closest$multiArrayMaxSquaredDelta;\nol.geom.flat.contains = {};\nol.geom.flat.contains.linearRingContainsExtent = _ol_geom_flat_contains$linearRingContainsExtent;\nol.geom.flat.contains.linearRingContainsXY = _ol_geom_flat_contains$linearRingContainsXY;\nol.geom.flat.contains.linearRingsContainsXY = _ol_geom_flat_contains$linearRingsContainsXY;\nol.geom.flat.contains.linearRingssContainsXY = _ol_geom_flat_contains$linearRingssContainsXY;\nol.geom.flat.deflate = {};\nol.geom.flat.deflate.deflateCoordinate = _ol_geom_flat_deflate$deflateCoordinate;\nol.geom.flat.deflate.deflateCoordinates = _ol_geom_flat_deflate$deflateCoordinates;\nol.geom.flat.deflate.deflateCoordinatesArray = _ol_geom_flat_deflate$deflateCoordinatesArray;\nol.geom.flat.deflate.deflateMultiCoordinatesArray = _ol_geom_flat_deflate$deflateMultiCoordinatesArray;\nol.geom.flat.flip = {};\nol.geom.flat.flip.flipXY = _ol_geom_flat_flip$flipXY;\nol.geom.flat.geodesic = {};\nol.geom.flat.geodesic.greatCircleArc = _ol_geom_flat_geodesic$greatCircleArc;\nol.geom.flat.geodesic.meridian = _ol_geom_flat_geodesic$meridian;\nol.geom.flat.geodesic.parallel = _ol_geom_flat_geodesic$parallel;\nol.geom.flat.inflate = {};\nol.geom.flat.inflate.inflateCoordinates = _ol_geom_flat_inflate$inflateCoordinates;\nol.geom.flat.inflate.inflateCoordinatesArray = _ol_geom_flat_inflate$inflateCoordinatesArray;\nol.geom.flat.inflate.inflateMultiCoordinatesArray = _ol_geom_flat_inflate$inflateMultiCoordinatesArray;\nol.geom.flat.interiorpoint = {};\nol.geom.flat.interiorpoint.getInteriorPointOfArray = _ol_geom_flat_interiorpoint$getInteriorPointOfArray;\nol.geom.flat.interiorpoint.getInteriorPointsOfMultiArray = _ol_geom_flat_interiorpoint$getInteriorPointsOfMultiArray;\nol.geom.flat.interpolate = {};\nol.geom.flat.interpolate.interpolatePoint = _ol_geom_flat_interpolate$interpolatePoint;\nol.geom.flat.interpolate.lineStringCoordinateAtM = _ol_geom_flat_interpolate$lineStringCoordinateAtM;\nol.geom.flat.interpolate.lineStringsCoordinateAtM = _ol_geom_flat_interpolate$lineStringsCoordinateAtM;\nol.geom.flat.intersectsextent = {};\nol.geom.flat.intersectsextent.intersectsLineString = _ol_geom_flat_intersectsextent$intersectsLineString;\nol.geom.flat.intersectsextent.intersectsLineStringArray = _ol_geom_flat_intersectsextent$intersectsLineStringArray;\nol.geom.flat.intersectsextent.intersectsLinearRing = _ol_geom_flat_intersectsextent$intersectsLinearRing;\nol.geom.flat.intersectsextent.intersectsLinearRingArray = _ol_geom_flat_intersectsextent$intersectsLinearRingArray;\nol.geom.flat.intersectsextent.intersectsLinearRingMultiArray = _ol_geom_flat_intersectsextent$intersectsLinearRingMultiArray;\nol.geom.flat.length = {};\nol.geom.flat.length.lineStringLength = _ol_geom_flat_length$lineStringLength;\nol.geom.flat.length.linearRingLength = _ol_geom_flat_length$linearRingLength;\nol.geom.flat.orient = {};\nol.geom.flat.orient.inflateEnds = _ol_geom_flat_orient$inflateEnds;\nol.geom.flat.orient.linearRingIsClockwise = _ol_geom_flat_orient$linearRingIsClockwise;\nol.geom.flat.orient.linearRingsAreOriented = _ol_geom_flat_orient$linearRingsAreOriented;\nol.geom.flat.orient.linearRingssAreOriented = _ol_geom_flat_orient$linearRingssAreOriented;\nol.geom.flat.orient.orientLinearRings = _ol_geom_flat_orient$orientLinearRings;\nol.geom.flat.orient.orientLinearRingsArray = _ol_geom_flat_orient$orientLinearRingsArray;\nol.geom.flat.reverse = {};\nol.geom.flat.reverse.coordinates = _ol_geom_flat_reverse$coordinates;\nol.geom.flat.segments = {};\nol.geom.flat.segments.forEach = _ol_geom_flat_segments$forEach;\nol.geom.flat.simplify = {};\nol.geom.flat.simplify.douglasPeucker = _ol_geom_flat_simplify$douglasPeucker;\nol.geom.flat.simplify.douglasPeuckerArray = _ol_geom_flat_simplify$douglasPeuckerArray;\nol.geom.flat.simplify.douglasPeuckerMultiArray = _ol_geom_flat_simplify$douglasPeuckerMultiArray;\nol.geom.flat.simplify.quantize = _ol_geom_flat_simplify$quantize;\nol.geom.flat.simplify.quantizeArray = _ol_geom_flat_simplify$quantizeArray;\nol.geom.flat.simplify.quantizeMultiArray = _ol_geom_flat_simplify$quantizeMultiArray;\nol.geom.flat.simplify.radialDistance = _ol_geom_flat_simplify$radialDistance;\nol.geom.flat.simplify.simplifyLineString = _ol_geom_flat_simplify$simplifyLineString;\nol.geom.flat.simplify.snap = _ol_geom_flat_simplify$snap;\nol.geom.flat.straightchunk = {};\nol.geom.flat.straightchunk.matchingChunk = _ol_geom_flat_straightchunk$matchingChunk;\nol.geom.flat.textpath = {};\nol.geom.flat.textpath.drawTextOnPath = _ol_geom_flat_textpath$drawTextOnPath;\nol.geom.flat.topology = {};\nol.geom.flat.topology.lineStringIsClosed = _ol_geom_flat_topology$lineStringIsClosed;\nol.geom.flat.transform = {};\nol.geom.flat.transform.rotate = _ol_geom_flat_transform$rotate;\nol.geom.flat.transform.scale = _ol_geom_flat_transform$scale;\nol.geom.flat.transform.transform2D = _ol_geom_flat_transform$transform2D;\nol.geom.flat.transform.translate = _ol_geom_flat_transform$translate;\nol.has = {};\nol.has.DEVICE_PIXEL_RATIO = _ol_has$DEVICE_PIXEL_RATIO;\nol.has.FIREFOX = _ol_has$FIREFOX;\nol.has.IMAGE_DECODE = _ol_has$IMAGE_DECODE;\nol.has.MAC = _ol_has$MAC;\nol.has.PASSIVE_EVENT_LISTENERS = _ol_has$PASSIVE_EVENT_LISTENERS;\nol.has.SAFARI = _ol_has$SAFARI;\nol.has.SAFARI_BUG_237906 = _ol_has$SAFARI_BUG_237906;\nol.has.WEBKIT = _ol_has$WEBKIT;\nol.has.WORKER_OFFSCREEN_CANVAS = _ol_has$WORKER_OFFSCREEN_CANVAS;\nol.interaction = {};\nol.interaction.DblClickDragZoom = $ol$interaction$DblClickDragZoom;\nol.interaction.DoubleClickZoom = $ol$interaction$DoubleClickZoom;\nol.interaction.DragAndDrop = $ol$interaction$DragAndDrop;\nol.interaction.DragAndDrop.DragAndDropEvent = _ol_interaction_DragAndDrop$DragAndDropEvent;\nol.interaction.DragBox = $ol$interaction$DragBox;\nol.interaction.DragBox.DragBoxEvent = _ol_interaction_DragBox$DragBoxEvent;\nol.interaction.DragPan = $ol$interaction$DragPan;\nol.interaction.DragRotate = $ol$interaction$DragRotate;\nol.interaction.DragRotateAndZoom = $ol$interaction$DragRotateAndZoom;\nol.interaction.DragZoom = $ol$interaction$DragZoom;\nol.interaction.Draw = $ol$interaction$Draw;\nol.interaction.Draw.DrawEvent = _ol_interaction_Draw$DrawEvent;\nol.interaction.Draw.createBox = _ol_interaction_Draw$createBox;\nol.interaction.Draw.createRegularPolygon = _ol_interaction_Draw$createRegularPolygon;\nol.interaction.Extent = $ol$interaction$Extent;\nol.interaction.Extent.ExtentEvent = _ol_interaction_Extent$ExtentEvent;\nol.interaction.Interaction = $ol$interaction$Interaction;\nol.interaction.Interaction.pan = _ol_interaction_Interaction$pan;\nol.interaction.Interaction.zoomByDelta = _ol_interaction_Interaction$zoomByDelta;\nol.interaction.KeyboardPan = $ol$interaction$KeyboardPan;\nol.interaction.KeyboardZoom = $ol$interaction$KeyboardZoom;\nol.interaction.Link = $ol$interaction$Link;\nol.interaction.Modify = $ol$interaction$Modify;\nol.interaction.Modify.ModifyEvent = _ol_interaction_Modify$ModifyEvent;\nol.interaction.MouseWheelZoom = $ol$interaction$MouseWheelZoom;\nol.interaction.PinchRotate = $ol$interaction$PinchRotate;\nol.interaction.PinchZoom = $ol$interaction$PinchZoom;\nol.interaction.Pointer = $ol$interaction$Pointer;\nol.interaction.Pointer.centroid = _ol_interaction_Pointer$centroid;\nol.interaction.Select = $ol$interaction$Select;\nol.interaction.Select.SelectEvent = _ol_interaction_Select$SelectEvent;\nol.interaction.Snap = $ol$interaction$Snap;\nol.interaction.Translate = $ol$interaction$Translate;\nol.interaction.Translate.TranslateEvent = _ol_interaction_Translate$TranslateEvent;\nol.interaction.defaults = {};\nol.interaction.defaults.defaults = _ol_interaction_defaults$defaults;\nol.layer = {};\nol.layer.Base = $ol$layer$Base;\nol.layer.BaseImage = $ol$layer$BaseImage;\nol.layer.BaseTile = $ol$layer$BaseTile;\nol.layer.BaseVector = $ol$layer$BaseVector;\nol.layer.Graticule = $ol$layer$Graticule;\nol.layer.Group = $ol$layer$Group;\nol.layer.Group.GroupEvent = _ol_layer_Group$GroupEvent;\nol.layer.Heatmap = $ol$layer$Heatmap;\nol.layer.Image = $ol$layer$Image;\nol.layer.Layer = $ol$layer$Layer;\nol.layer.Layer.inView = _ol_layer_Layer$inView;\nol.layer.Tile = $ol$layer$Tile;\nol.layer.Vector = $ol$layer$Vector;\nol.layer.VectorImage = $ol$layer$VectorImage;\nol.loadingstrategy = {};\nol.loadingstrategy.all = _ol_loadingstrategy$all;\nol.loadingstrategy.bbox = _ol_loadingstrategy$bbox;\nol.loadingstrategy.tile = _ol_loadingstrategy$tile;\nol.math = {};\nol.math.ceil = _ol_math$ceil;\nol.math.clamp = _ol_math$clamp;\nol.math.floor = _ol_math$floor;\nol.math.lerp = _ol_math$lerp;\nol.math.modulo = _ol_math$modulo;\nol.math.round = _ol_math$round;\nol.math.solveLinearSystem = _ol_math$solveLinearSystem;\nol.math.squaredDistance = _ol_math$squaredDistance;\nol.math.squaredSegmentDistance = _ol_math$squaredSegmentDistance;\nol.math.toDegrees = _ol_math$toDegrees;\nol.math.toFixed = _ol_math$toFixed;\nol.math.toRadians = _ol_math$toRadians;\nol.net = {};\nol.net.ClientError = _ol_net$ClientError;\nol.net.ResponseError = _ol_net$ResponseError;\nol.net.getJSON = _ol_net$getJSON;\nol.net.jsonp = _ol_net$jsonp;\nol.net.overrideXHR = _ol_net$overrideXHR;\nol.net.resolveUrl = _ol_net$resolveUrl;\nol.net.restoreXHR = _ol_net$restoreXHR;\nol.obj = {};\nol.obj.clear = _ol_obj$clear;\nol.obj.isEmpty = _ol_obj$isEmpty;\nol.proj = {};\nol.proj.Projection = $ol$proj$Projection;\nol.proj.Units = {};\nol.proj.Units.METERS_PER_UNIT = _ol_proj_Units$METERS_PER_UNIT;\nol.proj.Units.fromCode = _ol_proj_Units$fromCode;\nol.proj.addCommon = _ol_proj$addCommon;\nol.proj.addCoordinateTransforms = _ol_proj$addCoordinateTransforms;\nol.proj.addEquivalentProjections = _ol_proj$addEquivalentProjections;\nol.proj.addEquivalentTransforms = _ol_proj$addEquivalentTransforms;\nol.proj.addProjection = _ol_proj$addProjection;\nol.proj.addProjections = _ol_proj$addProjections;\nol.proj.clearAllProjections = _ol_proj$clearAllProjections;\nol.proj.clearUserProjection = _ol_proj$clearUserProjection;\nol.proj.cloneTransform = _ol_proj$cloneTransform;\nol.proj.createProjection = _ol_proj$createProjection;\nol.proj.createSafeCoordinateTransform = _ol_proj$createSafeCoordinateTransform;\nol.proj.createTransformFromCoordinateTransform = _ol_proj$createTransformFromCoordinateTransform;\nol.proj.disableCoordinateWarning = _ol_proj$disableCoordinateWarning;\nol.proj.epsg3857 = {};\nol.proj.epsg3857.EXTENT = _ol_proj_epsg3857$EXTENT;\nol.proj.epsg3857.HALF_SIZE = _ol_proj_epsg3857$HALF_SIZE;\nol.proj.epsg3857.MAX_SAFE_Y = _ol_proj_epsg3857$MAX_SAFE_Y;\nol.proj.epsg3857.PROJECTIONS = _ol_proj_epsg3857$PROJECTIONS;\nol.proj.epsg3857.RADIUS = _ol_proj_epsg3857$RADIUS;\nol.proj.epsg3857.WORLD_EXTENT = _ol_proj_epsg3857$WORLD_EXTENT;\nol.proj.epsg3857.fromEPSG4326 = _ol_proj_epsg3857$fromEPSG4326;\nol.proj.epsg3857.toEPSG4326 = _ol_proj_epsg3857$toEPSG4326;\nol.proj.epsg4326 = {};\nol.proj.epsg4326.EXTENT = _ol_proj_epsg4326$EXTENT;\nol.proj.epsg4326.METERS_PER_UNIT = _ol_proj_epsg4326$METERS_PER_UNIT;\nol.proj.epsg4326.PROJECTIONS = _ol_proj_epsg4326$PROJECTIONS;\nol.proj.epsg4326.RADIUS = _ol_proj_epsg4326$RADIUS;\nol.proj.equivalent = _ol_proj$equivalent;\nol.proj.fromLonLat = _ol_proj$fromLonLat;\nol.proj.fromUserCoordinate = _ol_proj$fromUserCoordinate;\nol.proj.fromUserExtent = _ol_proj$fromUserExtent;\nol.proj.fromUserResolution = _ol_proj$fromUserResolution;\nol.proj.get = _ol_proj$get;\nol.proj.getPointResolution = _ol_proj$getPointResolution;\nol.proj.getTransform = _ol_proj$getTransform;\nol.proj.getTransformFromProjections = _ol_proj$getTransformFromProjections;\nol.proj.getUserProjection = _ol_proj$getUserProjection;\nol.proj.identityTransform = _ol_proj$identityTransform;\nol.proj.proj4 = {};\nol.proj.proj4.epsgLookupMapTiler = _ol_proj_proj4$epsgLookupMapTiler;\nol.proj.proj4.fromEPSGCode = _ol_proj_proj4$fromEPSGCode;\nol.proj.proj4.getEPSGLookup = _ol_proj_proj4$getEPSGLookup;\nol.proj.proj4.isRegistered = _ol_proj_proj4$isRegistered;\nol.proj.proj4.register = _ol_proj_proj4$register;\nol.proj.proj4.setEPSGLookup = _ol_proj_proj4$setEPSGLookup;\nol.proj.proj4.unregister = _ol_proj_proj4$unregister;\nol.proj.projections = {};\nol.proj.projections.add = _ol_proj_projections$add;\nol.proj.projections.clear = _ol_proj_projections$clear;\nol.proj.projections.get = _ol_proj_projections$get;\nol.proj.setUserProjection = _ol_proj$setUserProjection;\nol.proj.toLonLat = _ol_proj$toLonLat;\nol.proj.toUserCoordinate = _ol_proj$toUserCoordinate;\nol.proj.toUserExtent = _ol_proj$toUserExtent;\nol.proj.toUserResolution = _ol_proj$toUserResolution;\nol.proj.transform = _ol_proj$transform;\nol.proj.transformExtent = _ol_proj$transformExtent;\nol.proj.transformWithProjections = _ol_proj$transformWithProjections;\nol.proj.transforms = {};\nol.proj.transforms.add = _ol_proj_transforms$add;\nol.proj.transforms.clear = _ol_proj_transforms$clear;\nol.proj.transforms.get = _ol_proj_transforms$get;\nol.proj.transforms.remove = _ol_proj_transforms$remove;\nol.proj.useGeographic = _ol_proj$useGeographic;\nol.render = {};\nol.render.Box = $ol$render$Box;\nol.render.Event = $ol$render$Event;\nol.render.Feature = $ol$render$Feature;\nol.render.Feature.toFeature = _ol_render_Feature$toFeature;\nol.render.Feature.toGeometry = _ol_render_Feature$toGeometry;\nol.render.VectorContext = $ol$render$VectorContext;\nol.render.canvas = {};\nol.render.canvas.Builder = $ol$render$canvas$Builder;\nol.render.canvas.BuilderGroup = $ol$render$canvas$BuilderGroup;\nol.render.canvas.Executor = $ol$render$canvas$Executor;\nol.render.canvas.ExecutorGroup = $ol$render$canvas$ExecutorGroup;\nol.render.canvas.ExecutorGroup.getPixelIndexArray = _ol_render_canvas_ExecutorGroup$getPixelIndexArray;\nol.render.canvas.ImageBuilder = $ol$render$canvas$ImageBuilder;\nol.render.canvas.Immediate = $ol$render$canvas$Immediate;\nol.render.canvas.Instruction = {};\nol.render.canvas.Instruction.beginPathInstruction = _ol_render_canvas_Instruction$beginPathInstruction;\nol.render.canvas.Instruction.closePathInstruction = _ol_render_canvas_Instruction$closePathInstruction;\nol.render.canvas.Instruction.fillInstruction = _ol_render_canvas_Instruction$fillInstruction;\nol.render.canvas.Instruction.strokeInstruction = _ol_render_canvas_Instruction$strokeInstruction;\nol.render.canvas.LineStringBuilder = $ol$render$canvas$LineStringBuilder;\nol.render.canvas.PolygonBuilder = $ol$render$canvas$PolygonBuilder;\nol.render.canvas.TextBuilder = $ol$render$canvas$TextBuilder;\nol.render.canvas.TextBuilder.TEXT_ALIGN = _ol_render_canvas_TextBuilder$TEXT_ALIGN;\nol.render.canvas.checkedFonts = _ol_render_canvas$checkedFonts;\nol.render.canvas.defaultFillStyle = _ol_render_canvas$defaultFillStyle;\nol.render.canvas.defaultFont = _ol_render_canvas$defaultFont;\nol.render.canvas.defaultLineCap = _ol_render_canvas$defaultLineCap;\nol.render.canvas.defaultLineDash = _ol_render_canvas$defaultLineDash;\nol.render.canvas.defaultLineDashOffset = _ol_render_canvas$defaultLineDashOffset;\nol.render.canvas.defaultLineJoin = _ol_render_canvas$defaultLineJoin;\nol.render.canvas.defaultLineWidth = _ol_render_canvas$defaultLineWidth;\nol.render.canvas.defaultMiterLimit = _ol_render_canvas$defaultMiterLimit;\nol.render.canvas.defaultPadding = _ol_render_canvas$defaultPadding;\nol.render.canvas.defaultStrokeStyle = _ol_render_canvas$defaultStrokeStyle;\nol.render.canvas.defaultTextAlign = _ol_render_canvas$defaultTextAlign;\nol.render.canvas.defaultTextBaseline = _ol_render_canvas$defaultTextBaseline;\nol.render.canvas.drawImageOrLabel = _ol_render_canvas$drawImageOrLabel;\nol.render.canvas.getTextDimensions = _ol_render_canvas$getTextDimensions;\nol.render.canvas.hitdetect = {};\nol.render.canvas.hitdetect.HIT_DETECT_RESOLUTION = _ol_render_canvas_hitdetect$HIT_DETECT_RESOLUTION;\nol.render.canvas.hitdetect.createHitDetectionImageData = _ol_render_canvas_hitdetect$createHitDetectionImageData;\nol.render.canvas.hitdetect.hitDetect = _ol_render_canvas_hitdetect$hitDetect;\nol.render.canvas.measureAndCacheTextWidth = _ol_render_canvas$measureAndCacheTextWidth;\nol.render.canvas.measureTextHeight = _ol_render_canvas$measureTextHeight;\nol.render.canvas.measureTextWidth = _ol_render_canvas$measureTextWidth;\nol.render.canvas.registerFont = _ol_render_canvas$registerFont;\nol.render.canvas.rotateAtOffset = _ol_render_canvas$rotateAtOffset;\nol.render.canvas.textHeights = _ol_render_canvas$textHeights;\nol.render.getRenderPixel = _ol_render$getRenderPixel;\nol.render.getVectorContext = _ol_render$getVectorContext;\nol.render.toContext = _ol_render$toContext;\nol.renderer = {};\nol.renderer.Composite = $ol$renderer$Composite;\nol.renderer.Layer = $ol$renderer$Layer;\nol.renderer.Map = $ol$renderer$Map;\nol.renderer.canvas = {};\nol.renderer.canvas.ImageLayer = $ol$renderer$canvas$ImageLayer;\nol.renderer.canvas.Layer = $ol$renderer$canvas$Layer;\nol.renderer.canvas.Layer.canvasPool = _ol_renderer_canvas_Layer$canvasPool;\nol.renderer.canvas.TileLayer = $ol$renderer$canvas$TileLayer;\nol.renderer.canvas.VectorImageLayer = $ol$renderer$canvas$VectorImageLayer;\nol.renderer.canvas.VectorLayer = $ol$renderer$canvas$VectorLayer;\nol.renderer.vector = {};\nol.renderer.vector.defaultOrder = _ol_renderer_vector$defaultOrder;\nol.renderer.vector.getSquaredTolerance = _ol_renderer_vector$getSquaredTolerance;\nol.renderer.vector.getTolerance = _ol_renderer_vector$getTolerance;\nol.renderer.vector.renderFeature = _ol_renderer_vector$renderFeature;\nol.reproj = {};\nol.reproj.DataTile = $ol$reproj$DataTile;\nol.reproj.Image = $ol$reproj$Image;\nol.reproj.Tile = $ol$reproj$Tile;\nol.reproj.Triangulation = $ol$reproj$Triangulation;\nol.reproj.calculateSourceExtentResolution = _ol_reproj$calculateSourceExtentResolution;\nol.reproj.calculateSourceResolution = _ol_reproj$calculateSourceResolution;\nol.reproj.canvasPool = _ol_reproj$canvasPool;\nol.reproj.common = {};\nol.reproj.common.ERROR_THRESHOLD = _ol_reproj_common$ERROR_THRESHOLD;\nol.reproj.render = _ol_reproj$render;\nol.resolutionconstraint = {};\nol.resolutionconstraint.createMinMaxResolution = _ol_resolutionconstraint$createMinMaxResolution;\nol.resolutionconstraint.createSnapToPower = _ol_resolutionconstraint$createSnapToPower;\nol.resolutionconstraint.createSnapToResolutions = _ol_resolutionconstraint$createSnapToResolutions;\nol.rotationconstraint = {};\nol.rotationconstraint.createSnapToN = _ol_rotationconstraint$createSnapToN;\nol.rotationconstraint.createSnapToZero = _ol_rotationconstraint$createSnapToZero;\nol.rotationconstraint.disable = _ol_rotationconstraint$disable;\nol.rotationconstraint.none = _ol_rotationconstraint$none;\nol.size = {};\nol.size.buffer = _ol_size$buffer;\nol.size.hasArea = _ol_size$hasArea;\nol.size.scale = _ol_size$scale;\nol.size.toSize = _ol_size$toSize;\nol.source = {};\nol.source.BingMaps = $ol$source$BingMaps;\nol.source.BingMaps.quadKey = _ol_source_BingMaps$quadKey;\nol.source.Cluster = $ol$source$Cluster;\nol.source.DataTile = $ol$source$DataTile;\nol.source.Image = $ol$source$Image;\nol.source.Image.ImageSourceEvent = _ol_source_Image$ImageSourceEvent;\nol.source.Image.defaultImageLoadFunction = _ol_source_Image$defaultImageLoadFunction;\nol.source.ImageArcGISRest = $ol$source$ImageArcGISRest;\nol.source.ImageCanvas = $ol$source$ImageCanvas;\nol.source.ImageStatic = $ol$source$ImageStatic;\nol.source.ImageWMS = $ol$source$ImageWMS;\nol.source.OGCMapTile = $ol$source$OGCMapTile;\nol.source.OSM = $ol$source$OSM;\nol.source.OSM.ATTRIBUTION = _ol_source_OSM$ATTRIBUTION;\nol.source.Raster = $ol$source$Raster;\nol.source.Raster.Processor = _ol_source_Raster$Processor;\nol.source.Raster.RasterSourceEvent = _ol_source_Raster$RasterSourceEvent;\nol.source.Raster.newImageData = _ol_source_Raster$newImageData;\nol.source.Source = $ol$source$Source;\nol.source.Stamen = $ol$source$Stamen;\nol.source.Tile = $ol$source$Tile;\nol.source.Tile.TileSourceEvent = _ol_source_Tile$TileSourceEvent;\nol.source.TileArcGISRest = $ol$source$TileArcGISRest;\nol.source.TileDebug = $ol$source$TileDebug;\nol.source.TileImage = $ol$source$TileImage;\nol.source.TileJSON = $ol$source$TileJSON;\nol.source.TileWMS = $ol$source$TileWMS;\nol.source.UTFGrid = $ol$source$UTFGrid;\nol.source.UTFGrid.CustomTile = _ol_source_UTFGrid$CustomTile;\nol.source.UrlTile = $ol$source$UrlTile;\nol.source.Vector = $ol$source$Vector;\nol.source.Vector.VectorSourceEvent = _ol_source_Vector$VectorSourceEvent;\nol.source.WMTS = $ol$source$WMTS;\nol.source.WMTS.optionsFromCapabilities = _ol_source_WMTS$optionsFromCapabilities;\nol.source.XYZ = $ol$source$XYZ;\nol.source.common = {};\nol.source.common.DEFAULT_WMS_VERSION = _ol_source_common$DEFAULT_WMS_VERSION;\nol.source.ogcTileUtil = {};\nol.source.ogcTileUtil.getMapTileUrlTemplate = _ol_source_ogcTileUtil$getMapTileUrlTemplate;\nol.source.ogcTileUtil.getTileSetInfo = _ol_source_ogcTileUtil$getTileSetInfo;\nol.source.ogcTileUtil.getVectorTileUrlTemplate = _ol_source_ogcTileUtil$getVectorTileUrlTemplate;\nol.source.sourcesFromTileGrid = _ol_source$sourcesFromTileGrid;\nol.source.wms = {};\nol.source.wms.DEFAULT_VERSION = _ol_source_wms$DEFAULT_VERSION;\nol.sphere = {};\nol.sphere.DEFAULT_RADIUS = _ol_sphere$DEFAULT_RADIUS;\nol.sphere.getArea = _ol_sphere$getArea;\nol.sphere.getDistance = _ol_sphere$getDistance;\nol.sphere.getLength = _ol_sphere$getLength;\nol.sphere.offset = _ol_sphere$offset;\nol.string = {};\nol.string.compareVersions = _ol_string$compareVersions;\nol.string.padNumber = _ol_string$padNumber;\nol.structs = {};\nol.structs.LRUCache = $ol$structs$LRUCache;\nol.structs.LinkedList = $ol$structs$LinkedList;\nol.structs.PriorityQueue = $ol$structs$PriorityQueue;\nol.structs.PriorityQueue.DROP = _ol_structs_PriorityQueue$DROP;\nol.structs.RBush = $ol$structs$RBush;\nol.style = {};\nol.style.Circle = $ol$style$Circle;\nol.style.Fill = $ol$style$Fill;\nol.style.Icon = $ol$style$Icon;\nol.style.IconImage = $ol$style$IconImage;\nol.style.IconImage.get = _ol_style_IconImage$get;\nol.style.IconImageCache = $ol$style$IconImageCache;\nol.style.IconImageCache.shared = _ol_style_IconImageCache$shared;\nol.style.Image = $ol$style$Image;\nol.style.RegularShape = $ol$style$RegularShape;\nol.style.Stroke = $ol$style$Stroke;\nol.style.Style = $ol$style$Style;\nol.style.Style.createDefaultStyle = _ol_style_Style$createDefaultStyle;\nol.style.Style.createEditingStyle = _ol_style_Style$createEditingStyle;\nol.style.Style.toFunction = _ol_style_Style$toFunction;\nol.style.Text = $ol$style$Text;\nol.style.expressions = {};\nol.style.expressions.Operators = _ol_style_expressions$Operators;\nol.style.expressions.PALETTE_TEXTURE_ARRAY = _ol_style_expressions$PALETTE_TEXTURE_ARRAY;\nol.style.expressions.arrayToGlsl = _ol_style_expressions$arrayToGlsl;\nol.style.expressions.colorToGlsl = _ol_style_expressions$colorToGlsl;\nol.style.expressions.expressionToGlsl = _ol_style_expressions$expressionToGlsl;\nol.style.expressions.getStringNumberEquivalent = _ol_style_expressions$getStringNumberEquivalent;\nol.style.expressions.getValueType = _ol_style_expressions$getValueType;\nol.style.expressions.isTypeUnique = _ol_style_expressions$isTypeUnique;\nol.style.expressions.numberToGlsl = _ol_style_expressions$numberToGlsl;\nol.style.expressions.stringToGlsl = _ol_style_expressions$stringToGlsl;\nol.style.expressions.uniformNameForVariable = _ol_style_expressions$uniformNameForVariable;\nol.style.flat = {};\nol.style.flat.createDefaultStyle = _ol_style_flat$createDefaultStyle;\nol.style.flat.toStyle = _ol_style_flat$toStyle;\nol.tilecoord = {};\nol.tilecoord.createOrUpdate = _ol_tilecoord$createOrUpdate;\nol.tilecoord.fromKey = _ol_tilecoord$fromKey;\nol.tilecoord.getCacheKeyForTileKey = _ol_tilecoord$getCacheKeyForTileKey;\nol.tilecoord.getKey = _ol_tilecoord$getKey;\nol.tilecoord.getKeyZXY = _ol_tilecoord$getKeyZXY;\nol.tilecoord.hash = _ol_tilecoord$hash;\nol.tilecoord.withinExtentAndZ = _ol_tilecoord$withinExtentAndZ;\nol.tilegrid = {};\nol.tilegrid.TileGrid = $ol$tilegrid$TileGrid;\nol.tilegrid.WMTS = $ol$tilegrid$WMTS;\nol.tilegrid.WMTS.createFromCapabilitiesMatrixSet = _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet;\nol.tilegrid.common = {};\nol.tilegrid.common.DEFAULT_MAX_ZOOM = _ol_tilegrid_common$DEFAULT_MAX_ZOOM;\nol.tilegrid.common.DEFAULT_TILE_SIZE = _ol_tilegrid_common$DEFAULT_TILE_SIZE;\nol.tilegrid.createForExtent = _ol_tilegrid$createForExtent;\nol.tilegrid.createForProjection = _ol_tilegrid$createForProjection;\nol.tilegrid.createXYZ = _ol_tilegrid$createXYZ;\nol.tilegrid.extentFromProjection = _ol_tilegrid$extentFromProjection;\nol.tilegrid.getForProjection = _ol_tilegrid$getForProjection;\nol.tilegrid.wrapX = _ol_tilegrid$wrapX;\nol.tileurlfunction = {};\nol.tileurlfunction.createFromTemplate = _ol_tileurlfunction$createFromTemplate;\nol.tileurlfunction.createFromTemplates = _ol_tileurlfunction$createFromTemplates;\nol.tileurlfunction.createFromTileUrlFunctions = _ol_tileurlfunction$createFromTileUrlFunctions;\nol.tileurlfunction.expandUrl = _ol_tileurlfunction$expandUrl;\nol.tileurlfunction.nullTileUrlFunction = _ol_tileurlfunction$nullTileUrlFunction;\nol.transform = {};\nol.transform.apply = _ol_transform$apply;\nol.transform.compose = _ol_transform$compose;\nol.transform.composeCssTransform = _ol_transform$composeCssTransform;\nol.transform.create = _ol_transform$create;\nol.transform.determinant = _ol_transform$determinant;\nol.transform.invert = _ol_transform$invert;\nol.transform.makeInverse = _ol_transform$makeInverse;\nol.transform.makeScale = _ol_transform$makeScale;\nol.transform.multiply = _ol_transform$multiply;\nol.transform.reset = _ol_transform$reset;\nol.transform.rotate = _ol_transform$rotate;\nol.transform.scale = _ol_transform$scale;\nol.transform.set = _ol_transform$set;\nol.transform.setFromArray = _ol_transform$setFromArray;\nol.transform.toString = _ol_transform$toString;\nol.transform.translate = _ol_transform$translate;\nol.uri = {};\nol.uri.appendParams = _ol_uri$appendParams;\nol.util = {};\nol.util.VERSION = _ol_util$VERSION;\nol.util.abstract = _ol_util$abstract;\nol.util.getUid = _ol_util$getUid;\nol.vec = {};\nol.vec.mat4 = {};\nol.vec.mat4.create = _ol_vec_mat4$create;\nol.vec.mat4.fromTransform = _ol_vec_mat4$fromTransform;\nol.xml = {};\nol.xml.OBJECT_PROPERTY_NODE_FACTORY = _ol_xml$OBJECT_PROPERTY_NODE_FACTORY;\nol.xml.XML_SCHEMA_INSTANCE_URI = _ol_xml$XML_SCHEMA_INSTANCE_URI;\nol.xml.createElementNS = _ol_xml$createElementNS;\nol.xml.getAllTextContent = _ol_xml$getAllTextContent;\nol.xml.getAllTextContent_ = _ol_xml$getAllTextContent_;\nol.xml.getAttributeNS = _ol_xml$getAttributeNS;\nol.xml.getDocument = _ol_xml$getDocument;\nol.xml.getXMLSerializer = _ol_xml$getXMLSerializer;\nol.xml.isDocument = _ol_xml$isDocument;\nol.xml.makeArrayExtender = _ol_xml$makeArrayExtender;\nol.xml.makeArrayPusher = _ol_xml$makeArrayPusher;\nol.xml.makeArraySerializer = _ol_xml$makeArraySerializer;\nol.xml.makeChildAppender = _ol_xml$makeChildAppender;\nol.xml.makeObjectPropertyPusher = _ol_xml$makeObjectPropertyPusher;\nol.xml.makeObjectPropertySetter = _ol_xml$makeObjectPropertySetter;\nol.xml.makeReplacer = _ol_xml$makeReplacer;\nol.xml.makeSequence = _ol_xml$makeSequence;\nol.xml.makeSimpleNodeFactory = _ol_xml$makeSimpleNodeFactory;\nol.xml.makeStructureNS = _ol_xml$makeStructureNS;\nol.xml.parse = _ol_xml$parse;\nol.xml.parseNode = _ol_xml$parseNode;\nol.xml.pushParseAndPop = _ol_xml$pushParseAndPop;\nol.xml.pushSerializeAndPop = _ol_xml$pushSerializeAndPop;\nol.xml.registerDocument = _ol_xml$registerDocument;\nol.xml.registerXMLSerializer = _ol_xml$registerXMLSerializer;\nol.xml.serialize = _ol_xml$serialize;\n\nexport default ol;","/**\n * @module ol/geom/flat/topology\n */\nimport {linearRing as linearRingArea} from './area.js';\n\n/**\n * Check if the linestring is a boundary.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} The linestring is a boundary.\n */\nexport function lineStringIsClosed(flatCoordinates, offset, end, stride) {\n  const lastCoord = end - stride;\n  if (\n    flatCoordinates[offset] === flatCoordinates[lastCoord] &&\n    flatCoordinates[offset + 1] === flatCoordinates[lastCoord + 1] &&\n    (end - offset) / stride > 3\n  ) {\n    return !!linearRingArea(flatCoordinates, offset, end, stride);\n  }\n  return false;\n}\n","/**\n * @module ol/source\n */\n\nimport LRUCache from './structs/LRUCache.js';\nimport {getIntersection} from './extent.js';\n\nexport {default as BingMaps} from './source/BingMaps.js';\nexport {default as CartoDB} from './source/CartoDB.js';\nexport {default as Cluster} from './source/Cluster.js';\nexport {default as DataTile} from './source/DataTile.js';\nexport {default as GeoTIFF} from './source/GeoTIFF.js';\nexport {default as IIIF} from './source/IIIF.js';\nexport {default as Image} from './source/Image.js';\nexport {default as ImageArcGISRest} from './source/ImageArcGISRest.js';\nexport {default as ImageCanvas} from './source/ImageCanvas.js';\nexport {default as ImageMapGuide} from './source/ImageMapGuide.js';\nexport {default as ImageStatic} from './source/ImageStatic.js';\nexport {default as ImageWMS} from './source/ImageWMS.js';\nexport {default as OGCMapTile} from './source/OGCMapTile.js';\nexport {default as OGCVectorTile} from './source/OGCVectorTile.js';\nexport {default as OSM} from './source/OSM.js';\nexport {default as Raster} from './source/Raster.js';\nexport {default as Source} from './source/Source.js';\nexport {default as Stamen} from './source/Stamen.js';\nexport {default as Tile} from './source/Tile.js';\nexport {default as TileArcGISRest} from './source/TileArcGISRest.js';\nexport {default as TileDebug} from './source/TileDebug.js';\nexport {default as TileImage} from './source/TileImage.js';\nexport {default as TileJSON} from './source/TileJSON.js';\nexport {default as TileWMS} from './source/TileWMS.js';\nexport {default as UrlTile} from './source/UrlTile.js';\nexport {default as UTFGrid} from './source/UTFGrid.js';\nexport {default as Vector} from './source/Vector.js';\nexport {default as VectorTile} from './source/VectorTile.js';\nexport {default as WMTS} from './source/WMTS.js';\nexport {default as XYZ} from './source/XYZ.js';\nexport {default as Zoomify} from './source/Zoomify.js';\n\n/**\n * Creates a sources function from a tile grid. This function can be used as value for the\n * `sources` property of the {@link module:ol/layer/Layer~Layer} subclasses that support it.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @param {function(import(\"./tilecoord.js\").TileCoord): import(\"./source/Source.js\").default} factory Source factory.\n * This function takes a {@link module:ol/tilecoord~TileCoord} as argument and is expected to return a\n * {@link module:ol/source/Source~Source}. **Note**: The returned sources should have a tile grid with\n * a limited set of resolutions, matching the resolution range of a single zoom level of the pyramid\n * `tileGrid` that `sourcesFromTileGrid` was called with.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./source/Source.js\").default>} Sources function.\n * @api\n */\nexport function sourcesFromTileGrid(tileGrid, factory) {\n  const sourceCache = new LRUCache(32);\n  const tileGridExtent = tileGrid.getExtent();\n  return function (extent, resolution) {\n    sourceCache.expireCache();\n    if (tileGridExtent) {\n      extent = getIntersection(tileGridExtent, extent);\n    }\n    const z = tileGrid.getZForResolution(resolution);\n    const wantedSources = [];\n    tileGrid.forEachTileCoord(extent, z, (tileCoord) => {\n      const key = tileCoord.toString();\n      if (!sourceCache.containsKey(key)) {\n        const source = factory(tileCoord);\n        sourceCache.set(key, source);\n      }\n      wantedSources.push(sourceCache.get(key));\n    });\n    return wantedSources;\n  };\n}\n"],"names":["messages","AssertionError","Error","constructor","code","message","super","this","name","$ol$AssertionError","stopPropagation","evt","$ol$events$Event","type","propagationStopped","defaultPrevented","target","preventDefault","ObjectEventType","$ol$Disposable","disposed","dispose","disposeInternal","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","length","found","a","b","linearFindNearest","arr","direction","n","i","candidate","reverseSubArray","begin","end","tmp","extend","data","extension","Array","isArray","equals","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","index","res","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","called","nextArgs","prototype","slice","call","arguments","arrayEquals","apply","toPromise","getter","value","err","Promise","reject","resolve","promiseGetter","clear","object","property","isEmpty","$ol$events$Target","Disposable","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","push","dispatchEvent","event","isString","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","Object","keys","indexOf","splice","EventType$1","listen","thisArg","once","bind","originalListener","eventsKey","listenOnce","unlistenByKey","key","Observable","EventTarget","on","un","revision_","changed","EventType","getRevision","onInternal","len","onceInternal","ol_key","unInternal","unByKey","$ol$Observable","abstract","uidCounter_","getUid","obj","ol_uid","String","ObjectEvent","oldValue","$ol$Object","values","values_","setProperties","get","hasOwnProperty","getKeys","getProperties","assign","hasProperties","notify","eventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","CollectionEventType","Property","CollectionEvent","element","Collection","BaseObject","array","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","forEach","f","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","except","TileState","easeIn","t","Math","pow","easeOut","inAndOut","linear","$ol$Tile","tileCoord","state","interimTile","transition_","transition","transitionStarts_","interpolate","release","setState","getKey","getInterimTile","tile","getState","refreshInterimChain","getTileCoord","load","getAlpha","id","time","start","delta","inTransition","endTransition","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","SAFARI_BUG_237906","test","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","PASSIVE_EVENT_LISTENERS","passive","defineProperty","window","error","createCanvasContext2D","width","height","canvasPool","settings","canvas","shift","document","createElement","getContext","releaseCanvas","context","clearRect","outerWidth","offsetWidth","style","getComputedStyle","parseInt","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","insertBefore","appendChild","asImageLike","HTMLCanvasElement","HTMLVideoElement","asArrayLike","Uint8Array","Uint8ClampedArray","Float32Array","DataView","sharedContext","toArray","image","willReadFrequently","drawImage","getImageData","defaultSize","$ol$DataTile","Tile","loader_","loader","data_","error_","size_","size","getSize","imageData","getData","getError","then","catch","assert","assertion","errorCode","Feature","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","createStyleFunction","setId","styles","$ol$Feature","tmp_","create","reset","transform","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","d","e","setFromArray","coordinate","x","y","rotate","angle","cos","sin","scale","makeScale","translate","dx","dy","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","det","determinant","mat","transformStringDiv","toString","transformString","join","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","buffer","dest","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","Infinity","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","approximatelyEquals","tolerance","abs","extendCoordinates","extendXY","extendRings","rings","min","max","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","resolution","rotation","x0","y0","x1","y1","x2","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","xs","ys","l","_boundingExtentXYs","wrapX","projection","projectionExtent","getExtent","canWrapX","worldWidth","floor","wrapAndSliceX","isFinite","unitByCode","METERS_PER_UNIT","radians","PI","degrees","ft","m","$ol$proj$Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection","Projection","units","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","atan","exp","EPSG4326Projection","cache","replace","add","transforms","destination","sourceCode","destinationCode","clamp","squaredSegmentDistance","squaredDistance","solveLinearSystem","maxRow","maxEl","r","absValue","j","coef","k","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","factor","round","ceil","padNumber","number","precision","numberString","decimal","compareVersions","v1","v2","s1","split","s2","n1","n2","closestOnCircle","circle","getRadius","sqrt","closestOnSegment","segment","along","degreesToStringHDMS","hemispheres","fractionDigits","normalizedDegrees","deg","sec","hdms","charAt","format","template","coordinate1","coordinate2","cosAngle","sinAngle","coord1","coord2","distance","squaredDistanceToSegment","toStringXY","worldsAway","getWorldsAway","sourceExtentWidth","DEFAULT_RADIUS","getDistance","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","getLengthInternal","getAreaInternal","bearing","lon1","dByR","lat","asin","levels","info","warn","none","level","args","console","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","pointResolution","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","jj","addCoordinateTransforms","forward","inverse","sourceProj","destProj","equivalent","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","transformExtent","userProjection","setUserProjection","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","sourceUnits","userUnits","fromUserResolution","createSafeCoordinateTransform","coord","transformed","sourceExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","transform2D","anchor","anchorX","anchorY","tmpTransform","$ol$geom$Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getSimplifiedGeometry","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","getClosestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","simplify","getType","intersectsExtent","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","getStrideForLayout","layout","transformGeom2D","simpleGeometry","getFlatCoordinates","getStride","$ol$geom$SimpleGeometry","Geometry","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","setLayout","nesting","getLayoutForStride","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","multiArrayMaxSquaredDelta","endss","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","radialDistance","snap","quantize","quantizeArray","quantizeMultiArray","simplifiedEndss","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","linearRing","twiceArea","linearRings","linearRingss","LinearRing","SimpleGeometry","maxDelta_","maxDeltaRevision_","linearRingArea","$ol$geom$LinearRing","Point","$ol$geom$Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","ret","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","reverseCoordinates","orientLinearRingsArray","inflateEnds","prevEndIndex","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","linearRingsArea","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","$ol$geom$Polygon","circular","sphereRadius","sphereOffset","fromExtent","fromCircle","sides","arrayLength","makeRegular","startAngle","GeolocationErrorType","GeolocationError","BaseEvent","$ol$Geolocation","position_","transform_","watchId_","handleProjectionChanged_","handleTrackingChanged_","setProjection","trackingOptions","setTrackingOptions","setTracking","tracking","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","position","coords","accuracy","altitude","altitudeAccuracy","heading","longitude","latitude","projectedPosition","speed","circularPolygon","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getPosition","getSpeed","$ol$ImageBase","pixelRatio","pixelRatio_","getImage","getPixelRatio","getResolution","ImageState","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","src","$ol$Image","ImageBase","crossOrigin","imageLoadFunction","src_","image_","context_","unlisten_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","setImage","$ol$ImageCanvas","canvas_","handleLoad_","$ol$ImageTile","tileLoadFunction","crossOrigin_","tileLoadFunction_","ctx","fillStyle","fillRect","getBlankImage","naturalWidth","naturalHeight","$ol$Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","Date","now","lastIndex","firstIndex","duration","getAngle","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","fromNamed","el","body","rgb","fromString","cacheSize","s","g","exec","hasAlpha","substr","startsWith","map","Number","normalize","fromStringInternal_","asArray","isStringColor","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","setSize","maxCacheSize","$ol$style$IconImageCache","shared","LayerProperty","$ol$layer$Base","background_","background","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getBackground","getClassName","getLayerState","managed","layer","getZIndex","getOpacity","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","ViewHint","ViewProperty","CENTER","RESOLUTION","ROTATION","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","result","createSnapToResolutions","resolutions","cappedMaxRes","capped","z","createSnapToPower","power","minZoomLevel","cappedZoomLevel","zoomLevel","createMinMaxResolution","createSnapToN","theta","createSnapToZero","animationCallback","returnValue","setTimeout","createCenterConstraint","smoothExtentConstraint","constrainOnlyCenter","multiWorld","centerNone","createResolutionConstraint","resolutionConstraint","zoomFactor","smoothResolutionConstraint","projExtent","constrainResolution","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","constraint","createRotationConstraint","enableRotation","constrainRotation","rotationNone","isNoopAnimation","animation","sourceCenter","targetCenter","coordinatesEqual","sourceResolution","targetResolution","sourceRotation","targetRotation","calculateCenterOn","rotX","rotY","$ol$View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","rotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","zoom","setZoom","oldPadding","getCenterInternal","newPadding","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","animateInternal","animationCount","series","complete","easing","getResolutionForZoom","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","rotateCoordinate","addCoordinate","currentResolution","w","h","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","viewState","nearest","baseLevel","fit","geometryOrExtent","polygonFromExtent","fitInternal","rotatedExtentForGeometry","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","inView","layerState","$ol$layer$Layer","BaseLayer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","render","setMap","handleSourcePropertyChange_","setSource","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","isVisible","view","frameState","getMapInternal","getView","View","layerStatesArray","getLayerGroup","find","layerExtent","getAttributions","attributions","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","setMapInternal","RenderEventType","some","arrayLayerState","createRenderer","hasRenderer","expireIconCache","iconImageCache","$ol$renderer$Map","map_","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","layerFilter","thisArg2","feature","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","getWrapX","order","distanceSq","hasFeatureAtCoordinate","getMap","flushDeclutterItems","scheduleExpireIconCache","postRenderFunctions","$ol$render$Event","inversePixelTransform","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","weight","variant","families","family","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","checkedFonts","measureFont","measureContext","textHeights","registerFont","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","border","display","left","measureAndCacheTextWidth","reduce","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","originX","originY","save","globalAlpha","setTransform","contextInstructions","label","executeLabelInstructions","restore","$ol$renderer$Composite","MapRenderer","fontChangeListenerKey_","redrawText","element_","container","getViewport","firstChild","children_","renderedVisible_","declutterLayers_","RenderEvent","declutterLayers","previousElement","layerIndex","sourceState","layers","renderDeclutter","declutterTree","GroupEvent","LayerGroup","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","$ol$layer$Group","$ol$MapEvent","$ol$MapBrowserEvent","MapEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","MapBrowserEventType","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","PointerEventType","$ol$MapBrowserEventHandler","Target","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","MapBrowserEvent","clearTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","MapEventType","MapProperty","DROP","$ol$structs$PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$ol$TileQueue","PriorityQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","$ol$control$Control","pointerEvents","target_","setTarget","getOverlayContainerStopEvent","mapEvent","getElementById","$ol$control$Attribution","Control","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","visibleAttributions","from","Set","getAllLayers","flatMap","getAttributionsCollapsible","setCollapsible","updateElement_","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$ol$control$Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","contains","$ol$control$Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","defaults","controls","Zoom","zoomOptions","Rotate","rotateOptions","attribution","Attribution","attributionOptions","InteractionProperty","pan","zoomByDelta","$ol$interaction$Interaction","setActive","getActive","mapBrowserEvent","active","$ol$interaction$DoubleClickZoom","Interaction","delta_","stopEvent","browserEvent","shiftKey","centroid","$ol$interaction$Pointer","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","all","conditions","pass","altKeyOnly","altKey","metaKey","ctrlKey","altShiftKeysOnly","focus","targetElement","getTargetElement","activeElement","focusWithTabindex","hasAttribute","always","mouseActionButton","never","singleClick","noModifierKeys","platformModifierKey","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","$ol$interaction$DragPan","PointerInteraction","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroidFromPointers","scaleCoordinate","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","$ol$interaction$DragRotate","lastAngle_","$ol$render$Box","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","top","getOverlayContainer","setPixels","createOrUpdateGeometry","DragBoxEventType","DragBoxEvent","$ol$interaction$DragBox","box_","RenderBox","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$ol$interaction$DragZoom","DragBox","out_","out","Key","$ol$interaction$KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","mapUnitsDelta","$ol$interaction$KeyboardZoom","$ol$interaction$MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$ol$interaction$PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","$ol$interaction$PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","interactions","Kinetic","altShiftDragRotate","DragRotate","doubleClickZoom","DoubleClickZoom","zoomDelta","zoomDuration","dragPan","DragPan","pinchRotate","PinchRotate","pinchZoom","PinchZoom","keyboard","KeyboardPan","KeyboardZoom","mouseWheelZoom","MouseWheelZoom","shiftDragZoom","DragZoom","num","hasArea","toSize","removeLayerMapProperty","Layer","setLayerMapProperty","$ol$Map","optionsInternal","keyboardEventTarget","layerGroup","overlays","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","defaultControls","defaultInteractions","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","TileQueue","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","ownerDocument","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","handlePostRender","tileQueue","viewHints","lowOnFrameBudget","unobserve","ShadowRoot","host","CompositeMapRenderer","MapBrowserEventHandler","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","usedTiles","mapId","renderTargets","nextExtent","equalsExtent","setLayerGroup","oldLayerGroup","computedStyle","parseFloat","getClientRects","oldSize","$ol$Overlay","insertFirst","autoPan","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPositioning","updatePixelPosition","performAutoPan","panIntoView","panIntoViewOptions","mapRect","getRect","overlayRect","myMargin","margin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","box","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","posX","posY","getOptions","$ol$structs$LRUCache","highWaterMark","count_","entries_","oldest_","newest_","expireCache","keep","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","getKeyZXY","fromKey","hash","withinExtentAndZ","tileRange","getFullTileRange","$ol$TileCache","LRUCache","pruneExceptNewestZ","TileRange","containsTileRange","$ol$TileRange","$ol$VectorRenderTile","urlTileCoord","getSourceTiles","executorGroups","declutterExecutorGroups","loadingSourceTiles","hitDetectionImageData","replayState_","sourceTiles","errorTileKeys","wantedResolution","wrappedTileCoord","hasContext","getReplayState","dirty","renderedRenderOrder","renderedResolution","renderedRevision","renderedTileResolution","renderedTileRevision","renderedTileZ","asColorLike","originalXHR","withCredentials","loadFeaturesXhr","url","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","addFeatures","jsonp","errback","callbackParam","script","cleanup","async","timer","head","ResponseError","response","ClientError","client","getJSON","JSON","parse","setRequestHeader","resolveUrl","base","URL","href","$ol$render$VectorContext","drawCustom","hitDetectionRenderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","strokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","$ol$render$canvas$Immediate","VectorContext","viewRotation","userTransform","transformRotation_","viewRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","alpha","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","lineTo","closePath","drawRings_","beginPath","arc","fill","stroke","getFill","getStroke","getText","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","getFlatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","lineCap","lineDash","setLineDash","lineDashOffset","lineJoin","miterLimit","textState","contextTextState","textAlign","textBaseline","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","imageSize","imagePixelRatio","imageAnchor","getAnchor","imageOrigin","getOrigin","getRotateWithView","imageScale","getScaleArray","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","acc","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","declutterBuilderGroup","getImageState","imageBuilderGroup","declutterMode","getDeclutterMode","imageReplay","getBuilder","textBuilderGroup","textReplay","LineString","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","replayGroup","geometryRenderer","Circle","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","imageState","unlistenImageChange","listenImageChange","renderGeometry","renderFeatureInternal","getGeometries","getHitDetectionRenderer","getVectorContext","CanvasRenderingContext2D","canvasPixelRatio","multiplyTransform","CanvasImmediateRenderer","brokenDiagonalRendering_","drawTestTriangle","u1","u2","clip","verifyBrokenDiagonalRendering","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","calculateSourceExtentResolution","targetExtent","triangulation","sources","gutter","renderEdges","imageSmoothingEnabled","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","isBrokenDiagonalRendering","steps","ud","vd","step","ERROR_THRESHOLD","$ol$reproj$Triangulation","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","$ol$reproj$Tile","sourceTileGrid","targetTileGrid","getTileFunction","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","Triangulation","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","TileEventType","adaptAttributions","attributionLike","$ol$source$Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","getInterpolate","refresh","setAttributions","tmpTileCoord","$ol$tilegrid$TileGrid","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","getTileCoordForCoordAndZ","getTileCoordResolution","opt_direction","tileCoordIntersectsViewport","viewport","fullTileRanges","getForProjection","createForProjection","extentFromProjection","createForExtent","resolutionsFromExtent","TileGrid","createXYZ","xyzOptions","gridOptions","half","TileSourceEvent","$ol$source$Tile","Source","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","TileCache","tmpSize","tileOptions","zDirection","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","covered","getGutterForProjection","setKey","getOpaque","getTileGridForProjection","getTile","getTileGrid","getTilePixelRatio","getTilePixelSize","scaleSize","getTileCoordForTileUrlFunction","updateCacheSize","tileCount","useTile","createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","range","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","nullTileUrlFunction","expandUrl","urls","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","stop","UrlTile","TileSource","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","uid","tileState","setTileLoadFunction","setTileUrlFunction","$ol$source$UrlTile","defaultTileLoadFunction","imageTile","$ol$source$TileImage","tileClass","ImageTile","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","tileUrl","getTileInternal","newTile","ReprojTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","quadKey","digits","mask","$ol$source$BingMaps","TileImage","hidpi","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","placeholderTiles_","placeholderTiles","fetch","json","handleImageryMetadataResponse","getApiKey","getImagerySet","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","resource","zoomMax","imageWidth","imageHeight","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","params","searchParams","delete","imageryProviders","imageryProvider","intersecting","coverageAreas","coverageArea","bbox","$ol$source$XYZ","quickselect","quickselectStep","defaultCompare","sd","swap","RBush","maxEntries","_maxEntries","_minEntries","_all","search","toBBox","nodesToSearch","child","childBBox","leaf","collides","insert","_build","_splitRoot","tmpNode","_insert","createNode","equalsFn","path","indexes","goingUp","findItem","_condense","compareMinX","compareMinY","toJSON","fromJSON","items","N","M","calcBBox","N2","N1","multiSelect","right2","right3","_chooseSubtree","targetNode","minEnlargement","bboxArea","enlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareNodeMinX","compareNodeMinY","_allDistMargin","leftBBox","rightBBox","bboxMargin","siblings","p","destNode","$ol$structs$RBush","rbush_","RBush_","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","concat","rbush","VectorEventType","VectorSourceEvent","$ol$source$Vector","format_","overlaps_","overlaps","url_","strategy_","strategy","allStrategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","featureChangeKeys","removed","setLoader","$ol$source$Cluster","VectorSource","interpolationRatio","geometryFunction","createCustomCluster_","createCluster","boundRefresh_","updateDistance","setDistance","setMinDistance","getMinDistance","cluster","mapDistance","clustered","neighbors","neighbor","searchCenter","$ol$reproj$DataTile","DataTile","reprojData_","reprojError_","reprojSize_","dataSources","tileData","arrayData","pixelSize","isFloat","pixelCount","DataType","tileDataR","bytesPerElement","BYTES_PER_ELEMENT","bytesPerPixel","bytesPerRow","byteLength","bandCount","packedLength","packedData","dataIndex","rowOffset","colCount","rowIndex","colIndex","dataType","targetWidth","targetHeight","dataR","dataU","reproj","dataSource","createImageData","putImageData","$ol$source$DataTile","tileGridForProjection_","tileCacheForProjection_","setTileSizes","getReprojTile_","reprojTilePixelRatio","textureSize","ReprojDataTile","sourceLoader","$ol$reproj$Image","getImageFunction","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","ImageSourceEventType","ImageSourceEvent","defaultImageLoadFunction","$ol$source$Image","reprojectedImage_","reprojectedRevision_","setResolutions","findNearestResolution","getImageInternal","ReprojImage","handleImageChange","appendParams","uri","keyParams","encodeURIComponent","qs","$ol$source$ImageArcGISRest","ImageSource","params_","imageSize_","renderedRevision_","ratio_","getParams","F","FORMAT","TRANSPARENT","halfWidth","halfHeight","imageResolution","getRequestUrl_","ImageWrapper","getImageLoadFunction","srid","modifiedUrl","setImageLoadFunction","updateParams","$ol$source$ImageCanvas","canvasFunction_","canvasFunction","canvasElement","ImageCanvas","$ol$source$ImageStatic","imageExtent_","imageExtent","getImageExtent","extentWidth","extentHeight","DEFAULT_VERSION","GETFEATUREINFO_IMAGE_SIZE","$ol$source$ImageWMS","v13_","updateV13_","serverType_","serverType","getFeatureInfoUrl","projectionObj","sourceProjectionObj","baseParams","SERVICE","VERSION","REQUEST","QUERY_LAYERS","getLegendUrl","LAYERS","mpu","viewExtent","requestExtent","dpi","version","knownMapMediaTypes","knownVectorMediaTypes","getMapTileUrlTemplate","links","mediaType","tileUrlTemplate","fallbackUrlTemplate","link","rel","getVectorTileUrlTemplate","supportedMediaTypes","hrefLookup","supportedMediaType","parseTileMatrixSet","sourceInfo","tileMatrixSet","tileMatrixSetLimits","crs","backwards","matrices","tileMatrices","matrixLookup","matrix","limitLookup","matrixIds","limit","tileMatrix","pointOfOrigin","cellSize","matrixWidth","matrixHeight","tileWidth","tileHeight","tileMapWidth","minTileCol","maxTileCol","tileMapHeight","cornerOfOrigin","minTileRow","maxTileRow","intersectExtents","grid","urlTemplate","urlFunction","upsideDown","localContext","tileCol","tileRow","getTileSetInfo","tileSet","tileMatrixSetLink","tileMatrixSetDefinition","parseTileSetMetadata","$ol$source$OGCMapTile","handleTileSetInfo_","handleError_","tileSetInfo","logError","ATTRIBUTION","$ol$source$OSM","XYZ","$ol$layer$BaseImage","$ol$renderer$Layer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","createLoadedTileFinder","getLayer","renderIfReadyAndVisible","loadImage","pixelContext","$ol$renderer$canvas$Layer","LayerRenderer","tempTransform","pixelTransform","containerReused","pixelContext_","col","row","useContainer","backgroundColor","layerClassName","firstElementChild","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","$ol$renderer$canvas$ImageLayer","CanvasLayerRenderer","imageLayer","viewResolution","imageSource","renderedExtent","imageMapWidth","imageMapHeight","viewCenter","canvasTransform","toTransformString","clipped","dw","dh","previousAlpha","$ol$layer$Image","BaseImageLayer","CanvasImageLayerRenderer","TileProperty","$ol$layer$BaseTile","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","$ol$renderer$canvas$TileLayer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileOrigin","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","clips","clipZs","currentClip","zs","reverse","currentZ","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","postRenderFunction","tileCallback","$ol$layer$Tile","BaseTileLayer","CanvasTileLayerRenderer","hasImageData","ImageData","_","newImageData","createMinion","operation","workerHasImageData","newWorkerImageData","buffers","meta","imageOps","numBuffers","numBytes","images","arrays","pixels","createWorker","config","onMessage","lines","lib","worker","Worker","Blob","Buffer","createObjectURL","Processor","threads","_imageOps","workers","_onWorkerMessage","minion","terminated","postMessage","terminate","createFauxWorker","_workers","_queue","_maxQueueLength","queue","_running","_dataLookup","_job","process","inputs","_enqueue","_dispatch","job","slices","_resolveJob","RasterEventType","RasterSourceEvent","RasterSource","processor_","operationType_","operationType","threads_","layers_","createLayer","createLayers","useResolutions_","processSources_","requestedFrameState_","renderedImageCanvas_","iMax","sourceOrLayer","attributionGetter","sourceAttribution","setOperation","updateFrameState_","allSourcesReady_","imageDatas","onWorkerComplete_","layerOrSource","TileLayer","ImageLayer","$ol$source$Raster","ATTRIBUTIONS","OSM_ATTRIBUTION","LayerConfig","terrain","toner","watercolor","ProviderConfig","$ol$source$Stamen","provider","providerConfig","layerConfig","$ol$source$TileArcGISRest","getKeyForParams_","tileExtent","$ol$source$TileDebug","strokeRect","$ol$source$TileJSON","tileJSON_","requestJSONP","handleTileJSONResponse","handleTileJSONError","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","epsg4326Projection","gridExtent","attributionExtent","$ol$source$TileWMS","transparent","bufferSize","CustomTile","preemptive","preemptive_","grid_","keys_","jsonp_","xRelative","yRelative","forDataAtCoordinate","request","loadInternal_","$ol$source$UTFGrid","tileUrlFunction_","template_","getTemplate","forDataAtCoordinateAndResolution","grids","WMTSTileGrid","matrixIds_","getMatrixId","getMatrixIds","$ol$tilegrid$WMTS","createFromCapabilitiesMatrixSet","matrixSet","matrixLimits","matrixIdsPropName","identifierPropName","scaleDenominatorPropName","topLeftCornerPropName","switchOriginXY","elt","matrixAvailable","elt_ml","$ol$source$WMTS","requestEncoding","version_","dimensions_","dimensions","matrixSet_","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","tilematrixset","Service","Request","Version","Format","TileMatrix","TileCol","TileRow","XML_SCHEMA_INSTANCE_URI","createElementNS","namespaceURI","qualifiedName","getDocument","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","nextSibling","isDocument","getAttributeNS","xml","makeArrayExtender","valueReader","objectStack","makeArrayPusher","makeReplacer","makeObjectPropertyPusher","localName","makeObjectPropertySetter","makeChildAppender","nodeWriter","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","fixedNodeName","fixedNamespaceURI","newNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","structureNS","parseNode","parsersNS","nextElementSibling","parsers","parser","pushParseAndPop","pushSerializeAndPop","xmlSerializer_","document_","getXMLSerializer","XMLSerializer","implementation","createDocument","fromTransform","mat4","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","declutterMode_","getScale","getDisplacement","getHitDetectionImage","getImageSize","setDisplacement","setRotateWithView","setScale","$ol$style$Image","RegularShape","hitDetectionCanvas_","fill_","points","radius_","radius1","radius2_","radius2","stroke_","renderOptions_","getPoints","getRadius2","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","strokeWidth","r1","r2","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","maxRadius","createPath_","drawHitDetectionCanvas_","angle0","radiusC","$ol$style$RegularShape","CircleStyle","setRadius","$ol$style$Circle","Fill","color_","setColor","$ol$style$Fill","taintedTestContext","IconImage","hitDetectionImage_","imageState_","tainted_","initializeImage_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","$ol$style$IconImage","calculateScale","wantedWidth","wantedHeight","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","imgSize_","imgSize","iconImage_","getIconImage","offset_","offsetOrigin_","offsetOrigin","initialOptions_","setAnchor","iconImageSize","$ol$style$Icon","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$ol$style$Stroke","Style","geometryFunction_","defaultGeometryFunction","hitDetectionRenderer_","zIndex_","setRenderer","setHitDetectionRenderer","setText","toFunction","styleFunction","defaultStyles","createDefaultStyle","createEditingStyle","white","blue","$ol$style$Style","Text","font_","textAlign_","justify_","justify","repeat_","repeat","textBaseline_","maxAngle_","maxAngle","placement_","placement","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getPlacement","getRepeat","getMaxAngle","getOverflow","getJustify","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","$ol$style$Text","PaletteTexture$1","texture_","getTexture","gl","texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","UNSIGNED_BYTE","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","DYNAMIC_DRAW","CONTEXT_IDS","BufferUsage","getArrayClassForType","Uint32Array","WebGLArrayBuffer$1","usage","ofSize","fromArray","fromArrayBuffer","getUsage","ContextEventType","WebGLPostProcessingPass$1","gl_","webGlContext","scaleRatio_","scaleRatio","renderTargetTexture_","renderTargetTextureSize_","frameBuffer_","createFramebuffer","depthBuffer_","createRenderbuffer","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","renderTargetProgram_","createProgram","attachShader","linkProgram","renderTargetVerticesBuffer_","createBuffer","bindBuffer","bufferData","STATIC_DRAW","renderTargetAttribLocation_","getAttribLocation","renderTargetUniformLocation_","getUniformLocation","renderTargetOpacityLocation_","renderTargetTextureLocation_","uniforms_","uniforms","location","getGL","init","drawingBufferWidth","drawingBufferHeight","bindFramebuffer","FRAMEBUFFER","getFrameBuffer","bindRenderbuffer","RENDERBUFFER","getDepthBuffer","internalFormat","LINEAR","framebufferTexture2D","COLOR_ATTACHMENT0","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","nextPass","preCompose","postCompose","activeTexture","TEXTURE0","canvasId","attributes","getContextAttributes","preserveDrawingBuffer","clearColor","clearDepth","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","DEPTH_TEST","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform2f","uniform1i","uniform1f","applyUniforms","drawArrays","TRIANGLES","textureSlot","uniform","uniform3f","uniform4f","DefaultUniform","AttributeType","UNSIGNED_SHORT","UNSIGNED_INT","canvasCache","getSharedCanvasCacheKey","uniqueCanvasCacheKeyCount","getOrCreateContext","cacheItem","antialias","users","WebGLHelper","boundHandleWebGLContextLost_","handleWebGLContextLost","boundHandleWebGLContextRestored_","handleWebGLContextRestored","canvasCacheKey_","canvasCacheKey","getUniqueCanvasCacheKey","bufferCache_","extensionCache_","currentProgram_","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","uniformLocationsByProgram_","attribLocationsByProgram_","setUniforms","postProcessPasses_","postProcesses","WebGLPostProcessingPass","shaderCompileErrors_","canvasCacheKeyMatches","getExtension","bufferKey","bufferCache","webGlBuffer","flushBufferData","deleteBuffer","buf","bufferCacheEntry","isContextLost","loseContext","prepareDraw","disableAlphaBlend","enableDepth","getCanvas","depthRange","ZERO","depthFunc","LEQUAL","slot","uniformName","prepareDrawToRenderTarget","renderTarget","getFramebuffer","getDepthbuffer","drawElements","elementType","numItems","offsetInBytes","finalizeDraw","applyFrameState","offsetScaleMatrix","resetTransform","scaleTransform","offsetRotateMatrix","rotateTransform","setUniformMatrixValue","setUniformFloatValue","setUniformFloatVec2","applyHitDetectionUniform","loc","HTMLImageElement","prevValue","program","shader","getProgram","fragmentShaderSource","vertexShaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","getProgramParameter","LINK_STATUS","getProgramInfoLog","programUid","getAttributeLocation","makeProjectionTransform","uniform2fv","setUniformFloatVec4","uniform4fv","uniformMatrix4fv","enableAttributeArray_","attribName","enableAttributes","attr","getByteSizeFromType","computeAttributesStride","Uint16Array","WebGLLayerRenderer","inversePixelTransform_","postProcesses_","helper","removeHelper","dispatchPreComposeEvent","dispatchPostComposeEvent","incrementGroup","groupNumber","afterHelperCreated","prepareFrameInternal","WebGLLayerRenderer$1","Uniforms","TILE_TRANSFORM","TRANSITION_ALPHA","DEPTH","RENDER_EXTENT","ZOOM","GLOBAL_ALPHA","PROJECTION_MATRIX","SCREEN_TO_WORLD_MATRIX","TILE_TEXTURE_ARRAY","TEXTURE_PIXEL_WIDTH","TEXTURE_PIXEL_HEIGHT","TEXTURE_RESOLUTION","TEXTURE_ORIGIN_X","TEXTURE_ORIGIN_Y","ValueTypes","NUMBER","STRING","COLOR","BOOLEAN","NUMBER_ARRAY","ANY","NONE","Operators","getValueType","stringify","valueArr","v","operator","getReturnType","isTypeUnique","valueType","printTypes","numberToGlsl","arrayToGlsl","colorToGlsl","getStringNumberEquivalent","string","stringLiteralsMap","stringToGlsl","expressionToGlsl","expectedType","returnType","toGlsl","possibleType","assertNotEmptyType","assertNumber","assertNumbers","assertString","assertBoolean","assertArgsCount","assertArgsMinCount","assertArgsMaxCount","assertArgsEven","types","descriptor","assertSingleType","assertOfType","expectedTypes","uniformNameForVariable","variableName","typeHint","getTypeFromHint","outputType","existing","inFragmentShader","variables","PALETTE_TEXTURE_ARRAY","colors","numColors","palette","paletteTextures","paletteName","paletteTexture","PaletteTexture","GET_BAND_VALUE_FUNC","getEqualOperator","getDecisionOperator","arg","toStyle","flatStyle","prefix","iconSrc","iconImg","shapePoints","circleRadius","band","functions","ifBlocks","colorIndex","bandIndex","bandExpression","xOffsetExpression","yOffsetExpression","computeType","substring","parsedArgs","interpolation","inputType","exponent","stop1","output1","stop2","fallback","assertArgsOdd","funcName","computeOperatorFunctionName","tests","$ol$structs$LinkedList","first_","last_","head_","circular_","length_","insertItem","next","removeItem","firstItem","lastItem","nextItem","getNextItem","prevItem","getPrevItem","getCurrItem","setFirstItem","list","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","$ol$render$canvas$Builder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","CanvasInstruction","endGeometry","finish","reverseHitDetectionInstructions","instruction","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$ol$render$canvas$ImageBuilder","CanvasBuilder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","sharedData","$ol$render$canvas$LineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$ol$render$canvas$PolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","$ol$render$canvas$TextBuilder","labels_","fillStates","strokeStates","textStates","textKey_","fillKey_","strokeKey_","geometryType","geometryWidths","beg","saveTextStates_","p0","p1","p2","p3","flatOffset","o","oo","cc","chunk","chunkBegin","drawChars_","strokeKey","textKey","fillKey","baseline","BATCH_CONSTRUCTORS","PolygonBuilder","Default","Builder","ImageBuilder","LineStringBuilder","TextBuilder","$ol$render$canvas$BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","lineStringLength","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","line","$ol$render$canvas$Executor","alignFill_","coordinateCache_","renderedTransform_","widths_","createLabel","textIsArray","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","strokePadding","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","transformSetFromArray","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","part","execute","executeHitDetection","ORDER","circlePixelIndexArrayCache","getPixelIndexArray","maxDistanceSq","distances","pixelIndex","$ol$render$canvas$ExecutorGroup","allInstructions","renderBuffer","renderBuffer_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","Executor","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","idx","executor","builderTypes","HIT_DETECT_RESOLUTION","createHitDetectionImageData","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgContext","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","$ol$renderer$canvas$VectorLayer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","compositionContext_","renderWorlds","executorGroup","vectorSource","endWorld","world","setupCompositionContext_","compositionContext","releaseCompositionContext_","transformToString","lastIndexOf","animating","interacting","updateWhileAnimating","getUpdateWhileAnimating","updateWhileInteracting","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","defaultRenderOrder","loadExtents","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","getDeclutter","userExtent","getSquaredRenderTolerance","replayGroupInstructions","ExecutorGroup","$ol$renderer$canvas$VectorImageLayer","vectorRenderer_","CanvasVectorLayerRenderer","layerImageRatio_","getImageRatio","coordinateToVectorPixelTransform_","renderedPixelToCoordinateTransform_","vectorPixel","vectorRenderer","imageLayerState","imageFrameState","emptyImage","setCenterAndRadius","getRadiusSquared_","$ol$geom$Circle","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","cloneGeometries","geometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","clonedGeometries","$ol$geom$GeometryCollection","interpolatePoint","cumulativeLengths","lineStringCoordinateAtM","extrapolate","lo","hi","m0","lineStringsCoordinateAtM","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","getCoordinateAtM","getCoordinateAt","$ol$geom$LineString","lineStrings","appendLineString","multiLineString","getLineString","getLineStrings","midpoints","$ol$geom$MultiLineString","appendPoint","multiPoint","getPoint","$ol$geom$MultiPoint","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","thisLayout","polygons","thisEndss","appendPolygon","newEndss","multiPolygon","linearRingssArea","linearRingssCenter","getInteriorPoints","getPolygon","prevEnds","getPolygons","lastEnds","$ol$geom$MultiPolygon","RenderFeature","type_","flatCoordinates_","flatMidpoints_","properties_","midpoint","toGeometry","$ol$render$Feature","registered","register","proj4","projCodes","defs","def","projName","axis","to_meter","code1","proj1","code2","proj2","epsgLookup","ok","$ol$layer$BaseVector","declutter_","declutter","updateWhileAnimating_","updateWhileInteracting_","setRenderOrder","renderOrder","styleLike","toStyleFunction","$ol$layer$Vector","BaseVectorLayer","geoA","geoB","geoStack","fractionStack","fractions","geoM","fracA","fracB","fracM","maxIterations","meridian","lon","frac","parallel","lon2","DEFAULT_STROKE_STYLE","INTERVALS","$ol$layer$Graticule","VectorLayer","maxLines","targetSize","showLabels","lonLabelFormatter","latLabelFormatter","lonLabelPosition","latLabelPosition","lonLabelStyle","latLabelStyle","intervals","maxLat_","maxLon_","minLat_","minLon_","maxX_","maxY_","minX_","minY_","targetSize_","maxLines_","meridians_","parallels_","strokeStyle_","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","bottomLeft_","bottomRight_","topLeft_","topRight_","meridiansLabels_","parallelsLabels_","lonLabelFormatter_","latLabelFormatter_","lonLabelPosition_","latLabelPosition_","lonLabelStyleBase_","lonLabelStyle_","latLabelStyleBase_","latLabelStyle_","drawLabels_","intervals_","loaderFunction","strategyFunction","featurePool_","lineStyle_","loadedExtent_","realWorldExtent","renderExtent","equivalentProjection","updateProjectionInfo_","createGraticule_","featuresColl","poolIndex","addMeridian_","minLat","maxLat","getMeridian_","geom","addParallel_","minLon","maxLon","getParallel_","rotationCenter","rotationExtent","unrotatedWidth","unrotatedHeight","startWorld","labelsAtStart","vectorContext","textPoint","getMeridianPoint_","getParallelPoint_","getInterval_","validCenterP","centerLonLat","centerLon","centerLat","cnt","validExtentP","validExtent","clampedLat","clampedBottom","clampedTop","getMeridians","clampedLeft","clampedRight","getParallels","toLonLatTransform","lonLatCoordinates","worldExtentP","tmpArray4","WebGLRenderTarget$1","helper_","framebuffer_","depthbuffer_","dataCacheDirty_","updateSize_","clearCachedData","readAll","readPixels","readPixel","WebGLWorkerMessageType","earcut","holeIndices","dim","invSize","hasHoles","outerLen","outerNode","linkedList","triangles","steiner","getLeftmost","compareX","eliminateHole","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","filterPoints","again","ear","zOrder","prevZ","nextZ","q","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","ax","bx","cx","ay","by","cy","pointInTriangle","minZ","maxZ","locallyInside","isValidDiagonal","splitPolygon","hole","bridge","hx","hy","qx","mx","my","tanMin","sectorContainsSector","findHoleBridge","bridgeReverse","leftmost","py","intersectsPolygon","inside","middleInside","q1","q2","o1","sign","o2","o3","o4","onSegment","an","bp","sum","colorEncodeId","radix","divide","earcutModule","exports","default","deviation","polygonArea","trianglesArea","flatten","holes","holeIndex","WebGLPointsLayerRenderer$1","projectionMatrixTransform","sourceRevision_","verticesBuffer_","WebGLArrayBuffer","indicesBuffer_","vertexShader_","fragmentShader_","program_","hitDetectionEnabled_","hitDetectionEnabled","customAttributes","attribute","currentTransform_","renderTransform_","invertRenderTransform_","renderInstructions_","hitRenderTarget_","lastSentId","worker_","createWebGLWorker","received","projectionTransform","vertexBuffer","indexBuffer","makeInverseTransform","renderInstructions","featureCache_","featureCount_","sourceListenKeys_","handleSourceFeatureAdded_","handleSourceFeatureChanged_","handleSourceFeatureDelete_","handleSourceFeatureClear_","WebGLRenderTarget","getWorldParameters_","viewNotMoving","sourceChanged","BaseVector","rebuildBuffers_","singleInstructionLength","totalSize","featureCache","tmpCoords","tmpColor","featureUid","hitColor","customAttributesSize","mult","colorDecodeId","forHitDetection","translateTransform","renderCount","DEFAULT_GRADIENT","$ol$layer$Heatmap","gradient","blur","gradient_","handleGradientChanged_","setGradient","setBlur","weightFunction_","getBlur","getGradient","createLinearGradient","addColorStop","createGradient","WebGLPointsLayerRenderer","u_size","u_blurSlope","u_gradientTexture","u_opacity","$ol$layer$VectorImage","imageRatio","imageRatio_","CanvasVectorImageLayerRenderer","$ol$interaction$DblClickDragZoom","opt_options","scaleDeltaByPixel_","handlingDownUpSequence_","handlingDoubleDownSequence_","doubleTapTimeoutId_","trackedPointers_","waitForDblTap_","isPointerDraggingEvent","DragAndDropEventType","DragAndDropEvent","file","$ol$interaction$DragAndDrop","readAsBuffer_","formats_","formatConstructors","dropListenKeys_","source_","handleResult_","formats","TextDecoder","tryReadFeatures_","registerListeners_","dropArea","handleDrop","handleStop","unregisterListeners_","files","dataTransfer","reader","FileReader","readAsArrayBuffer","readAsText","dropEffect","$ol$interaction$DragRotateAndZoom","lastMagnitude_","magnitude","angleDelta","DrawEventType","DrawEvent","getSquaredDistance","getCoordinate","getCumulativeSquaredDistance","endIndex","lowIndex","highIndex","lowWholeIndex","highWholeIndex","interpolateCoordinate","appendGeometryTraceTargets","targets","appendTraceTarget","polys","sharedUpdateInfo","ring","getPointSegmentRelationship","sharedRel","getDefaultStyleFunction","$ol$interaction$Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","pointerType_","freehand_","features_","snapTolerance_","snapTolerance","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryLayout_","geometryLayout","mode","squaredLength","squaredCoordinateDistance","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","geometryName","freehandCondition_","freehand","freehandCondition","traceCondition_","setTrace","trace","traceState_","traceSource_","traceSource","updateState_","getOverlay","move","addToDrawing_","startDrawing_","deactivateTrace_","toggleTraceState_","getTraceTargets","startPx","targetIndex","addOrRemoveTracedCoordinates_","previouslyForward","addTracedCoordinates_","removeTracedCoordinates_","fromIndex","toIndex","removeLastPoints_","appendCoordinates","updateTrace_","traceState","updatedTraceTarget","closestTargetDistance","newTargetIndex","newEndIndex","minSegmentDistance","coordinateIndex","newTarget","considerBothDirections","newCoordinate","forwardDistance","reverseDistance","getTraceTargetUpdate","oldTarget","tracing","startingToDraw","finishDrawing","atFinish_","abortDrawing","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","createOrUpdateCustomSketchLine_","sketchLineGeom","removeLastPoint","sketchFeature","abortDrawing_","newDrawing","ending","sketchFeatures","overlaySource","ExtentEventType","ExtentEvent","getDefaultExtentStyleFunction","getDefaultPointerStyleFunction","getPointHandler","fixedPoint","getEdgeHandler","fixedP1","fixedP2","$ol$interaction$Extent","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","vertexOverlay_","pointerStyle","snapToVertex_","pixelCoordinate","sortByDistance","getExtentInternal","segments","getSegments","closestSegment","vertex","vertexPixel","coordinateDistance","pixel1","pixel2","squaredDist1","squaredDist2","dist","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","vertexFeature","getOpposingPoint","x_","y_","readNumber","writeNumber","to5","differentNumber","$ol$interaction$Link","animationOptions","animationOptions_","replace_","prefix_","initial_","getParamName_","get_","set_","delete_","oldMap","updateUrl_","handleChangeLayerGroup_","history","replaceState","updateView","viewProperties","layersParam","initial","visibilities","pushState","tempSegment","ModifyEventType","ModifyEvent","compareIndexes","projectedDistanceToSegmentDataSquared","pointCoordinates","segmentData","distanceToCenterSquared","distanceToCircumference","closestOnSegmentData","$ol$interaction$Modify","boundHandleFeatureChange_","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","featuresBeingModified_","rBush_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","hitDetection_","handleSourceAdd_","handleSourceRemove_","hitDetection","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","snapToPointer_","snapToPointer","writer","handlePointerAtPixel_","willModifyFeatures_","ss","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","nodeToRemove","depth","centerSegmentData","circumferenceSegmentData","featureSegments","createOrUpdateVertexFeature_","removePoint","dragSegment","setGeometryCoordinates_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","insertVertex_","nodes","hitPointGeometry","bufferExtent","vertexSegments","geometryUid","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","dragSegments","segmentsByFeature","component","newIndex","deleted","SelectEventType","SelectEvent","selected","deselected","originalFeatureStyles","Select","boundAddFeature_","boundRemoveFeature_","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","getHitTolerance","setHitTolerance","restorePreviousStyle_","applySelectedStyle_","removeFeatureLayerAssociation_","$ol$interaction$Select","SnapEventType","SnapEvent","getFeatureFromEvent","$ol$interaction$Snap","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","GEOMETRY_SEGMENTERS_","segmentPointGeometry_","segmentLineStringGeometry_","segmentPolygonGeometry_","segmentMultiPointGeometry_","segmentMultiLineStringGeometry_","segmentMultiPolygonGeometry_","segmentGeometryCollectionGeometry_","segmentCircleGeometry_","feature_uid","segmenter","segmentsData","getFeatures_","snapTo","updateFeature_","featuresToUpdate","unlisten","unregister","currentMap","projectedCoordinate","segmentsLength","closestVertex","squaredPixelTolerance","getResult","tempVertexCoord","segmentStart","segmentEnd","TranslateEventType","TranslateEvent","startCoordinate","$ol$interaction$Translate","lastCoordinate_","startCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","newViewCoordinate","lastViewCoordinate","flipXY","destOffset","$ol$format$Feature","defaultFeatureProjection","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","write","transformExtentWithOptions","XMLFeature$1","FeatureFormat","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","readBoolean","readBooleanString","readDateTime","dateTime","readDecimal","readDecimalString","readPositiveInteger","readNonNegativeIntegerString","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","writeDecimalTextNode","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","GPX_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","TRK_SEQUENCE","TRK_SERIALIZERS","writeWptType","RTE_PARSERS","cmt","desc","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","writeLink","RTEPT_TYPE_SEQUENCE","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","GEOMETRY_TYPE_TO_NODENAME","GPX_NODE_FACTORY","layoutOptions","getAttribute","hasZ","hasM","applyLayoutOptions","setAttributeNS","$ol$format$GPX","XMLFeature","readExtensions_","readExtensions","handleReadExtensions_","extensionsNode","featureReader","gpx","getObject","$ol$format$JSONFeature","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","writeFeatureObject","writeFeaturesObject","writeGeometryObject","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","$ol$format$GeoJSON","JSONFeature","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","objects","$ol$format$TextFeature","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","B_RECORD_RE","H_RECORD_RE","HFDTE_RECORD_RE","NEWLINE_RE","$ol$format$IGC","TextFeature","altitudeMode_","altitudeMode","year","month","day","lastDateTime","hour","minute","second","UTC","GX_NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","insetPixels","PLACEMARK_PARSERS","ExtendedData","extendedDataParser","Region","regionParser","MultiGeometry","readMultiGeometry","readLineString","readLinearRing","readPoint","readPolygon","readStyle","StyleMap","styleMapValue","readStyleMapValue","placemarkObject","address","description","phoneNumber","styleUrl","readStyleURL","visibility","MultiTrack","GX_MULTITRACK_GEOMETRY_PARSERS","Track","readGxTrack","NETWORK_LINK_PARSERS","Link","readURI","CAMERA_PARSERS","Altitude","Longitude","Latitude","Tilt","AltitudeMode","Heading","Roll","REGION_PARSERS","LatLonAltBox","LAT_LON_ALT_BOX_PARSERS","regionObject","Lod","LOD_PARSERS","lodObject","KML_SEQUENCE","KML_SERIALIZERS","Document","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","Placemark","writePlacemark","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_FILL_STYLE","DEFAULT_NO_IMAGE_STYLE","DEFAULT_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","DEFAULT_TEXT_STYLE","DEFAULT_STYLE","TEXTAREA","DEFAULT_STYLE_ARRAY","scaleForSize","defaultIconUrlFunction","findStyle","styleValue","defaultStyle","sharedStyles","readColor","hexColor","readFlatCoordinates","re","baseURI","readScale","STYLE_MAP_PARSERS","Pair","pairObject","PAIR_PARSERS","ICON_STYLE_PARSERS","iconObject","ICON_PARSERS","hotSpot","xunits","yunits","LABEL_STYLE_PARSERS","LINE_STYLE_PARSERS","POLY_STYLE_PARSERS","outline","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","GX_TRACK_PARSERS","when","whens","gxTrackObject","GEOMETRY_FLAT_COORDINATES_PARSERS","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","extrude","tessellate","MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","setCommonGeometryProperties","FLAT_LINEAR_RINGS_PARSERS","innerBoundaryIs","innerBoundaryFlatLinearRings","INNER_BOUNDARY_IS_PARSERS","outerBoundaryIs","flatLinearRing","OUTER_BOUNDARY_IS_PARSERS","flatLinearRings","STYLE_PARSERS","IconStyle","styleObject","IconObject","drawIcon","iconUrlFunction_","resizeScale","LabelStyle","LineStyle","PolyStyle","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DATA_PARSERS","displayName","EXTENDED_DATA_PARSERS","Data","featureObject","SchemaData","SCHEMA_DATA_PARSERS","SimpleData","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","writeColorTextNode","rgba","abgr","hex","EXTENDEDDATA_NODE_SERIALIZERS","pair","DATA_NODE_FACTORY","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","icon","vec2","writeScaleTextNode","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","factory","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","namesAndValues","names","pointStyles","lineStyles","polyStyles","STYLE_SEQUENCE","STYLE_SERIALIZERS","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","styleArray","writeStyles_","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","POLY_STYLE_SEQUENCE","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","outerRing","POLY_STYLE_SERIALIZERS","iconProperties","$ol$format$KML","defaultStyle_","extractStyles_","extractStyles","writeStyles","sharedStyles_","showPointNames_","showPointNames","iconUrlFunction","readDocumentOrFolder_","Folder","readPlacemark_","readSharedStyle_","readSharedStyleMap_","drawName","multiGeometryPoints","featureStyle","nameStyle","foundStyle","textOffset","createNameStyleFunction","createFeatureStyleFunction","styleUri","fs","readName","readNameFromDocument","readNameFromNode","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","readCamera","cameras","readCameraFromDocument","readCameraFromNode","kml","xmlnsUri","ieee754","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","LN2","pbf","Pbf","require$$0","ArrayBuffer","isView","Varint","Fixed64","Bytes","Fixed32","SHIFT_LEFT_32","SHIFT_RIGHT_32","utf8TextDecoder","readPackedEnd","readVarint","toNum","isSigned","makeRoomForExtraLength","startPos","extraLen","realloc","writePackedVarint","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","readInt32","destroy","readFields","readField","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","read","readDouble","readVarintRemainder","readVarint64","readSVarint","subarray","readUtf8TextDecoder","str","b3","b0","bytesPerSequence","readUtf8","readBytes","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","writeUtf8","writeBytes","writeRawMessage","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","layersPBFReader","layerPBFReader","featurePBFReader","readRawFeature","$ol$format$MVT","featureClass_","featureClass","layerName_","layerName","idProperty_","idProperty","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","ctor","PBF","pbfLayers","pbfLayer","WAY_PARSERS","nd","ndrefs","readTag","PARSERS","tags","NODE_PARSERS","way","ways","$ol$format$OSMXML","XML$1","readFromDocument","readFromNode","NAMESPACE_URI","readHref","ServiceIdentification","SERVICE_IDENTIFICATION_PARSERS","ServiceProvider","SERVICE_PROVIDER_PARSERS","OperationsMetadata","OPERATIONS_METADATA_PARSERS","ADDRESS_PARSERS","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","ALLOWED_VALUES_PARSERS","Value","CONSTRAINT_PARSERS","AllowedValues","CONTACT_INFO_PARSERS","Phone","PHONE_PARSERS","Address","DCP_PARSERS","HTTP","HTTP_PARSERS","Get","REQUEST_METHOD_PARSERS","Post","OPERATION_PARSERS","DCP","Operation","Voice","Facsimile","Constraint","SERVICE_CONTACT_PARSERS","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","$ol$format$OWS","XML","owsObject","encodeDeltas","numbers","lastNumbers","encodeFloats","decodeDeltas","encoded","decodeFloats","encodeSignedIntegers","decodeSignedIntegers","encodeUnsignedIntegers","decodeUnsignedIntegers","encodeUnsignedInteger","current","$ol$format$Polyline","factor_","GEOMETRY_READERS","transformVertex","arcs","concatenateArcs","polyArray","ringCoords","indices","readFeaturesFromGeometryCollection","readFeatureFromGeometry","geometryReader","transformArc","$ol$format$TopoJSON","topoJSONTopology","transformArcs","topoJSONFeatures","objectName","GMLNS","ONLY_WHITESPACE_RE","GMLBase","featureType","featureNS","srsName","schemaLocation","FEATURE_COLLECTION_PARSERS","namespace","featureMember","readFeaturesInternal","featureMembers","defaultPrefix","ns","featureTypes","readFeatureElement","readGeometryOrExtent","GEOMETRY_PARSERS","readExtentElement","readGeometryElement","readFeatureElementInternal","asFeature","_content_","fid","readMultiPoint","MULTIPOINT_PARSERS","readMultiLineString","MULTILINESTRING_PARSERS","readMultiPolygon","MULTIPOLYGON_PARSERS","pointMemberParser","POINTMEMBER_PARSERS","lineStringMemberParser","LINESTRINGMEMBER_PARSERS","polygonMemberParser","POLYGONMEMBER_PARSERS","internalOptions","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","GMLBase$1","MULTIGEOMETRY_TO_MEMBER_NODENAME","MultiCurve","MultiSurface","GML2","containerSrs","coordsGroups","readBox","BOX_PARSERS_","innerBoundaryIsParser","outerBoundaryIsParser","GEOMETRY_NODE_FACTORY_","multiSurface","surface","multiCurve","writeFeatureElement","writeGeometryElement","writeCurveOrLineString","createCoordinatesNode_","writeCoordinates_","writeCurveSegments_","writeLineStringOrCurveMember","writeMultiCurveOrLineString","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","GEOMETRY_SERIALIZERS","getCoords_","writeSurfaceOrPolygon","RING_SERIALIZERS","RING_NODE_FACTORY_","patches","writeSurfacePatches_","exteriorWritten","writeRing","writeLinearRing","writePoint","writeMultiPoint","POINTMEMBER_SERIALIZERS","writePointMember","writeMultiSurfaceOrPolygon","SURFACEORPOLYGONMEMBER_SERIALIZERS","writeSurfaceOrPolygonMember","writeEnvelope","ENVELOPE_SERIALIZERS","Box","Curve","Surface","Envelope","curveMember","surfaceMember","lowerCorner","upperCorner","GML2$1","GML3","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve","MULTICURVE_PARSERS","readFlatCurveRing","readMultiSurface","MULTISURFACE_PARSERS","curveMemberParser","CURVEMEMBER_PARSERS","surfaceMemberParser","SURFACEMEMBER_PARSERS","readPatch","PATCHES_PARSERS","readSegment","SEGMENTS_PARSERS","readPolygonPatch","readLineStringSegment","interiorParser","exteriorParser","readSurface","SURFACE_PARSERS","readCurve","CURVE_PARSERS","readEnvelope","ENVELOPE_PARSERS","readFlatPos","readFlatPosList","contextDimension","writePos_","srsDimension","writePosList_","posList","writeFeatureMembers_","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","Ring","GML3$1","GML32","GML32$1","Filter$1","tagName_","getTagName","LogicalNary$1","Filter","And$1","LogicalNary","Bbox$1","boundedBy","member","TRANSACTION_SUMMARY_PARSERS","totalInserted","totalUpdated","totalDeleted","TRANSACTION_RESPONSE_PARSERS","TransactionSummary","readTransactionSummary","InsertResults","readInsertResults","QUERY_SERIALIZERS","PropertyName","TRANSACTION_SERIALIZERS","Insert","Update","writeUpdate","Delete","writeDelete","writeProperty","Native","writeNative","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","SCHEMA_LOCATIONS","GML_FORMATS","serializeTransactionRequest","OGC_FID_PARSERS","FeatureId","fidParser","INSERT_RESULTS_PARSERS","gmlVersion","writeOgcFidFilter","getTypeName","featurePrefix","typeName","nativeElement","vendorId","safeToIgnore","GETFEATURE_SERIALIZERS","Query","writeQuery","During","writeDuringFilter","And","writeLogicalFilter","Or","Not","writeNotFilter","BBOX","writeBboxFilter","Contains","writeSpatialFilter","Intersects","Within","DWithin","writeDWithinFilter","PropertyIsEqualTo","writeComparisonFilter","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","writeIsNullFilter","PropertyIsBetween","writeIsBetweenFilter","PropertyIsLike","writeIsLikeFilter","Disjoint","ResourceId","propertyNames","typeNameAttr","getFilterNS","writeFilterCondition","writePropertyName","unit","writeExpression","propertyName","timePeriod","writeTimeInstant","matchCase","writeLiteral","expression","lowerBoundary","upperBoundary","wildCard","singleChar","escapeChar","pattern","timeInstant","timePosition","writeGetFeature","$ol$format$WFS","featureType_","featureNS_","gmlFormat_","gmlFormat","schemaLocation_","getFeatureType","setFeatureType","featuresNS","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","handle","outputFormat","maxFeatures","resultType","viewParams","combineBboxAndFilter","completeFilter","bboxFilter","Bbox","bboxFilterFn","Function","andFilterFn","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","createTransactionRequest","nativeElements","$ol$format$WMSGetFeatureInfo","readFeatures_","layerElement","toRemove","layerFeatures","gmlFeatures","OWS_NAMESPACE_URIS","Contents","CONTENTS_PARSERS","LAYER_PARSERS","TileMatrixSet","TMS_PARSERS","isDefault","TileMatrixSetLink","TMS_LINKS_PARSERS","Dimension","DIMENSION_PARSERS","ResourceURL","resourceType","WGS84BoundingBox","readBoundingBox","Identifier","LegendURL","legend","TileMatrixSetLimits","TMS_LIMITS_LIST_PARSERS","TileMatrixLimits","TMS_LIMITS_PARSERS","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","WGS84_BBOX_READERS","LowerCorner","readCoordinates","UpperCorner","WellKnownScaleSet","TM_PARSERS","SupportedCRS","BoundingBox","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","$ol$format$WMTSCapabilities","owsParser_","OWS","WMTSCapabilityObject","events","FullScreenEventType","isFullScreenSupported","requestFullscreen","fullscreenEnabled","isFullScreen","fullscreenElement","requestFullScreen","$ol$control$FullScreen","isInFullscreen_","boundHandleMapTargetChange_","handleMapTargetChange_","cssClassName_","documentListeners_","activeClassName_","activeClassName","inactiveClassName_","inactiveClassName","labelNode_","labelActive","labelActiveNode_","button_","setClassName_","handleFullScreen_","exitFullscreen","exitFullScreen","requestFullScreenWithKeys","handleFullScreenChange_","wasInFullscreen","fullscreen","PROJECTION","COORDINATE_FORMAT","$ol$control$MousePosition","coordinateFormat","setCoordinateFormat","renderOnMouseOut_","placeholder","placeholder_","renderedHTML_","mapProjection_","getCoordinateFormat","handleMouseMove","updateHTML_","handleMouseOut","html","MAX_RATIO","MIN_RATIO","$ol$control$OverviewMap","boundHandleRotationChanged_","handleRotationChanged_","viewExtent_","ovmapDiv_","view_","ovmap","Map","ovmap_","boxSizing","boxOverlay_","Overlay","scope","overlayBox","mousePosition","endMoving","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","updateBoxAfterOvmapIsRendered_","newView","validateExtent_","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","updateBox_","ovresolution","ovmapPostrenderKey_","getOverviewMap","UNITS_PROP","LEADING_DIGITS","DEFAULT_DPI","$ol$control$ScaleLine","bar","innerElement_","viewState_","minWidth_","minWidth","maxWidth_","maxWidth","renderedWidth_","handleUnitsChanged_","setUnits","scaleBar_","scaleBarSteps_","scaleBarText_","dpi_","setDpi","pointResolutionUnits","nominalCount","suffix","metersPerDegree","decimalCount","previousCount","previousWidth","previousDecimalCount","createScaleBar","resolutionScale","getScaleForResolution","mapScale","toLocaleString","stepWidth","scaleSteps","createMarker","cls","createStepText","isLast","lengthString","Direction","$ol$control$ZoomSlider","currentResolution_","direction_","heightLimit_","widthLimit_","startX_","startY_","thumbSize_","sliderInitialized_","thumbElement","containerElement","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","initSlider_","containerWidth","containerHeight","containerStyle","thumb","thumbStyle","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","drag","setThumbPosition_","getPositionForResolution_","amount","$ol$control$ZoomToExtent","handleZoomToExtent","ol","$ol$Collection","_ol_Collection$CollectionEvent","_ol_DataTile$asArrayLike","_ol_DataTile$asImageLike","_ol_DataTile$toArray","_ol_Feature$createStyleFunction","Geolocation","_ol_Geolocation$GeolocationError","_ol_Image$listenImage","_ol_Object$ObjectEvent","_ol_Observable$unByKey","_ol_TileQueue$getTilePriority","_ol_TileRange$createOrUpdate","VectorRenderTile","_ol_View$createCenterConstraint","_ol_View$createResolutionConstraint","_ol_View$createRotationConstraint","_ol_View$isNoopAnimation","_ol_array$ascending","_ol_array$binarySearch","descending","_ol_array$equals","_ol_array$extend","_ol_array$isSorted","_ol_array$linearFindNearest","_ol_array$reverseSubArray","stableSort","compareFnc","asserts","_ol_asserts$assert","centerconstraint","_ol_centerconstraint$createExtent","_ol_centerconstraint$none","_ol_color$asArray","_ol_color$asString","_ol_color$fromString","_ol_color$isStringColor","_ol_color$normalize","_ol_color$toString","colorlike","_ol_colorlike$asColorLike","_ol_console$error","setLevel","_ol_console$warn","FullScreen","MousePosition","OverviewMap","ScaleLine","ZoomSlider","ZoomToExtent","_ol_control_defaults$defaults","_ol_coordinate$add","_ol_coordinate$closestOnCircle","_ol_coordinate$closestOnSegment","createStringXY","_ol_coordinate$degreesToStringHDMS","_ol_coordinate$distance","_ol_coordinate$equals","_ol_coordinate$format","_ol_coordinate$getWorldsAway","_ol_coordinate$rotate","_ol_coordinate$scale","_ol_coordinate$squaredDistance","_ol_coordinate$squaredDistanceToSegment","toStringHDMS","_ol_coordinate$toStringXY","_ol_coordinate$wrapX","css","_ol_css$CLASS_COLLAPSED","_ol_css$CLASS_CONTROL","_ol_css$CLASS_HIDDEN","_ol_css$CLASS_SELECTABLE","_ol_css$CLASS_UNSELECTABLE","_ol_css$CLASS_UNSUPPORTED","_ol_css$getFontParameters","dom","_ol_dom$createCanvasContext2D","_ol_dom$outerHeight","_ol_dom$outerWidth","_ol_dom$releaseCanvas","_ol_dom$removeChildren","_ol_dom$removeNode","_ol_dom$replaceChildren","_ol_dom$replaceNode","_ol_easing$easeIn","_ol_easing$easeOut","_ol_easing$inAndOut","_ol_easing$linear","upAndDown","_ol_events_Event$stopPropagation","_ol_events_SnapEvent$SnapEvent","_ol_events_condition$all","_ol_events_condition$altKeyOnly","_ol_events_condition$altShiftKeysOnly","_ol_events_condition$always","click","doubleClick","_ol_events_condition$focus","_ol_events_condition$focusWithTabindex","_ol_events_condition$mouseActionButton","_ol_events_condition$mouseOnly","_ol_events_condition$never","_ol_events_condition$noModifierKeys","penOnly","pointerEvt","_ol_events_condition$platformModifierKey","platformModifierKeyOnly","pointerMove","_ol_events_condition$primaryAction","_ol_events_condition$shiftKeyOnly","_ol_events_condition$singleClick","_ol_events_condition$targetNotEditable","touchOnly","_ol_events$listen","_ol_events$listenOnce","_ol_events$unlistenByKey","_ol_extent$applyTransform","_ol_extent$approximatelyEquals","_ol_extent$boundingExtent","_ol_extent$buffer","_ol_extent$clone","_ol_extent$closestSquaredDistanceXY","_ol_extent$containsCoordinate","_ol_extent$containsExtent","_ol_extent$containsXY","_ol_extent$coordinateRelationship","_ol_extent$createEmpty","_ol_extent$createOrUpdate","_ol_extent$createOrUpdateEmpty","_ol_extent$createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","_ol_extent$createOrUpdateFromFlatCoordinates","createOrUpdateFromRings","_ol_extent$equals","_ol_extent$extend","_ol_extent$extendCoordinate","_ol_extent$extendCoordinates","_ol_extent$extendFlatCoordinates","_ol_extent$extendRings","_ol_extent$extendXY","_ol_extent$forEachCorner","_ol_extent$getArea","_ol_extent$getBottomLeft","_ol_extent$getBottomRight","_ol_extent$getCenter","_ol_extent$getCorner","getEnlargedArea","_ol_extent$getForViewAndSize","_ol_extent$getHeight","_ol_extent$getIntersection","getIntersectionArea","getMargin","_ol_extent$getRotatedViewport","_ol_extent$getTopLeft","_ol_extent$getTopRight","_ol_extent$getWidth","_ol_extent$intersects","_ol_extent$intersectsSegment","_ol_extent$isEmpty","_ol_extent$returnOrUpdate","_ol_extent$scaleFromCenter","_ol_extent$wrapAndSliceX","_ol_extent$wrapX","featureloader","_ol_featureloader$loadFeaturesXhr","setWithCredentials","xhrWithCredentials","_ol_featureloader$xhr","_ol_format_Feature$transformExtentWithOptions","_ol_format_Feature$transformGeometryWithOptions","GPX","GeoJSON","IGC","KML","getDefaultFillStyle","getDefaultImageStyle","getDefaultStrokeStyle","getDefaultStyle","getDefaultStyleArray","getDefaultTextStyle","_ol_format_KML$readFlatCoordinates","MVT","OSMXML","Polyline","_ol_format_Polyline$decodeDeltas","_ol_format_Polyline$decodeFloats","_ol_format_Polyline$decodeSignedIntegers","_ol_format_Polyline$decodeUnsignedIntegers","_ol_format_Polyline$encodeDeltas","_ol_format_Polyline$encodeFloats","_ol_format_Polyline$encodeSignedIntegers","_ol_format_Polyline$encodeUnsignedInteger","_ol_format_Polyline$encodeUnsignedIntegers","TopoJSON","WFS","writeFilter","WMSGetFeatureInfo","WMTSCapabilities","xlink","_ol_format_xlink$readHref","xsd","_ol_format_xsd$readBoolean","_ol_format_xsd$readBooleanString","_ol_format_xsd$readDateTime","_ol_format_xsd$readDecimal","_ol_format_xsd$readDecimalString","_ol_format_xsd$readNonNegativeIntegerString","_ol_format_xsd$readPositiveInteger","_ol_format_xsd$readString","_ol_format_xsd$writeBooleanTextNode","_ol_format_xsd$writeCDATASection","_ol_format_xsd$writeDateTimeTextNode","_ol_format_xsd$writeDecimalTextNode","_ol_format_xsd$writeNonNegativeIntegerTextNode","_ol_format_xsd$writeStringTextNode","_ol_functions$FALSE","_ol_functions$TRUE","_ol_functions$VOID","_ol_functions$memoizeOne","_ol_functions$toPromise","_ol_geom_Polygon$circular","_ol_geom_Polygon$fromCircle","_ol_geom_Polygon$fromExtent","_ol_geom_Polygon$makeRegular","_ol_geom_SimpleGeometry$getStrideForLayout","_ol_geom_SimpleGeometry$transformGeom2D","_ol_geom_flat_area$linearRing","_ol_geom_flat_area$linearRings","_ol_geom_flat_area$linearRingss","_ol_geom_flat_center$linearRingss","closest","_ol_geom_flat_closest$arrayMaxSquaredDelta","_ol_geom_flat_closest$assignClosestArrayPoint","_ol_geom_flat_closest$assignClosestMultiArrayPoint","_ol_geom_flat_closest$assignClosestPoint","_ol_geom_flat_closest$maxSquaredDelta","_ol_geom_flat_closest$multiArrayMaxSquaredDelta","_ol_geom_flat_contains$linearRingContainsExtent","_ol_geom_flat_contains$linearRingContainsXY","_ol_geom_flat_contains$linearRingsContainsXY","_ol_geom_flat_contains$linearRingssContainsXY","deflate","_ol_geom_flat_deflate$deflateCoordinate","_ol_geom_flat_deflate$deflateCoordinates","_ol_geom_flat_deflate$deflateCoordinatesArray","_ol_geom_flat_deflate$deflateMultiCoordinatesArray","flip","_ol_geom_flat_flip$flipXY","geodesic","greatCircleArc","geoProjection","cosLat1","sinLat1","cosLat2","sinLat2","cosDeltaLon","sinDeltaLon","D","cosD","sinD","_ol_geom_flat_geodesic$meridian","_ol_geom_flat_geodesic$parallel","inflate","_ol_geom_flat_inflate$inflateCoordinates","_ol_geom_flat_inflate$inflateCoordinatesArray","_ol_geom_flat_inflate$inflateMultiCoordinatesArray","interiorpoint","_ol_geom_flat_interiorpoint$getInteriorPointOfArray","_ol_geom_flat_interiorpoint$getInteriorPointsOfMultiArray","_ol_geom_flat_interpolate$interpolatePoint","_ol_geom_flat_interpolate$lineStringCoordinateAtM","_ol_geom_flat_interpolate$lineStringsCoordinateAtM","intersectsextent","_ol_geom_flat_intersectsextent$intersectsLineString","_ol_geom_flat_intersectsextent$intersectsLineStringArray","_ol_geom_flat_intersectsextent$intersectsLinearRing","_ol_geom_flat_intersectsextent$intersectsLinearRingArray","_ol_geom_flat_intersectsextent$intersectsLinearRingMultiArray","_ol_geom_flat_length$lineStringLength","linearRingLength","perimeter","orient","_ol_geom_flat_orient$inflateEnds","_ol_geom_flat_orient$linearRingIsClockwise","_ol_geom_flat_orient$linearRingsAreOriented","_ol_geom_flat_orient$linearRingssAreOriented","_ol_geom_flat_orient$orientLinearRings","_ol_geom_flat_orient$orientLinearRingsArray","_ol_geom_flat_reverse$coordinates","_ol_geom_flat_segments$forEach","_ol_geom_flat_simplify$douglasPeucker","_ol_geom_flat_simplify$douglasPeuckerArray","douglasPeuckerMultiArray","_ol_geom_flat_simplify$quantize","_ol_geom_flat_simplify$quantizeArray","_ol_geom_flat_simplify$quantizeMultiArray","_ol_geom_flat_simplify$radialDistance","simplifyLineString","highQuality","_ol_geom_flat_simplify$snap","straightchunk","_ol_geom_flat_straightchunk$matchingChunk","textpath","_ol_geom_flat_textpath$drawTextOnPath","topology","lineStringIsClosed","lastCoord","_ol_geom_flat_transform$rotate","_ol_geom_flat_transform$scale","_ol_geom_flat_transform$transform2D","_ol_geom_flat_transform$translate","has","_ol_has$DEVICE_PIXEL_RATIO","_ol_has$FIREFOX","_ol_has$IMAGE_DECODE","_ol_has$MAC","_ol_has$PASSIVE_EVENT_LISTENERS","_ol_has$SAFARI","_ol_has$SAFARI_BUG_237906","_ol_has$WEBKIT","_ol_has$WORKER_OFFSCREEN_CANVAS","DblClickDragZoom","DragAndDrop","_ol_interaction_DragAndDrop$DragAndDropEvent","_ol_interaction_DragBox$DragBoxEvent","DragRotateAndZoom","Draw","_ol_interaction_Draw$DrawEvent","createBox","boxCoordinates","createRegularPolygon","internalAngle","Extent","_ol_interaction_Extent$ExtentEvent","_ol_interaction_Interaction$pan","_ol_interaction_Interaction$zoomByDelta","Modify","_ol_interaction_Modify$ModifyEvent","Pointer","_ol_interaction_Pointer$centroid","_ol_interaction_Select$SelectEvent","Snap","Translate","_ol_interaction_Translate$TranslateEvent","_ol_interaction_defaults$defaults","Base","BaseImage","BaseTile","Graticule","Group","_ol_layer_Group$GroupEvent","Heatmap","_ol_layer_Layer$inView","Vector","VectorImage","loadingstrategy","_ol_loadingstrategy$all","math","_ol_math$ceil","_ol_math$clamp","_ol_math$floor","_ol_math$lerp","_ol_math$modulo","_ol_math$round","_ol_math$solveLinearSystem","_ol_math$squaredDistance","_ol_math$squaredSegmentDistance","_ol_math$toDegrees","_ol_math$toFixed","_ol_math$toRadians","net","_ol_net$ClientError","_ol_net$ResponseError","_ol_net$getJSON","_ol_net$jsonp","overrideXHR","_ol_net$resolveUrl","restoreXHR","_ol_obj$clear","_ol_obj$isEmpty","Units","_ol_proj_Units$METERS_PER_UNIT","fromCode","_ol_proj$addCommon","_ol_proj$addCoordinateTransforms","_ol_proj$addEquivalentProjections","_ol_proj$addEquivalentTransforms","_ol_proj$addProjection","_ol_proj$addProjections","clearAllProjections","clearProj","clearTransformFuncs","clearUserProjection","_ol_proj$cloneTransform","_ol_proj$createProjection","_ol_proj$createSafeCoordinateTransform","_ol_proj$createTransformFromCoordinateTransform","_ol_proj$disableCoordinateWarning","epsg3857","_ol_proj_epsg3857$EXTENT","_ol_proj_epsg3857$HALF_SIZE","_ol_proj_epsg3857$MAX_SAFE_Y","_ol_proj_epsg3857$PROJECTIONS","_ol_proj_epsg3857$RADIUS","_ol_proj_epsg3857$WORLD_EXTENT","_ol_proj_epsg3857$fromEPSG4326","_ol_proj_epsg3857$toEPSG4326","epsg4326","_ol_proj_epsg4326$EXTENT","_ol_proj_epsg4326$METERS_PER_UNIT","_ol_proj_epsg4326$PROJECTIONS","_ol_proj_epsg4326$RADIUS","_ol_proj$equivalent","fromLonLat","_ol_proj$fromUserCoordinate","_ol_proj$fromUserExtent","_ol_proj$fromUserResolution","_ol_proj$get","_ol_proj$getPointResolution","_ol_proj$getTransform","_ol_proj$getTransformFromProjections","_ol_proj$getUserProjection","_ol_proj$identityTransform","epsgLookupMapTiler","results","defaultTransform","t1","t2","fromEPSGCode","epsgCode","getEPSGLookup","isRegistered","_ol_proj_proj4$register","setEPSGLookup","_ol_proj_projections$add","_ol_proj_projections$clear","_ol_proj_projections$get","_ol_proj$setUserProjection","toLonLat","lonLat","_ol_proj$toUserCoordinate","_ol_proj$toUserExtent","_ol_proj$toUserResolution","_ol_proj$transform","_ol_proj$transformExtent","transformWithProjections","_ol_proj_transforms$add","_ol_proj_transforms$clear","_ol_proj_transforms$get","useGeographic","toFeature","_ol_render_Feature$toGeometry","BuilderGroup","_ol_render_canvas_ExecutorGroup$getPixelIndexArray","Immediate","_ol_render_canvas_Instruction$beginPathInstruction","_ol_render_canvas_Instruction$closePathInstruction","_ol_render_canvas_Instruction$fillInstruction","_ol_render_canvas_Instruction$strokeInstruction","_ol_render_canvas_TextBuilder$TEXT_ALIGN","_ol_render_canvas$checkedFonts","_ol_render_canvas$defaultFillStyle","_ol_render_canvas$defaultFont","_ol_render_canvas$defaultLineCap","_ol_render_canvas$defaultLineDash","defaultLineDashOffset","_ol_render_canvas$defaultLineJoin","defaultLineWidth","_ol_render_canvas$defaultMiterLimit","_ol_render_canvas$defaultPadding","_ol_render_canvas$defaultStrokeStyle","_ol_render_canvas$defaultTextAlign","_ol_render_canvas$defaultTextBaseline","_ol_render_canvas$drawImageOrLabel","_ol_render_canvas$getTextDimensions","hitdetect","_ol_render_canvas_hitdetect$HIT_DETECT_RESOLUTION","_ol_render_canvas_hitdetect$createHitDetectionImageData","_ol_render_canvas_hitdetect$hitDetect","_ol_render_canvas$measureAndCacheTextWidth","_ol_render_canvas$measureTextHeight","_ol_render_canvas$measureTextWidth","_ol_render_canvas$registerFont","rotateAtOffset","_ol_render_canvas$textHeights","getRenderPixel","_ol_render$getVectorContext","toContext","Composite","_ol_renderer_canvas_Layer$canvasPool","VectorImageLayer","vector","_ol_renderer_vector$defaultOrder","_ol_renderer_vector$getSquaredTolerance","_ol_renderer_vector$getTolerance","_ol_renderer_vector$renderFeature","_ol_reproj$calculateSourceExtentResolution","_ol_reproj$calculateSourceResolution","_ol_reproj$canvasPool","common","_ol_reproj_common$ERROR_THRESHOLD","_ol_reproj$render","resolutionconstraint","_ol_resolutionconstraint$createMinMaxResolution","_ol_resolutionconstraint$createSnapToPower","_ol_resolutionconstraint$createSnapToResolutions","rotationconstraint","_ol_rotationconstraint$createSnapToN","_ol_rotationconstraint$createSnapToZero","_ol_rotationconstraint$disable","_ol_rotationconstraint$none","_ol_size$buffer","_ol_size$hasArea","_ol_size$scale","_ol_size$toSize","BingMaps","_ol_source_BingMaps$quadKey","Cluster","_ol_source_Image$ImageSourceEvent","_ol_source_Image$defaultImageLoadFunction","ImageArcGISRest","ImageStatic","ImageWMS","OGCMapTile","OSM","_ol_source_OSM$ATTRIBUTION","Raster","_ol_source_Raster$Processor","_ol_source_Raster$RasterSourceEvent","_ol_source_Raster$newImageData","Stamen","_ol_source_Tile$TileSourceEvent","TileArcGISRest","TileDebug","TileJSON","TileWMS","UTFGrid","_ol_source_UTFGrid$CustomTile","_ol_source_Vector$VectorSourceEvent","WMTS","optionsFromCapabilities","wmtsCap","tileMatrixSets","findIndex","supportedCRS","matrixSetObj","projConfig","switchXY","selectedMatrixLimit","tileMatrixValue","tileSpanX","tileSpanY","matrixSetExtent","wgs84BoundingBox","wgs84ProjectionExtent","wgs84MatrixSetExtent","gets","encodings","DEFAULT_WMS_VERSION","ogcTileUtil","_ol_source_ogcTileUtil$getMapTileUrlTemplate","_ol_source_ogcTileUtil$getTileSetInfo","_ol_source_ogcTileUtil$getVectorTileUrlTemplate","sourcesFromTileGrid","sourceCache","tileGridExtent","wantedSources","wms","_ol_source_wms$DEFAULT_VERSION","sphere","_ol_sphere$DEFAULT_RADIUS","_ol_sphere$getDistance","_ol_sphere$offset","_ol_string$compareVersions","_ol_string$padNumber","structs","LinkedList","_ol_structs_PriorityQueue$DROP","_ol_style_IconImage$get","_ol_style_IconImageCache$shared","_ol_style_Style$createDefaultStyle","_ol_style_Style$createEditingStyle","_ol_style_Style$toFunction","expressions","_ol_style_expressions$Operators","_ol_style_expressions$PALETTE_TEXTURE_ARRAY","_ol_style_expressions$arrayToGlsl","_ol_style_expressions$colorToGlsl","_ol_style_expressions$expressionToGlsl","_ol_style_expressions$getStringNumberEquivalent","_ol_style_expressions$getValueType","_ol_style_expressions$isTypeUnique","_ol_style_expressions$numberToGlsl","_ol_style_expressions$stringToGlsl","_ol_style_expressions$uniformNameForVariable","_ol_style_flat$toStyle","tilecoord","_ol_tilecoord$createOrUpdate","_ol_tilecoord$fromKey","getCacheKeyForTileKey","_ol_tilecoord$getKey","_ol_tilecoord$getKeyZXY","_ol_tilecoord$hash","_ol_tilecoord$withinExtentAndZ","_ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet","_ol_tilegrid_common$DEFAULT_MAX_ZOOM","_ol_tilegrid_common$DEFAULT_TILE_SIZE","_ol_tilegrid$createForExtent","_ol_tilegrid$createForProjection","_ol_tilegrid$createXYZ","_ol_tilegrid$extentFromProjection","_ol_tilegrid$getForProjection","_ol_tilegrid$wrapX","tileurlfunction","_ol_tileurlfunction$createFromTemplate","_ol_tileurlfunction$createFromTemplates","_ol_tileurlfunction$createFromTileUrlFunctions","_ol_tileurlfunction$expandUrl","_ol_tileurlfunction$nullTileUrlFunction","_ol_transform$apply","_ol_transform$compose","composeCssTransform","_ol_transform$create","_ol_transform$determinant","invert","_ol_transform$makeInverse","_ol_transform$makeScale","_ol_transform$multiply","_ol_transform$reset","_ol_transform$rotate","_ol_transform$scale","_ol_transform$set","_ol_transform$setFromArray","_ol_transform$toString","_ol_transform$translate","_ol_uri$appendParams","util","_ol_util$abstract","_ol_util$getUid","vec","_ol_vec_mat4$create","_ol_vec_mat4$fromTransform","_ol_xml$OBJECT_PROPERTY_NODE_FACTORY","_ol_xml$XML_SCHEMA_INSTANCE_URI","_ol_xml$createElementNS","_ol_xml$getAllTextContent","_ol_xml$getAllTextContent_","_ol_xml$getAttributeNS","_ol_xml$getDocument","_ol_xml$getXMLSerializer","_ol_xml$isDocument","_ol_xml$makeArrayExtender","_ol_xml$makeArrayPusher","_ol_xml$makeArraySerializer","_ol_xml$makeChildAppender","_ol_xml$makeObjectPropertyPusher","_ol_xml$makeObjectPropertySetter","_ol_xml$makeReplacer","_ol_xml$makeSequence","_ol_xml$makeSimpleNodeFactory","_ol_xml$makeStructureNS","_ol_xml$parse","_ol_xml$parseNode","_ol_xml$pushParseAndPop","_ol_xml$pushSerializeAndPop","registerDocument","registerXMLSerializer","xmlSerializer","_ol_xml$serialize"],"mappings":"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"}